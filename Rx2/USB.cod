; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27031.1 

	TITLE	c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@ ; `string'
PUBLIC	??_C@_0BC@CFJFKPGC@NoDeviceConnected@		; `string'
PUBLIC	??_C@_0BA@LIPCCNEI@DeviceConnected@		; `string'
PUBLIC	??_C@_0BI@LKBNFKJE@DeviceFailedEnumeration@	; `string'
PUBLIC	??_C@_0BF@FIJIOADB@DeviceGeneralFailure@	; `string'
PUBLIC	??_C@_0BI@FHCONGJI@DeviceCausedOvercurrent@	; `string'
PUBLIC	??_C@_0BF@KCIAFGBC@DeviceNotEnoughPower@	; `string'
PUBLIC	??_C@_0BJ@DBBHPJJC@DeviceNotEnoughBandwidth@	; `string'
PUBLIC	??_C@_0BJ@CHELPMAC@DeviceHubNestedTooDeeply@	; `string'
PUBLIC	??_C@_0BC@BOFHLGPH@DeviceInLegacyHub@		; `string'
PUBLIC	??_C@_02KNHHEEKP@?5?5@				; `string'
PUBLIC	??_C@_04PFOHOKJK@?5?5?5?5@			; `string'
PUBLIC	??_C@_06GGLIPOFD@?5?5?5?5?5?5@			; `string'
PUBLIC	??_C@_08GGFKNFHG@?5?5?5?5?5?5?5?5@		; `string'
PUBLIC	??_C@_0L@CCBFPMDD@?5?5?5?5?5?5?5?5?5?5@		; `string'
PUBLIC	??_C@_0P@JPOMJBKJ@?$DO?$DO?5USB?4EnumUSB@	; `string'
PUBLIC	??_C@_0N@JNFFEOEJ@cfgmgr32?4dll@		; `string'
PUBLIC	??_C@_0CI@JNDPNFBI@?$DM?$DM?5USB?4EnumUSB?0?5LoadLib?5cfgmgr3@ ; `string'
PUBLIC	??_C@_0O@CIKLALFP@CM_Get_Parent@		; `string'
PUBLIC	??_C@_0CM@FCKDJEIO@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ ; `string'
PUBLIC	??_C@_0P@OOIACNHP@CM_Get_Sibling@		; `string'
PUBLIC	??_C@_0CN@OFCMGBDD@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ ; `string'
PUBLIC	??_C@_0N@EKPGFMC@CM_Get_Child@			; `string'
PUBLIC	??_C@_0CL@COFLNMDL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ ; `string'
PUBLIC	??_C@_0CC@NHFCMMFN@CM_Get_DevNode_Registry_Propert@ ; `string'
PUBLIC	??_C@_0DP@DGDMCDGA@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ ; `string'
PUBLIC	??_C@_0BD@FFDOPOAJ@CM_Locate_DevNodeA@		; `string'
PUBLIC	??_C@_0DA@PBHEEKCL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_L@ ; `string'
PUBLIC	??_C@_0O@BMIBGHPI@Enumerate?5USB@		; `string'
PUBLIC	??_C@_09PEILPPNA@?2?2?4?2HCD?$CFd@		; `string'
PUBLIC	??_C@_0N@BEFNEIBE@RootHub?5?3?5?$CFs@		; `string'
PUBLIC	??_C@_07FOIBMAON@RootHub@			; `string'
PUBLIC	??_C@_0BL@FOIGIFIJ@Total?5Devices?5Connected?5?$CFu@ ; `string'
PUBLIC	??_C@_0P@NGAEOEJF@?$DM?$DM?5USB?4EnumUSB@	; `string'
PUBLIC	??_C@_0BA@EBIECMOG@?$DO?$DO?5USB?4DevsDets@	; `string'
PUBLIC	??_C@_0BD@HNIJLKOP@USB?5Device?5Details@	; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0BA@GOKCLIBE@?$DM?$DM?5USB?4DevsDets@	; `string'
PUBLIC	??_C@_0BC@OBKJMAF@?$DO?$DO?5USB?4GetStrDesc@	; `string'
PUBLIC	??_C@_0CJ@MLNPNNOJ@?$DM?$DM?5USB?4GetStrDesc?0?5DeviceIoCont@ ; `string'
PUBLIC	??_C@_0CA@JKPBCDKN@?$DM?$DM?5USB?4GetStrDesc?0?5Bytes?5Ret?5?$CFu@ ; `string'
PUBLIC	??_C@_0CH@ELGGMNKC@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Descript@ ; `string'
PUBLIC	??_C@_0CD@CHKNKAPD@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Sz?5?$CFd?5?$DM?$DO@ ; `string'
PUBLIC	??_C@_0BN@ILBIFDNN@?$DM?$DM?5USB?4GetStrDesc?0?5Odd?5Sz?5?$CFd@ ; `string'
PUBLIC	??_C@_0CF@BKJLPKEL@?$DM?$DM?5USB?4GetStrDesc?0?5new?5DescNode@ ; `string'
PUBLIC	??_C@_0CK@NJJDPDGO@?9?9?5USB?4GetStrDesc?0?5WideCharToMu@ ; `string'
PUBLIC	??_C@_0CB@LADAJLND@?$DM?$DM?5USB?4GetStrDesc?0?5DescNode?50x?$CF@ ; `string'
PUBLIC	??_C@_0BF@IPAKKGGO@?$DO?$DO?5USB?4AreThrStrDesc@ ; `string'
PUBLIC	??_C@_0DC@KIEGOLFL@?$DM?$DM?5USB?4AreThrStrDesc?0?5Manufact?5@ ; `string'
PUBLIC	??_C@_0BN@DEJJKGAD@?$DM?$DM?5USB?4AreThrStrDesc?0?5Cfg?5?$CFd@ ; `string'
PUBLIC	??_C@_0CD@NAENOJMA@?$DM?$DM?5USB?4AreThrStrDesc?0?5Interface@ ; `string'
PUBLIC	??_C@_0CA@JFAJNON@?$DM?$DM?5USB?4AreThrStrDesc?0?5Ret?5False@ ; `string'
PUBLIC	??_C@_0BG@PLIGAJPI@?$DO?$DO?5USB?4GetAllStrDescs@ ; `string'
PUBLIC	??_C@_0CJ@HBMGBPGH@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@ ; `string'
PUBLIC	??_C@_0CJ@JNLDFNAC@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@ ; `string'
PUBLIC	??_C@_0BF@GLJHIDAC@?$DO?$DO?5USB?4GetDrvKeyName@ ; `string'
PUBLIC	??_C@_0DA@OGKODAJE@?9?9?5USB?4GetDriverKeyName?0?5new?5Ke@ ; `string'
PUBLIC	??_C@_0BP@PGCNCFEB@?$DM?$DM?5USB?4GetDrvKeyName?0?5AName?5?$CFs@ ; `string'
PUBLIC	??_C@_0BE@BDIOPGJF@?$DO?$DO?5USB?4GetExternHub@	; `string'
PUBLIC	??_C@_0DA@HJNGPFIB@?9?9?5USB?4GetExtHubName?0?5new?5extHu@ ; `string'
PUBLIC	??_C@_0CA@IMMCIHAH@?$DM?$DM?5USB?4GetExternHub?0?5HubName?5?$CFs@ ; `string'
PUBLIC	??_C@_0BE@CPBFJJJ@?$DO?$DO?5USB?4EnumHubPorts@	; `string'
PUBLIC	??_C@_0DE@EKAJALEI@?9?9?5USB?4EnumHubPorts?0?5new?5Port?5?$CF@ ; `string'
PUBLIC	??_C@_0N@DMKPCFDB@?$CFs?$FLPort?$CFlu?$FN?5@	; `string'
PUBLIC	??_C@_03MCPBMLDJ@?5?3?5@			; `string'
PUBLIC	??_C@_0L@KFNJHJLN@?$FLPort?$CFlu?$FN?5@		; `string'
PUBLIC	??_C@_04PKDHFCJF@HIGH@				; `string'
PUBLIC	??_C@_03IBEFMGAI@LOW@				; `string'
PUBLIC	??_C@_04DHPBCODG@FULL@				; `string'
PUBLIC	??_C@_0CF@LGIDNAEF@?$CFs?5?$FLVID?3?$CF?44X?5PID?3?$CF?44X?5SN?3?$CFs?5Spd@ ; `string'
PUBLIC	??_C@_0BA@CGBIAJFO@Not?5Initialized@		; `string'
PUBLIC	??_C@_09CFCBFJND@Not?5Found@			; `string'
PUBLIC	??_C@_06DIJPEION@?$CFs?$CFs?$CFs@		; `string'
PUBLIC	??_C@_04HDOCAJNK@?$CFs?$CFs@			; `string'
PUBLIC	??_C@_0BE@LMILCJOE@?$DM?$DM?5USB?4EnumHubPorts@	; `string'
PUBLIC	??_C@_0BP@KMJAGKHH@?$DO?$DO?5USB?4DrvName2DevDesc?0?5Drv?5?$CFs@ ; `string'
PUBLIC	??_C@_0CJ@PHHANNLH@?$DM?$DM?5USB?4DrvName2DevDesc?0?5LocateD@ ; `string'
PUBLIC	??_C@_0BP@GGDOIMOO@?$DM?$DM?5USB?4DrvName2DevDesc?0?5ret?5?$CFs@ ; `string'
PUBLIC	??_C@_0CO@BAPAALJK@?$DM?$DM?5USB?4DrvName2DevDesc?0?5GetDevN@ ; `string'
PUBLIC	??_C@_0CB@OFAOPKJL@?$DM?$DM?5USB?4DrvName2DevDesc?0?5Ret?5Nul@ ; `string'
PUBLIC	??_C@_0P@JENLAABL@?$DO?$DO?5USB?4EnumHub@	; `string'
PUBLIC	??_C@_04GBDIODIA@?2?2?4?2@			; `string'
PUBLIC	??_C@_04MKEDFNGB@?5?3?5?5@			; `string'
PUBLIC	??_C@_0CG@FMONKKAG@?9?9?5USB?4EnumHub?0?5new?5HubInfo?5?$CI?$CFu@ ; `string'
PUBLIC	??_C@_0CD@EDMNKMD@?9?9?5USB?4EnumHub?0?5new?5Info?5?$CI?$CFu?$CJ?5n@ ; `string'
PUBLIC	??_C@_0P@NNDDHFCH@?$DM?$DM?5USB?4EnumHub@	; `string'
PUBLIC	??_C@_0BC@PGMOMHHM@?$DO?$DO?5USB?4GetRootHub@	; `string'
PUBLIC	??_C@_0BO@MFMFEBEJ@?$DM?$DM?5USB?4GetRootHub?0?5HubName?5?$CFs@ ; `string'
PUBLIC	??_C@_0BI@LFJMJGOI@?$DO?$DO?5USB?4GetHCDDrvKeyName@ ; `string'
PUBLIC	??_C@_0CH@GAKGEKMO@?$DM?$DM?5USB?4GetHCDDrvKeyName?0?5DrvKey@ ; `string'
PUBLIC	??_C@_0BD@HEHGMECG@?$DO?$DO?5USB?4GetStrDescs@	; `string'
PUBLIC	??_C@_0CJ@OCOKNHIB@?$DM?$DM?5USB?4GetStrDescs?0?5StrDescNode@ ; `string'
PUBLIC	??_C@_0BC@NBPLLDOB@?$DO?$DO?5USB?4GetCfgDesc@	; `string'
PUBLIC	??_C@_0CJ@JPCNJMBL@?$DM?$DM?5USB?4GetCfgDesc?0?5DeviceIoCont@ ; `string'
PUBLIC	??_C@_0CL@CHLLBENA@?$DM?$DM?5USB?4GetCfgDesc?0?5Bytes?5?$CFu?5?$DM?$DO?5@ ; `string'
PUBLIC	??_C@_0CL@LLJEBADN@?$DM?$DM?5USB?4GetCfgDesc?0?5Total?5?$CFd?5?$DM?5S@ ; `string'
PUBLIC	??_C@_0CN@FDNPACDH@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5DeviceIo@ ; `string'
PUBLIC	??_C@_0CP@JDNANMP@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Bytes?5?$CFu@ ; `string'
PUBLIC	??_C@_0CI@LMLHDIHD@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Total?5?$CFd@ ; `string'
PUBLIC	??_C@_0CL@LPDCGPEM@?9?9?5USB?4GetCfgDescriptor?0?5new?5Bu@ ; `string'
PUBLIC	??_C@_0BI@HCFMPAHC@?$DM?$DM?5USB?4GetCfgDesc?0?50x?$CFp@ ; `string'
PUBLIC	??_C@_0P@GOACPFJP@?$DO?$DO?5USB?4HubInfo@	; `string'
PUBLIC	??_C@_09GDHNALJA@Bus?5Power@			; `string'
PUBLIC	??_C@_0L@JDJFLKOD@Self?5Power@			; `string'
PUBLIC	??_C@_0BA@KPNNFMHH@?$DO?5Hub?5Power?3?5?$CFs@	; `string'
PUBLIC	??_C@_0BG@IOHBDCFM@?$DO?5Number?5of?5Ports?3?5?$CFd@ ; `string'
PUBLIC	??_C@_0BK@CEEHKAND@?$DO?5Power?5switching?3?5Ganged@ ; `string'
PUBLIC	??_C@_0BO@BHNNAPDB@?$DO?5Power?5switching?3?5Individual@ ; `string'
PUBLIC	??_C@_0BI@FICFFJGB@?$DO?5Power?5switching?3?5None@ ; `string'
PUBLIC	??_C@_0BG@FBGEODEL@?$DO?5Compound?5device?3?5No@ ; `string'
PUBLIC	??_C@_0BH@CFBEDMDO@?$DO?5Compound?5device?3?5Yes@ ; `string'
PUBLIC	??_C@_0CC@ELIAJJDL@?$DO?5Over?9current?5Protection?3?5Glob@ ; `string'
PUBLIC	??_C@_0CG@MEGDLCFA@?$DO?5Over?9current?5Protection?3?5Indi@ ; `string'
PUBLIC	??_C@_0CO@FGJIHOLC@?$DO?5No?5Over?9current?5Protection?5?$CIB@ ; `string'
PUBLIC	??_C@_0P@CHOKIAKD@?$DM?$DM?5USB?4HubInfo@	; `string'
PUBLIC	??_C@_0P@ICANHPPH@?$DO?$DO?5USB?4HubCaps@	; `string'
PUBLIC	??_C@_0CI@KPNJBEAB@?$DO?5Extended?5Hub?5Capability?5Flags@ ; `string'
PUBLIC	??_C@_0BL@GGCJII@?$DO?5?5?5High?5speed?5Capable?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0BD@FCCHMOKD@?$DO?5?5?5High?5speed?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0CC@CJLCKEMN@?$DO?5?5?5Mulit?9transaction?5Capable?3?5@ ; `string'
PUBLIC	??_C@_02IAAGKKDJ@On@				; `string'
PUBLIC	??_C@_03GCDBBDDL@Off@				; `string'
PUBLIC	??_C@_0BK@JNPMKCLE@?$DO?5?5?5Mulit?9transaction?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0BB@BIGCJPGA@?$DO?5?5?5Root?5hub?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0CC@EBPNDPBD@?$DO?5?5?5Armed?5for?5wake?5on?5connect?3?5@ ; `string'
PUBLIC	??_C@_0BP@LBBGDALG@?$DO?5?5?5Reserved?5?$CI26?5bits?$CJ?3?5?$CF0?$CD6lx@ ; `string'
PUBLIC	??_C@_0CG@OCCHEKHL@Extended?5Hub?5Capabilities?5UNAVA@ ; `string'
PUBLIC	??_C@_0L@BGKBMIAF@High?5speed@			; `string'
PUBLIC	??_C@_0P@LDNEGAOE@Not?5high?5speed@		; `string'
PUBLIC	??_C@_0CA@BJAEENFA@?$DO?5Hub?5Capabilities?3?5?$CF0?$CD8lx?5?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BN@HMIILDFE@Hub?5Capabilities?5UNAVAILABLE@ ; `string'
PUBLIC	??_C@_0P@MLOFAKML@?$DM?$DM?5USB?4HubCaps@	; `string'
PUBLIC	??_C@_0BA@IJBIPHPI@?$DO?$DO?5USB?4ConnInfo@	; `string'
PUBLIC	??_C@_0BM@GIKFEJKI@?$DM?$DM?5USB?4ConnInfo?0?5Input?5null@ ; `string'
PUBLIC	??_C@_0CG@KIPJNEMD@?$DO?5ConnectionStatus?3?5NoDeviceCon@ ; `string'
PUBLIC	??_C@_0BF@EPIIACIH@?$DO?5Device?5Descriptor?3@	; `string'
PUBLIC	??_C@_0BD@EOGCPDGC@?$DO?5?5?5bcdUSB?3?50x?$CF04X@ ; `string'
PUBLIC	??_C@_0BJ@BBNICMHO@?$DO?5?5?5bDeviceClass?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BM@IBBMEPAK@?$DO?5?5?5bDeviceSubClass?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BM@DONCAOLL@?$DO?5?5?5bDeviceProtocol?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0CB@KJHHAJF@?$DO?5?5?5bMaxPacketSize0?3?50x?$CF02X?5?$CI?$CFd@ ; `string'
PUBLIC	??_C@_0BK@FCNKAGPN@?$DO?5?5?5idVendor?3?50x?$CF04X?5?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BG@FEBFICPG@?$DO?5?5?5idProduct?3?50x?$CF04X@ ; `string'
PUBLIC	??_C@_0BG@IFDGHCDF@?$DO?5?5?5bcdDevice?3?50x?$CF04X@ ; `string'
PUBLIC	??_C@_0BK@IFOFIIGL@?$DO?5?5?5iManufacturer?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BF@JLHEPLOO@?$DO?5?5?5iProduct?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BK@LAPCHIKM@?$DO?5?5?5iSerialNumber?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BP@EFEAMJPP@?$DO?5?5?5bNumConfigurations?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BJ@POKCFGAN@?$DO?5?5?5ConnectionStatus?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0CB@CNIJGGK@?$DO?5?5?5Current?5Config?5Value?3?50x?$CF02@ ; `string'
PUBLIC	??_C@_0BK@CLDGMCFC@?$DO?5?5?5Device?5Bus?5Speed?3?5Low@ ; `string'
PUBLIC	??_C@_0BL@CJGBMBHK@?$DO?5?5?5Device?5Bus?5Speed?3?5Full@ ; `string'
PUBLIC	??_C@_0BL@OEKHLNNJ@?$DO?5?5?5Device?5Bus?5Speed?3?5High@ ; `string'
PUBLIC	??_C@_0BO@IIJPBIOD@?$DO?5?5?5Device?5Bus?5Speed?3?5Unknown@ ; `string'
PUBLIC	??_C@_0BL@DEBOODEI@?$DO?5?5?5Device?5Address?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BG@MHCPFALG@?$DO?5?5?5Open?5Pipes?3?5?$CF02lu@ ; `string'
PUBLIC	??_C@_0BA@KGDOGDAK@?$DM?$DM?5USB?4ConnInfo@	; `string'
PUBLIC	??_C@_0BE@MPHLOHIN@?$DO?$DO?5USB?4PipeInfo?0?5?$CFu@ ; `string'
PUBLIC	??_C@_0BA@KIDKADGJ@?$DM?$DM?5USB?4PipeInfo@	; `string'
PUBLIC	??_C@_0BA@BANBJKNP@?$DO?$DO?5USB?4ConnDesc@	; `string'
PUBLIC	??_C@_0BM@HNNAHBOO@?$DM?$DM?5USB?4ConnDesc?0?5Input?5null@ ; `string'
PUBLIC	??_C@_0BA@DPPHAOCN@?$DM?$DM?5USB?4ConnDesc@	; `string'
PUBLIC	??_C@_0P@KMFKJDAO@?$DO?$DO?5USB?4CfgDesc@	; `string'
PUBLIC	??_C@_0BM@PCIMCBFD@?$DO?5Configuration?5Descriptor?3@ ; `string'
PUBLIC	??_C@_0BJ@JBGKFDNL@?$DO?5?5?5wTotalLength?3?50x?$CF04X@ ; `string'
PUBLIC	??_C@_0BL@JNHEPBEN@?$DO?5?5?5bNumInterfaces?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0CA@KHMLNGHE@?$DO?5?5?5bConfigurationValue?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BL@MGNBONG@?$DO?5?5?5iConfiguration?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0M@KJBOJHIH@Bus?5Powered@			; `string'
PUBLIC	??_C@_0N@BBGKMOEA@Self?5Powered@		; `string'
PUBLIC	??_C@_0O@CEMJPFOE@Remote?5Wakeup@		; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP@				; `string'
PUBLIC	??_C@_0BO@GBBHCHCO@?$DO?5?5?5bmAttributes?3?50x?$CF02X?5?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BN@BADCCJC@?$DO?5?5?5MaxPower?3?50x?$CF02X?5?$CI?$CFd?5mA?$CJ@ ; `string'
PUBLIC	??_C@_0P@OFLCOGDC@?$DM?$DM?5USB?4CfgDesc@	; `string'
PUBLIC	??_C@_0BF@FGFFFEAJ@?$DO?$DO?5USB?4InterfaceDesc@ ; `string'
PUBLIC	??_C@_0BI@FGHPJGGP@?$DO?5Interface?5Descriptor?3@ ; `string'
PUBLIC	??_C@_0BN@ONGOLDBE@?$DO?5?5?5bInterfaceNumber?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BO@JANOLKEO@?$DO?5?5?5bAlternateSetting?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BK@EHJBAMGD@?$DO?5?5?5bNumEndpoints?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_05KKCMAPLJ@Audio@				; `string'
PUBLIC	??_C@_03GLEFGMHP@HID@				; `string'
PUBLIC	??_C@_03IFOKPDKP@Hub@				; `string'
PUBLIC	??_C@_0CB@KPEKNPLO@?$DO?5?5?5bInterfaceClass?3?50x?$CF02X?5?$CI?$CFs@ ; `string'
PUBLIC	??_C@_0O@FIEMGMDK@Audio?5Control@		; `string'
PUBLIC	??_C@_0BA@CCICINDB@Audio?5Streaming@		; `string'
PUBLIC	??_C@_0P@ODBCJCKO@MIDI?5Streaming@		; `string'
PUBLIC	??_C@_0CE@PEKAFJHJ@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X?5@ ; `string'
PUBLIC	??_C@_0BP@MCCALMMN@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BP@HNOOPNHM@?$DO?5?5?5bInterfaceProtocol?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BH@JAJKJCLD@?$DO?5?5?5iInterface?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BI@MFPCCAIN@?$DO?5?5?5wNumClasses?3?50x?$CF04X@ ; `string'
PUBLIC	??_C@_0BF@HIFPCDPI@?$DM?$DM?5USB?4InterfaceDesc@ ; `string'
PUBLIC	??_C@_0BE@BNJCNLHH@?$DO?$DO?5USB?4EndpointDesc@	; `string'
PUBLIC	??_C@_0BH@NNPPCJHP@?$DO?5Endpoint?5Descriptor?3@ ; `string'
PUBLIC	??_C@_0CA@IMJGHBI@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5IN@ ; `string'
PUBLIC	??_C@_0CB@PIKLNKCM@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5OU@ ; `string'
PUBLIC	??_C@_0BL@ICIOMPJC@?$DO?5?5?5Transfer?5Type?3?5Control@ ; `string'
PUBLIC	??_C@_0BP@DMDNFJME@?$DO?5?5?5Transfer?5Type?3?5Isochronous@ ; `string'
PUBLIC	??_C@_0BI@ELEHNLID@?$DO?5?5?5Transfer?5Type?3?5Bulk@ ; `string'
PUBLIC	??_C@_0BN@MOOEBEKA@?$DO?5?5?5Transfer?5Type?3?5Interrupt@ ; `string'
PUBLIC	??_C@_0CA@OFHICAPC@?$DO?5?5?5wMaxPacketSize?3?50x?$CF04X?5?$CI?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0BG@LPGMHCMJ@?$DO?5?5?5bInterval?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BG@HBLIDDIE@?$DO?5?5?5wInterval?3?50x?$CF04X@ ; `string'
PUBLIC	??_C@_0BJ@CECFOBBD@?$DO?5?5?5bSyncAddress?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BE@KDOIKLAK@?$DM?$DM?5USB?4EndpointDesc@	; `string'
PUBLIC	??_C@_0P@IBOMINBP@?$DO?$DO?5USB?4HidDesc@	; `string'
PUBLIC	??_C@_0BC@FKMEKGFJ@?$DO?5HID?5Descriptor?3@	; `string'
PUBLIC	??_C@_0BD@JNJCPDHI@?$DO?5?5?5bcdHID?3?50x?$CF04X@ ; `string'
PUBLIC	??_C@_0BJ@CKIDJFBI@?$DO?5?5?5bCountryCode?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BM@MKJBFMNP@?$DO?5?5?5bNumDescriptors?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0DN@JAEDHMBE@?$DO?5?5?5?$CF?43i?0?5bDescriptorType?3?50x?$CF0@ ; `string'
PUBLIC	??_C@_0P@MIAEPICD@?$DM?$DM?5USB?4HidDesc@	; `string'
PUBLIC	??_C@_0BH@LCHICFEL@?$DO?$DO?5USB?4StrDesc?0?5Idx?5?$CFd@ ; `string'
PUBLIC	??_C@_0P@CCEKBNHE@?$DO?5?5?50x?$CF04X?3?5?$CFs@	; `string'
PUBLIC	??_C@_0P@DKFDMJNG@?$DM?$DM?5USB?4StrDesc@	; `string'
PUBLIC	??_C@_0BD@LEEGFGLN@?$DO?$DO?5USB?4UnknownDesc@	; `string'
PUBLIC	??_C@_0BG@FBFGEGLK@?$DO?5Unknown?5Descriptor?3@	; `string'
PUBLIC	??_C@_0BM@HOMJLHIG@?$DO?5?5?5bDescriptorType?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_0BE@PKPADJND@?$DO?5?5?5bLength?3?50x?$CF02X@ ; `string'
PUBLIC	??_C@_04CKDHMDHJ@?$DO?5?5?5@			; `string'
PUBLIC	??_C@_07GHOKFMCD@?$CFs?4?$CF02X@		; `string'
PUBLIC	??_C@_0BD@MFCGDLMP@?$DM?$DM?5USB?4UnknownDesc@	; `string'
PUBLIC	?UsbViewIndent@@3PAPADA				; UsbViewIndent
PUBLIC	?ConnectionStatuses@@3PAPADA			; ConnectionStatuses
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__DeviceIoControl@32:PROC
;	COMDAT ??_C@_0BD@MFCGDLMP@?$DM?$DM?5USB?4UnknownDesc@
CONST	SEGMENT
??_C@_0BD@MFCGDLMP@?$DM?$DM?5USB?4UnknownDesc@ DB '<< USB.UnknownDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GHOKFMCD@?$CFs?4?$CF02X@
CONST	SEGMENT
??_C@_07GHOKFMCD@?$CFs?4?$CF02X@ DB '%s.%02X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CKDHMDHJ@?$DO?5?5?5@
CONST	SEGMENT
??_C@_04CKDHMDHJ@?$DO?5?5?5@ DB '>   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PKPADJND@?$DO?5?5?5bLength?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BE@PKPADJND@?$DO?5?5?5bLength?3?50x?$CF02X@ DB '>   bLength: 0x%02'
	DB	'X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HOMJLHIG@?$DO?5?5?5bDescriptorType?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BM@HOMJLHIG@?$DO?5?5?5bDescriptorType?3?50x?$CF02X@ DB '>   bDescr'
	DB	'iptorType: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FBFGEGLK@?$DO?5Unknown?5Descriptor?3@
CONST	SEGMENT
??_C@_0BG@FBFGEGLK@?$DO?5Unknown?5Descriptor?3@ DB '> Unknown Descriptor:'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LEEGFGLN@?$DO?$DO?5USB?4UnknownDesc@
CONST	SEGMENT
??_C@_0BD@LEEGFGLN@?$DO?$DO?5USB?4UnknownDesc@ DB '>> USB.UnknownDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DKFDMJNG@?$DM?$DM?5USB?4StrDesc@
CONST	SEGMENT
??_C@_0P@DKFDMJNG@?$DM?$DM?5USB?4StrDesc@ DB '<< USB.StrDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CCEKBNHE@?$DO?5?5?50x?$CF04X?3?5?$CFs@
CONST	SEGMENT
??_C@_0P@CCEKBNHE@?$DO?5?5?50x?$CF04X?3?5?$CFs@ DB '>   0x%04X: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LCHICFEL@?$DO?$DO?5USB?4StrDesc?0?5Idx?5?$CFd@
CONST	SEGMENT
??_C@_0BH@LCHICFEL@?$DO?$DO?5USB?4StrDesc?0?5Idx?5?$CFd@ DB '>> USB.StrDe'
	DB	'sc, Idx %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MIAEPICD@?$DM?$DM?5USB?4HidDesc@
CONST	SEGMENT
??_C@_0P@MIAEPICD@?$DM?$DM?5USB?4HidDesc@ DB '<< USB.HidDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@JAEDHMBE@?$DO?5?5?5?$CF?43i?0?5bDescriptorType?3?50x?$CF0@
CONST	SEGMENT
??_C@_0DN@JAEDHMBE@?$DO?5?5?5?$CF?43i?0?5bDescriptorType?3?50x?$CF0@ DB '>'
	DB	'   %.3i, bDescriptorType: 0x%02X, wDescriptorLength: 0x%04X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MKJBFMNP@?$DO?5?5?5bNumDescriptors?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BM@MKJBFMNP@?$DO?5?5?5bNumDescriptors?3?50x?$CF02X@ DB '>   bNumDe'
	DB	'scriptors: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CKIDJFBI@?$DO?5?5?5bCountryCode?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BJ@CKIDJFBI@?$DO?5?5?5bCountryCode?3?50x?$CF02X@ DB '>   bCountryC'
	DB	'ode: 0x%02X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JNJCPDHI@?$DO?5?5?5bcdHID?3?50x?$CF04X@
CONST	SEGMENT
??_C@_0BD@JNJCPDHI@?$DO?5?5?5bcdHID?3?50x?$CF04X@ DB '>   bcdHID: 0x%04X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FKMEKGFJ@?$DO?5HID?5Descriptor?3@
CONST	SEGMENT
??_C@_0BC@FKMEKGFJ@?$DO?5HID?5Descriptor?3@ DB '> HID Descriptor:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IBOMINBP@?$DO?$DO?5USB?4HidDesc@
CONST	SEGMENT
??_C@_0P@IBOMINBP@?$DO?$DO?5USB?4HidDesc@ DB '>> USB.HidDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KDOIKLAK@?$DM?$DM?5USB?4EndpointDesc@
CONST	SEGMENT
??_C@_0BE@KDOIKLAK@?$DM?$DM?5USB?4EndpointDesc@ DB '<< USB.EndpointDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CECFOBBD@?$DO?5?5?5bSyncAddress?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BJ@CECFOBBD@?$DO?5?5?5bSyncAddress?3?50x?$CF02X@ DB '>   bSyncAddr'
	DB	'ess: 0x%02X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HBLIDDIE@?$DO?5?5?5wInterval?3?50x?$CF04X@
CONST	SEGMENT
??_C@_0BG@HBLIDDIE@?$DO?5?5?5wInterval?3?50x?$CF04X@ DB '>   wInterval: 0'
	DB	'x%04X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LPGMHCMJ@?$DO?5?5?5bInterval?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BG@LPGMHCMJ@?$DO?5?5?5bInterval?3?50x?$CF02X@ DB '>   bInterval: 0'
	DB	'x%02X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OFHICAPC@?$DO?5?5?5wMaxPacketSize?3?50x?$CF04X?5?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_0CA@OFHICAPC@?$DO?5?5?5wMaxPacketSize?3?50x?$CF04X?5?$CI?$CFd?$CJ@ DB '>'
	DB	'   wMaxPacketSize: 0x%04X (%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MOOEBEKA@?$DO?5?5?5Transfer?5Type?3?5Interrupt@
CONST	SEGMENT
??_C@_0BN@MOOEBEKA@?$DO?5?5?5Transfer?5Type?3?5Interrupt@ DB '>   Transfe'
	DB	'r Type: Interrupt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ELEHNLID@?$DO?5?5?5Transfer?5Type?3?5Bulk@
CONST	SEGMENT
??_C@_0BI@ELEHNLID@?$DO?5?5?5Transfer?5Type?3?5Bulk@ DB '>   Transfer Typ'
	DB	'e: Bulk', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DMDNFJME@?$DO?5?5?5Transfer?5Type?3?5Isochronous@
CONST	SEGMENT
??_C@_0BP@DMDNFJME@?$DO?5?5?5Transfer?5Type?3?5Isochronous@ DB '>   Trans'
	DB	'fer Type: Isochronous', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ICIOMPJC@?$DO?5?5?5Transfer?5Type?3?5Control@
CONST	SEGMENT
??_C@_0BL@ICIOMPJC@?$DO?5?5?5Transfer?5Type?3?5Control@ DB '>   Transfer '
	DB	'Type: Control', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PIKLNKCM@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5OU@
CONST	SEGMENT
??_C@_0CB@PIKLNKCM@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5OU@ DB '>   b'
	DB	'EndpointAddress: 0x%02X OUT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IMJGHBI@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5IN@
CONST	SEGMENT
??_C@_0CA@IMJGHBI@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5IN@ DB '>   bE'
	DB	'ndpointAddress: 0x%02X IN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NNPPCJHP@?$DO?5Endpoint?5Descriptor?3@
CONST	SEGMENT
??_C@_0BH@NNPPCJHP@?$DO?5Endpoint?5Descriptor?3@ DB '> Endpoint Descripto'
	DB	'r:', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BNJCNLHH@?$DO?$DO?5USB?4EndpointDesc@
CONST	SEGMENT
??_C@_0BE@BNJCNLHH@?$DO?$DO?5USB?4EndpointDesc@ DB '>> USB.EndpointDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HIFPCDPI@?$DM?$DM?5USB?4InterfaceDesc@
CONST	SEGMENT
??_C@_0BF@HIFPCDPI@?$DM?$DM?5USB?4InterfaceDesc@ DB '<< USB.InterfaceDesc'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MFPCCAIN@?$DO?5?5?5wNumClasses?3?50x?$CF04X@
CONST	SEGMENT
??_C@_0BI@MFPCCAIN@?$DO?5?5?5wNumClasses?3?50x?$CF04X@ DB '>   wNumClasse'
	DB	's: 0x%04X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAJKJCLD@?$DO?5?5?5iInterface?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BH@JAJKJCLD@?$DO?5?5?5iInterface?3?50x?$CF02X@ DB '>   iInterface:'
	DB	' 0x%02X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HNOOPNHM@?$DO?5?5?5bInterfaceProtocol?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BP@HNOOPNHM@?$DO?5?5?5bInterfaceProtocol?3?50x?$CF02X@ DB '>   bIn'
	DB	'terfaceProtocol: 0x%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MCCALMMN@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BP@MCCALMMN@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X@ DB '>   bIn'
	DB	'terfaceSubClass: 0x%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PEKAFJHJ@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X?5@
CONST	SEGMENT
??_C@_0CE@PEKAFJHJ@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X?5@ DB '>   b'
	DB	'InterfaceSubClass: 0x%02X (%s)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ODBCJCKO@MIDI?5Streaming@
CONST	SEGMENT
??_C@_0P@ODBCJCKO@MIDI?5Streaming@ DB 'MIDI Streaming', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CCICINDB@Audio?5Streaming@
CONST	SEGMENT
??_C@_0BA@CCICINDB@Audio?5Streaming@ DB 'Audio Streaming', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FIEMGMDK@Audio?5Control@
CONST	SEGMENT
??_C@_0O@FIEMGMDK@Audio?5Control@ DB 'Audio Control', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KPEKNPLO@?$DO?5?5?5bInterfaceClass?3?50x?$CF02X?5?$CI?$CFs@
CONST	SEGMENT
??_C@_0CB@KPEKNPLO@?$DO?5?5?5bInterfaceClass?3?50x?$CF02X?5?$CI?$CFs@ DB '>'
	DB	'   bInterfaceClass: 0x%02X (%s)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IFOKPDKP@Hub@
CONST	SEGMENT
??_C@_03IFOKPDKP@Hub@ DB 'Hub', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GLEFGMHP@HID@
CONST	SEGMENT
??_C@_03GLEFGMHP@HID@ DB 'HID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05KKCMAPLJ@Audio@
CONST	SEGMENT
??_C@_05KKCMAPLJ@Audio@ DB 'Audio', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EHJBAMGD@?$DO?5?5?5bNumEndpoints?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BK@EHJBAMGD@?$DO?5?5?5bNumEndpoints?3?50x?$CF02X@ DB '>   bNumEndp'
	DB	'oints: 0x%02X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JANOLKEO@?$DO?5?5?5bAlternateSetting?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BO@JANOLKEO@?$DO?5?5?5bAlternateSetting?3?50x?$CF02X@ DB '>   bAlt'
	DB	'ernateSetting: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ONGOLDBE@?$DO?5?5?5bInterfaceNumber?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BN@ONGOLDBE@?$DO?5?5?5bInterfaceNumber?3?50x?$CF02X@ DB '>   bInte'
	DB	'rfaceNumber: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FGHPJGGP@?$DO?5Interface?5Descriptor?3@
CONST	SEGMENT
??_C@_0BI@FGHPJGGP@?$DO?5Interface?5Descriptor?3@ DB '> Interface Descrip'
	DB	'tor:', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FGFFFEAJ@?$DO?$DO?5USB?4InterfaceDesc@
CONST	SEGMENT
??_C@_0BF@FGFFFEAJ@?$DO?$DO?5USB?4InterfaceDesc@ DB '>> USB.InterfaceDesc'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OFLCOGDC@?$DM?$DM?5USB?4CfgDesc@
CONST	SEGMENT
??_C@_0P@OFLCOGDC@?$DM?$DM?5USB?4CfgDesc@ DB '<< USB.CfgDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BADCCJC@?$DO?5?5?5MaxPower?3?50x?$CF02X?5?$CI?$CFd?5mA?$CJ@
CONST	SEGMENT
??_C@_0BN@BADCCJC@?$DO?5?5?5MaxPower?3?50x?$CF02X?5?$CI?$CFd?5mA?$CJ@ DB '>'
	DB	'   MaxPower: 0x%02X (%d mA)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GBBHCHCO@?$DO?5?5?5bmAttributes?3?50x?$CF02X?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BO@GBBHCHCO@?$DO?5?5?5bmAttributes?3?50x?$CF02X?5?$CI?$CFs?$CJ@ DB '>'
	DB	'   bmAttributes: 0x%02X (%s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CEMJPFOE@Remote?5Wakeup@
CONST	SEGMENT
??_C@_0O@CEMJPFOE@Remote?5Wakeup@ DB 'Remote Wakeup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BBGKMOEA@Self?5Powered@
CONST	SEGMENT
??_C@_0N@BBGKMOEA@Self?5Powered@ DB 'Self Powered', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KJBOJHIH@Bus?5Powered@
CONST	SEGMENT
??_C@_0M@KJBOJHIH@Bus?5Powered@ DB 'Bus Powered', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MGNBONG@?$DO?5?5?5iConfiguration?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BL@MGNBONG@?$DO?5?5?5iConfiguration?3?50x?$CF02X@ DB '>   iConfigu'
	DB	'ration: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KHMLNGHE@?$DO?5?5?5bConfigurationValue?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0CA@KHMLNGHE@?$DO?5?5?5bConfigurationValue?3?50x?$CF02X@ DB '>   bC'
	DB	'onfigurationValue: 0x%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JNHEPBEN@?$DO?5?5?5bNumInterfaces?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BL@JNHEPBEN@?$DO?5?5?5bNumInterfaces?3?50x?$CF02X@ DB '>   bNumInt'
	DB	'erfaces: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JBGKFDNL@?$DO?5?5?5wTotalLength?3?50x?$CF04X@
CONST	SEGMENT
??_C@_0BJ@JBGKFDNL@?$DO?5?5?5wTotalLength?3?50x?$CF04X@ DB '>   wTotalLen'
	DB	'gth: 0x%04X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PCIMCBFD@?$DO?5Configuration?5Descriptor?3@
CONST	SEGMENT
??_C@_0BM@PCIMCBFD@?$DO?5Configuration?5Descriptor?3@ DB '> Configuration'
	DB	' Descriptor:', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMFKJDAO@?$DO?$DO?5USB?4CfgDesc@
CONST	SEGMENT
??_C@_0P@KMFKJDAO@?$DO?$DO?5USB?4CfgDesc@ DB '>> USB.CfgDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DPPHAOCN@?$DM?$DM?5USB?4ConnDesc@
CONST	SEGMENT
??_C@_0BA@DPPHAOCN@?$DM?$DM?5USB?4ConnDesc@ DB '<< USB.ConnDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HNNAHBOO@?$DM?$DM?5USB?4ConnDesc?0?5Input?5null@
CONST	SEGMENT
??_C@_0BM@HNNAHBOO@?$DM?$DM?5USB?4ConnDesc?0?5Input?5null@ DB '<< USB.Con'
	DB	'nDesc, Input null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BANBJKNP@?$DO?$DO?5USB?4ConnDesc@
CONST	SEGMENT
??_C@_0BA@BANBJKNP@?$DO?$DO?5USB?4ConnDesc@ DB '>> USB.ConnDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KIDKADGJ@?$DM?$DM?5USB?4PipeInfo@
CONST	SEGMENT
??_C@_0BA@KIDKADGJ@?$DM?$DM?5USB?4PipeInfo@ DB '<< USB.PipeInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MPHLOHIN@?$DO?$DO?5USB?4PipeInfo?0?5?$CFu@
CONST	SEGMENT
??_C@_0BE@MPHLOHIN@?$DO?$DO?5USB?4PipeInfo?0?5?$CFu@ DB '>> USB.PipeInfo,'
	DB	' %u', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KGDOGDAK@?$DM?$DM?5USB?4ConnInfo@
CONST	SEGMENT
??_C@_0BA@KGDOGDAK@?$DM?$DM?5USB?4ConnInfo@ DB '<< USB.ConnInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MHCPFALG@?$DO?5?5?5Open?5Pipes?3?5?$CF02lu@
CONST	SEGMENT
??_C@_0BG@MHCPFALG@?$DO?5?5?5Open?5Pipes?3?5?$CF02lu@ DB '>   Open Pipes:'
	DB	' %02lu', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DEBOODEI@?$DO?5?5?5Device?5Address?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BL@DEBOODEI@?$DO?5?5?5Device?5Address?3?50x?$CF02X@ DB '>   Device'
	DB	' Address: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IIJPBIOD@?$DO?5?5?5Device?5Bus?5Speed?3?5Unknown@
CONST	SEGMENT
??_C@_0BO@IIJPBIOD@?$DO?5?5?5Device?5Bus?5Speed?3?5Unknown@ DB '>   Devic'
	DB	'e Bus Speed: Unknown', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OEKHLNNJ@?$DO?5?5?5Device?5Bus?5Speed?3?5High@
CONST	SEGMENT
??_C@_0BL@OEKHLNNJ@?$DO?5?5?5Device?5Bus?5Speed?3?5High@ DB '>   Device B'
	DB	'us Speed: High', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CJGBMBHK@?$DO?5?5?5Device?5Bus?5Speed?3?5Full@
CONST	SEGMENT
??_C@_0BL@CJGBMBHK@?$DO?5?5?5Device?5Bus?5Speed?3?5Full@ DB '>   Device B'
	DB	'us Speed: Full', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CLDGMCFC@?$DO?5?5?5Device?5Bus?5Speed?3?5Low@
CONST	SEGMENT
??_C@_0BK@CLDGMCFC@?$DO?5?5?5Device?5Bus?5Speed?3?5Low@ DB '>   Device Bu'
	DB	's Speed: Low', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CNIJGGK@?$DO?5?5?5Current?5Config?5Value?3?50x?$CF02@
CONST	SEGMENT
??_C@_0CB@CNIJGGK@?$DO?5?5?5Current?5Config?5Value?3?50x?$CF02@ DB '>   C'
	DB	'urrent Config Value: 0x%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@POKCFGAN@?$DO?5?5?5ConnectionStatus?3?5?$CFs@
CONST	SEGMENT
??_C@_0BJ@POKCFGAN@?$DO?5?5?5ConnectionStatus?3?5?$CFs@ DB '>   Connectio'
	DB	'nStatus: %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EFEAMJPP@?$DO?5?5?5bNumConfigurations?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BP@EFEAMJPP@?$DO?5?5?5bNumConfigurations?3?50x?$CF02X@ DB '>   bNu'
	DB	'mConfigurations: 0x%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LAPCHIKM@?$DO?5?5?5iSerialNumber?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BK@LAPCHIKM@?$DO?5?5?5iSerialNumber?3?50x?$CF02X@ DB '>   iSerialN'
	DB	'umber: 0x%02X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JLHEPLOO@?$DO?5?5?5iProduct?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BF@JLHEPLOO@?$DO?5?5?5iProduct?3?50x?$CF02X@ DB '>   iProduct: 0x%'
	DB	'02X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IFOFIIGL@?$DO?5?5?5iManufacturer?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BK@IFOFIIGL@?$DO?5?5?5iManufacturer?3?50x?$CF02X@ DB '>   iManufac'
	DB	'turer: 0x%02X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IFDGHCDF@?$DO?5?5?5bcdDevice?3?50x?$CF04X@
CONST	SEGMENT
??_C@_0BG@IFDGHCDF@?$DO?5?5?5bcdDevice?3?50x?$CF04X@ DB '>   bcdDevice: 0'
	DB	'x%04X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FEBFICPG@?$DO?5?5?5idProduct?3?50x?$CF04X@
CONST	SEGMENT
??_C@_0BG@FEBFICPG@?$DO?5?5?5idProduct?3?50x?$CF04X@ DB '>   idProduct: 0'
	DB	'x%04X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FCNKAGPN@?$DO?5?5?5idVendor?3?50x?$CF04X?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0BK@FCNKAGPN@?$DO?5?5?5idVendor?3?50x?$CF04X?5?$CI?$CFs?$CJ@ DB '> '
	DB	'  idVendor: 0x%04X (%s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KJHHAJF@?$DO?5?5?5bMaxPacketSize0?3?50x?$CF02X?5?$CI?$CFd@
CONST	SEGMENT
??_C@_0CB@KJHHAJF@?$DO?5?5?5bMaxPacketSize0?3?50x?$CF02X?5?$CI?$CFd@ DB '>'
	DB	'   bMaxPacketSize0: 0x%02X (%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DONCAOLL@?$DO?5?5?5bDeviceProtocol?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BM@DONCAOLL@?$DO?5?5?5bDeviceProtocol?3?50x?$CF02X@ DB '>   bDevic'
	DB	'eProtocol: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IBBMEPAK@?$DO?5?5?5bDeviceSubClass?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BM@IBBMEPAK@?$DO?5?5?5bDeviceSubClass?3?50x?$CF02X@ DB '>   bDevic'
	DB	'eSubClass: 0x%02X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BBNICMHO@?$DO?5?5?5bDeviceClass?3?50x?$CF02X@
CONST	SEGMENT
??_C@_0BJ@BBNICMHO@?$DO?5?5?5bDeviceClass?3?50x?$CF02X@ DB '>   bDeviceCl'
	DB	'ass: 0x%02X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EOGCPDGC@?$DO?5?5?5bcdUSB?3?50x?$CF04X@
CONST	SEGMENT
??_C@_0BD@EOGCPDGC@?$DO?5?5?5bcdUSB?3?50x?$CF04X@ DB '>   bcdUSB: 0x%04X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EPIIACIH@?$DO?5Device?5Descriptor?3@
CONST	SEGMENT
??_C@_0BF@EPIIACIH@?$DO?5Device?5Descriptor?3@ DB '> Device Descriptor:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KIPJNEMD@?$DO?5ConnectionStatus?3?5NoDeviceCon@
CONST	SEGMENT
??_C@_0CG@KIPJNEMD@?$DO?5ConnectionStatus?3?5NoDeviceCon@ DB '> Connectio'
	DB	'nStatus: NoDeviceConnected', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GIKFEJKI@?$DM?$DM?5USB?4ConnInfo?0?5Input?5null@
CONST	SEGMENT
??_C@_0BM@GIKFEJKI@?$DM?$DM?5USB?4ConnInfo?0?5Input?5null@ DB '<< USB.Con'
	DB	'nInfo, Input null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJBIPHPI@?$DO?$DO?5USB?4ConnInfo@
CONST	SEGMENT
??_C@_0BA@IJBIPHPI@?$DO?$DO?5USB?4ConnInfo@ DB '>> USB.ConnInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLOFAKML@?$DM?$DM?5USB?4HubCaps@
CONST	SEGMENT
??_C@_0P@MLOFAKML@?$DM?$DM?5USB?4HubCaps@ DB '<< USB.HubCaps', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMIILDFE@Hub?5Capabilities?5UNAVAILABLE@
CONST	SEGMENT
??_C@_0BN@HMIILDFE@Hub?5Capabilities?5UNAVAILABLE@ DB 'Hub Capabilities U'
	DB	'NAVAILABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BJAEENFA@?$DO?5Hub?5Capabilities?3?5?$CF0?$CD8lx?5?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0CA@BJAEENFA@?$DO?5Hub?5Capabilities?3?5?$CF0?$CD8lx?5?$CI?$CFs?$CJ@ DB '>'
	DB	' Hub Capabilities: %0#8lx (%s)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDNEGAOE@Not?5high?5speed@
CONST	SEGMENT
??_C@_0P@LDNEGAOE@Not?5high?5speed@ DB 'Not high speed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BGKBMIAF@High?5speed@
CONST	SEGMENT
??_C@_0L@BGKBMIAF@High?5speed@ DB 'High speed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OCCHEKHL@Extended?5Hub?5Capabilities?5UNAVA@
CONST	SEGMENT
??_C@_0CG@OCCHEKHL@Extended?5Hub?5Capabilities?5UNAVA@ DB 'Extended Hub C'
	DB	'apabilities UNAVAILABLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LBBGDALG@?$DO?5?5?5Reserved?5?$CI26?5bits?$CJ?3?5?$CF0?$CD6lx@
CONST	SEGMENT
??_C@_0BP@LBBGDALG@?$DO?5?5?5Reserved?5?$CI26?5bits?$CJ?3?5?$CF0?$CD6lx@ DB '>'
	DB	'   Reserved (26 bits): %0#6lx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EBPNDPBD@?$DO?5?5?5Armed?5for?5wake?5on?5connect?3?5@
CONST	SEGMENT
??_C@_0CC@EBPNDPBD@?$DO?5?5?5Armed?5for?5wake?5on?5connect?3?5@ DB '>   A'
	DB	'rmed for wake on connect: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BIGCJPGA@?$DO?5?5?5Root?5hub?3?5?$CFs@
CONST	SEGMENT
??_C@_0BB@BIGCJPGA@?$DO?5?5?5Root?5hub?3?5?$CFs@ DB '>   Root hub: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JNPMKCLE@?$DO?5?5?5Mulit?9transaction?3?5?$CFs@
CONST	SEGMENT
??_C@_0BK@JNPMKCLE@?$DO?5?5?5Mulit?9transaction?3?5?$CFs@ DB '>   Mulit-t'
	DB	'ransaction: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCDBBDDL@Off@
CONST	SEGMENT
??_C@_03GCDBBDDL@Off@ DB 'Off', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02IAAGKKDJ@On@
CONST	SEGMENT
??_C@_02IAAGKKDJ@On@ DB 'On', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CJLCKEMN@?$DO?5?5?5Mulit?9transaction?5Capable?3?5@
CONST	SEGMENT
??_C@_0CC@CJLCKEMN@?$DO?5?5?5Mulit?9transaction?5Capable?3?5@ DB '>   Mul'
	DB	'it-transaction Capable: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FCCHMOKD@?$DO?5?5?5High?5speed?3?5?$CFs@
CONST	SEGMENT
??_C@_0BD@FCCHMOKD@?$DO?5?5?5High?5speed?3?5?$CFs@ DB '>   High speed: %s'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GGCJII@?$DO?5?5?5High?5speed?5Capable?3?5?$CFs@
CONST	SEGMENT
??_C@_0BL@GGCJII@?$DO?5?5?5High?5speed?5Capable?3?5?$CFs@ DB '>   High sp'
	DB	'eed Capable: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KPNJBEAB@?$DO?5Extended?5Hub?5Capability?5Flags@
CONST	SEGMENT
??_C@_0CI@KPNJBEAB@?$DO?5Extended?5Hub?5Capability?5Flags@ DB '> Extended'
	DB	' Hub Capability Flags: %0#8lx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ICANHPPH@?$DO?$DO?5USB?4HubCaps@
CONST	SEGMENT
??_C@_0P@ICANHPPH@?$DO?$DO?5USB?4HubCaps@ DB '>> USB.HubCaps', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CHOKIAKD@?$DM?$DM?5USB?4HubInfo@
CONST	SEGMENT
??_C@_0P@CHOKIAKD@?$DM?$DM?5USB?4HubInfo@ DB '<< USB.HubInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FGJIHOLC@?$DO?5No?5Over?9current?5Protection?5?$CIB@
CONST	SEGMENT
??_C@_0CO@FGJIHOLC@?$DO?5No?5Over?9current?5Protection?5?$CIB@ DB '> No O'
	DB	'ver-current Protection (Bus Power Only)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MEGDLCFA@?$DO?5Over?9current?5Protection?3?5Indi@
CONST	SEGMENT
??_C@_0CG@MEGDLCFA@?$DO?5Over?9current?5Protection?3?5Indi@ DB '> Over-cu'
	DB	'rrent Protection: Individual', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ELIAJJDL@?$DO?5Over?9current?5Protection?3?5Glob@
CONST	SEGMENT
??_C@_0CC@ELIAJJDL@?$DO?5Over?9current?5Protection?3?5Glob@ DB '> Over-cu'
	DB	'rrent Protection: Global', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CFBEDMDO@?$DO?5Compound?5device?3?5Yes@
CONST	SEGMENT
??_C@_0BH@CFBEDMDO@?$DO?5Compound?5device?3?5Yes@ DB '> Compound device: '
	DB	'Yes', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FBGEODEL@?$DO?5Compound?5device?3?5No@
CONST	SEGMENT
??_C@_0BG@FBGEODEL@?$DO?5Compound?5device?3?5No@ DB '> Compound device: N'
	DB	'o', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FICFFJGB@?$DO?5Power?5switching?3?5None@
CONST	SEGMENT
??_C@_0BI@FICFFJGB@?$DO?5Power?5switching?3?5None@ DB '> Power switching:'
	DB	' None', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BHNNAPDB@?$DO?5Power?5switching?3?5Individual@
CONST	SEGMENT
??_C@_0BO@BHNNAPDB@?$DO?5Power?5switching?3?5Individual@ DB '> Power swit'
	DB	'ching: Individual', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CEEHKAND@?$DO?5Power?5switching?3?5Ganged@
CONST	SEGMENT
??_C@_0BK@CEEHKAND@?$DO?5Power?5switching?3?5Ganged@ DB '> Power switchin'
	DB	'g: Ganged', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IOHBDCFM@?$DO?5Number?5of?5Ports?3?5?$CFd@
CONST	SEGMENT
??_C@_0BG@IOHBDCFM@?$DO?5Number?5of?5Ports?3?5?$CFd@ DB '> Number of Port'
	DB	's: %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KPNNFMHH@?$DO?5Hub?5Power?3?5?$CFs@
CONST	SEGMENT
??_C@_0BA@KPNNFMHH@?$DO?5Hub?5Power?3?5?$CFs@ DB '> Hub Power: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDJFLKOD@Self?5Power@
CONST	SEGMENT
??_C@_0L@JDJFLKOD@Self?5Power@ DB 'Self Power', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GDHNALJA@Bus?5Power@
CONST	SEGMENT
??_C@_09GDHNALJA@Bus?5Power@ DB 'Bus Power', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GOACPFJP@?$DO?$DO?5USB?4HubInfo@
CONST	SEGMENT
??_C@_0P@GOACPFJP@?$DO?$DO?5USB?4HubInfo@ DB '>> USB.HubInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HCFMPAHC@?$DM?$DM?5USB?4GetCfgDesc?0?50x?$CFp@
CONST	SEGMENT
??_C@_0BI@HCFMPAHC@?$DM?$DM?5USB?4GetCfgDesc?0?50x?$CFp@ DB '<< USB.GetCf'
	DB	'gDesc, 0x%p', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LPDCGPEM@?9?9?5USB?4GetCfgDescriptor?0?5new?5Bu@
CONST	SEGMENT
??_C@_0CL@LPDCGPEM@?9?9?5USB?4GetCfgDescriptor?0?5new?5Bu@ DB '-- USB.Get'
	DB	'CfgDescriptor, new Buf (%u) null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LMLHDIHD@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Total?5?$CFd@
CONST	SEGMENT
??_C@_0CI@LMLHDIHD@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Total?5?$CFd@ DB '<<'
	DB	' USB.GetCfgDesc, Req Total %d < Sz %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JDNANMP@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Bytes?5?$CFu@
CONST	SEGMENT
??_C@_0CP@JDNANMP@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Bytes?5?$CFu@ DB '<< '
	DB	'USB.GetCfgDesc, Req Bytes %u <> BytesRet %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@FDNPACDH@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5DeviceIo@
CONST	SEGMENT
??_C@_0CN@FDNPACDH@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5DeviceIo@ DB '<< USB'
	DB	'.GetCfgDesc, Req DeviceIoControl False', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LLJEBADN@?$DM?$DM?5USB?4GetCfgDesc?0?5Total?5?$CFd?5?$DM?5S@
CONST	SEGMENT
??_C@_0CL@LLJEBADN@?$DM?$DM?5USB?4GetCfgDesc?0?5Total?5?$CFd?5?$DM?5S@ DB '<'
	DB	'< USB.GetCfgDesc, Total %d < Sz struct %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@CHLLBENA@?$DM?$DM?5USB?4GetCfgDesc?0?5Bytes?5?$CFu?5?$DM?$DO?5@
CONST	SEGMENT
??_C@_0CL@CHLLBENA@?$DM?$DM?5USB?4GetCfgDesc?0?5Bytes?5?$CFu?5?$DM?$DO?5@ DB '<'
	DB	'< USB.GetCfgDesc, Bytes %u <> BytesRet %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JPCNJMBL@?$DM?$DM?5USB?4GetCfgDesc?0?5DeviceIoCont@
CONST	SEGMENT
??_C@_0CJ@JPCNJMBL@?$DM?$DM?5USB?4GetCfgDesc?0?5DeviceIoCont@ DB '<< USB.'
	DB	'GetCfgDesc, DeviceIoControl False', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NBPLLDOB@?$DO?$DO?5USB?4GetCfgDesc@
CONST	SEGMENT
??_C@_0BC@NBPLLDOB@?$DO?$DO?5USB?4GetCfgDesc@ DB '>> USB.GetCfgDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OCOKNHIB@?$DM?$DM?5USB?4GetStrDescs?0?5StrDescNode@
CONST	SEGMENT
??_C@_0CJ@OCOKNHIB@?$DM?$DM?5USB?4GetStrDescs?0?5StrDescNode@ DB '<< USB.'
	DB	'GetStrDescs, StrDescNodeTail 0x%p', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HEHGMECG@?$DO?$DO?5USB?4GetStrDescs@
CONST	SEGMENT
??_C@_0BD@HEHGMECG@?$DO?$DO?5USB?4GetStrDescs@ DB '>> USB.GetStrDescs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GAKGEKMO@?$DM?$DM?5USB?4GetHCDDrvKeyName?0?5DrvKey@
CONST	SEGMENT
??_C@_0CH@GAKGEKMO@?$DM?$DM?5USB?4GetHCDDrvKeyName?0?5DrvKey@ DB '<< USB.'
	DB	'GetHCDDrvKeyName, DrvKeyName %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LFJMJGOI@?$DO?$DO?5USB?4GetHCDDrvKeyName@
CONST	SEGMENT
??_C@_0BI@LFJMJGOI@?$DO?$DO?5USB?4GetHCDDrvKeyName@ DB '>> USB.GetHCDDrvK'
	DB	'eyName', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MFMFEBEJ@?$DM?$DM?5USB?4GetRootHub?0?5HubName?5?$CFs@
CONST	SEGMENT
??_C@_0BO@MFMFEBEJ@?$DM?$DM?5USB?4GetRootHub?0?5HubName?5?$CFs@ DB '<< US'
	DB	'B.GetRootHub, HubName %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMOMHHM@?$DO?$DO?5USB?4GetRootHub@
CONST	SEGMENT
??_C@_0BC@PGMOMHHM@?$DO?$DO?5USB?4GetRootHub@ DB '>> USB.GetRootHub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NNDDHFCH@?$DM?$DM?5USB?4EnumHub@
CONST	SEGMENT
??_C@_0P@NNDDHFCH@?$DM?$DM?5USB?4EnumHub@ DB '<< USB.EnumHub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EDMNKMD@?9?9?5USB?4EnumHub?0?5new?5Info?5?$CI?$CFu?$CJ?5n@
CONST	SEGMENT
??_C@_0CD@EDMNKMD@?9?9?5USB?4EnumHub?0?5new?5Info?5?$CI?$CFu?$CJ?5n@ DB '-'
	DB	'- USB.EnumHub, new Info (%u) null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FMONKKAG@?9?9?5USB?4EnumHub?0?5new?5HubInfo?5?$CI?$CFu@
CONST	SEGMENT
??_C@_0CG@FMONKKAG@?9?9?5USB?4EnumHub?0?5new?5HubInfo?5?$CI?$CFu@ DB '-- '
	DB	'USB.EnumHub, new HubInfo (%u) null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MKEDFNGB@?5?3?5?5@
CONST	SEGMENT
??_C@_04MKEDFNGB@?5?3?5?5@ DB ' :  ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GBDIODIA@?2?2?4?2@
CONST	SEGMENT
??_C@_04GBDIODIA@?2?2?4?2@ DB '\\.\', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JENLAABL@?$DO?$DO?5USB?4EnumHub@
CONST	SEGMENT
??_C@_0P@JENLAABL@?$DO?$DO?5USB?4EnumHub@ DB '>> USB.EnumHub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OFAOPKJL@?$DM?$DM?5USB?4DrvName2DevDesc?0?5Ret?5Nul@
CONST	SEGMENT
??_C@_0CB@OFAOPKJL@?$DM?$DM?5USB?4DrvName2DevDesc?0?5Ret?5Nul@ DB '<< USB'
	DB	'.DrvName2DevDesc, Ret Null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BAPAALJK@?$DM?$DM?5USB?4DrvName2DevDesc?0?5GetDevN@
CONST	SEGMENT
??_C@_0CO@BAPAALJK@?$DM?$DM?5USB?4DrvName2DevDesc?0?5GetDevN@ DB '<< USB.'
	DB	'DrvName2DevDesc, GetDevNodeRegProps %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GGDOIMOO@?$DM?$DM?5USB?4DrvName2DevDesc?0?5ret?5?$CFs@
CONST	SEGMENT
??_C@_0BP@GGDOIMOO@?$DM?$DM?5USB?4DrvName2DevDesc?0?5ret?5?$CFs@ DB '<< U'
	DB	'SB.DrvName2DevDesc, ret %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PHHANNLH@?$DM?$DM?5USB?4DrvName2DevDesc?0?5LocateD@
CONST	SEGMENT
??_C@_0CJ@PHHANNLH@?$DM?$DM?5USB?4DrvName2DevDesc?0?5LocateD@ DB '<< USB.'
	DB	'DrvName2DevDesc, LocateDevNote %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KMJAGKHH@?$DO?$DO?5USB?4DrvName2DevDesc?0?5Drv?5?$CFs@
CONST	SEGMENT
??_C@_0BP@KMJAGKHH@?$DO?$DO?5USB?4DrvName2DevDesc?0?5Drv?5?$CFs@ DB '>> U'
	DB	'SB.DrvName2DevDesc, Drv %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMILCJOE@?$DM?$DM?5USB?4EnumHubPorts@
CONST	SEGMENT
??_C@_0BE@LMILCJOE@?$DM?$DM?5USB?4EnumHubPorts@ DB '<< USB.EnumHubPorts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDOCAJNK@?$CFs?$CFs@
CONST	SEGMENT
??_C@_04HDOCAJNK@?$CFs?$CFs@ DB '%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DIJPEION@?$CFs?$CFs?$CFs@
CONST	SEGMENT
??_C@_06DIJPEION@?$CFs?$CFs?$CFs@ DB '%s%s%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CFCBFJND@Not?5Found@
CONST	SEGMENT
??_C@_09CFCBFJND@Not?5Found@ DB 'Not Found', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGBIAJFO@Not?5Initialized@
CONST	SEGMENT
??_C@_0BA@CGBIAJFO@Not?5Initialized@ DB 'Not Initialized', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LGIDNAEF@?$CFs?5?$FLVID?3?$CF?44X?5PID?3?$CF?44X?5SN?3?$CFs?5Spd@
CONST	SEGMENT
??_C@_0CF@LGIDNAEF@?$CFs?5?$FLVID?3?$CF?44X?5PID?3?$CF?44X?5SN?3?$CFs?5Spd@ DB '%'
	DB	's [VID:%.4X PID:%.4X SN:%s Spd: %s]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04DHPBCODG@FULL@
CONST	SEGMENT
??_C@_04DHPBCODG@FULL@ DB 'FULL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IBEFMGAI@LOW@
CONST	SEGMENT
??_C@_03IBEFMGAI@LOW@ DB 'LOW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PKDHFCJF@HIGH@
CONST	SEGMENT
??_C@_04PKDHFCJF@HIGH@ DB 'HIGH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KFNJHJLN@?$FLPort?$CFlu?$FN?5@
CONST	SEGMENT
??_C@_0L@KFNJHJLN@?$FLPort?$CFlu?$FN?5@ DB '[Port%lu] ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCPBMLDJ@?5?3?5@
CONST	SEGMENT
??_C@_03MCPBMLDJ@?5?3?5@ DB ' : ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DMKPCFDB@?$CFs?$FLPort?$CFlu?$FN?5@
CONST	SEGMENT
??_C@_0N@DMKPCFDB@?$CFs?$FLPort?$CFlu?$FN?5@ DB '%s[Port%lu] ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EKAJALEI@?9?9?5USB?4EnumHubPorts?0?5new?5Port?5?$CF@
CONST	SEGMENT
??_C@_0DE@EKAJALEI@?9?9?5USB?4EnumHubPorts?0?5new?5Port?5?$CF@ DB '-- USB'
	DB	'.EnumHubPorts, new Port %d ConnInfo (%u) null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CPBFJJJ@?$DO?$DO?5USB?4EnumHubPorts@
CONST	SEGMENT
??_C@_0BE@CPBFJJJ@?$DO?$DO?5USB?4EnumHubPorts@ DB '>> USB.EnumHubPorts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IMMCIHAH@?$DM?$DM?5USB?4GetExternHub?0?5HubName?5?$CFs@
CONST	SEGMENT
??_C@_0CA@IMMCIHAH@?$DM?$DM?5USB?4GetExternHub?0?5HubName?5?$CFs@ DB '<< '
	DB	'USB.GetExternHub, HubName %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HJNGPFIB@?9?9?5USB?4GetExtHubName?0?5new?5extHu@
CONST	SEGMENT
??_C@_0DA@HJNGPFIB@?9?9?5USB?4GetExtHubName?0?5new?5extHu@ DB '-- USB.Get'
	DB	'ExtHubName, new extHubNameW (%u) null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BDIOPGJF@?$DO?$DO?5USB?4GetExternHub@
CONST	SEGMENT
??_C@_0BE@BDIOPGJF@?$DO?$DO?5USB?4GetExternHub@ DB '>> USB.GetExternHub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PGCNCFEB@?$DM?$DM?5USB?4GetDrvKeyName?0?5AName?5?$CFs@
CONST	SEGMENT
??_C@_0BP@PGCNCFEB@?$DM?$DM?5USB?4GetDrvKeyName?0?5AName?5?$CFs@ DB '<< U'
	DB	'SB.GetDrvKeyName, AName %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OGKODAJE@?9?9?5USB?4GetDriverKeyName?0?5new?5Ke@
CONST	SEGMENT
??_C@_0DA@OGKODAJE@?9?9?5USB?4GetDriverKeyName?0?5new?5Ke@ DB '-- USB.Get'
	DB	'DriverKeyName, new KeyNameW (%u) null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GLJHIDAC@?$DO?$DO?5USB?4GetDrvKeyName@
CONST	SEGMENT
??_C@_0BF@GLJHIDAC@?$DO?$DO?5USB?4GetDrvKeyName@ DB '>> USB.GetDrvKeyName'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNLDFNAC@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@
CONST	SEGMENT
??_C@_0CJ@JNLDFNAC@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@ DB '<< USB.'
	DB	'GetAllStrDescs, SuppLangsStr 0x%p', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HBMGBPGH@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@
CONST	SEGMENT
??_C@_0CJ@HBMGBPGH@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@ DB '<< USB.'
	DB	'GetAllStrDescs, SuppLangsStr null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PLIGAJPI@?$DO?$DO?5USB?4GetAllStrDescs@
CONST	SEGMENT
??_C@_0BG@PLIGAJPI@?$DO?$DO?5USB?4GetAllStrDescs@ DB '>> USB.GetAllStrDes'
	DB	'cs', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JFAJNON@?$DM?$DM?5USB?4AreThrStrDesc?0?5Ret?5False@
CONST	SEGMENT
??_C@_0CA@JFAJNON@?$DM?$DM?5USB?4AreThrStrDesc?0?5Ret?5False@ DB '<< USB.'
	DB	'AreThrStrDesc, Ret False', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NAENOJMA@?$DM?$DM?5USB?4AreThrStrDesc?0?5Interface@
CONST	SEGMENT
??_C@_0CD@NAENOJMA@?$DM?$DM?5USB?4AreThrStrDesc?0?5Interface@ DB '<< USB.'
	DB	'AreThrStrDesc, Interface %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DEJJKGAD@?$DM?$DM?5USB?4AreThrStrDesc?0?5Cfg?5?$CFd@
CONST	SEGMENT
??_C@_0BN@DEJJKGAD@?$DM?$DM?5USB?4AreThrStrDesc?0?5Cfg?5?$CFd@ DB '<< USB'
	DB	'.AreThrStrDesc, Cfg %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KIEGOLFL@?$DM?$DM?5USB?4AreThrStrDesc?0?5Manufact?5@
CONST	SEGMENT
??_C@_0DC@KIEGOLFL@?$DM?$DM?5USB?4AreThrStrDesc?0?5Manufact?5@ DB '<< USB'
	DB	'.AreThrStrDesc, Manufact %d, Prod %d, SN %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IPAKKGGO@?$DO?$DO?5USB?4AreThrStrDesc@
CONST	SEGMENT
??_C@_0BF@IPAKKGGO@?$DO?$DO?5USB?4AreThrStrDesc@ DB '>> USB.AreThrStrDesc'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LADAJLND@?$DM?$DM?5USB?4GetStrDesc?0?5DescNode?50x?$CF@
CONST	SEGMENT
??_C@_0CB@LADAJLND@?$DM?$DM?5USB?4GetStrDesc?0?5DescNode?50x?$CF@ DB '<< '
	DB	'USB.GetStrDesc, DescNode 0x%p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NJJDPDGO@?9?9?5USB?4GetStrDesc?0?5WideCharToMu@
CONST	SEGMENT
??_C@_0CK@NJJDPDGO@?9?9?5USB?4GetStrDesc?0?5WideCharToMu@ DB '-- USB.GetS'
	DB	'trDesc, WideCharToMultiByte %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BKJLPKEL@?$DM?$DM?5USB?4GetStrDesc?0?5new?5DescNode@
CONST	SEGMENT
??_C@_0CF@BKJLPKEL@?$DM?$DM?5USB?4GetStrDesc?0?5new?5DescNode@ DB '<< USB'
	DB	'.GetStrDesc, new DescNode null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ILBIFDNN@?$DM?$DM?5USB?4GetStrDesc?0?5Odd?5Sz?5?$CFd@
CONST	SEGMENT
??_C@_0BN@ILBIFDNN@?$DM?$DM?5USB?4GetStrDesc?0?5Odd?5Sz?5?$CFd@ DB '<< US'
	DB	'B.GetStrDesc, Odd Sz %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CHKNKAPD@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Sz?5?$CFd?5?$DM?$DO@
CONST	SEGMENT
??_C@_0CD@CHKNKAPD@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Sz?5?$CFd?5?$DM?$DO@ DB '<'
	DB	'< USB.GetStrDesc, Inv Sz %d <> %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@ELGGMNKC@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Descript@
CONST	SEGMENT
??_C@_0CH@ELGGMNKC@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Descript@ DB '<< USB'
	DB	'.GetStrDesc, Inv DescriptorTp %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JKPBCDKN@?$DM?$DM?5USB?4GetStrDesc?0?5Bytes?5Ret?5?$CFu@
CONST	SEGMENT
??_C@_0CA@JKPBCDKN@?$DM?$DM?5USB?4GetStrDesc?0?5Bytes?5Ret?5?$CFu@ DB '<<'
	DB	' USB.GetStrDesc, Bytes Ret %u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MLNPNNOJ@?$DM?$DM?5USB?4GetStrDesc?0?5DeviceIoCont@
CONST	SEGMENT
??_C@_0CJ@MLNPNNOJ@?$DM?$DM?5USB?4GetStrDesc?0?5DeviceIoCont@ DB '<< USB.'
	DB	'GetStrDesc, DeviceIoControl False', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OBKJMAF@?$DO?$DO?5USB?4GetStrDesc@
CONST	SEGMENT
??_C@_0BC@OBKJMAF@?$DO?$DO?5USB?4GetStrDesc@ DB '>> USB.GetStrDesc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GOKCLIBE@?$DM?$DM?5USB?4DevsDets@
CONST	SEGMENT
??_C@_0BA@GOKCLIBE@?$DM?$DM?5USB?4DevsDets@ DB '<< USB.DevsDets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HNIJLKOP@USB?5Device?5Details@
CONST	SEGMENT
??_C@_0BD@HNIJLKOP@USB?5Device?5Details@ DB 'USB Device Details', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBIECMOG@?$DO?$DO?5USB?4DevsDets@
CONST	SEGMENT
??_C@_0BA@EBIECMOG@?$DO?$DO?5USB?4DevsDets@ DB '>> USB.DevsDets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NGAEOEJF@?$DM?$DM?5USB?4EnumUSB@
CONST	SEGMENT
??_C@_0P@NGAEOEJF@?$DM?$DM?5USB?4EnumUSB@ DB '<< USB.EnumUSB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FOIGIFIJ@Total?5Devices?5Connected?5?$CFu@
CONST	SEGMENT
??_C@_0BL@FOIGIFIJ@Total?5Devices?5Connected?5?$CFu@ DB 'Total Devices Co'
	DB	'nnected %u', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07FOIBMAON@RootHub@
CONST	SEGMENT
??_C@_07FOIBMAON@RootHub@ DB 'RootHub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BEFNEIBE@RootHub?5?3?5?$CFs@
CONST	SEGMENT
??_C@_0N@BEFNEIBE@RootHub?5?3?5?$CFs@ DB 'RootHub : %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PEILPPNA@?2?2?4?2HCD?$CFd@
CONST	SEGMENT
??_C@_09PEILPPNA@?2?2?4?2HCD?$CFd@ DB '\\.\HCD%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BMIBGHPI@Enumerate?5USB@
CONST	SEGMENT
??_C@_0O@BMIBGHPI@Enumerate?5USB@ DB 'Enumerate USB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PBHEEKCL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_L@
CONST	SEGMENT
??_C@_0DA@PBHEEKCL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_L@ DB '<< USB'
	DB	'.EnumUSB, GetProcAdr CM_Locate_DevNode %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FFDOPOAJ@CM_Locate_DevNodeA@
CONST	SEGMENT
??_C@_0BD@FFDOPOAJ@CM_Locate_DevNodeA@ DB 'CM_Locate_DevNodeA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@DGDMCDGA@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
CONST	SEGMENT
??_C@_0DP@DGDMCDGA@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ DB '<< USB'
	DB	'.EnumUSB, GetProcAdr CM_Get_DevNode_Registry_Property %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NHFCMMFN@CM_Get_DevNode_Registry_Propert@
CONST	SEGMENT
??_C@_0CC@NHFCMMFN@CM_Get_DevNode_Registry_Propert@ DB 'CM_Get_DevNode_Re'
	DB	'gistry_PropertyA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@COFLNMDL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
CONST	SEGMENT
??_C@_0CL@COFLNMDL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ DB '<< USB'
	DB	'.EnumUSB, GetProcAdr CM_Get_Child %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EKPGFMC@CM_Get_Child@
CONST	SEGMENT
??_C@_0N@EKPGFMC@CM_Get_Child@ DB 'CM_Get_Child', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OFCMGBDD@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
CONST	SEGMENT
??_C@_0CN@OFCMGBDD@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ DB '<< USB'
	DB	'.EnumUSB, GetProcAdr CM_Get_Sibling %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OOIACNHP@CM_Get_Sibling@
CONST	SEGMENT
??_C@_0P@OOIACNHP@CM_Get_Sibling@ DB 'CM_Get_Sibling', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FCKDJEIO@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
CONST	SEGMENT
??_C@_0CM@FCKDJEIO@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@ DB '<< USB'
	DB	'.EnumUSB, GetProcAdr CM_Get_Parent %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CIKLALFP@CM_Get_Parent@
CONST	SEGMENT
??_C@_0O@CIKLALFP@CM_Get_Parent@ DB 'CM_Get_Parent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JNDPNFBI@?$DM?$DM?5USB?4EnumUSB?0?5LoadLib?5cfgmgr3@
CONST	SEGMENT
??_C@_0CI@JNDPNFBI@?$DM?$DM?5USB?4EnumUSB?0?5LoadLib?5cfgmgr3@ DB '<< USB'
	DB	'.EnumUSB, LoadLib cfgmgr32.dll %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JNFFEOEJ@cfgmgr32?4dll@
CONST	SEGMENT
??_C@_0N@JNFFEOEJ@cfgmgr32?4dll@ DB 'cfgmgr32.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JPOMJBKJ@?$DO?$DO?5USB?4EnumUSB@
CONST	SEGMENT
??_C@_0P@JPOMJBKJ@?$DO?$DO?5USB?4EnumUSB@ DB '>> USB.EnumUSB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CCBFPMDD@?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0L@CCBFPMDD@?5?5?5?5?5?5?5?5?5?5@ DB '          ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GGFKNFHG@?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_08GGFKNFHG@?5?5?5?5?5?5?5?5@ DB '        ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GGLIPOFD@?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_06GGLIPOFD@?5?5?5?5?5?5@ DB '      ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFOHOKJK@?5?5?5?5@
CONST	SEGMENT
??_C@_04PFOHOKJK@?5?5?5?5@ DB '    ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KNHHEEKP@?5?5@
CONST	SEGMENT
??_C@_02KNHHEEKP@?5?5@ DB '  ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BOFHLGPH@DeviceInLegacyHub@
CONST	SEGMENT
??_C@_0BC@BOFHLGPH@DeviceInLegacyHub@ DB 'DeviceInLegacyHub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHELPMAC@DeviceHubNestedTooDeeply@
CONST	SEGMENT
??_C@_0BJ@CHELPMAC@DeviceHubNestedTooDeeply@ DB 'DeviceHubNestedTooDeeply'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DBBHPJJC@DeviceNotEnoughBandwidth@
CONST	SEGMENT
??_C@_0BJ@DBBHPJJC@DeviceNotEnoughBandwidth@ DB 'DeviceNotEnoughBandwidth'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCIAFGBC@DeviceNotEnoughPower@
CONST	SEGMENT
??_C@_0BF@KCIAFGBC@DeviceNotEnoughPower@ DB 'DeviceNotEnoughPower', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FHCONGJI@DeviceCausedOvercurrent@
CONST	SEGMENT
??_C@_0BI@FHCONGJI@DeviceCausedOvercurrent@ DB 'DeviceCausedOvercurrent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FIJIOADB@DeviceGeneralFailure@
CONST	SEGMENT
??_C@_0BF@FIJIOADB@DeviceGeneralFailure@ DB 'DeviceGeneralFailure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKBNFKJE@DeviceFailedEnumeration@
CONST	SEGMENT
??_C@_0BI@LKBNFKJE@DeviceFailedEnumeration@ DB 'DeviceFailedEnumeration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LIPCCNEI@DeviceConnected@
CONST	SEGMENT
??_C@_0BA@LIPCCNEI@DeviceConnected@ DB 'DeviceConnected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CFJFKPGC@NoDeviceConnected@
CONST	SEGMENT
??_C@_0BC@CFJFKPGC@NoDeviceConnected@ DB 'NoDeviceConnected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
CONST	SEGMENT
??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@ DB '-- USB.PushBackD'
	DB	'ets, %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
?UsbViewIndent@@3PAPADA DD FLAT:??_C@_00CNPNBAHC@@	; UsbViewIndent
	DD	FLAT:??_C@_02KNHHEEKP@?5?5@
	DD	FLAT:??_C@_04PFOHOKJK@?5?5?5?5@
	DD	FLAT:??_C@_06GGLIPOFD@?5?5?5?5?5?5@
	DD	FLAT:??_C@_08GGFKNFHG@?5?5?5?5?5?5?5?5@
	DD	FLAT:??_C@_0L@CCBFPMDD@?5?5?5?5?5?5?5?5?5?5@
	ORG $+8
?ConnectionStatuses@@3PAPADA DD FLAT:??_C@_0BC@CFJFKPGC@NoDeviceConnected@ ; ConnectionStatuses
	DD	FLAT:??_C@_0BA@LIPCCNEI@DeviceConnected@
	DD	FLAT:??_C@_0BI@LKBNFKJE@DeviceFailedEnumeration@
	DD	FLAT:??_C@_0BF@FIJIOADB@DeviceGeneralFailure@
	DD	FLAT:??_C@_0BI@FHCONGJI@DeviceCausedOvercurrent@
	DD	FLAT:??_C@_0BF@KCIAFGBC@DeviceNotEnoughPower@
	DD	FLAT:??_C@_0BJ@DBBHPJJC@DeviceNotEnoughBandwidth@
	DD	FLAT:??_C@_0BJ@CHELPMAC@DeviceHubNestedTooDeeply@
	DD	FLAT:??_C@_0BC@BOFHLGPH@DeviceInLegacyHub@
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
PUBLIC	?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z ; USB::UnknownDescriptor
PUBLIC	?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::StringDescriptor
PUBLIC	?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z ; USB::HidDescriptor
PUBLIC	?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z ; USB::EndpointDescriptor
PUBLIC	?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::InterfaceDescriptor
PUBLIC	?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::ConfigurationDescriptor
PUBLIC	?ConfigDesc@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::ConfigDesc
PUBLIC	?PipeInfo@USB@@IAEXKPAU_USB_PIPE_INFO@@@Z	; USB::PipeInfo
PUBLIC	?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::ConnectionInfo
PUBLIC	?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z	; USB::HubInfo
PUBLIC	?GetConfigDescriptor@USB@@IAEPAU_USB_DESCRIPTOR_REQUEST@@PAXKE@Z ; USB::GetConfigDescriptor
PUBLIC	?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z ; USB::GetStringDescriptors
PUBLIC	?GetHCDDriverKeyName@USB@@IAEPADPAX@Z		; USB::GetHCDDriverKeyName
PUBLIC	?GetRootHubName@USB@@IAEPADPAX@Z		; USB::GetRootHubName
PUBLIC	?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z ; USB::EnumerateHub
PUBLIC	?DriverNameToDeviceDesc@USB@@IAEPADPAD@Z	; USB::DriverNameToDeviceDesc
PUBLIC	?EnumerateHubPorts@USB@@IAEXPAXK@Z		; USB::EnumerateHubPorts
PUBLIC	?GetExternalHubName@USB@@IAEPADPAXK@Z		; USB::GetExternalHubName
PUBLIC	?GetDriverKeyName@USB@@IAEPADPAXK@Z		; USB::GetDriverKeyName
PUBLIC	?GetAllStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z ; USB::GetAllStringDescriptors
PUBLIC	?AreThereStringDescriptors@USB@@IAEHPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z ; USB::AreThereStringDescriptors
PUBLIC	?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z ; USB::GetStringDescriptor
PUBLIC	?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
PUBLIC	?USBDevicesDetails@USB@@QAEXXZ			; USB::USBDevicesDetails
PUBLIC	?EnumerateUSB@USB@@QAEXXZ			; USB::EnumerateUSB
__ehfuncinfo$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$4
__ehfuncinfo$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z$0
__ehfuncinfo$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$4
__ehfuncinfo$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$10
__ehfuncinfo$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$8
__unwindtable$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$6
__ehfuncinfo$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z DD 019930522H
	DD	016H
	DD	FLAT:__unwindtable$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__ehfuncinfo$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$16
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$18
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$19
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$20
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$21
__unwindtable$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$9
__ehfuncinfo$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z$0
__ehfuncinfo$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z$1
__ehfuncinfo$?EnumerateHubPorts@USB@@IAEXPAXK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?EnumerateHubPorts@USB@@IAEXPAXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?EnumerateHubPorts@USB@@IAEXPAXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateHubPorts@USB@@IAEXPAXK@Z$0
__ehfuncinfo$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z$0
__ehfuncinfo$?EnumerateUSB@USB@@QAEXXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?EnumerateUSB@USB@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?EnumerateUSB@USB@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$5
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_tickStart$2$ = -76					; size = 4
_tickStart$1$ = -72					; size = 4
_hPnpDll$1$ = -68					; size = 4
_driverKeyName$1$ = -64					; size = 4
_this$GSCopy$1$ = -60					; size = 4
$T2 = -56						; size = 24
$T3 = -56						; size = 24
$T4 = -56						; size = 24
$T5 = -56						; size = 24
$T6 = -56						; size = 24
$T7 = -56						; size = 24
_HCName$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?EnumerateUSB@USB@@QAEXXZ PROC				; USB::EnumerateUSB
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?EnumerateUSB@USB@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
  0002d	89 75 c4	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi

; 58   :     char        HCName[16];
; 59   :     int         HCNum = 0;
; 60   :     PCHAR       rootHubName = NULL;
; 61   :     PCHAR       leafName = NULL;
; 62   : 
; 63   :     uint64_t tickStart = SysTick();

  00030	e8 00 00 00 00	 call	 ?SysTick@@YA_KXZ	; SysTick

; 64   : 
; 65   :     Log(LOG_DEBUG, __LINE__, ">> USB.EnumUSB");

  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JPOMJBKJ@?$DO?$DO?5USB?4EnumUSB@
  0003a	6a 41		 push	 65			; 00000041H
  0003c	6a 10		 push	 16			; 00000010H
  0003e	89 45 b4	 mov	 DWORD PTR _tickStart$2$[ebp], eax
  00041	89 55 b8	 mov	 DWORD PTR _tickStart$1$[ebp], edx
  00044	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 66   : 
; 67   :     ulTotalDevicesConnected = 0;
; 68   :     wPortsNumber = 0;

  00049	33 c0		 xor	 eax, eax
  0004b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 69   :     NestedLevel = 0;
; 70   :     memset(buf, 0x00, sizeof(buf));

  00052	68 00 02 00 00	 push	 512			; 00000200H
  00057	50		 push	 eax
  00058	66 89 06	 mov	 WORD PTR [esi], ax
  0005b	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0005e	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 _memset
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1849 : 		_Destroy_range(_First, _Last, this->_Getal());

  00067	8b 96 10 02 00
	00		 mov	 edx, DWORD PTR [esi+528]
  0006d	83 c4 14	 add	 esp, 20			; 00000014H
  00070	8b 8e 0c 02 00
	00		 mov	 ecx, DWORD PTR [esi+524]
  00076	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1592 : 		this->_Mylast() = this->_Myfirst();

  0007b	8b 86 0c 02 00
	00		 mov	 eax, DWORD PTR [esi+524]

; 1849 : 		_Destroy_range(_First, _Last, this->_Getal());

  00081	83 c4 04	 add	 esp, 4

; 1592 : 		this->_Mylast() = this->_Myfirst();

  00084	89 86 10 02 00
	00		 mov	 DWORD PTR [esi+528], eax
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 74   :     lpfnCM_Get_Parent = NULL;

  0008a	c7 86 18 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+536], 0

; 75   :     lpfnCM_Get_Sibling = NULL;

  00094	c7 86 1c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+540], 0

; 76   :     lpfnCM_Get_Child = NULL;
; 77   :     lpfnCM_Get_DevNode_Registry_PropertyA = NULL;
; 78   :     lpfnCM_Locate_DevNodeA = NULL;
; 79   : 
; 80   :     HMODULE hPnpDll = LoadLibrary("cfgmgr32.dll");

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JNFFEOEJ@cfgmgr32?4dll@
  000a3	c7 86 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+544], 0
  000ad	c7 86 24 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+548], 0
  000b7	c7 86 28 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+552], 0
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryA@4
  000c7	8b d8		 mov	 ebx, eax
  000c9	89 5d bc	 mov	 DWORD PTR _hPnpDll$1$[ebp], ebx

; 81   :     if (hPnpDll == NULL)

  000cc	85 db		 test	 ebx, ebx
  000ce	75 7f		 jne	 SHORT $LN5@EnumerateU

; 83   :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, LoadLib cfgmgr32.dll %s", GetLastErrorMessage(GetLastError()).c_str());

  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000d6	8b d0		 mov	 edx, eax
  000d8	8d 4d c8	 lea	 ecx, DWORD PTR $T7[ebp]
  000db	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  000e0	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000e3	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  000e7	72 02		 jb	 SHORT $LN69@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  000e9	8b 00		 mov	 eax, DWORD PTR [eax]
$LN69@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 83   :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, LoadLib cfgmgr32.dll %s", GetLastErrorMessage(GetLastError()).c_str());

  000eb	50		 push	 eax
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@JNDPNFBI@?$DM?$DM?5USB?4EnumUSB?0?5LoadLib?5cfgmgr3@
  000f1	6a 53		 push	 83			; 00000053H
  000f3	6a 10		 push	 16			; 00000010H
  000f5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000fa	83 c4 10	 add	 esp, 16			; 00000010H
  000fd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00104	8b 55 dc	 mov	 edx, DWORD PTR $T7[ebp+20]
  00107	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0010a	72 2c		 jb	 SHORT $LN117@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010c	8b 4d c8	 mov	 ecx, DWORD PTR $T7[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0010f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00110	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00112	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00118	72 14		 jb	 SHORT $LN116@EnumerateU

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0011a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0011d	83 c2 23	 add	 edx, 35			; 00000023H
  00120	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00122	83 c0 fc	 add	 eax, -4			; fffffffcH
  00125	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00128	0f 87 e5 03 00
	00		 ja	 $LN496@EnumerateU
$LN116@EnumerateU:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0012e	52		 push	 edx
  0012f	51		 push	 ecx
  00130	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00135	83 c4 08	 add	 esp, 8
$LN117@EnumerateU:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00138	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0013f	c7 45 dc 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00146	c6 45 c8 00	 mov	 BYTE PTR $T7[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 84   :         return;

  0014a	e9 a8 03 00 00	 jmp	 $LN1@EnumerateU
$LN5@EnumerateU:

; 85   :     }
; 86   : 
; 87   :     if ((lpfnCM_Get_Parent = (CMGETPARENT)GetProcAddress(hPnpDll, "CM_Get_Parent")) == NULL)

  0014f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetProcAddress@8
  00155	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CIKLALFP@CM_Get_Parent@
  0015a	53		 push	 ebx
  0015b	ff d7		 call	 edi
  0015d	89 86 18 02 00
	00		 mov	 DWORD PTR [esi+536], eax
  00163	85 c0		 test	 eax, eax
  00165	0f 85 8a 00 00
	00		 jne	 $LN6@EnumerateU

; 89   :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_Parent %s", GetLastErrorMessage(GetLastError()).c_str());

  0016b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00171	8b d0		 mov	 edx, eax
  00173	8d 4d c8	 lea	 ecx, DWORD PTR $T6[ebp]
  00176	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  0017b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00182	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00186	72 02		 jb	 SHORT $LN139@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  00188	8b 00		 mov	 eax, DWORD PTR [eax]
$LN139@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 89   :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_Parent %s", GetLastErrorMessage(GetLastError()).c_str());

  0018a	50		 push	 eax
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@FCKDJEIO@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
  00190	6a 59		 push	 89			; 00000059H
  00192	6a 10		 push	 16			; 00000010H
  00194	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00199	83 c4 10	 add	 esp, 16			; 00000010H
  0019c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  001a3	8b 55 dc	 mov	 edx, DWORD PTR $T6[ebp+20]
  001a6	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  001a9	72 2c		 jb	 SHORT $LN187@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001ab	8b 4d c8	 mov	 ecx, DWORD PTR $T6[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  001ae	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001af	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  001b1	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001b7	72 14		 jb	 SHORT $LN186@EnumerateU

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  001b9	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001bc	83 c2 23	 add	 edx, 35			; 00000023H
  001bf	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001c1	83 c0 fc	 add	 eax, -4			; fffffffcH
  001c4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001c7	0f 87 4b 03 00
	00		 ja	 $LN497@EnumerateU
$LN186@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 183  : }

  001cd	52		 push	 edx
  001ce	51		 push	 ecx
  001cf	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001d4	83 c4 08	 add	 esp, 8
$LN187@EnumerateU:
  001d7	53		 push	 ebx
  001d8	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0
  001df	c7 45 dc 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
  001e6	c6 45 c8 00	 mov	 BYTE PTR $T6[ebp], 0
  001ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
  001f0	e9 02 03 00 00	 jmp	 $LN1@EnumerateU
$LN6@EnumerateU:

; 90   :         FreeLibrary(hPnpDll);
; 91   :         return;
; 92   :     }
; 93   : 
; 94   :     if ((lpfnCM_Get_Sibling = (CMGETSIBLING)GetProcAddress(hPnpDll, "CM_Get_Sibling")) == NULL)

  001f5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OOIACNHP@CM_Get_Sibling@
  001fa	53		 push	 ebx
  001fb	ff d7		 call	 edi
  001fd	89 86 1c 02 00
	00		 mov	 DWORD PTR [esi+540], eax
  00203	85 c0		 test	 eax, eax
  00205	75 6b		 jne	 SHORT $LN7@EnumerateU

; 96   :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_Sibling %s", GetLastErrorMessage(GetLastError()).c_str());

  00207	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0020d	8b d0		 mov	 edx, eax
  0020f	8d 4d c8	 lea	 ecx, DWORD PTR $T5[ebp]
  00212	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  00217	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0021e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00222	72 02		 jb	 SHORT $LN208@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  00224	8b 00		 mov	 eax, DWORD PTR [eax]
$LN208@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 96   :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_Sibling %s", GetLastErrorMessage(GetLastError()).c_str());

  00226	50		 push	 eax
  00227	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@OFCMGBDD@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
  0022c	6a 60		 push	 96			; 00000060H
  0022e	6a 10		 push	 16			; 00000010H
  00230	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00235	83 c4 10	 add	 esp, 16			; 00000010H
  00238	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0023f	8b 55 dc	 mov	 edx, DWORD PTR $T5[ebp+20]
  00242	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00245	72 90		 jb	 SHORT $LN187@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00247	8b 4d c8	 mov	 ecx, DWORD PTR $T5[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0024a	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0024b	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0024d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00253	0f 82 74 ff ff
	ff		 jb	 $LN186@EnumerateU

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00259	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0025c	83 c2 23	 add	 edx, 35			; 00000023H
  0025f	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00261	83 c0 fc	 add	 eax, -4			; fffffffcH
  00264	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00267	0f 87 b0 02 00
	00		 ja	 $LN498@EnumerateU
  0026d	e9 5b ff ff ff	 jmp	 $LN186@EnumerateU
$LN7@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 101  :     if ((lpfnCM_Get_Child = (CMGETCHILD)GetProcAddress(hPnpDll, "CM_Get_Child")) == NULL)

  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EKPGFMC@CM_Get_Child@
  00277	53		 push	 ebx
  00278	ff d7		 call	 edi
  0027a	89 86 20 02 00
	00		 mov	 DWORD PTR [esi+544], eax
  00280	85 c0		 test	 eax, eax
  00282	75 6f		 jne	 SHORT $LN8@EnumerateU

; 103  :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_Child %s", GetLastErrorMessage(GetLastError()).c_str());

  00284	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0028a	8b d0		 mov	 edx, eax
  0028c	8d 4d c8	 lea	 ecx, DWORD PTR $T4[ebp]
  0028f	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  00294	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0029b	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  0029f	72 02		 jb	 SHORT $LN277@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  002a1	8b 00		 mov	 eax, DWORD PTR [eax]
$LN277@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 103  :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_Child %s", GetLastErrorMessage(GetLastError()).c_str());

  002a3	50		 push	 eax
  002a4	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@COFLNMDL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
  002a9	6a 67		 push	 103			; 00000067H
  002ab	6a 10		 push	 16			; 00000010H
  002ad	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002b2	83 c4 10	 add	 esp, 16			; 00000010H
  002b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  002bc	8b 55 dc	 mov	 edx, DWORD PTR $T4[ebp+20]
  002bf	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  002c2	0f 82 0f ff ff
	ff		 jb	 $LN187@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002c8	8b 4d c8	 mov	 ecx, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  002cb	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002cc	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  002ce	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002d4	0f 82 f3 fe ff
	ff		 jb	 $LN186@EnumerateU

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  002da	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002dd	83 c2 23	 add	 edx, 35			; 00000023H
  002e0	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002e2	83 c0 fc	 add	 eax, -4			; fffffffcH
  002e5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002e8	0f 87 34 02 00
	00		 ja	 $LN499@EnumerateU
  002ee	e9 da fe ff ff	 jmp	 $LN186@EnumerateU
$LN8@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 108  :     if ((lpfnCM_Get_DevNode_Registry_PropertyA = (CMGETDEVNODEREGISTRYPROPERTYA)GetProcAddress(hPnpDll, "CM_Get_DevNode_Registry_PropertyA")) == NULL)

  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@NHFCMMFN@CM_Get_DevNode_Registry_Propert@
  002f8	53		 push	 ebx
  002f9	ff d7		 call	 edi
  002fb	89 86 24 02 00
	00		 mov	 DWORD PTR [esi+548], eax
  00301	85 c0		 test	 eax, eax
  00303	75 6f		 jne	 SHORT $LN9@EnumerateU

; 110  :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_DevNode_Registry_Property %s", GetLastErrorMessage(GetLastError()).c_str());

  00305	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0030b	8b d0		 mov	 edx, eax
  0030d	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00310	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  00315	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0031c	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00320	72 02		 jb	 SHORT $LN346@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  00322	8b 00		 mov	 eax, DWORD PTR [eax]
$LN346@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 110  :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Get_DevNode_Registry_Property %s", GetLastErrorMessage(GetLastError()).c_str());

  00324	50		 push	 eax
  00325	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@DGDMCDGA@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_G@
  0032a	6a 6e		 push	 110			; 0000006eH
  0032c	6a 10		 push	 16			; 00000010H
  0032e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00333	83 c4 10	 add	 esp, 16			; 00000010H
  00336	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0033d	8b 55 dc	 mov	 edx, DWORD PTR $T3[ebp+20]
  00340	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00343	0f 82 8e fe ff
	ff		 jb	 $LN187@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00349	8b 4d c8	 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0034c	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0034d	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0034f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00355	0f 82 72 fe ff
	ff		 jb	 $LN186@EnumerateU

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0035b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0035e	83 c2 23	 add	 edx, 35			; 00000023H
  00361	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00363	83 c0 fc	 add	 eax, -4			; fffffffcH
  00366	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00369	0f 87 b8 01 00
	00		 ja	 $LN500@EnumerateU
  0036f	e9 59 fe ff ff	 jmp	 $LN186@EnumerateU
$LN9@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 115  :     if ((lpfnCM_Locate_DevNodeA = (CMLOCATEDEVNODEA)GetProcAddress(hPnpDll, "CM_Locate_DevNodeA")) == NULL)

  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FFDOPOAJ@CM_Locate_DevNodeA@
  00379	53		 push	 ebx
  0037a	ff d7		 call	 edi
  0037c	89 86 28 02 00
	00		 mov	 DWORD PTR [esi+552], eax
  00382	85 c0		 test	 eax, eax
  00384	75 6f		 jne	 SHORT $LN10@EnumerateU

; 117  :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Locate_DevNode %s", GetLastErrorMessage(GetLastError()).c_str());

  00386	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0038c	8b d0		 mov	 edx, eax
  0038e	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  00391	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  00396	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0039d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  003a1	72 02		 jb	 SHORT $LN415@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  003a3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN415@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 117  :         Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB, GetProcAdr CM_Locate_DevNode %s", GetLastErrorMessage(GetLastError()).c_str());

  003a5	50		 push	 eax
  003a6	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@PBHEEKCL@?$DM?$DM?5USB?4EnumUSB?0?5GetProcAdr?5CM_L@
  003ab	6a 75		 push	 117			; 00000075H
  003ad	6a 10		 push	 16			; 00000010H
  003af	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003b4	83 c4 10	 add	 esp, 16			; 00000010H
  003b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  003be	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  003c1	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  003c4	0f 82 0d fe ff
	ff		 jb	 $LN187@EnumerateU
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003ca	8b 4d c8	 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  003cd	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003ce	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  003d0	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  003d6	0f 82 f1 fd ff
	ff		 jb	 $LN186@EnumerateU

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  003dc	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  003df	83 c2 23	 add	 edx, 35			; 00000023H
  003e2	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003e4	83 c0 fc	 add	 eax, -4			; fffffffcH
  003e7	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003ea	0f 87 3c 01 00
	00		 ja	 $LN501@EnumerateU
  003f0	e9 d8 fd ff ff	 jmp	 $LN186@EnumerateU
$LN10@EnumerateU:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 122  :     Log(LOG_HEADER, __LINE__, "Enumerate USB");

  003f5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BMIBGHPI@Enumerate?5USB@
  003fa	6a 7a		 push	 122			; 0000007aH
  003fc	6a 02		 push	 2
  003fe	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00403	83 c4 0c	 add	 esp, 12			; 0000000cH
  00406	33 db		 xor	 ebx, ebx
  00408	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@EnumerateU:

; 127  :     {
; 128  :         sprintf(HCName, "\\\\.\\HCD%d", HCNum);

  00410	53		 push	 ebx
  00411	8d 45 e0	 lea	 eax, DWORD PTR _HCName$[ebp]
  00414	68 00 00 00 00	 push	 OFFSET ??_C@_09PEILPPNA@?2?2?4?2HCD?$CFd@
  00419	50		 push	 eax
  0041a	e8 00 00 00 00	 call	 _sprintf
  0041f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 129  : 
; 130  :         HANDLE hHCDev = CreateFile(HCName,

  00422	8d 45 e0	 lea	 eax, DWORD PTR _HCName$[ebp]
  00425	6a 00		 push	 0
  00427	6a 00		 push	 0
  00429	6a 03		 push	 3
  0042b	6a 00		 push	 0
  0042d	6a 02		 push	 2
  0042f	68 00 00 00 40	 push	 1073741824		; 40000000H
  00434	50		 push	 eax
  00435	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  0043b	8b f8		 mov	 edi, eax

; 131  :             GENERIC_WRITE,
; 132  :             FILE_SHARE_WRITE,
; 133  :             NULL,
; 134  :             OPEN_EXISTING,
; 135  :             0,
; 136  :             NULL);
; 137  : 
; 138  :         // If the handle is valid, then we've successfully opened a Host
; 139  :         // Controller.  Display some info about the Host Controller itself,
; 140  :         // then enumerate the Root Hub attached to the Host Controller.
; 141  :         //
; 142  :         if (hHCDev != INVALID_HANDLE_VALUE)

  0043d	83 ff ff	 cmp	 edi, -1
  00440	74 65		 je	 SHORT $LN2@EnumerateU

; 143  :         {
; 144  :             PCHAR driverKeyName = GetHCDDriverKeyName(hHCDev);

  00442	57		 push	 edi
  00443	e8 00 00 00 00	 call	 ?GetHCDDriverKeyName@USB@@IAEPADPAX@Z ; USB::GetHCDDriverKeyName
  00448	89 45 c0	 mov	 DWORD PTR _driverKeyName$1$[ebp], eax

; 145  : 
; 146  :             leafName = HCName + sizeof("\\\\.\\") - sizeof("");

  0044b	8d 75 e4	 lea	 esi, DWORD PTR _HCName$[ebp+4]

; 147  : 
; 148  :             if (driverKeyName)

  0044e	85 c0		 test	 eax, eax
  00450	74 19		 je	 SHORT $LN12@EnumerateU

; 149  :             {
; 150  :                 PCHAR deviceDesc = DriverNameToDeviceDesc(driverKeyName);

  00452	8b 4d c4	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00455	50		 push	 eax
  00456	e8 00 00 00 00	 call	 ?DriverNameToDeviceDesc@USB@@IAEPADPAD@Z ; USB::DriverNameToDeviceDesc

; 151  : 
; 152  :                 if (deviceDesc)
; 153  :                 {
; 154  :                     leafName = deviceDesc;
; 155  :                 }
; 156  : 
; 157  :                 free(driverKeyName);

  0045b	ff 75 c0	 push	 DWORD PTR _driverKeyName$1$[ebp]
  0045e	85 c0		 test	 eax, eax
  00460	0f 45 f0	 cmovne	 esi, eax
  00463	e8 00 00 00 00	 call	 _free
  00468	83 c4 04	 add	 esp, 4
$LN12@EnumerateU:

; 158  :             }
; 159  : 
; 160  :             Log(LOG_MESSAGE, __LINE__, "RootHub : %s", leafName);

  0046b	56		 push	 esi
  0046c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BEFNEIBE@RootHub?5?3?5?$CFs@
  00471	68 a0 00 00 00	 push	 160			; 000000a0H
  00476	6a 01		 push	 1
  00478	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0047d	83 c4 10	 add	 esp, 16			; 00000010H

; 161  : 
; 162  :             rootHubName = GetRootHubName(hHCDev);

  00480	57		 push	 edi
  00481	e8 00 00 00 00	 call	 ?GetRootHubName@USB@@IAEPADPAX@Z ; USB::GetRootHubName

; 163  : 
; 164  :             if (rootHubName != NULL)

  00486	8b 75 c4	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00489	85 c0		 test	 eax, eax
  0048b	74 13		 je	 SHORT $LN14@EnumerateU

; 165  :             {
; 166  :                 EnumerateHub(rootHubName,

  0048d	68 00 00 00 00	 push	 OFFSET ??_C@_07FOIBMAON@RootHub@
  00492	6a 00		 push	 0
  00494	6a 00		 push	 0
  00496	6a 00		 push	 0
  00498	50		 push	 eax
  00499	8b ce		 mov	 ecx, esi
  0049b	e8 00 00 00 00	 call	 ?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z ; USB::EnumerateHub
$LN14@EnumerateU:

; 167  :                     NULL,      // ConnectionInfo
; 168  :                     NULL,      // ConfigDesc
; 169  :                     NULL,      // StringDescs
; 170  :                     "RootHub"  // DeviceDesc
; 171  :                 );
; 172  :             }
; 173  : 
; 174  :             CloseHandle(hHCDev);

  004a0	57		 push	 edi
  004a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN2@EnumerateU:

; 123  : 
; 124  :     // Iterate over some Host Controller names and try to open them.
; 125  :     //
; 126  :     for (HCNum = 0; HCNum < NUM_HCS_TO_CHECK; HCNum++)

  004a7	43		 inc	 ebx
  004a8	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  004ab	0f 8c 5f ff ff
	ff		 jl	 $LL4@EnumerateU

; 175  :             hHCDev = 0;
; 176  :         }
; 177  :     }
; 178  : 
; 179  :     Log(LOG_MESSAGE, __LINE__, "Total Devices Connected %u", ulTotalDevicesConnected);

  004b1	ff 76 04	 push	 DWORD PTR [esi+4]
  004b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FOIGIFIJ@Total?5Devices?5Connected?5?$CFu@
  004b9	68 b3 00 00 00	 push	 179			; 000000b3H
  004be	6a 01		 push	 1
  004c0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  004c5	83 c4 10	 add	 esp, 16			; 00000010H

; 180  :     FreeLibrary(hPnpDll);

  004c8	ff 75 bc	 push	 DWORD PTR _hPnpDll$1$[ebp]
  004cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4

; 181  :     LogElapsedTime(__LINE__, tickStart);

  004d1	ff 75 b8	 push	 DWORD PTR _tickStart$1$[ebp]
  004d4	33 d2		 xor	 edx, edx
  004d6	b9 b5 00 00 00	 mov	 ecx, 181		; 000000b5H
  004db	ff 75 b4	 push	 DWORD PTR _tickStart$2$[ebp]
  004de	e8 00 00 00 00	 call	 ?LogElapsedTime@@YAXK_KPBD@Z ; LogElapsedTime

; 182  :     Log(LOG_DEBUG, __LINE__, "<< USB.EnumUSB");

  004e3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NGAEOEJF@?$DM?$DM?5USB?4EnumUSB@
  004e8	68 b6 00 00 00	 push	 182			; 000000b6H
  004ed	6a 10		 push	 16			; 00000010H
  004ef	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  004f4	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@EnumerateU:

; 183  : }

  004f7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004fa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00501	59		 pop	 ecx
  00502	5f		 pop	 edi
  00503	5e		 pop	 esi
  00504	5b		 pop	 ebx
  00505	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00508	33 cd		 xor	 ecx, ebp
  0050a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0050f	8b e5		 mov	 esp, ebp
  00511	5d		 pop	 ebp
  00512	c3		 ret	 0
$LN496@EnumerateU:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00513	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN497@EnumerateU:
  00518	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN498@EnumerateU:
  0051d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN499@EnumerateU:
  00522	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN500@EnumerateU:
  00527	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN501@EnumerateU:
  0052c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN494@EnumerateU:
  00531	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$0:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR $T7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$2:
  00010	8d 4d c8	 lea	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$3:
  00018	8d 4d c8	 lea	 ecx, DWORD PTR $T4[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$4:
  00020	8d 4d c8	 lea	 ecx, DWORD PTR $T3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EnumerateUSB@USB@@QAEXXZ$5:
  00028	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?EnumerateUSB@USB@@QAEXXZ:
  00030	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00034	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00037	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00044	33 c8		 xor	 ecx, eax
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?EnumerateUSB@USB@@QAEXXZ
  00050	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?EnumerateUSB@USB@@QAEXXZ ENDP				; USB::EnumerateUSB
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\users\giulif\downloads\study\git\sysstatus\sysstatus.cpp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_seconds$1$ = -20					; size = 4
_this$1$ = -20						; size = 4
tv130 = -16						; size = 4
_tickStart$2$ = -16					; size = 4
_seconds$2$ = -12					; size = 4
_tickStart$1$ = -12					; size = 4
_timeElapsed$1$ = -8					; size = 8
?USBDevicesDetails@USB@@QAEXXZ PROC			; USB::USBDevicesDetails
; _this$ = ecx

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	83 ec 34	 sub	 esp, 52			; 00000034H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 190  : 	Log(LOG_DEBUG,__LINE__,">> USB.DevsDets");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EBIECMOG@?$DO?$DO?5USB?4DevsDets@
  00011	8b f9		 mov	 edi, ecx
  00013	68 be 00 00 00	 push	 190			; 000000beH
  00018	6a 10		 push	 16			; 00000010H
  0001a	89 7c 24 38	 mov	 DWORD PTR _this$1$[esp+76], edi
  0001e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 191  : 
; 192  :     uint64_t tickStart = SysTick();

  00023	e8 00 00 00 00	 call	 ?SysTick@@YA_KXZ	; SysTick

; 194  :     Log(LOG_HEADER,__LINE__,"USB Device Details");

  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HNIJLKOP@USB?5Device?5Details@
  0002d	68 c2 00 00 00	 push	 194			; 000000c2H
  00032	6a 02		 push	 2
  00034	89 44 24 48	 mov	 DWORD PTR _tickStart$2$[esp+88], eax
  00038	89 54 24 4c	 mov	 DWORD PTR _tickStart$1$[esp+88], edx
  0003c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  00041	8b 8f 10 02 00
	00		 mov	 ecx, DWORD PTR [edi+528]
  00047	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0004c	8b b7 0c 02 00
	00		 mov	 esi, DWORD PTR [edi+524]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 194  :     Log(LOG_HEADER,__LINE__,"USB Device Details");

  00052	83 c4 18	 add	 esp, 24			; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  00055	2b ce		 sub	 ecx, esi
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 196  :     for(unsigned int x=0;x<usbDevDetails.size();x++)

  00057	33 db		 xor	 ebx, ebx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  00059	f7 e9		 imul	 ecx
  0005b	c1 fa 02	 sar	 edx, 2
  0005e	8b c2		 mov	 eax, edx
  00060	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00063	03 c2		 add	 eax, edx
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 196  :     for(unsigned int x=0;x<usbDevDetails.size();x++)

  00065	74 55		 je	 SHORT $LN3@USBDevices
  00067	33 ff		 xor	 edi, edi
  00069	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@USBDevices:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00070	83 7c 37 14 10	 cmp	 DWORD PTR [edi+esi+20], 16 ; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xutility

; 307  : 		return (_Myval2);

  00075	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1815 : 		if (_Large_string_engaged())

  00078	72 02		 jb	 SHORT $LN35@USBDevices
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  0007a	8b 00		 mov	 eax, DWORD PTR [eax]
$LN35@USBDevices:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 198  :         Log(LOG_MESSAGE,__LINE__,"%s",usbDevDetails[x].c_str());

  0007c	50		 push	 eax
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00082	68 c6 00 00 00	 push	 198			; 000000c6H
  00087	6a 01		 push	 1
  00089	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  0008e	8b 44 24 3c	 mov	 eax, DWORD PTR _this$1$[esp+80]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 196  :     for(unsigned int x=0;x<usbDevDetails.size();x++)

  00092	43		 inc	 ebx

; 198  :         Log(LOG_MESSAGE,__LINE__,"%s",usbDevDetails[x].c_str());

  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	83 c7 18	 add	 edi, 24			; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  00099	8b 88 10 02 00
	00		 mov	 ecx, DWORD PTR [eax+528]
  0009f	8b b0 0c 02 00
	00		 mov	 esi, DWORD PTR [eax+524]
  000a5	2b ce		 sub	 ecx, esi
  000a7	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000ac	f7 e9		 imul	 ecx
  000ae	c1 fa 02	 sar	 edx, 2
  000b1	8b c2		 mov	 eax, edx
  000b3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000b6	03 c2		 add	 eax, edx
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 196  :     for(unsigned int x=0;x<usbDevDetails.size();x++)

  000b8	3b d8		 cmp	 ebx, eax
  000ba	72 b4		 jb	 SHORT $LL4@USBDevices
$LN3@USBDevices:
; File c:\users\giulif\downloads\study\git\sysstatus\sysstatus.cpp

; 718  :     tickEnd = SysTick();

  000bc	e8 00 00 00 00	 call	 ?SysTick@@YA_KXZ	; SysTick

; 719  :     timeElapsed = (static_cast<double>(tickEnd - tickStart) / static_cast<double>(SECOND));

  000c1	2b 44 24 30	 sub	 eax, DWORD PTR _tickStart$2$[esp+64]
  000c5	8b c8		 mov	 ecx, eax
  000c7	1b 54 24 34	 sbb	 edx, DWORD PTR _tickStart$1$[esp+64]
  000cb	e8 00 00 00 00	 call	 __ultod3
  000d0	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@408f400000000000
  000d8	f2 0f 11 44 24
	38		 movsd	 QWORD PTR _timeElapsed$1$[esp+64], xmm0

; 720  :     seconds = static_cast<uint64_t>(timeElapsed + 0.5);

  000de	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000e6	e8 00 00 00 00	 call	 __dtoul3

; 738  :         Log(LOG_MESSAGE, line, "%02llu:%02llu:%02llu, %.3f s", seconds / 3600, (seconds % 3600) / 60, seconds % 60, timeElapsed);

  000eb	6a 00		 push	 0

; 720  :     seconds = static_cast<uint64_t>(timeElapsed + 0.5);

  000ed	8b f2		 mov	 esi, edx
  000ef	8b f8		 mov	 edi, eax

; 738  :         Log(LOG_MESSAGE, line, "%02llu:%02llu:%02llu, %.3f s", seconds / 3600, (seconds % 3600) / 60, seconds % 60, timeElapsed);

  000f1	68 10 0e 00 00	 push	 3600			; 00000e10H
  000f6	56		 push	 esi
  000f7	57		 push	 edi

; 720  :     seconds = static_cast<uint64_t>(timeElapsed + 0.5);

  000f8	89 7c 24 3c	 mov	 DWORD PTR _seconds$1$[esp+80], edi
  000fc	89 74 24 44	 mov	 DWORD PTR _seconds$2$[esp+80], esi

; 738  :         Log(LOG_MESSAGE, line, "%02llu:%02llu:%02llu, %.3f s", seconds / 3600, (seconds % 3600) / 60, seconds % 60, timeElapsed);

  00100	e8 00 00 00 00	 call	 __aulldiv
  00105	f2 0f 10 44 24
	38		 movsd	 xmm0, QWORD PTR _timeElapsed$1$[esp+64]
  0010b	83 ec 08	 sub	 esp, 8
  0010e	89 44 24 38	 mov	 DWORD PTR tv130[esp+72], eax
  00112	8b da		 mov	 ebx, edx
  00114	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00119	6a 00		 push	 0
  0011b	6a 3c		 push	 60			; 0000003cH
  0011d	56		 push	 esi
  0011e	57		 push	 edi
  0011f	e8 00 00 00 00	 call	 __aulldiv
  00124	8b 4c 24 34	 mov	 ecx, DWORD PTR _seconds$1$[esp+72]
  00128	8b f0		 mov	 esi, eax
  0012a	8b fa		 mov	 edi, edx
  0012c	0f a4 f7 04	 shld	 edi, esi, 4
  00130	c1 e6 04	 shl	 esi, 4
  00133	2b f0		 sub	 esi, eax
  00135	1b fa		 sbb	 edi, edx
  00137	0f a4 f7 02	 shld	 edi, esi, 2
  0013b	c1 e6 02	 shl	 esi, 2
  0013e	2b ce		 sub	 ecx, esi
  00140	8b 74 24 3c	 mov	 esi, DWORD PTR _seconds$2$[esp+72]
  00144	8b c6		 mov	 eax, esi
  00146	1b c7		 sbb	 eax, edi
  00148	8b 7c 24 38	 mov	 edi, DWORD PTR tv130[esp+72]
  0014c	50		 push	 eax
  0014d	51		 push	 ecx
  0014e	b9 10 0e 00 00	 mov	 ecx, 3600		; 00000e10H
  00153	8b c3		 mov	 eax, ebx
  00155	f7 e1		 mul	 ecx
  00157	ba 10 0e 00 00	 mov	 edx, 3600		; 00000e10H
  0015c	8b c8		 mov	 ecx, eax
  0015e	8b c7		 mov	 eax, edi
  00160	f7 e2		 mul	 edx
  00162	6a 00		 push	 0
  00164	03 ca		 add	 ecx, edx
  00166	8b 54 24 40	 mov	 edx, DWORD PTR _seconds$1$[esp+84]
  0016a	2b d0		 sub	 edx, eax
  0016c	6a 3c		 push	 60			; 0000003cH
  0016e	1b f1		 sbb	 esi, ecx
  00170	56		 push	 esi
  00171	52		 push	 edx
  00172	e8 00 00 00 00	 call	 __aulldiv
  00177	52		 push	 edx
  00178	50		 push	 eax
  00179	53		 push	 ebx
  0017a	57		 push	 edi
  0017b	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@GOPGHHGJ@?$CF02llu?3?$CF02llu?3?$CF02llu?0?5?$CF?43f?5s@
  00180	68 c9 00 00 00	 push	 201			; 000000c9H
  00185	6a 01		 push	 1
  00187	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 203  : 	Log(LOG_DEBUG,__LINE__,"<< USB.DevsDets");

  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GOKCLIBE@?$DM?$DM?5USB?4DevsDets@
  00191	68 cb 00 00 00	 push	 203			; 000000cbH
  00196	6a 10		 push	 16			; 00000010H
  00198	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0019d	83 c4 38	 add	 esp, 56			; 00000038H

; 204  : }

  001a0	5f		 pop	 edi
  001a1	5e		 pop	 esi
  001a2	5b		 pop	 ebx
  001a3	8b e5		 mov	 esp, ebp
  001a5	5d		 pop	 ebp
  001a6	c3		 ret	 0
?USBDevicesDetails@USB@@QAEXXZ ENDP			; USB::USBDevicesDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
;	COMDAT ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_detail$ = 8						; size = 4
?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; USB::PushBackDetails, COMDAT
; _this$ = ecx

; 127  :     void PushBackDetails(std::string const& detail) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00004	8b 75 08	 mov	 esi, DWORD PTR _detail$[ebp]
  00007	8b c6		 mov	 eax, esi
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 127  :     void PushBackDetails(std::string const& detail) {

  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0000c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00010	72 02		 jb	 SHORT $LN10@PushBackDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  00012	8b 06		 mov	 eax, DWORD PTR [esi]
$LN10@PushBackDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0001a	68 80 00 00 00	 push	 128			; 00000080H
  0001f	6a 10		 push	 16			; 00000010H
  00021	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00026	8b 87 10 02 00
	00		 mov	 eax, DWORD PTR [edi+528]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0002c	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0002f	56		 push	 esi

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00030	39 87 14 02 00
	00		 cmp	 DWORD PTR [edi+532], eax

; 917  : 		if (_Has_unused_capacity())

  00036	74 14		 je	 SHORT $LN19@PushBackDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  0003f	83 87 10 02 00
	00 18		 add	 DWORD PTR [edi+528], 24	; 00000018H
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 130  :     }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN19@PushBackDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  0004c	50		 push	 eax
  0004d	8d 8f 0c 02 00
	00		 lea	 ecx, DWORD PTR [edi+524]
  00053	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 130  :     }

  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; USB::PushBackDetails
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_nBytes$1$ = -320					; size = 4
_nBytesReturned$ = -316					; size = 4
$T2 = -312						; size = 24
_stringDescReqBuf$ = -288				; size = 267
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hHubDevice$ = 8					; size = 4
_ConnectionIndex$ = 12					; size = 4
_DescriptorIndex$ = 16					; size = 1
_LanguageID$ = 20					; size = 2
?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z PROC ; USB::GetStringDescriptor
; _this$dead$ = ecx

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 34 01 00
	00		 sub	 esp, 308		; 00000134H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b 75 08	 mov	 esi, DWORD PTR _hHubDevice$[ebp]

; 213  :     BOOL    success;
; 214  :     ULONG   nBytes = 0;
; 215  :     ULONG   nBytesReturned = 0;
; 216  : 
; 217  :     Log(LOG_DEBUG, __LINE__, ">> USB.GetStrDesc");

  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OBKJMAF@?$DO?$DO?5USB?4GetStrDesc@
  00036	68 d9 00 00 00	 push	 217			; 000000d9H
  0003b	6a 10		 push	 16			; 00000010H
  0003d	c7 85 c4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _nBytesReturned$[ebp], 0
  00047	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 218  : 
; 219  :     UCHAR   stringDescReqBuf[sizeof(USB_DESCRIPTOR_REQUEST) + MAXIMUM_USB_STRING_LENGTH];
; 220  : 
; 221  :     PSTRING_DESCRIPTOR_NODE stringDescNode = NULL;
; 222  : 
; 223  :     nBytes = sizeof(stringDescReqBuf);
; 224  : 
; 225  :     PUSB_DESCRIPTOR_REQUEST stringDescReq = (PUSB_DESCRIPTOR_REQUEST)stringDescReqBuf;
; 226  :     PUSB_STRING_DESCRIPTOR stringDesc = (PUSB_STRING_DESCRIPTOR)(stringDescReq + 1);
; 227  : 
; 228  :     // Zero fill the entire request structure
; 229  :     //
; 230  :     memset(stringDescReq, 0, nBytes);

  0004f	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$[ebp]
  00055	68 0b 01 00 00	 push	 267			; 0000010bH
  0005a	6a 00		 push	 0
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 _memset

; 231  : 
; 232  :     // Indicate the port from which the descriptor will be requested
; 233  :     //
; 234  :     stringDescReq->ConnectionIndex = ConnectionIndex;

  00062	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH

; 235  : 
; 236  :     //
; 237  :     // USBHUB uses URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE to process this
; 238  :     // IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION request.
; 239  :     //
; 240  :     // USBD will automatically initialize these fields:
; 241  :     //     bmRequest = 0x80
; 242  :     //     bRequest  = 0x06
; 243  :     //
; 244  :     // We must inititialize these fields:
; 245  :     //     wValue    = Descriptor Type (high) and Descriptor Index (low byte)
; 246  :     //     wIndex    = Zero (or Language ID for String Descriptors)
; 247  :     //     wLength   = Length of descriptor buffer
; 248  :     //
; 249  :     stringDescReq->SetupPacket.wValue = (USB_STRING_DESCRIPTOR_TYPE << 8)
; 250  :         | DescriptorIndex;
; 251  : 
; 252  :     stringDescReq->SetupPacket.wIndex = LanguageID;

  00068	66 8b 5d 14	 mov	 bx, WORD PTR _LanguageID$[ebp]
  0006c	b9 00 03 00 00	 mov	 ecx, 768		; 00000300H
  00071	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _stringDescReqBuf$[ebp], eax
  00077	8a 45 10	 mov	 al, BYTE PTR _DescriptorIndex$[ebp]
  0007a	0f b6 c0	 movzx	 eax, al
  0007d	66 0b c1	 or	 ax, cx
  00080	66 89 9d e8 fe
	ff ff		 mov	 WORD PTR _stringDescReqBuf$[ebp+8], bx
  00087	66 89 85 e6 fe
	ff ff		 mov	 WORD PTR _stringDescReqBuf$[ebp+6], ax

; 253  : 
; 254  :     stringDescReq->SetupPacket.wLength = (USHORT)(nBytes - sizeof(USB_DESCRIPTOR_REQUEST));

  0008e	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH

; 255  : 
; 256  :     // Now issue the get descriptor request.
; 257  :     //
; 258  :     success = DeviceIoControl(hHubDevice,

  00093	6a 00		 push	 0
  00095	66 89 85 ea fe
	ff ff		 mov	 WORD PTR _stringDescReqBuf$[ebp+10], ax
  0009c	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _nBytesReturned$[ebp]
  000a2	50		 push	 eax
  000a3	68 0b 01 00 00	 push	 267			; 0000010bH
  000a8	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$[ebp]
  000ae	50		 push	 eax
  000af	68 0b 01 00 00	 push	 267			; 0000010bH
  000b4	50		 push	 eax
  000b5	68 10 04 22 00	 push	 2229264			; 00220410H
  000ba	56		 push	 esi
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 259  :         IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION,
; 260  :         stringDescReq,
; 261  :         nBytes,
; 262  :         stringDescReq,
; 263  :         nBytes,
; 264  :         &nBytesReturned,
; 265  :         NULL);
; 266  : 
; 267  :     //
; 268  :     // Do some sanity checks on the return from the get descriptor request.
; 269  :     //
; 270  : 
; 271  :     if (!success)

  000c1	85 c0		 test	 eax, eax
  000c3	75 1b		 jne	 SHORT $LN2@GetStringD

; 272  :     {
; 273  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, DeviceIoControl False");

  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@MLNPNNOJ@?$DM?$DM?5USB?4GetStrDesc?0?5DeviceIoCont@
  000ca	68 11 01 00 00	 push	 273			; 00000111H
  000cf	6a 10		 push	 16			; 00000010H
  000d1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 274  :         return NULL;

  000d9	33 c0		 xor	 eax, eax
  000db	e9 19 02 00 00	 jmp	 $LN1@GetStringD
$LN2@GetStringD:

; 275  :     }
; 276  : 
; 277  :     if (nBytesReturned < 2)

  000e0	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR _nBytesReturned$[ebp]
  000e6	83 f8 02	 cmp	 eax, 2
  000e9	73 1c		 jae	 SHORT $LN3@GetStringD

; 278  :     {
; 279  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Bytes Ret %u", nBytesReturned);

  000eb	50		 push	 eax
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JKPBCDKN@?$DM?$DM?5USB?4GetStrDesc?0?5Bytes?5Ret?5?$CFu@
  000f1	68 17 01 00 00	 push	 279			; 00000117H
  000f6	6a 10		 push	 16			; 00000010H
  000f8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000fd	83 c4 10	 add	 esp, 16			; 00000010H

; 280  :         return NULL;

  00100	33 c0		 xor	 eax, eax
  00102	e9 f2 01 00 00	 jmp	 $LN1@GetStringD
$LN3@GetStringD:

; 281  :     }
; 282  : 
; 283  :     if (stringDesc->bDescriptorType != USB_STRING_DESCRIPTOR_TYPE)

  00107	8a 8d ed fe ff
	ff		 mov	 cl, BYTE PTR _stringDescReqBuf$[ebp+13]
  0010d	80 f9 03	 cmp	 cl, 3
  00110	74 1f		 je	 SHORT $LN4@GetStringD

; 284  :     {
; 285  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Inv DescriptorTp %d", stringDesc->bDescriptorType);

  00112	0f b6 c1	 movzx	 eax, cl
  00115	50		 push	 eax
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@ELGGMNKC@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Descript@
  0011b	68 1d 01 00 00	 push	 285			; 0000011dH
  00120	6a 10		 push	 16			; 00000010H
  00122	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00127	83 c4 10	 add	 esp, 16			; 00000010H

; 286  :         return NULL;

  0012a	33 c0		 xor	 eax, eax
  0012c	e9 c8 01 00 00	 jmp	 $LN1@GetStringD
$LN4@GetStringD:

; 287  :     }
; 288  : 
; 289  :     if (stringDesc->bLength != nBytesReturned - sizeof(USB_DESCRIPTOR_REQUEST))

  00131	8d 48 f4	 lea	 ecx, DWORD PTR [eax-12]
  00134	0f b6 85 ec fe
	ff ff		 movzx	 eax, BYTE PTR _stringDescReqBuf$[ebp+12]
  0013b	3b c1		 cmp	 eax, ecx
  0013d	74 1d		 je	 SHORT $LN5@GetStringD

; 290  :     {
; 291  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Inv Sz %d <> %d", (int)stringDesc->bLength, nBytesReturned - sizeof(USB_DESCRIPTOR_REQUEST));

  0013f	51		 push	 ecx
  00140	50		 push	 eax
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@CHKNKAPD@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Sz?5?$CFd?5?$DM?$DO@
  00146	68 23 01 00 00	 push	 291			; 00000123H
  0014b	6a 10		 push	 16			; 00000010H
  0014d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00152	83 c4 14	 add	 esp, 20			; 00000014H

; 292  :         return NULL;

  00155	33 c0		 xor	 eax, eax
  00157	e9 9d 01 00 00	 jmp	 $LN1@GetStringD
$LN5@GetStringD:

; 293  :     }
; 294  : 
; 295  :     if (stringDesc->bLength % 2 != 0)

  0015c	a8 01		 test	 al, 1
  0015e	74 1c		 je	 SHORT $LN6@GetStringD

; 296  :     {
; 297  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Odd Sz %d", (int)stringDesc->bLength);

  00160	50		 push	 eax
  00161	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@ILBIFDNN@?$DM?$DM?5USB?4GetStrDesc?0?5Odd?5Sz?5?$CFd@
  00166	68 29 01 00 00	 push	 297			; 00000129H
  0016b	6a 10		 push	 16			; 00000010H
  0016d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00172	83 c4 10	 add	 esp, 16			; 00000010H

; 298  :         return NULL;

  00175	33 c0		 xor	 eax, eax
  00177	e9 7d 01 00 00	 jmp	 $LN1@GetStringD
$LN6@GetStringD:

; 299  :     }
; 300  : 
; 301  :     //
; 302  :     // Looks good, allocate some (zero filled) space for the string descriptor
; 303  :     // node and copy the string descriptor to it.
; 304  :     //
; 305  : 
; 306  :     stringDescNode = (PSTRING_DESCRIPTOR_NODE)malloc(sizeof(STRING_DESCRIPTOR_NODE) + stringDesc->bLength);

  0017c	83 c0 08	 add	 eax, 8
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 _malloc
  00185	8b f0		 mov	 esi, eax
  00187	83 c4 04	 add	 esp, 4

; 307  : 
; 308  :     if (stringDescNode == NULL)

  0018a	85 f6		 test	 esi, esi
  0018c	75 1b		 jne	 SHORT $LN7@GetStringD

; 309  :     {
; 310  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, new DescNode null");

  0018e	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@BKJLPKEL@?$DM?$DM?5USB?4GetStrDesc?0?5new?5DescNode@
  00193	68 36 01 00 00	 push	 310			; 00000136H
  00198	6a 10		 push	 16			; 00000010H
  0019a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0019f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 311  :         return NULL;

  001a2	33 c0		 xor	 eax, eax
  001a4	e9 50 01 00 00	 jmp	 $LN1@GetStringD
$LN7@GetStringD:

; 312  :     }
; 313  : 
; 314  :     memset(stringDescNode, 0x00, sizeof(STRING_DESCRIPTOR_NODE) + stringDesc->bLength);

  001a9	0f b6 85 ec fe
	ff ff		 movzx	 eax, BYTE PTR _stringDescReqBuf$[ebp+12]
  001b0	83 c0 08	 add	 eax, 8
  001b3	50		 push	 eax
  001b4	6a 00		 push	 0
  001b6	56		 push	 esi
  001b7	e8 00 00 00 00	 call	 _memset

; 315  : 
; 316  :     stringDescNode->DescriptorIndex = DescriptorIndex;

  001bc	8a 45 10	 mov	 al, BYTE PTR _DescriptorIndex$[ebp]

; 317  :     stringDescNode->LanguageID = LanguageID;
; 318  : 
; 319  :     memcpy(stringDescNode->StringDescriptor, stringDesc, stringDesc->bLength);

  001bf	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  001c2	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c5	88 46 04	 mov	 BYTE PTR [esi+4], al
  001c8	66 89 5e 06	 mov	 WORD PTR [esi+6], bx
  001cc	0f b6 85 ec fe
	ff ff		 movzx	 eax, BYTE PTR _stringDescReqBuf$[ebp+12]
  001d3	50		 push	 eax
  001d4	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$[ebp+12]
  001da	50		 push	 eax
  001db	57		 push	 edi
  001dc	e8 00 00 00 00	 call	 _memcpy
  001e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 320  : 
; 321  :     if (LanguageID)

  001e4	66 85 db	 test	 bx, bx
  001e7	0f 84 f5 00 00
	00		 je	 $LN10@GetStringD

; 322  :     {
; 323  :         nBytes = WideCharToMultiByte(

  001ed	6a 00		 push	 0
  001ef	6a 00		 push	 0
  001f1	68 0b 01 00 00	 push	 267			; 0000010bH
  001f6	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$[ebp]
  001fc	50		 push	 eax
  001fd	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  00200	8d 5e 0a	 lea	 ebx, DWORD PTR [esi+10]
  00203	83 e8 02	 sub	 eax, 2
  00206	99		 cdq
  00207	2b c2		 sub	 eax, edx
  00209	d1 f8		 sar	 eax, 1
  0020b	50		 push	 eax
  0020c	53		 push	 ebx
  0020d	6a 00		 push	 0
  0020f	6a 00		 push	 0
  00211	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  00217	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _nBytes$1$[ebp], eax

; 324  :             CP_ACP,     // CodePage
; 325  :             0,          // CodePage
; 326  :             stringDescNode->StringDescriptor->bString,
; 327  :             (stringDescNode->StringDescriptor->bLength - 2) / 2,
; 328  :             (char *)stringDescReqBuf,
; 329  :             sizeof(USB_DESCRIPTOR_REQUEST) + MAXIMUM_USB_STRING_LENGTH,
; 330  :             NULL,       // lpDefaultChar
; 331  :             NULL);      // pUsedDefaultChar
; 332  :         if (!nBytes)

  0021d	85 c0		 test	 eax, eax
  0021f	0f 85 95 00 00
	00		 jne	 $LN9@GetStringD

; 334  :             Log(LOG_DEBUG, __LINE__, "-- USB.GetStrDesc, WideCharToMultiByte %s", GetLastErrorMessage(GetLastError()).c_str());

  00225	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0022b	8b d0		 mov	 edx, eax
  0022d	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00233	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  00238	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0023f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00243	72 02		 jb	 SHORT $LN20@GetStringD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  00245	8b 00		 mov	 eax, DWORD PTR [eax]
$LN20@GetStringD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 334  :             Log(LOG_DEBUG, __LINE__, "-- USB.GetStrDesc, WideCharToMultiByte %s", GetLastErrorMessage(GetLastError()).c_str());

  00247	50		 push	 eax
  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@NJJDPDGO@?9?9?5USB?4GetStrDesc?0?5WideCharToMu@
  0024d	68 4e 01 00 00	 push	 334			; 0000014eH
  00252	6a 10		 push	 16			; 00000010H
  00254	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00259	83 c4 10	 add	 esp, 16			; 00000010H
  0025c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00263	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  00269	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0026c	72 2f		 jb	 SHORT $LN68@GetStringD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0026e	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00274	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00275	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00277	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0027d	72 14		 jb	 SHORT $LN67@GetStringD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0027f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00282	83 c2 23	 add	 edx, 35			; 00000023H
  00285	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00287	83 c0 fc	 add	 eax, -4			; fffffffcH
  0028a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0028d	0f 87 84 00 00
	00		 ja	 $LN86@GetStringD
$LN67@GetStringD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00293	52		 push	 edx
  00294	51		 push	 ecx
  00295	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0029a	83 c4 08	 add	 esp, 8
$LN68@GetStringD:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0029d	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002a7	c7 85 dc fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002b1	c6 85 c8 fe ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 336  :         else

  002b8	eb 28		 jmp	 SHORT $LN10@GetStringD
$LN9@GetStringD:

; 337  :         {
; 338  :             memset(stringDescNode->StringDescriptor->bString, 0x00, (stringDescNode->StringDescriptor->bLength - 2));

  002ba	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  002bd	83 e8 02	 sub	 eax, 2
  002c0	50		 push	 eax
  002c1	6a 00		 push	 0
  002c3	53		 push	 ebx
  002c4	e8 00 00 00 00	 call	 _memset
  002c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 339  :             memcpy(stringDescNode->StringDescriptor->bString, stringDescReqBuf, nBytes);

  002cc	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$[ebp]
  002d2	ff b5 c0 fe ff
	ff		 push	 DWORD PTR _nBytes$1$[ebp]
  002d8	50		 push	 eax
  002d9	53		 push	 ebx
  002da	e8 00 00 00 00	 call	 _memcpy
  002df	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@GetStringD:

; 340  :         }
; 341  :     }
; 342  :     Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, DescNode 0x%p", stringDescNode);

  002e2	56		 push	 esi
  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@LADAJLND@?$DM?$DM?5USB?4GetStrDesc?0?5DescNode?50x?$CF@
  002e8	68 56 01 00 00	 push	 342			; 00000156H
  002ed	6a 10		 push	 16			; 00000010H
  002ef	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002f4	83 c4 10	 add	 esp, 16			; 00000010H

; 343  :     return stringDescNode;

  002f7	8b c6		 mov	 eax, esi
$LN1@GetStringD:

; 344  : }

  002f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002fc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00303	59		 pop	 ecx
  00304	5f		 pop	 edi
  00305	5e		 pop	 esi
  00306	5b		 pop	 ebx
  00307	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0030a	33 cd		 xor	 ecx, ebp
  0030c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00311	8b e5		 mov	 esp, ebp
  00313	5d		 pop	 ebp
  00314	c2 10 00	 ret	 16			; 00000010H
$LN86@GetStringD:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00317	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN84@GetStringD:
  0031c	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z$0:
  00000	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a bc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-324]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z ENDP ; USB::GetStringDescriptor
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_DeviceDesc$ = 8					; size = 4
_ConfigDesc$ = 12					; size = 4
?AreThereStringDescriptors@USB@@IAEHPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z PROC ; USB::AreThereStringDescriptors
; _this$dead$ = ecx

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 348  :     PUCHAR descEnd = NULL;
; 349  :     //    PUSB_COMMON_DESCRIPTOR commonDesc = NULL;
; 350  :     PUCHAR commonDesc = NULL;
; 351  : 
; 352  :     Log(LOG_DEBUG, __LINE__, ">> USB.AreThrStrDesc");

  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IPAKKGGO@?$DO?$DO?5USB?4AreThrStrDesc@
  0000d	68 60 01 00 00	 push	 352			; 00000160H
  00012	6a 10		 push	 16			; 00000010H
  00014	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 353  : 
; 354  :     //
; 355  :     // Check Device Descriptor strings
; 356  :     //
; 357  :     if (DeviceDesc->iManufacturer || DeviceDesc->iProduct || DeviceDesc->iSerialNumber)

  00019	8b 4d 08	 mov	 ecx, DWORD PTR _DeviceDesc$[ebp]
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001f	8a 51 0e	 mov	 dl, BYTE PTR [ecx+14]
  00022	84 d2		 test	 dl, dl
  00024	0f 85 c8 00 00
	00		 jne	 $LN7@AreThereSt
  0002a	38 51 0f	 cmp	 BYTE PTR [ecx+15], dl
  0002d	0f 85 bf 00 00
	00		 jne	 $LN7@AreThereSt
  00033	38 51 10	 cmp	 BYTE PTR [ecx+16], dl
  00036	0f 85 b6 00 00
	00		 jne	 $LN7@AreThereSt

; 360  :         return TRUE;
; 361  :     }
; 362  : 
; 363  :     //
; 364  :     // Check the Configuration and Interface Descriptor strings
; 365  :     //
; 366  :     descEnd = (PUCHAR)ConfigDesc + ConfigDesc->wTotalLength;

  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _ConfigDesc$[ebp]
  0003f	0f b7 79 02	 movzx	 edi, WORD PTR [ecx+2]
  00043	8d 41 02	 lea	 eax, DWORD PTR [ecx+2]
  00046	03 f9		 add	 edi, ecx

; 367  : 
; 368  :     //    (USB_COMMON_DESCRIPTOR far *)commonDesc = (PUSB_COMMON_DESCRIPTOR)ConfigDesc;
; 369  :     commonDesc = (PUCHAR)ConfigDesc;
; 370  : 
; 371  :     while ((PUCHAR)commonDesc + sizeof(USB_COMMON_DESCRIPTOR) < descEnd &&

  00048	3b c7		 cmp	 eax, edi
  0004a	73 63		 jae	 SHORT $LN3@AreThereSt
  0004c	0f 1f 40 00	 npad	 4
$LL2@AreThereSt:
  00050	8a 11		 mov	 dl, BYTE PTR [ecx]
  00052	0f b6 f2	 movzx	 esi, dl
  00055	03 f1		 add	 esi, ecx
  00057	3b f7		 cmp	 esi, edi
  00059	77 54		 ja	 SHORT $LN3@AreThereSt

; 372  :         (PUCHAR)commonDesc + ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength <= descEnd)
; 373  :     {
; 374  :         switch (((PUSB_COMMON_DESCRIPTOR)commonDesc)->bDescriptorType)

  0005b	0f b6 41 01	 movzx	 eax, BYTE PTR [ecx+1]
  0005f	83 e8 02	 sub	 eax, 2
  00062	74 36		 je	 SHORT $LN8@AreThereSt
  00064	83 e8 02	 sub	 eax, 2
  00067	75 3d		 jne	 SHORT $LN24@AreThereSt

; 384  :                 return TRUE;
; 385  :             }
; 386  :             (PUCHAR)commonDesc += ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength;
; 387  :             continue;
; 388  : 
; 389  :         case USB_INTERFACE_DESCRIPTOR_TYPE:
; 390  :             //                if (commonDesc->bLength != sizeof(USB_INTERFACE_DESCRIPTOR) &&
; 391  :             //                    commonDesc->bLength != sizeof(USB_INTERFACE_DESCRIPTOR2))
; 392  :             if (((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength != sizeof(USB_INTERFACE_DESCRIPTOR))

  00069	80 fa 09	 cmp	 dl, 9
  0006c	75 41		 jne	 SHORT $LN3@AreThereSt

; 393  :             {
; 394  :                 break;
; 395  :             }
; 396  :             if (((PUSB_INTERFACE_DESCRIPTOR)commonDesc)->iInterface)

  0006e	8a 41 08	 mov	 al, BYTE PTR [ecx+8]
  00071	84 c0		 test	 al, al
  00073	74 31		 je	 SHORT $LN24@AreThereSt

; 397  :             {
; 398  :                 Log(LOG_DEBUG, __LINE__, "<< USB.AreThrStrDesc, Interface %d", (int)((PUSB_INTERFACE_DESCRIPTOR)commonDesc)->iInterface);

  00075	0f b6 c0	 movzx	 eax, al
  00078	50		 push	 eax
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@NAENOJMA@?$DM?$DM?5USB?4AreThrStrDesc?0?5Interface@
  0007e	68 8e 01 00 00	 push	 398			; 0000018eH
  00083	6a 10		 push	 16			; 00000010H
  00085	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0008a	83 c4 10	 add	 esp, 16			; 00000010H

; 413  : }

  0008d	b8 01 00 00 00	 mov	 eax, 1
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 08 00	 ret	 8
$LN8@AreThereSt:

; 375  :         {
; 376  :         case USB_CONFIGURATION_DESCRIPTOR_TYPE:
; 377  :             if (((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength != sizeof(USB_CONFIGURATION_DESCRIPTOR))

  0009a	80 fa 09	 cmp	 dl, 9
  0009d	75 10		 jne	 SHORT $LN3@AreThereSt

; 378  :             {
; 379  :                 break;
; 380  :             }
; 381  :             if (((PUSB_CONFIGURATION_DESCRIPTOR)commonDesc)->iConfiguration)

  0009f	8a 41 06	 mov	 al, BYTE PTR [ecx+6]
  000a2	84 c0		 test	 al, al
  000a4	75 27		 jne	 SHORT $LN23@AreThereSt
$LN24@AreThereSt:

; 367  : 
; 368  :     //    (USB_COMMON_DESCRIPTOR far *)commonDesc = (PUSB_COMMON_DESCRIPTOR)ConfigDesc;
; 369  :     commonDesc = (PUCHAR)ConfigDesc;
; 370  : 
; 371  :     while ((PUCHAR)commonDesc + sizeof(USB_COMMON_DESCRIPTOR) < descEnd &&

  000a6	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  000a9	8b ce		 mov	 ecx, esi
  000ab	3b c7		 cmp	 eax, edi
  000ad	72 a1		 jb	 SHORT $LL2@AreThereSt
$LN3@AreThereSt:

; 399  :                 return TRUE;
; 400  :             }
; 401  :             (PUCHAR)commonDesc += ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength;
; 402  :             continue;
; 403  : 
; 404  :         default:
; 405  :             (PUCHAR)commonDesc += ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength;
; 406  :             continue;
; 407  :         }
; 408  :         break;
; 409  :     }
; 410  : 
; 411  :     Log(LOG_DEBUG, __LINE__, "<< USB.AreThrStrDesc, Ret False");

  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JFAJNON@?$DM?$DM?5USB?4AreThrStrDesc?0?5Ret?5False@
  000b4	68 9b 01 00 00	 push	 411			; 0000019bH
  000b9	6a 10		 push	 16			; 00000010H
  000bb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 412  :     return FALSE;

  000c3	33 c0		 xor	 eax, eax

; 413  : }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 08 00	 ret	 8
$LN23@AreThereSt:

; 382  :             {
; 383  :                 Log(LOG_DEBUG, __LINE__, "<< USB.AreThrStrDesc, Cfg %d", (int)((PUSB_CONFIGURATION_DESCRIPTOR)commonDesc)->iConfiguration);

  000cd	0f b6 c0	 movzx	 eax, al
  000d0	50		 push	 eax
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@DEJJKGAD@?$DM?$DM?5USB?4AreThrStrDesc?0?5Cfg?5?$CFd@
  000d6	68 7f 01 00 00	 push	 383			; 0000017fH
  000db	6a 10		 push	 16			; 00000010H
  000dd	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000e2	83 c4 10	 add	 esp, 16			; 00000010H

; 413  : }

  000e5	b8 01 00 00 00	 mov	 eax, 1
  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c2 08 00	 ret	 8
$LN7@AreThereSt:

; 358  :     {
; 359  :         Log(LOG_DEBUG, __LINE__, "<< USB.AreThrStrDesc, Manufact %d, Prod %d, SN %d", (int)DeviceDesc->iManufacturer, (int)DeviceDesc->iProduct, (int)DeviceDesc->iSerialNumber);

  000f2	0f b6 41 10	 movzx	 eax, BYTE PTR [ecx+16]
  000f6	50		 push	 eax
  000f7	0f b6 41 0f	 movzx	 eax, BYTE PTR [ecx+15]
  000fb	50		 push	 eax
  000fc	0f b6 c2	 movzx	 eax, dl
  000ff	50		 push	 eax
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@KIEGOLFL@?$DM?$DM?5USB?4AreThrStrDesc?0?5Manufact?5@
  00105	68 67 01 00 00	 push	 359			; 00000167H
  0010a	6a 10		 push	 16			; 00000010H
  0010c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00111	83 c4 18	 add	 esp, 24			; 00000018H

; 413  : }

  00114	b8 01 00 00 00	 mov	 eax, 1
  00119	5f		 pop	 edi
  0011a	5e		 pop	 esi
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 08 00	 ret	 8
?AreThereStringDescriptors@USB@@IAEHPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z ENDP ; USB::AreThereStringDescriptors
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_languageIDs$1$ = -16					; size = 4
_supportedLanguagesString$1$ = -12			; size = 4
_numLanguageIDs$1$ = -8					; size = 4
tv416 = -4						; size = 4
_descEnd$1$ = -4					; size = 4
_hHubDevice$ = 8					; size = 4
_ConnectionIndex$ = 12					; size = 4
_DeviceDesc$ = 16					; size = 4
_ConfigDesc$ = 20					; size = 4
?GetAllStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z PROC ; USB::GetAllStringDescriptors
; _this$dead$ = ecx

; 416  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 417  :     ULONG                   numLanguageIDs = 0;
; 418  :     USHORT                  *languageIDs = NULL;
; 419  : 
; 420  :     PUCHAR                  descEnd = NULL;
; 421  :     //    PUSB_COMMON_DESCRIPTOR  commonDesc = NULL;
; 422  :     PUCHAR  commonDesc = NULL;
; 423  : 
; 424  :     Log(LOG_DEBUG, __LINE__, ">> USB.GetAllStrDescs");

  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PLIGAJPI@?$DO?$DO?5USB?4GetAllStrDescs@
  00011	68 a8 01 00 00	 push	 424			; 000001a8H
  00016	6a 10		 push	 16			; 00000010H
  00018	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 425  : 
; 426  :     //
; 427  :     // Get the array of supported Language IDs, which is returned
; 428  :     // in String Descriptor 0
; 429  :     //
; 430  :     PSTRING_DESCRIPTOR_NODE supportedLanguagesString = GetStringDescriptor(hHubDevice, ConnectionIndex, 0, 0);

  0001d	8b 7d 0c	 mov	 edi, DWORD PTR _ConnectionIndex$[ebp]
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
  00023	8b 5d 08	 mov	 ebx, DWORD PTR _hHubDevice$[ebp]
  00026	6a 00		 push	 0
  00028	6a 00		 push	 0
  0002a	57		 push	 edi
  0002b	53		 push	 ebx
  0002c	e8 00 00 00 00	 call	 ?GetStringDescriptor@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEG@Z ; USB::GetStringDescriptor
  00031	8b c8		 mov	 ecx, eax
  00033	89 4c 24 14	 mov	 DWORD PTR _supportedLanguagesString$1$[esp+32], ecx

; 431  :     if (supportedLanguagesString == NULL)

  00037	85 c9		 test	 ecx, ecx
  00039	75 1f		 jne	 SHORT $LN6@GetAllStri

; 432  :     {
; 433  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetAllStrDescs, SuppLangsStr null");

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@HBMGBPGH@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@
  00040	68 b1 01 00 00	 push	 433			; 000001b1H
  00045	6a 10		 push	 16			; 00000010H
  00047	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 434  :         return NULL;

  0004f	33 c0		 xor	 eax, eax

; 535  : }

  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 10 00	 ret	 16			; 00000010H
$LN6@GetAllStri:

; 435  :     }
; 436  : 
; 437  :     numLanguageIDs = (supportedLanguagesString->StringDescriptor->bLength - 2) / 2;

  0005a	0f b6 41 08	 movzx	 eax, BYTE PTR [ecx+8]

; 438  : 
; 439  :     languageIDs = (USHORT*)&supportedLanguagesString->StringDescriptor->bString[0];

  0005e	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00061	83 e8 02	 sub	 eax, 2
  00064	89 4c 24 10	 mov	 DWORD PTR _languageIDs$1$[esp+32], ecx
  00068	99		 cdq
  00069	2b c2		 sub	 eax, edx

; 440  : 
; 441  :     PSTRING_DESCRIPTOR_NODE stringDescNodeTail = supportedLanguagesString;

  0006b	8b 54 24 14	 mov	 edx, DWORD PTR _supportedLanguagesString$1$[esp+32]
  0006f	8b f0		 mov	 esi, eax

; 442  : 
; 443  :     //
; 444  :     // Get the Device Descriptor strings
; 445  :     //
; 446  :     if (DeviceDesc->iManufacturer)

  00071	8b 45 10	 mov	 eax, DWORD PTR _DeviceDesc$[ebp]
  00074	d1 fe		 sar	 esi, 1
  00076	89 74 24 18	 mov	 DWORD PTR _numLanguageIDs$1$[esp+32], esi
  0007a	8a 58 0e	 mov	 bl, BYTE PTR [eax+14]
  0007d	89 5c 24 1c	 mov	 DWORD PTR tv416[esp+32], ebx
  00081	84 db		 test	 bl, bl
  00083	8b 5d 08	 mov	 ebx, DWORD PTR _hHubDevice$[ebp]
  00086	74 17		 je	 SHORT $LN7@GetAllStri

; 447  :     {
; 448  :         stringDescNodeTail = GetStringDescriptors(hHubDevice,

  00088	52		 push	 edx
  00089	51		 push	 ecx
  0008a	56		 push	 esi
  0008b	ff 74 24 28	 push	 DWORD PTR tv416[esp+44]
  0008f	57		 push	 edi
  00090	53		 push	 ebx
  00091	e8 00 00 00 00	 call	 ?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z ; USB::GetStringDescriptors
  00096	8b 4c 24 10	 mov	 ecx, DWORD PTR _languageIDs$1$[esp+32]
  0009a	8b d0		 mov	 edx, eax
  0009c	8b 45 10	 mov	 eax, DWORD PTR _DeviceDesc$[ebp]
$LN7@GetAllStri:

; 449  :             ConnectionIndex,
; 450  :             DeviceDesc->iManufacturer,
; 451  :             numLanguageIDs,
; 452  :             languageIDs,
; 453  :             stringDescNodeTail);
; 454  :     }
; 455  : 
; 456  :     if (DeviceDesc->iProduct)

  0009f	8a 40 0f	 mov	 al, BYTE PTR [eax+15]
  000a2	84 c0		 test	 al, al
  000a4	74 0d		 je	 SHORT $LN8@GetAllStri

; 457  :     {
; 458  :         stringDescNodeTail = GetStringDescriptors(hHubDevice,

  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	56		 push	 esi
  000a9	50		 push	 eax
  000aa	57		 push	 edi
  000ab	53		 push	 ebx
  000ac	e8 00 00 00 00	 call	 ?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z ; USB::GetStringDescriptors
  000b1	8b d0		 mov	 edx, eax
$LN8@GetAllStri:

; 459  :             ConnectionIndex,
; 460  :             DeviceDesc->iProduct,
; 461  :             numLanguageIDs,
; 462  :             languageIDs,
; 463  :             stringDescNodeTail);
; 464  :     }
; 465  : 
; 466  :     if (DeviceDesc->iSerialNumber)

  000b3	8b 45 10	 mov	 eax, DWORD PTR _DeviceDesc$[ebp]
  000b6	8a 40 10	 mov	 al, BYTE PTR [eax+16]
  000b9	84 c0		 test	 al, al
  000bb	74 10		 je	 SHORT $LN9@GetAllStri

; 467  :     {
; 468  :         stringDescNodeTail = GetStringDescriptors(hHubDevice,

  000bd	52		 push	 edx
  000be	ff 74 24 14	 push	 DWORD PTR _languageIDs$1$[esp+36]
  000c2	56		 push	 esi
  000c3	50		 push	 eax
  000c4	57		 push	 edi
  000c5	53		 push	 ebx
  000c6	e8 00 00 00 00	 call	 ?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z ; USB::GetStringDescriptors
  000cb	8b d0		 mov	 edx, eax
$LN9@GetAllStri:

; 469  :             ConnectionIndex,
; 470  :             DeviceDesc->iSerialNumber,
; 471  :             numLanguageIDs,
; 472  :             languageIDs,
; 473  :             stringDescNodeTail);
; 474  :     }
; 475  : 
; 476  :     //
; 477  :     // Get the Configuration and Interface Descriptor strings
; 478  :     //
; 479  :     descEnd = (PUCHAR)ConfigDesc + ConfigDesc->wTotalLength;

  000cd	8b 75 14	 mov	 esi, DWORD PTR _ConfigDesc$[ebp]
  000d0	0f b7 4e 02	 movzx	 ecx, WORD PTR [esi+2]
  000d4	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  000d7	03 ce		 add	 ecx, esi
  000d9	89 4c 24 1c	 mov	 DWORD PTR _descEnd$1$[esp+32], ecx

; 480  :     //    commonDesc = (PUSB_COMMON_DESCRIPTOR)ConfigDesc;
; 481  :     commonDesc = (PUCHAR)ConfigDesc;
; 482  : 
; 483  :     while ((DWORD)((PUCHAR)commonDesc + sizeof(USB_COMMON_DESCRIPTOR)) < (DWORD)descEnd &&

  000dd	3b c1		 cmp	 eax, ecx
  000df	73 56		 jae	 SHORT $LN22@GetAllStri
$LL2@GetAllStri:
  000e1	8a 0e		 mov	 cl, BYTE PTR [esi]
  000e3	0f b6 c1	 movzx	 eax, cl
  000e6	03 c6		 add	 eax, esi
  000e8	3b 44 24 1c	 cmp	 eax, DWORD PTR _descEnd$1$[esp+32]
  000ec	77 49		 ja	 SHORT $LN22@GetAllStri

; 484  :         (DWORD)((PUCHAR)commonDesc + ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength) <= (DWORD)descEnd)
; 485  :     {
; 486  :         switch (((PUSB_COMMON_DESCRIPTOR)commonDesc)->bDescriptorType)

  000ee	0f b6 46 01	 movzx	 eax, BYTE PTR [esi+1]
  000f2	83 e8 02	 sub	 eax, 2
  000f5	74 0f		 je	 SHORT $LN10@GetAllStri
  000f7	83 e8 02	 sub	 eax, 2
  000fa	75 2d		 jne	 SHORT $LN24@GetAllStri

; 494  :             {
; 495  :                 stringDescNodeTail = GetStringDescriptors(
; 496  :                     hHubDevice,
; 497  :                     ConnectionIndex,
; 498  :                     ((PUSB_CONFIGURATION_DESCRIPTOR)commonDesc)->iConfiguration,
; 499  :                     numLanguageIDs,
; 500  :                     languageIDs,
; 501  :                     stringDescNodeTail);
; 502  :             }
; 503  :             (PUCHAR)commonDesc += ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength;
; 504  :             continue;
; 505  : 
; 506  :         case USB_INTERFACE_DESCRIPTOR_TYPE:
; 507  :             //                if (commonDesc->bLength != sizeof(USB_INTERFACE_DESCRIPTOR) &&
; 508  :             //                    commonDesc->bLength != sizeof(USB_INTERFACE_DESCRIPTOR2))
; 509  :             if (((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength != sizeof(USB_INTERFACE_DESCRIPTOR))

  000fc	80 f9 09	 cmp	 cl, 9
  000ff	75 36		 jne	 SHORT $LN22@GetAllStri

; 510  :             {
; 511  :                 break;
; 512  :             }
; 513  :             if (((PUSB_INTERFACE_DESCRIPTOR)commonDesc)->iInterface)

  00101	8a 46 08	 mov	 al, BYTE PTR [esi+8]

; 514  :             {
; 515  :                 stringDescNodeTail = GetStringDescriptors(
; 516  :                     hHubDevice,
; 517  :                     ConnectionIndex,
; 518  :                     ((PUSB_INTERFACE_DESCRIPTOR)commonDesc)->iInterface,
; 519  :                     numLanguageIDs,
; 520  :                     languageIDs,
; 521  :                     stringDescNodeTail);
; 522  :             }
; 523  :             (PUCHAR)commonDesc += ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength;
; 524  :             continue;

  00104	eb 08		 jmp	 SHORT $LN30@GetAllStri
$LN10@GetAllStri:

; 487  :         {
; 488  :         case USB_CONFIGURATION_DESCRIPTOR_TYPE:
; 489  :             if (((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength != sizeof(USB_CONFIGURATION_DESCRIPTOR))

  00106	80 f9 09	 cmp	 cl, 9
  00109	75 2c		 jne	 SHORT $LN22@GetAllStri

; 490  :             {
; 491  :                 break;
; 492  :             }
; 493  :             if (((PUSB_CONFIGURATION_DESCRIPTOR)commonDesc)->iConfiguration)

  0010b	8a 46 06	 mov	 al, BYTE PTR [esi+6]
$LN30@GetAllStri:

; 480  :     //    commonDesc = (PUSB_COMMON_DESCRIPTOR)ConfigDesc;
; 481  :     commonDesc = (PUCHAR)ConfigDesc;
; 482  : 
; 483  :     while ((DWORD)((PUCHAR)commonDesc + sizeof(USB_COMMON_DESCRIPTOR)) < (DWORD)descEnd &&

  0010e	b1 09		 mov	 cl, 9
  00110	84 c0		 test	 al, al
  00112	74 15		 je	 SHORT $LN24@GetAllStri
  00114	52		 push	 edx
  00115	ff 74 24 14	 push	 DWORD PTR _languageIDs$1$[esp+36]
  00119	ff 74 24 20	 push	 DWORD PTR _numLanguageIDs$1$[esp+40]
  0011d	50		 push	 eax
  0011e	57		 push	 edi
  0011f	53		 push	 ebx
  00120	e8 00 00 00 00	 call	 ?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z ; USB::GetStringDescriptors
  00125	8a 0e		 mov	 cl, BYTE PTR [esi]
  00127	8b d0		 mov	 edx, eax
$LN24@GetAllStri:
  00129	0f b6 c1	 movzx	 eax, cl
  0012c	03 f0		 add	 esi, eax
  0012e	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  00131	3b 44 24 1c	 cmp	 eax, DWORD PTR _descEnd$1$[esp+32]
  00135	72 aa		 jb	 SHORT $LL2@GetAllStri
$LN22@GetAllStri:

; 525  : 
; 526  :         default:
; 527  :             (PUCHAR)commonDesc += ((PUSB_COMMON_DESCRIPTOR)commonDesc)->bLength;
; 528  :             continue;
; 529  :         }
; 530  :         break;
; 531  :     }
; 532  : 
; 533  :     Log(LOG_DEBUG, __LINE__, "<< USB.GetAllStrDescs, SuppLangsStr 0x%p", supportedLanguagesString);

  00137	8b 5c 24 14	 mov	 ebx, DWORD PTR _supportedLanguagesString$1$[esp+32]
  0013b	53		 push	 ebx
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@JNLDFNAC@?$DM?$DM?5USB?4GetAllStrDescs?0?5SuppLang@
  00141	68 15 02 00 00	 push	 533			; 00000215H
  00146	6a 10		 push	 16			; 00000010H
  00148	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0014d	83 c4 10	 add	 esp, 16			; 00000010H

; 534  :     return supportedLanguagesString;

  00150	8b c3		 mov	 eax, ebx

; 535  : }

  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 10 00	 ret	 16			; 00000010H
?GetAllStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z ENDP ; USB::GetAllStringDescriptors
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_nBytes$ = -20						; size = 4
_driverKeyName$ = -16					; size = 10
__$ArrayPad$ = -4					; size = 4
_Hub$ = 8						; size = 4
_ConnectionIndex$ = 12					; size = 4
?GetDriverKeyName@USB@@IAEPADPAXK@Z PROC		; USB::GetDriverKeyName
; _this$dead$ = ecx

; 538  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 10	 mov	 DWORD PTR __$ArrayPad$[esp+20], eax
  00014	53		 push	 ebx
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _Hub$[ebp]
  00018	56		 push	 esi
  00019	57		 push	 edi

; 539  :     BOOL                                success;
; 540  :     ULONG                               nBytes = 0;
; 541  :     USB_NODE_CONNECTION_DRIVERKEY_NAME  driverKeyName;
; 542  :     PUSB_NODE_CONNECTION_DRIVERKEY_NAME driverKeyNameW = NULL;
; 543  :     PCHAR                               driverKeyNameA = NULL;
; 544  : 
; 545  :     Log(LOG_DEBUG, __LINE__, ">> USB.GetDrvKeyName");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@GLJHIDAC@?$DO?$DO?5USB?4GetDrvKeyName@
  0001f	68 21 02 00 00	 push	 545			; 00000221H
  00024	6a 10		 push	 16			; 00000010H
  00026	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _nBytes$[esp+44], 0
  0002e	33 ff		 xor	 edi, edi
  00030	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 546  : 
; 547  :     // Get the length of the name of the driver key of the device attached to
; 548  :     // the specified port.
; 549  :     //
; 550  :     memset(&driverKeyName, 0, sizeof(driverKeyName));
; 551  :     driverKeyName.ConnectionIndex = ConnectionIndex;

  00035	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	0f 57 c0	 xorps	 xmm0, xmm0
  0003e	66 89 7c 24 18	 mov	 WORD PTR _driverKeyName$[esp+40], di
  00043	66 0f d6 44 24
	10		 movq	 QWORD PTR _driverKeyName$[esp+32], xmm0
  00049	89 44 24 10	 mov	 DWORD PTR _driverKeyName$[esp+32], eax

; 552  : 
; 553  :     success = DeviceIoControl(Hub,

  0004d	8d 44 24 0c	 lea	 eax, DWORD PTR _nBytes$[esp+32]
  00051	57		 push	 edi
  00052	50		 push	 eax
  00053	6a 0a		 push	 10			; 0000000aH
  00055	8d 44 24 1c	 lea	 eax, DWORD PTR _driverKeyName$[esp+44]
  00059	50		 push	 eax
  0005a	6a 0a		 push	 10			; 0000000aH
  0005c	50		 push	 eax
  0005d	68 20 04 22 00	 push	 2229280			; 00220420H
  00062	53		 push	 ebx
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 554  :         IOCTL_USB_GET_NODE_CONNECTION_DRIVERKEY_NAME,
; 555  :         &driverKeyName,
; 556  :         sizeof(driverKeyName),
; 557  :         &driverKeyName,
; 558  :         sizeof(driverKeyName),
; 559  :         &nBytes,
; 560  :         NULL);
; 561  : 
; 562  :     if (success)

  00069	85 c0		 test	 eax, eax
  0006b	74 76		 je	 SHORT $LN5@GetDriverK

; 563  :     {
; 564  :         // Allocate space to hold the driver key name
; 565  :         //
; 566  :         nBytes = driverKeyName.ActualLength;

  0006d	8b 44 24 14	 mov	 eax, DWORD PTR _driverKeyName$[esp+36]
  00071	89 44 24 0c	 mov	 DWORD PTR _nBytes$[esp+32], eax

; 567  : 
; 568  :         if (nBytes > sizeof(driverKeyName))

  00075	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00078	76 69		 jbe	 SHORT $LN5@GetDriverK

; 569  :         {
; 570  :             driverKeyNameW = (struct _USB_NODE_CONNECTION_DRIVERKEY_NAME *)malloc(nBytes);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 _malloc
  00080	83 c4 04	 add	 esp, 4
  00083	8b f0		 mov	 esi, eax

; 571  :             if (driverKeyNameW)

  00085	ff 74 24 0c	 push	 DWORD PTR _nBytes$[esp+32]
  00089	85 f6		 test	 esi, esi
  0008b	74 42		 je	 SHORT $LN4@GetDriverK

; 572  :             {
; 573  :                 memset(driverKeyNameW, 0x00, nBytes);

  0008d	57		 push	 edi
  0008e	56		 push	 esi
  0008f	e8 00 00 00 00	 call	 _memset

; 574  : 
; 575  :                 // Get the name of the driver key of the device attached to
; 576  :                 // the specified port.
; 577  :                 //
; 578  :                 driverKeyNameW->ConnectionIndex = ConnectionIndex;

  00094	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	89 06		 mov	 DWORD PTR [esi], eax

; 579  : 
; 580  :                 success = DeviceIoControl(Hub,

  0009c	8d 44 24 0c	 lea	 eax, DWORD PTR _nBytes$[esp+32]
  000a0	57		 push	 edi
  000a1	50		 push	 eax
  000a2	8b 44 24 14	 mov	 eax, DWORD PTR _nBytes$[esp+40]
  000a6	50		 push	 eax
  000a7	56		 push	 esi
  000a8	50		 push	 eax
  000a9	56		 push	 esi
  000aa	68 20 04 22 00	 push	 2229280			; 00220420H
  000af	53		 push	 ebx
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 581  :                     IOCTL_USB_GET_NODE_CONNECTION_DRIVERKEY_NAME,
; 582  :                     driverKeyNameW,
; 583  :                     nBytes,
; 584  :                     driverKeyNameW,
; 585  :                     nBytes,
; 586  :                     &nBytes,
; 587  :                     NULL);
; 588  : 
; 589  :                 if (success)

  000b6	85 c0		 test	 eax, eax
  000b8	74 0a		 je	 SHORT $LN6@GetDriverK

; 590  :                 {
; 591  :                     // Convert the driver key name
; 592  :                     //
; 593  :                     driverKeyNameA = WideStrToMultiStr(driverKeyNameW->DriverKeyName);

  000ba	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  000bd	e8 00 00 00 00	 call	 ?WideStrToMultiStr@@YAPADPA_W@Z ; WideStrToMultiStr
  000c2	8b f8		 mov	 edi, eax
$LN6@GetDriverK:

; 594  :                 }
; 595  :                 free(driverKeyNameW);

  000c4	56		 push	 esi
  000c5	e8 00 00 00 00	 call	 _free
  000ca	83 c4 04	 add	 esp, 4

; 596  :             }
; 597  :             else

  000cd	eb 14		 jmp	 SHORT $LN5@GetDriverK
$LN4@GetDriverK:

; 598  :             {
; 599  :                 Log(LOG_DEBUG, __LINE__, "-- USB.GetDriverKeyName, new KeyNameW (%u) null", nBytes);

  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OGKODAJE@?9?9?5USB?4GetDriverKeyName?0?5new?5Ke@
  000d4	68 57 02 00 00	 push	 599			; 00000257H
  000d9	6a 10		 push	 16			; 00000010H
  000db	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000e0	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@GetDriverK:

; 600  :             }
; 601  :         }
; 602  :     }
; 603  :     Log(LOG_DEBUG, __LINE__, "<< USB.GetDrvKeyName, AName %s", driverKeyNameA);

  000e3	57		 push	 edi
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@PGCNCFEB@?$DM?$DM?5USB?4GetDrvKeyName?0?5AName?5?$CFs@
  000e9	68 5b 02 00 00	 push	 603			; 0000025bH
  000ee	6a 10		 push	 16			; 00000010H
  000f0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 604  :     return driverKeyNameA;
; 605  : }

  000f5	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+48]
  000f9	83 c4 10	 add	 esp, 16			; 00000010H
  000fc	8b c7		 mov	 eax, edi
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	33 cc		 xor	 ecx, esp
  00103	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 08 00	 ret	 8
?GetDriverKeyName@USB@@IAEPADPAXK@Z ENDP		; USB::GetDriverKeyName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_nBytes$ = -20						; size = 4
_extHubName$ = -16					; size = 10
__$ArrayPad$ = -4					; size = 4
_Hub$ = 8						; size = 4
_ConnectionIndex$ = 12					; size = 4
?GetExternalHubName@USB@@IAEPADPAXK@Z PROC		; USB::GetExternalHubName
; _this$dead$ = ecx

; 608  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 10	 mov	 DWORD PTR __$ArrayPad$[esp+20], eax
  00014	53		 push	 ebx
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _Hub$[ebp]
  00018	56		 push	 esi
  00019	57		 push	 edi

; 609  :     BOOL                        success;
; 610  :     ULONG                       nBytes = 0;
; 611  :     USB_NODE_CONNECTION_NAME    extHubName;
; 612  :     PUSB_NODE_CONNECTION_NAME   extHubNameW = NULL;
; 613  :     PCHAR                       extHubNameA = NULL;
; 614  : 
; 615  :     Log(LOG_DEBUG, __LINE__, ">> USB.GetExternHub");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BDIOPGJF@?$DO?$DO?5USB?4GetExternHub@
  0001f	68 67 02 00 00	 push	 615			; 00000267H
  00024	6a 10		 push	 16			; 00000010H
  00026	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _nBytes$[esp+44], 0
  0002e	33 ff		 xor	 edi, edi
  00030	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 616  : 
; 617  :     // Get the length of the name of the external hub attached to the
; 618  :     // specified port.
; 619  :     //
; 620  :     memset(&extHubName, 0, sizeof(extHubName));
; 621  :     extHubName.ConnectionIndex = ConnectionIndex;

  00035	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	0f 57 c0	 xorps	 xmm0, xmm0
  0003e	66 89 7c 24 18	 mov	 WORD PTR _extHubName$[esp+40], di
  00043	66 0f d6 44 24
	10		 movq	 QWORD PTR _extHubName$[esp+32], xmm0
  00049	89 44 24 10	 mov	 DWORD PTR _extHubName$[esp+32], eax

; 622  : 
; 623  :     success = DeviceIoControl(Hub,

  0004d	8d 44 24 0c	 lea	 eax, DWORD PTR _nBytes$[esp+32]
  00051	57		 push	 edi
  00052	50		 push	 eax
  00053	6a 0a		 push	 10			; 0000000aH
  00055	8d 44 24 1c	 lea	 eax, DWORD PTR _extHubName$[esp+44]
  00059	50		 push	 eax
  0005a	6a 0a		 push	 10			; 0000000aH
  0005c	50		 push	 eax
  0005d	68 14 04 22 00	 push	 2229268			; 00220414H
  00062	53		 push	 ebx
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 624  :         IOCTL_USB_GET_NODE_CONNECTION_NAME,
; 625  :         &extHubName,
; 626  :         sizeof(extHubName),
; 627  :         &extHubName,
; 628  :         sizeof(extHubName),
; 629  :         &nBytes,
; 630  :         NULL);
; 631  : 
; 632  :     if (success)

  00069	85 c0		 test	 eax, eax
  0006b	74 76		 je	 SHORT $LN5@GetExterna

; 633  :     {
; 634  :         // Allocate space to hold the external hub name
; 635  :         //
; 636  :         nBytes = extHubName.ActualLength;

  0006d	8b 44 24 14	 mov	 eax, DWORD PTR _extHubName$[esp+36]
  00071	89 44 24 0c	 mov	 DWORD PTR _nBytes$[esp+32], eax

; 637  : 
; 638  :         if (nBytes > sizeof(extHubName))

  00075	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00078	76 69		 jbe	 SHORT $LN5@GetExterna

; 639  :         {
; 640  :             extHubNameW = (struct _USB_NODE_CONNECTION_NAME *)malloc(nBytes);

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 _malloc
  00080	83 c4 04	 add	 esp, 4
  00083	8b f0		 mov	 esi, eax

; 641  :             if (extHubNameW)

  00085	ff 74 24 0c	 push	 DWORD PTR _nBytes$[esp+32]
  00089	85 f6		 test	 esi, esi
  0008b	74 42		 je	 SHORT $LN4@GetExterna

; 642  :             {
; 643  :                 memset(extHubNameW, 0x00, nBytes);

  0008d	57		 push	 edi
  0008e	56		 push	 esi
  0008f	e8 00 00 00 00	 call	 _memset

; 644  : 
; 645  :                 // Get the name of the external hub attached to the specified port
; 646  :                 //
; 647  :                 extHubNameW->ConnectionIndex = ConnectionIndex;

  00094	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009a	89 06		 mov	 DWORD PTR [esi], eax

; 648  : 
; 649  :                 success = DeviceIoControl(Hub,

  0009c	8d 44 24 0c	 lea	 eax, DWORD PTR _nBytes$[esp+32]
  000a0	57		 push	 edi
  000a1	50		 push	 eax
  000a2	8b 44 24 14	 mov	 eax, DWORD PTR _nBytes$[esp+40]
  000a6	50		 push	 eax
  000a7	56		 push	 esi
  000a8	50		 push	 eax
  000a9	56		 push	 esi
  000aa	68 14 04 22 00	 push	 2229268			; 00220414H
  000af	53		 push	 ebx
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 650  :                     IOCTL_USB_GET_NODE_CONNECTION_NAME,
; 651  :                     extHubNameW,
; 652  :                     nBytes,
; 653  :                     extHubNameW,
; 654  :                     nBytes,
; 655  :                     &nBytes,
; 656  :                     NULL);
; 657  : 
; 658  :                 if (success)

  000b6	85 c0		 test	 eax, eax
  000b8	74 0a		 je	 SHORT $LN6@GetExterna

; 659  :                 {
; 660  :                     // Convert the External Hub name
; 661  :                     //
; 662  :                     extHubNameA = WideStrToMultiStr(extHubNameW->NodeName);

  000ba	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  000bd	e8 00 00 00 00	 call	 ?WideStrToMultiStr@@YAPADPA_W@Z ; WideStrToMultiStr
  000c2	8b f8		 mov	 edi, eax
$LN6@GetExterna:

; 663  :                 }
; 664  :                 free(extHubNameW);

  000c4	56		 push	 esi
  000c5	e8 00 00 00 00	 call	 _free
  000ca	83 c4 04	 add	 esp, 4

; 665  :             }
; 666  :             else

  000cd	eb 14		 jmp	 SHORT $LN5@GetExterna
$LN4@GetExterna:

; 667  :             {
; 668  :                 Log(LOG_DEBUG, __LINE__, "-- USB.GetExtHubName, new extHubNameW (%u) null", nBytes);

  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@HJNGPFIB@?9?9?5USB?4GetExtHubName?0?5new?5extHu@
  000d4	68 9c 02 00 00	 push	 668			; 0000029cH
  000d9	6a 10		 push	 16			; 00000010H
  000db	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000e0	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@GetExterna:

; 669  :             }
; 670  :         }
; 671  :     }
; 672  :     Log(LOG_DEBUG, __LINE__, "<< USB.GetExternHub, HubName %s", extHubNameA);

  000e3	57		 push	 edi
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IMMCIHAH@?$DM?$DM?5USB?4GetExternHub?0?5HubName?5?$CFs@
  000e9	68 a0 02 00 00	 push	 672			; 000002a0H
  000ee	6a 10		 push	 16			; 00000010H
  000f0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 673  :     return extHubNameA;
; 674  : }

  000f5	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+48]
  000f9	83 c4 10	 add	 esp, 16			; 00000010H
  000fc	8b c7		 mov	 eax, edi
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	33 cc		 xor	 ecx, esp
  00103	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 08 00	 ret	 8
?GetExternalHubName@USB@@IAEPADPAXK@Z ENDP		; USB::GetExternalHubName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
tv1004 = -1600						; size = 4
_connectionInfo$1$ = -1596				; size = 4
tv1003 = -1592						; size = 4
_extHubName$1$ = -1588					; size = 4
_info$1$ = -1588					; size = 4
_nBytes$2 = -1584					; size = 4
_configDesc$1$ = -1580					; size = 4
_deviceDesc$1$ = -1576					; size = 4
_hHubDevice$GSCopy$1$ = -1572				; size = 4
_index$1$ = -1568					; size = 4
_this$GSCopy$1$ = -1564					; size = 4
$T3 = -1560						; size = 24
_deviceInfo$ = -1536					; size = 1000
_leafName$ = -536					; size = 512
_deviceSpeed$ = -24					; size = 5
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hHubDevice$ = 8					; size = 4
_NumPorts$ = 12						; size = 4
?EnumerateHubPorts@USB@@IAEXPAXK@Z PROC			; USB::EnumerateHubPorts
; _this$ = ecx

; 677  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?EnumerateHubPorts@USB@@IAEXPAXK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 34 06 00
	00		 sub	 esp, 1588		; 00000634H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f1		 mov	 esi, ecx
  00030	89 b5 e4 f9 ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00036	8b 45 08	 mov	 eax, DWORD PTR _hHubDevice$[ebp]

; 678  :     ULONG       index = 0;
; 679  :     BOOL        success;
; 680  : 
; 681  :     PUSB_NODE_CONNECTION_INFORMATION_EX connectionInfo = NULL;
; 682  :     PUSB_DESCRIPTOR_REQUEST             configDesc = NULL;
; 683  :     PSTRING_DESCRIPTOR_NODE             stringDescs = NULL;
; 684  :     PSTRING_DESCRIPTOR_NODE				Next = NULL;
; 685  :     PUSBDEVICEINFO                      info = NULL;
; 686  : 
; 687  :     PCHAR driverKeyName = NULL;
; 688  :     PCHAR deviceDesc = NULL;
; 689  :     CHAR  leafName[512] = { 0 };

  00039	68 00 02 00 00	 push	 512			; 00000200H
  0003e	89 85 dc f9 ff
	ff		 mov	 DWORD PTR _hHubDevice$GSCopy$1$[ebp], eax
  00044	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _leafName$[ebp]
  0004a	6a 00		 push	 0
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _memset

; 690  :     char deviceSpeed[5] = { 0 };
; 691  :     char deviceInfo[1000] = { 0 };

  00052	68 e8 03 00 00	 push	 1000			; 000003e8H
  00057	8d 85 00 fa ff
	ff		 lea	 eax, DWORD PTR _deviceInfo$[ebp]
  0005d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _deviceSpeed$[ebp], 0
  00064	6a 00		 push	 0
  00066	50		 push	 eax
  00067	c6 45 ec 00	 mov	 BYTE PTR _deviceSpeed$[ebp+4], 0
  0006b	e8 00 00 00 00	 call	 _memset

; 692  : 
; 693  :     Log(LOG_DEBUG, __LINE__, ">> USB.EnumHubPorts");

  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CPBFJJJ@?$DO?$DO?5USB?4EnumHubPorts@
  00075	68 b5 02 00 00	 push	 693			; 000002b5H
  0007a	6a 10		 push	 16			; 00000010H
  0007c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 694  : 
; 695  :     NestedLevel++;

  00081	ff 46 08	 inc	 DWORD PTR [esi+8]

; 696  :     // Loop over all ports of the hub.
; 697  :     //
; 698  :     // Port indices are 1 based, not 0 based.
; 699  :     //
; 700  : 
; 701  :     // for (index=1; index <= NumPorts; index++)
; 702  :     for (index = 1; index <= NumPorts; index++)

  00084	bb 01 00 00 00	 mov	 ebx, 1
  00089	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0008c	83 c4 24	 add	 esp, 36			; 00000024H
  0008f	89 9d e0 f9 ff
	ff		 mov	 DWORD PTR _index$1$[ebp], ebx
  00095	39 5d 0c	 cmp	 DWORD PTR _NumPorts$[ebp], ebx
  00098	0f 82 82 02 00
	00		 jb	 $LN3@EnumerateH
  0009e	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__DeviceIoControl@32
  000a3	89 85 c0 f9 ff
	ff		 mov	 DWORD PTR tv1004[ebp], eax
  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__wsprintfA
  000ae	89 85 c8 f9 ff
	ff		 mov	 DWORD PTR tv1003[ebp], eax
  000b4	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL4@EnumerateH:

; 703  :     {
; 704  :         ULONG nBytes = 0;
; 705  : 
; 706  :         // Allocate space to hold the connection info for this port.
; 707  :         // For now, allocate it big enough to hold info for 30 pipes.
; 708  :         //
; 709  :         // Endpoint numbers are 0-15.  Endpoint number 0 is the standard
; 710  :         // control endpoint which is not explicitly listed in the Configuration
; 711  :         // Descriptor.  There can be an IN endpoint and an OUT endpoint at
; 712  :         // endpoint numbers 1-15 so there can be a maximum of 30 endpoints
; 713  :         // per device configuration.
; 714  :         //
; 715  :         // Should probably size this dynamically at some point.
; 716  :         //
; 717  :         nBytes = sizeof(USB_NODE_CONNECTION_INFORMATION_EX) +
; 718  :             sizeof(USB_PIPE_INFO) * 30;
; 719  : 
; 720  :         connectionInfo = (PUSB_NODE_CONNECTION_INFORMATION_EX)malloc(nBytes);

  000c0	68 6d 01 00 00	 push	 365			; 0000016dH
  000c5	c7 85 d0 f9 ff
	ff 6d 01 00 00	 mov	 DWORD PTR _nBytes$2[ebp], 365 ; 0000016dH
  000cf	e8 00 00 00 00	 call	 _malloc
  000d4	83 c4 04	 add	 esp, 4
  000d7	8b f8		 mov	 edi, eax
  000d9	89 bd c4 f9 ff
	ff		 mov	 DWORD PTR _connectionInfo$1$[ebp], edi

; 721  :         if (connectionInfo)

  000df	ff b5 d0 f9 ff
	ff		 push	 DWORD PTR _nBytes$2[ebp]
  000e5	85 ff		 test	 edi, edi
  000e7	0f 84 79 05 00
	00		 je	 $LN11@EnumerateH

; 722  :         {
; 723  :             memset(connectionInfo, 0x00, nBytes);

  000ed	6a 00		 push	 0
  000ef	57		 push	 edi
  000f0	e8 00 00 00 00	 call	 _memset
  000f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 724  : 
; 725  :             //
; 726  :             // Now query USBHUB for the USB_NODE_CONNECTION_INFORMATION_EX structure
; 727  :             // for this port.  This will tell us if a device is attached to this
; 728  :             // port, among other things.
; 729  :             //
; 730  :             connectionInfo->ConnectionIndex = index;

  000f8	89 1f		 mov	 DWORD PTR [edi], ebx

; 731  : 
; 732  :             success = DeviceIoControl(hHubDevice,

  000fa	8d 85 d0 f9 ff
	ff		 lea	 eax, DWORD PTR _nBytes$2[ebp]
  00100	6a 00		 push	 0
  00102	50		 push	 eax
  00103	8b 85 d0 f9 ff
	ff		 mov	 eax, DWORD PTR _nBytes$2[ebp]
  00109	50		 push	 eax
  0010a	57		 push	 edi
  0010b	50		 push	 eax
  0010c	57		 push	 edi
  0010d	68 48 04 22 00	 push	 2229320			; 00220448H
  00112	ff b5 dc f9 ff
	ff		 push	 DWORD PTR _hHubDevice$GSCopy$1$[ebp]
  00118	ff 95 c0 f9 ff
	ff		 call	 DWORD PTR tv1004[ebp]

; 733  :                 IOCTL_USB_GET_NODE_CONNECTION_INFORMATION_EX,
; 734  :                 connectionInfo,
; 735  :                 nBytes,
; 736  :                 connectionInfo,
; 737  :                 nBytes,
; 738  :                 &nBytes,
; 739  :                 NULL);
; 740  : 
; 741  :             if (!success)

  0011e	85 c0		 test	 eax, eax
  00120	75 0e		 jne	 SHORT $LN13@EnumerateH

; 742  :             {
; 743  :                 free(connectionInfo);

  00122	57		 push	 edi
  00123	e8 00 00 00 00	 call	 _free
  00128	83 c4 04	 add	 esp, 4

; 744  :                 continue;

  0012b	e9 dd 01 00 00	 jmp	 $LN2@EnumerateH
$LN13@EnumerateH:

; 750  :             continue;
; 751  :         }
; 752  : 
; 753  :         // Update the count of connected devices
; 754  :         //
; 755  :         if (connectionInfo->ConnectionStatus == DeviceConnected)

  00130	8b 47 1f	 mov	 eax, DWORD PTR [edi+31]
  00133	83 f8 01	 cmp	 eax, 1
  00136	75 06		 jne	 SHORT $LN14@EnumerateH

; 756  :         {
; 757  :             ulTotalDevicesConnected++;

  00138	ff 46 04	 inc	 DWORD PTR [esi+4]
  0013b	8b 47 1f	 mov	 eax, DWORD PTR [edi+31]
$LN14@EnumerateH:

; 758  :         }
; 759  : 
; 760  :         // If there is a device connected, get the Device Description
; 761  :         //
; 762  :         deviceDesc = NULL;

  0013e	33 c9		 xor	 ecx, ecx
  00140	89 8d d8 f9 ff
	ff		 mov	 DWORD PTR _deviceDesc$1$[ebp], ecx

; 763  :         if (connectionInfo->ConnectionStatus != NoDeviceConnected)

  00146	85 c0		 test	 eax, eax
  00148	74 2d		 je	 SHORT $LN16@EnumerateH

; 764  :         {
; 765  :             driverKeyName = GetDriverKeyName(hHubDevice,

  0014a	53		 push	 ebx
  0014b	ff b5 dc f9 ff
	ff		 push	 DWORD PTR _hHubDevice$GSCopy$1$[ebp]
  00151	e8 00 00 00 00	 call	 ?GetDriverKeyName@USB@@IAEPADPAXK@Z ; USB::GetDriverKeyName
  00156	8b f0		 mov	 esi, eax

; 766  :                 index);
; 767  : 
; 768  :             if (driverKeyName)

  00158	85 f6		 test	 esi, esi
  0015a	74 1b		 je	 SHORT $LN16@EnumerateH

; 769  :             {
; 770  :                 deviceDesc = DriverNameToDeviceDesc(driverKeyName);

  0015c	8b 8d e4 f9 ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00162	56		 push	 esi
  00163	e8 00 00 00 00	 call	 ?DriverNameToDeviceDesc@USB@@IAEPADPAD@Z ; USB::DriverNameToDeviceDesc

; 771  :                 free(driverKeyName);

  00168	56		 push	 esi
  00169	89 85 d8 f9 ff
	ff		 mov	 DWORD PTR _deviceDesc$1$[ebp], eax
  0016f	e8 00 00 00 00	 call	 _free
  00174	83 c4 04	 add	 esp, 4
$LN16@EnumerateH:

; 772  :             }
; 773  :         }
; 774  : 
; 775  :         // If there is a device connected to the port, try to retrieve the
; 776  :         // Configuration Descriptor from the device.
; 777  :         //
; 778  :         if (connectionInfo->ConnectionStatus == DeviceConnected)

  00177	83 7f 1f 01	 cmp	 DWORD PTR [edi+31], 1
  0017b	75 40		 jne	 SHORT $LN17@EnumerateH

; 779  :         {
; 780  :             configDesc = GetConfigDescriptor(hHubDevice, index, 0);

  0017d	51		 push	 ecx
  0017e	53		 push	 ebx
  0017f	ff b5 dc f9 ff
	ff		 push	 DWORD PTR _hHubDevice$GSCopy$1$[ebp]
  00185	e8 00 00 00 00	 call	 ?GetConfigDescriptor@USB@@IAEPAU_USB_DESCRIPTOR_REQUEST@@PAXKE@Z ; USB::GetConfigDescriptor
  0018a	89 85 d4 f9 ff
	ff		 mov	 DWORD PTR _configDesc$1$[ebp], eax

; 785  :         }
; 786  : 
; 787  :         if (configDesc != NULL &&

  00190	85 c0		 test	 eax, eax
  00192	74 33		 je	 SHORT $LN19@EnumerateH
  00194	8d 70 0c	 lea	 esi, DWORD PTR [eax+12]
  00197	56		 push	 esi
  00198	8d 5f 04	 lea	 ebx, DWORD PTR [edi+4]
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ?AreThereStringDescriptors@USB@@IAEHPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z ; USB::AreThereStringDescriptors
  001a1	85 c0		 test	 eax, eax
  001a3	74 22		 je	 SHORT $LN19@EnumerateH

; 788  :             AreThereStringDescriptors(&connectionInfo->DeviceDescriptor,
; 789  :             (PUSB_CONFIGURATION_DESCRIPTOR)(configDesc + 1)))
; 790  :         {
; 791  :             stringDescs = GetAllStringDescriptors(hHubDevice, index,

  001a5	56		 push	 esi
  001a6	8b b5 e0 f9 ff
	ff		 mov	 esi, DWORD PTR _index$1$[ebp]
  001ac	53		 push	 ebx
  001ad	56		 push	 esi
  001ae	ff b5 dc f9 ff
	ff		 push	 DWORD PTR _hHubDevice$GSCopy$1$[ebp]
  001b4	e8 00 00 00 00	 call	 ?GetAllStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKPAU_USB_DEVICE_DESCRIPTOR@@PAU_USB_CONFIGURATION_DESCRIPTOR@@@Z ; USB::GetAllStringDescriptors
  001b9	8b d8		 mov	 ebx, eax

; 792  :                 &connectionInfo->DeviceDescriptor,
; 793  :                 (PUSB_CONFIGURATION_DESCRIPTOR)(configDesc + 1));
; 794  :         }
; 795  :         else

  001bb	eb 12		 jmp	 SHORT $LN20@EnumerateH
$LN17@EnumerateH:

; 781  :         }
; 782  :         else
; 783  :         {
; 784  :             configDesc = NULL;

  001bd	c7 85 d4 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _configDesc$1$[ebp], 0
$LN19@EnumerateH:
  001c7	8b b5 e0 f9 ff
	ff		 mov	 esi, DWORD PTR _index$1$[ebp]

; 796  :         {
; 797  :             stringDescs = NULL;

  001cd	33 db		 xor	 ebx, ebx
$LN20@EnumerateH:

; 798  :         }
; 799  : 
; 800  :         // If the device connected to the port is an external hub, get the
; 801  :         // name of the external hub and recursively enumerate it.
; 802  :         //
; 803  :         if (connectionInfo->DeviceIsHub)

  001cf	80 7f 18 00	 cmp	 BYTE PTR [edi+24], 0
  001d3	0f 84 81 01 00
	00		 je	 $LN22@EnumerateH

; 804  :         {
; 805  :             PCHAR extHubName = GetExternalHubName(hHubDevice, index);

  001d9	56		 push	 esi
  001da	ff b5 dc f9 ff
	ff		 push	 DWORD PTR _hHubDevice$GSCopy$1$[ebp]
  001e0	e8 00 00 00 00	 call	 ?GetExternalHubName@USB@@IAEPADPAXK@Z ; USB::GetExternalHubName
  001e5	89 85 cc f9 ff
	ff		 mov	 DWORD PTR _extHubName$1$[ebp], eax

; 806  :             if (extHubName != NULL)

  001eb	85 c0		 test	 eax, eax
  001ed	0f 84 67 01 00
	00		 je	 $LN22@EnumerateH

; 807  :             {
; 808  :                 wsprintf(leafName, "%s[Port%lu] ", UsbViewIndent[NestedLevel], index);

  001f3	8b 85 e4 f9 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  001f9	56		 push	 esi
  001fa	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001fd	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _leafName$[ebp]
  00203	ff 34 8d 00 00
	00 00		 push	 DWORD PTR ?UsbViewIndent@@3PAPADA[ecx*4]
  0020a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DMKPCFDB@?$CFs?$FLPort?$CFlu?$FN?5@
  0020f	50		 push	 eax
  00210	ff 95 c8 f9 ff
	ff		 call	 DWORD PTR tv1003[ebp]

; 809  :                 strcat(leafName, ConnectionStatuses[connectionInfo->ConnectionStatus]);

  00216	8b 47 1f	 mov	 eax, DWORD PTR [edi+31]
  00219	83 c4 10	 add	 esp, 16			; 00000010H
  0021c	8b 14 85 00 00
	00 00		 mov	 edx, DWORD PTR ?ConnectionStatuses@@3PAPADA[eax*4]
  00223	8b f2		 mov	 esi, edx
$LL366@EnumerateH:
  00225	8a 02		 mov	 al, BYTE PTR [edx]
  00227	42		 inc	 edx
  00228	84 c0		 test	 al, al
  0022a	75 f9		 jne	 SHORT $LL366@EnumerateH
  0022c	8d bd e8 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$[ebp]
  00232	2b d6		 sub	 edx, esi
  00234	4f		 dec	 edi
$LL367@EnumerateH:
  00235	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00238	47		 inc	 edi
  00239	84 c0		 test	 al, al
  0023b	75 f8		 jne	 SHORT $LL367@EnumerateH
  0023d	8b ca		 mov	 ecx, edx
  0023f	c1 e9 02	 shr	 ecx, 2
  00242	f3 a5		 rep movsd
  00244	8b ca		 mov	 ecx, edx
  00246	83 e1 03	 and	 ecx, 3
  00249	f3 a4		 rep movsb

; 810  :                 if (deviceDesc)

  0024b	8b 8d d8 f9 ff
	ff		 mov	 ecx, DWORD PTR _deviceDesc$1$[ebp]
  00251	85 c9		 test	 ecx, ecx
  00253	74 46		 je	 SHORT $LN23@EnumerateH

; 811  :                 {
; 812  :                     strcat(leafName, " : ");

  00255	8d bd e8 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$[ebp]
  0025b	4f		 dec	 edi
  0025c	0f 1f 40 00	 npad	 4
$LL368@EnumerateH:
  00260	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00263	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  00266	84 c0		 test	 al, al
  00268	75 f6		 jne	 SHORT $LL368@EnumerateH
  0026a	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_03MCPBMLDJ@?5?3?5@

; 813  :                     strcat(leafName, deviceDesc);

  0026f	8b d1		 mov	 edx, ecx
  00271	89 07		 mov	 DWORD PTR [edi], eax
  00273	8b f2		 mov	 esi, edx
$LL369@EnumerateH:
  00275	8a 02		 mov	 al, BYTE PTR [edx]
  00277	42		 inc	 edx
  00278	84 c0		 test	 al, al
  0027a	75 f9		 jne	 SHORT $LL369@EnumerateH
  0027c	8d bd e8 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$[ebp]
  00282	2b d6		 sub	 edx, esi
  00284	4f		 dec	 edi
$LL370@EnumerateH:
  00285	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00288	47		 inc	 edi
  00289	84 c0		 test	 al, al
  0028b	75 f8		 jne	 SHORT $LL370@EnumerateH
  0028d	8b ca		 mov	 ecx, edx
  0028f	c1 e9 02	 shr	 ecx, 2
  00292	f3 a5		 rep movsd
  00294	8b ca		 mov	 ecx, edx
  00296	83 e1 03	 and	 ecx, 3
  00299	f3 a4		 rep movsb
$LN23@EnumerateH:

; 814  :                 }
; 815  :                 USBTraceInfo(leafName, extHubName);

  0029b	8b bd cc f9 ff
	ff		 mov	 edi, DWORD PTR _extHubName$1$[ebp]
  002a1	8d 8d e8 fd ff
	ff		 lea	 ecx, DWORD PTR _leafName$[ebp]
  002a7	8b d7		 mov	 edx, edi
  002a9	e8 00 00 00 00	 call	 ?USBTraceInfo@@YAXPAD0@Z ; USBTraceInfo

; 816  : 
; 817  :                 EnumerateHub(extHubName,

  002ae	8b 8d d8 f9 ff
	ff		 mov	 ecx, DWORD PTR _deviceDesc$1$[ebp]
  002b4	8b b5 c4 f9 ff
	ff		 mov	 esi, DWORD PTR _connectionInfo$1$[ebp]
  002ba	51		 push	 ecx
  002bb	8b 8d d4 f9 ff
	ff		 mov	 ecx, DWORD PTR _configDesc$1$[ebp]
  002c1	53		 push	 ebx
  002c2	51		 push	 ecx
  002c3	8b 8d e4 f9 ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  002c9	56		 push	 esi
  002ca	57		 push	 edi
  002cb	e8 00 00 00 00	 call	 ?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z ; USB::EnumerateHub

; 818  :                     connectionInfo,
; 819  :                     configDesc,
; 820  :                     stringDescs,
; 821  :                     deviceDesc);
; 822  : 
; 823  :                 if (configDesc != NULL)

  002d0	8b 85 d4 f9 ff
	ff		 mov	 eax, DWORD PTR _configDesc$1$[ebp]
  002d6	85 c0		 test	 eax, eax
  002d8	74 09		 je	 SHORT $LN24@EnumerateH

; 824  :                     free(configDesc);

  002da	50		 push	 eax
  002db	e8 00 00 00 00	 call	 _free
  002e0	83 c4 04	 add	 esp, 4
$LN24@EnumerateH:

; 825  : 
; 826  :                 if (connectionInfo != NULL)
; 827  :                     free(connectionInfo);

  002e3	56		 push	 esi
  002e4	e8 00 00 00 00	 call	 _free
  002e9	83 c4 04	 add	 esp, 4

; 828  : 
; 829  :                 while (stringDescs != NULL)

  002ec	85 db		 test	 ebx, ebx
  002ee	74 11		 je	 SHORT $LN376@EnumerateH
$LL5@EnumerateH:

; 830  :                 {
; 831  :                     Next = stringDescs->Next;

  002f0	8b 33		 mov	 esi, DWORD PTR [ebx]

; 832  :                     free(stringDescs);

  002f2	53		 push	 ebx
  002f3	e8 00 00 00 00	 call	 _free
  002f8	83 c4 04	 add	 esp, 4

; 833  :                     stringDescs = Next;

  002fb	8b de		 mov	 ebx, esi
  002fd	85 f6		 test	 esi, esi
  002ff	75 ef		 jne	 SHORT $LL5@EnumerateH
$LN376@EnumerateH:

; 696  :     // Loop over all ports of the hub.
; 697  :     //
; 698  :     // Port indices are 1 based, not 0 based.
; 699  :     //
; 700  : 
; 701  :     // for (index=1; index <= NumPorts; index++)
; 702  :     for (index = 1; index <= NumPorts; index++)

  00301	8b b5 e4 f9 ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00307	8b 9d e0 f9 ff
	ff		 mov	 ebx, DWORD PTR _index$1$[ebp]
$LN2@EnumerateH:
  0030d	43		 inc	 ebx
  0030e	89 9d e0 f9 ff
	ff		 mov	 DWORD PTR _index$1$[ebp], ebx
  00314	3b 5d 0c	 cmp	 ebx, DWORD PTR _NumPorts$[ebp]
  00317	0f 86 a3 fd ff
	ff		 jbe	 $LL4@EnumerateH

; 888  :                     {
; 889  :                         if (pDescNode->DescriptorIndex == info->ConnectionInfo->DeviceDescriptor.iSerialNumber)

  0031d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$LN3@EnumerateH:

; 940  : 
; 941  :     if (NestedLevel)			// only for prevent bugs

  00320	85 c0		 test	 eax, eax
  00322	74 04		 je	 SHORT $LN44@EnumerateH

; 942  :         NestedLevel--;

  00324	48		 dec	 eax
  00325	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN44@EnumerateH:

; 943  : 
; 944  :     Log(LOG_DEBUG, __LINE__, "<< USB.EnumHubPorts");

  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LMILCJOE@?$DM?$DM?5USB?4EnumHubPorts@
  0032d	68 b0 03 00 00	 push	 944			; 000003b0H
  00332	6a 10		 push	 16			; 00000010H
  00334	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00339	83 c4 0c	 add	 esp, 12			; 0000000cH

; 945  : }

  0033c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0033f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00346	59		 pop	 ecx
  00347	5f		 pop	 edi
  00348	5e		 pop	 esi
  00349	5b		 pop	 ebx
  0034a	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0034d	33 cd		 xor	 ecx, ebp
  0034f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00354	8b e5		 mov	 esp, ebp
  00356	5d		 pop	 ebp
  00357	c2 08 00	 ret	 8
$LN22@EnumerateH:

; 834  :                 }
; 835  : 
; 836  :                 // On to the next port
; 837  :                 //
; 838  :                 continue;
; 839  :             }
; 840  :         }
; 841  : 
; 842  :         // Allocate some space for a USBDEVICEINFO structure to hold the
; 843  :         // hub info, hub name, and connection info pointers.  GPTR zero
; 844  :         // initializes the structure for us.
; 845  :         //
; 846  :         info = (PUSBDEVICEINFO)malloc(sizeof(USBDEVICEINFO));

  0035a	6a 14		 push	 20			; 00000014H
  0035c	e8 00 00 00 00	 call	 _malloc
  00361	83 c4 04	 add	 esp, 4
  00364	89 85 cc f9 ff
	ff		 mov	 DWORD PTR _info$1$[ebp], eax

; 847  :         if (info)

  0036a	85 c0		 test	 eax, eax
  0036c	0f 84 b5 02 00
	00		 je	 $LN26@EnumerateH

; 848  :         {
; 849  :             memset(info, 0x00, sizeof(USBDEVICEINFO));
; 850  : 
; 851  :             info->ConnectionInfo = connectionInfo;
; 852  :             info->ConfigDesc = configDesc;

  00372	8b 8d d4 f9 ff
	ff		 mov	 ecx, DWORD PTR _configDesc$1$[ebp]
  00378	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0037e	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 853  :             info->StringDescs = stringDescs;
; 854  : 
; 855  :             wsprintf(leafName, "[Port%lu] ", index);

  00385	56		 push	 esi
  00386	89 78 08	 mov	 DWORD PTR [eax+8], edi
  00389	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0038c	89 58 10	 mov	 DWORD PTR [eax+16], ebx
  0038f	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _leafName$[ebp]
  00395	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KFNJHJLN@?$FLPort?$CFlu?$FN?5@
  0039a	50		 push	 eax
  0039b	ff 95 c8 f9 ff
	ff		 call	 DWORD PTR tv1003[ebp]

; 856  :             strcat(leafName, ConnectionStatuses[connectionInfo->ConnectionStatus]);

  003a1	8b 47 1f	 mov	 eax, DWORD PTR [edi+31]
  003a4	83 c4 0c	 add	 esp, 12			; 0000000cH
  003a7	8b 14 85 00 00
	00 00		 mov	 edx, DWORD PTR ?ConnectionStatuses@@3PAPADA[eax*4]
  003ae	8b f2		 mov	 esi, edx
$LL371@EnumerateH:
  003b0	8a 02		 mov	 al, BYTE PTR [edx]
  003b2	42		 inc	 edx
  003b3	84 c0		 test	 al, al
  003b5	75 f9		 jne	 SHORT $LL371@EnumerateH
  003b7	8d bd e8 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$[ebp]
  003bd	2b d6		 sub	 edx, esi
  003bf	4f		 dec	 edi
$LL372@EnumerateH:
  003c0	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  003c3	47		 inc	 edi
  003c4	84 c0		 test	 al, al
  003c6	75 f8		 jne	 SHORT $LL372@EnumerateH
  003c8	8b ca		 mov	 ecx, edx
  003ca	c1 e9 02	 shr	 ecx, 2
  003cd	f3 a5		 rep movsd
  003cf	8b ca		 mov	 ecx, edx
  003d1	83 e1 03	 and	 ecx, 3
  003d4	f3 a4		 rep movsb

; 857  :             if (deviceDesc)

  003d6	8b bd d8 f9 ff
	ff		 mov	 edi, DWORD PTR _deviceDesc$1$[ebp]
  003dc	85 ff		 test	 edi, edi
  003de	74 1e		 je	 SHORT $LN27@EnumerateH

; 858  :             {
; 859  :                 strcat(leafName, " : ");

  003e0	8d bd e8 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$[ebp]
  003e6	4f		 dec	 edi
$LL373@EnumerateH:
  003e7	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  003ea	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  003ed	84 c0		 test	 al, al
  003ef	75 f6		 jne	 SHORT $LL373@EnumerateH
  003f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_03MCPBMLDJ@?5?3?5@
  003f6	89 07		 mov	 DWORD PTR [edi], eax
  003f8	8b bd d8 f9 ff
	ff		 mov	 edi, DWORD PTR _deviceDesc$1$[ebp]
$LN27@EnumerateH:

; 860  :             }
; 861  : 
; 862  :             memset(deviceInfo, 0x00, sizeof(deviceInfo));

  003fe	68 e8 03 00 00	 push	 1000			; 000003e8H
  00403	8d 85 00 fa ff
	ff		 lea	 eax, DWORD PTR _deviceInfo$[ebp]
  00409	6a 00		 push	 0
  0040b	50		 push	 eax
  0040c	e8 00 00 00 00	 call	 _memset

; 863  :             if (info->ConnectionInfo->ConnectionStatus == DeviceConnected)

  00411	8b b5 cc f9 ff
	ff		 mov	 esi, DWORD PTR _info$1$[ebp]
  00417	83 c4 0c	 add	 esp, 12			; 0000000cH
  0041a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0041d	83 78 1f 01	 cmp	 DWORD PTR [eax+31], 1
  00421	0f 85 c6 01 00
	00		 jne	 $LN28@EnumerateH

; 864  :             {
; 865  :                 PSTRING_DESCRIPTOR_NODE pDescNode = NULL;
; 866  : 
; 867  :                 //get speed of device - Low/Full/High
; 868  :                 memset(deviceSpeed, 0x0, 5);

  00427	c6 45 ec 00	 mov	 BYTE PTR _deviceSpeed$[ebp+4], 0

; 869  :                 strcpy(deviceSpeed, "???");

  0042b	c7 45 e8 3f 3f
	3f 00		 mov	 DWORD PTR _deviceSpeed$[ebp], 4144959 ; 003f3f3fH

; 870  : 
; 871  :                 if (info->ConnectionInfo->Speed == UsbHighSpeed)

  00432	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00435	8a 40 17	 mov	 al, BYTE PTR [eax+23]
  00438	3c 02		 cmp	 al, 2
  0043a	75 0f		 jne	 SHORT $LN30@EnumerateH

; 872  :                 {
; 873  :                     strcpy(deviceSpeed, "HIGH");

  0043c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04PKDHFCJF@HIGH@
  00441	89 45 e8	 mov	 DWORD PTR _deviceSpeed$[ebp], eax
  00444	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_04PKDHFCJF@HIGH@+4
  00449	eb 1e		 jmp	 SHORT $LN379@EnumerateH
$LN30@EnumerateH:

; 874  :                 }
; 875  :                 else if (info->ConnectionInfo->Speed == UsbLowSpeed)

  0044b	84 c0		 test	 al, al
  0044d	75 09		 jne	 SHORT $LN32@EnumerateH

; 876  :                 {
; 877  :                     strcpy(deviceSpeed, "LOW");

  0044f	c7 45 e8 4c 4f
	57 00		 mov	 DWORD PTR _deviceSpeed$[ebp], 5721932 ; 00574f4cH
  00456	eb 14		 jmp	 SHORT $LN34@EnumerateH
$LN32@EnumerateH:

; 878  :                 }
; 879  :                 else if (info->ConnectionInfo->Speed == UsbFullSpeed)

  00458	3c 01		 cmp	 al, 1
  0045a	75 10		 jne	 SHORT $LN34@EnumerateH

; 880  :                 {
; 881  :                     strcpy(deviceSpeed, "FULL");

  0045c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04DHPBCODG@FULL@
  00461	89 45 e8	 mov	 DWORD PTR _deviceSpeed$[ebp], eax
  00464	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_04DHPBCODG@FULL@+4
$LN379@EnumerateH:

; 882  :                 }
; 883  : 
; 884  :                 if (info->ConnectionInfo->DeviceDescriptor.iSerialNumber)

  00469	88 45 ec	 mov	 BYTE PTR _deviceSpeed$[ebp+4], al
$LN34@EnumerateH:
  0046c	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0046f	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  00472	84 c9		 test	 cl, cl
  00474	74 2a		 je	 SHORT $LN35@EnumerateH

; 885  :                 {
; 886  :                     pDescNode = info->StringDescs;

  00476	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 887  :                     while (pDescNode)

  00479	85 c0		 test	 eax, eax
  0047b	74 0e		 je	 SHORT $LN38@EnumerateH
  0047d	0f 1f 00	 npad	 3
$LL7@EnumerateH:

; 888  :                     {
; 889  :                         if (pDescNode->DescriptorIndex == info->ConnectionInfo->DeviceDescriptor.iSerialNumber)

  00480	38 48 04	 cmp	 BYTE PTR [eax+4], cl
  00483	74 11		 je	 SHORT $LN352@EnumerateH

; 890  :                             break;
; 891  :                         pDescNode = pDescNode->Next;

  00485	8b 00		 mov	 eax, DWORD PTR [eax]
  00487	85 c0		 test	 eax, eax
  00489	75 f5		 jne	 SHORT $LL7@EnumerateH
$LN38@EnumerateH:

; 900  :                         _snprintf(deviceInfo, sizeof(deviceInfo) - 1, "%s [VID:%.4X PID:%.4X SN:%s Spd: %s]", deviceDesc,

  0048b	8d 45 e8	 lea	 eax, DWORD PTR _deviceSpeed$[ebp]
  0048e	50		 push	 eax
  0048f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CGBIAJFO@Not?5Initialized@

; 901  :                             info->ConnectionInfo->DeviceDescriptor.idVendor,
; 902  :                             info->ConnectionInfo->DeviceDescriptor.idProduct,
; 903  :                             "Not Initialized", deviceSpeed);
; 904  :                 }
; 905  :                 else

  00494	eb 13		 jmp	 SHORT $LN380@EnumerateH
$LN352@EnumerateH:

; 892  :                     }
; 893  :                     // Modified to fix the SCR 3176
; 894  :                     if (pDescNode)
; 895  :                         _snprintf(deviceInfo, sizeof(deviceInfo) - 1, "%s [VID:%.4X PID:%.4X SN:%s Spd: %s]", deviceDesc,

  00496	8d 4d e8	 lea	 ecx, DWORD PTR _deviceSpeed$[ebp]
  00499	83 c0 0a	 add	 eax, 10			; 0000000aH
  0049c	51		 push	 ecx
  0049d	50		 push	 eax

; 896  :                             info->ConnectionInfo->DeviceDescriptor.idVendor,
; 897  :                             info->ConnectionInfo->DeviceDescriptor.idProduct,
; 898  :                             (char const* )pDescNode->StringDescriptor->bString, deviceSpeed);
; 899  :                     else

  0049e	eb 09		 jmp	 SHORT $LN380@EnumerateH
$LN35@EnumerateH:

; 906  :                     _snprintf(deviceInfo, sizeof(deviceInfo) - 1, "%s [VID:%.4X PID:%.4X SN:%s Spd: %s]", deviceDesc,

  004a0	8d 45 e8	 lea	 eax, DWORD PTR _deviceSpeed$[ebp]
  004a3	50		 push	 eax
  004a4	68 00 00 00 00	 push	 OFFSET ??_C@_09CFCBFJND@Not?5Found@
$LN380@EnumerateH:

; 911  :                 Log(LOG_MESSAGE, __LINE__, "%s%s%s", UsbViewIndent[NestedLevel], leafName, deviceInfo);

  004a9	0f b7 42 0e	 movzx	 eax, WORD PTR [edx+14]
  004ad	50		 push	 eax
  004ae	0f b7 42 0c	 movzx	 eax, WORD PTR [edx+12]
  004b2	50		 push	 eax
  004b3	57		 push	 edi
  004b4	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@LGIDNAEF@?$CFs?5?$FLVID?3?$CF?44X?5PID?3?$CF?44X?5SN?3?$CFs?5Spd@
  004b9	8d 85 00 fa ff
	ff		 lea	 eax, DWORD PTR _deviceInfo$[ebp]
  004bf	68 e7 03 00 00	 push	 999			; 000003e7H
  004c4	50		 push	 eax
  004c5	e8 00 00 00 00	 call	 __snprintf
  004ca	8b bd e4 f9 ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  004d0	8d 85 00 fa ff
	ff		 lea	 eax, DWORD PTR _deviceInfo$[ebp]
  004d6	83 c4 20	 add	 esp, 32			; 00000020H
  004d9	50		 push	 eax
  004da	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _leafName$[ebp]
  004e0	50		 push	 eax
  004e1	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  004e4	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?UsbViewIndent@@3PAPADA[eax*4]
  004eb	68 00 00 00 00	 push	 OFFSET ??_C@_06DIJPEION@?$CFs?$CFs?$CFs@
  004f0	68 8f 03 00 00	 push	 911			; 0000038fH
  004f5	6a 01		 push	 1
  004f7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  004fc	8d 8d 00 fa ff
	ff		 lea	 ecx, DWORD PTR _deviceInfo$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00502	c7 85 f8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 1785 : 		_Myres(0)

  0050c	c7 85 fc f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00516	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 911  :                 Log(LOG_MESSAGE, __LINE__, "%s%s%s", UsbViewIndent[NestedLevel], leafName, deviceInfo);

  00519	83 c4 18	 add	 esp, 24			; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0051c	c7 85 f8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00526	c7 85 fc f9 ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00530	c6 85 e8 f9 ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
$LL374@EnumerateH:

; 462  : 		return (__builtin_strlen(_First));

  00537	8a 01		 mov	 al, BYTE PTR [ecx]
  00539	41		 inc	 ecx
  0053a	84 c0		 test	 al, al
  0053c	75 f9		 jne	 SHORT $LL374@EnumerateH
  0053e	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00540	8d 85 00 fa ff
	ff		 lea	 eax, DWORD PTR _deviceInfo$[ebp]
  00546	51		 push	 ecx
  00547	50		 push	 eax
  00548	8d 8d e8 f9 ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0054e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 913  :                 PushBackDetails(deviceInfo);

  00553	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0055a	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00560	50		 push	 eax
  00561	8b cf		 mov	 ecx, edi
  00563	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00568	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0056f	8b 95 fc f9 ff
	ff		 mov	 edx, DWORD PTR $T3[ebp+20]
  00575	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00578	72 2f		 jb	 SHORT $LN315@EnumerateH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0057a	8b 8d e8 f9 ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00580	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00581	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00583	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00589	72 14		 jb	 SHORT $LN314@EnumerateH

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0058b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0058e	83 c2 23	 add	 edx, 35			; 00000023H
  00591	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00593	83 c0 fc	 add	 eax, -4			; fffffffcH
  00596	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00599	0f 87 e1 00 00
	00		 ja	 $LN311@EnumerateH
$LN314@EnumerateH:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0059f	52		 push	 edx
  005a0	51		 push	 ecx
  005a1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  005a6	83 c4 08	 add	 esp, 8
$LN315@EnumerateH:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 914  :                 if (info->ConnectionInfo)

  005a9	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  005ac	c7 85 f8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  005b6	c7 85 fc f9 ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  005c0	c6 85 e8 f9 ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 914  :                 if (info->ConnectionInfo)

  005c7	85 c0		 test	 eax, eax
  005c9	74 0b		 je	 SHORT $LN40@EnumerateH

; 915  :                     ConnectionInfo(info->ConnectionInfo, info->StringDescs);

  005cb	ff 76 10	 push	 DWORD PTR [esi+16]
  005ce	8b cf		 mov	 ecx, edi
  005d0	50		 push	 eax
  005d1	e8 00 00 00 00	 call	 ?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::ConnectionInfo
$LN40@EnumerateH:

; 916  :                 if (info->ConfigDesc)

  005d6	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  005d9	85 c0		 test	 eax, eax
  005db	74 3b		 je	 SHORT $LN29@EnumerateH

; 917  :                     ConfigDesc((PUSB_CONFIGURATION_DESCRIPTOR)(info->ConfigDesc + 1), info->StringDescs);

  005dd	ff 76 10	 push	 DWORD PTR [esi+16]
  005e0	83 c0 0c	 add	 eax, 12			; 0000000cH
  005e3	8b cf		 mov	 ecx, edi
  005e5	50		 push	 eax
  005e6	e8 00 00 00 00	 call	 ?ConfigDesc@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::ConfigDesc

; 918  :             }
; 919  :             else

  005eb	eb 2b		 jmp	 SHORT $LN29@EnumerateH
$LN28@EnumerateH:

; 920  :             {
; 921  :                 Log(LOG_MESSAGE, __LINE__, "%s%s", UsbViewIndent[NestedLevel], leafName);

  005ed	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _leafName$[ebp]
  005f3	50		 push	 eax
  005f4	8b 85 e4 f9 ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  005fa	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  005fd	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?UsbViewIndent@@3PAPADA[eax*4]
  00604	68 00 00 00 00	 push	 OFFSET ??_C@_04HDOCAJNK@?$CFs?$CFs@
  00609	68 99 03 00 00	 push	 921			; 00000399H
  0060e	6a 01		 push	 1
  00610	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00615	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@EnumerateH:

; 922  :             }
; 923  :             free(info);

  00618	56		 push	 esi
  00619	e8 00 00 00 00	 call	 _free
  0061e	8b bd c4 f9 ff
	ff		 mov	 edi, DWORD PTR _connectionInfo$1$[ebp]
  00624	83 c4 04	 add	 esp, 4
$LN26@EnumerateH:

; 924  :             info = NULL;
; 925  :         }   //END: if(info)
; 926  : 
; 927  :         if (configDesc != NULL)

  00627	8b 85 d4 f9 ff
	ff		 mov	 eax, DWORD PTR _configDesc$1$[ebp]
  0062d	85 c0		 test	 eax, eax
  0062f	74 09		 je	 SHORT $LN42@EnumerateH

; 928  :             free(configDesc);

  00631	50		 push	 eax
  00632	e8 00 00 00 00	 call	 _free
  00637	83 c4 04	 add	 esp, 4
$LN42@EnumerateH:

; 929  : 
; 930  :         if (connectionInfo != NULL)
; 931  :             free(connectionInfo);

  0063a	57		 push	 edi
  0063b	e8 00 00 00 00	 call	 _free
  00640	83 c4 04	 add	 esp, 4

; 932  : 
; 933  :         while (stringDescs != NULL)

  00643	85 db		 test	 ebx, ebx
  00645	0f 84 b6 fc ff
	ff		 je	 $LN376@EnumerateH
  0064b	0f 1f 44 00 00	 npad	 5
$LL9@EnumerateH:

; 934  :         {
; 935  :             Next = stringDescs->Next;

  00650	8b 33		 mov	 esi, DWORD PTR [ebx]

; 936  :             free(stringDescs);

  00652	53		 push	 ebx
  00653	e8 00 00 00 00	 call	 _free
  00658	83 c4 04	 add	 esp, 4

; 937  :             stringDescs = Next;

  0065b	8b de		 mov	 ebx, esi
  0065d	85 f6		 test	 esi, esi
  0065f	75 ef		 jne	 SHORT $LL9@EnumerateH

; 938  :         }
; 939  :     }

  00661	e9 9b fc ff ff	 jmp	 $LN376@EnumerateH
$LN11@EnumerateH:

; 745  :             }
; 746  :         }
; 747  :         else
; 748  :         {
; 749  :             Log(LOG_DEBUG, __LINE__, "-- USB.EnumHubPorts, new Port %d ConnInfo (%u) null", index, nBytes);

  00666	53		 push	 ebx
  00667	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@EKAJALEI@?9?9?5USB?4EnumHubPorts?0?5new?5Port?5?$CF@
  0066c	68 ed 02 00 00	 push	 749			; 000002edH
  00671	6a 10		 push	 16			; 00000010H
  00673	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00678	83 c4 14	 add	 esp, 20			; 00000014H

; 932  : 
; 933  :         while (stringDescs != NULL)

  0067b	e9 8d fc ff ff	 jmp	 $LN2@EnumerateH
$LN311@EnumerateH:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00680	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN378@EnumerateH:
  00685	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateHubPorts@USB@@IAEXPAXK@Z$0:
  00000	8d 8d e8 f9 ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?EnumerateHubPorts@USB@@IAEXPAXK@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a bc f9 ff
	ff		 mov	 ecx, DWORD PTR [edx-1604]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?EnumerateHubPorts@USB@@IAEXPAXK@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?EnumerateHubPorts@USB@@IAEXPAXK@Z ENDP			; USB::EnumerateHubPorts
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_devInst$ = -12						; size = 4
_devInstNext$ = -8					; size = 4
_len$ = -4						; size = 4
_DriverName$ = 8					; size = 4
?DriverNameToDeviceDesc@USB@@IAEPADPAD@Z PROC		; USB::DriverNameToDeviceDesc
; _this$ = ecx

; 948  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	53		 push	 ebx

; 949  :     DEVINST     devInst = 0;
; 950  :     DEVINST     devInstNext = 0;
; 951  :     CONFIGRET   cr = 0;
; 952  :     ULONG       walkDone = 0;
; 953  :     ULONG       len = 0;
; 954  : 
; 955  :     Log(LOG_DEBUG, __LINE__, ">> USB.DrvName2DevDesc, Drv %s", DriverName);

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR _DriverName$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	53		 push	 ebx
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@KMJAGKHH@?$DO?$DO?5USB?4DrvName2DevDesc?0?5Drv?5?$CFs@
  00015	68 bb 03 00 00	 push	 955			; 000003bbH
  0001a	6a 10		 push	 16			; 00000010H
  0001c	8b f1		 mov	 esi, ecx
  0001e	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR _devInst$[esp+40], 0
  00026	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _devInstNext$[esp+40], 0
  0002e	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR _len$[esp+40], 0
  00036	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 956  : 
; 957  :     // Get Root DevNode
; 958  :     //
; 959  :     cr = (*lpfnCM_Locate_DevNodeA)(&devInst, NULL, 0);

  0003b	8b 86 28 02 00
	00		 mov	 eax, DWORD PTR [esi+552]
  00041	8d 4c 24 1c	 lea	 ecx, DWORD PTR _devInst$[esp+40]
  00045	83 c4 10	 add	 esp, 16			; 00000010H
  00048	6a 00		 push	 0
  0004a	6a 00		 push	 0
  0004c	51		 push	 ecx
  0004d	ff d0		 call	 eax

; 960  :     if (cr != CR_SUCCESS)

  0004f	85 c0		 test	 eax, eax
  00051	74 20		 je	 SHORT $LN28@DriverName

; 961  :     {
; 962  :         Log(LOG_DEBUG, __LINE__, "<< USB.DrvName2DevDesc, LocateDevNote %u", cr);

  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@PHHANNLH@?$DM?$DM?5USB?4DrvName2DevDesc?0?5LocateD@
  00059	68 c2 03 00 00	 push	 962			; 000003c2H
  0005e	6a 10		 push	 16			; 00000010H
  00060	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00065	83 c4 10	 add	 esp, 16			; 00000010H

; 1042 :     return NULL;
; 1043 : }

  00068	33 c0		 xor	 eax, eax
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
$LN28@DriverName:
  00073	8b 4c 24 0c	 mov	 ecx, DWORD PTR _devInst$[esp+24]
  00077	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  0007a	66 0f 1f 44 00
	00		 npad	 6
$LL2@DriverName:

; 963  :         return NULL;
; 964  :     }
; 965  : 
; 966  :     // Do a depth first search for the DevNode with a matching
; 967  :     // DriverName value
; 968  :     //
; 969  :     while (!walkDone)
; 970  :     {
; 971  :         // Get the DriverName value
; 972  :         //
; 973  :         len = sizeof(buf);
; 974  :         cr = (*lpfnCM_Get_DevNode_Registry_PropertyA)(devInst,

  00080	8b 86 24 02 00
	00		 mov	 eax, DWORD PTR [esi+548]
  00086	8d 54 24 14	 lea	 edx, DWORD PTR _len$[esp+24]
  0008a	6a 00		 push	 0
  0008c	52		 push	 edx
  0008d	57		 push	 edi
  0008e	6a 00		 push	 0
  00090	6a 0a		 push	 10			; 0000000aH
  00092	51		 push	 ecx
  00093	c7 44 24 2c 00
	02 00 00	 mov	 DWORD PTR _len$[esp+48], 512 ; 00000200H
  0009b	ff d0		 call	 eax

; 975  :             CM_DRP_DRIVER,
; 976  :             NULL,
; 977  :             buf,
; 978  :             &len,
; 979  :             0);
; 980  : 
; 981  :         // If the DriverName value matches, return the DeviceDescription
; 982  :         //
; 983  :         if (cr == CR_SUCCESS && strcmp(DriverName, buf) == 0)

  0009d	85 c0		 test	 eax, eax
  0009f	75 2d		 jne	 SHORT $LN23@DriverName
  000a1	8b c7		 mov	 eax, edi
  000a3	8b cb		 mov	 ecx, ebx
$LL31@DriverName:
  000a5	8a 11		 mov	 dl, BYTE PTR [ecx]
  000a7	3a 10		 cmp	 dl, BYTE PTR [eax]
  000a9	75 1a		 jne	 SHORT $LN32@DriverName
  000ab	84 d2		 test	 dl, dl
  000ad	74 12		 je	 SHORT $LN33@DriverName
  000af	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  000b2	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  000b5	75 0e		 jne	 SHORT $LN32@DriverName
  000b7	83 c1 02	 add	 ecx, 2
  000ba	83 c0 02	 add	 eax, 2
  000bd	84 d2		 test	 dl, dl
  000bf	75 e4		 jne	 SHORT $LL31@DriverName
$LN33@DriverName:
  000c1	33 c0		 xor	 eax, eax
  000c3	eb 05		 jmp	 SHORT $LN34@DriverName
$LN32@DriverName:
  000c5	1b c0		 sbb	 eax, eax
  000c7	83 c8 01	 or	 eax, 1
$LN34@DriverName:
  000ca	85 c0		 test	 eax, eax
  000cc	74 76		 je	 SHORT $LN20@DriverName
$LN23@DriverName:

; 1001 :                 return NULL;
; 1002 :             }
; 1003 :         }
; 1004 : 
; 1005 :         // This DevNode didn't match, go down a level to the first child.
; 1006 :         //
; 1007 :         cr = (*lpfnCM_Get_Child)(&devInstNext, devInst, 0);

  000ce	8b 86 20 02 00
	00		 mov	 eax, DWORD PTR [esi+544]
  000d4	8d 4c 24 10	 lea	 ecx, DWORD PTR _devInstNext$[esp+24]
  000d8	6a 00		 push	 0
  000da	ff 74 24 10	 push	 DWORD PTR _devInst$[esp+28]
  000de	51		 push	 ecx
  000df	ff d0		 call	 eax

; 1008 :         if (cr == CR_SUCCESS)

  000e1	85 c0		 test	 eax, eax
  000e3	74 52		 je	 SHORT $LN19@DriverName

; 1009 :         {
; 1010 :             devInst = devInstNext;
; 1011 :             continue;
; 1012 :         }
; 1013 : 
; 1014 :         // Can't go down any further, go across to the next sibling.  If
; 1015 :         // there are no more siblings, go back up until there is a sibling.
; 1016 :         // If we can't go up any further, we're back at the root and we're
; 1017 :         // done.
; 1018 :         //
; 1019 :         for (;;)
; 1020 :         {
; 1021 :             cr = (*lpfnCM_Get_Sibling)(&devInstNext, devInst, 0);

  000e5	8b 86 1c 02 00
	00		 mov	 eax, DWORD PTR [esi+540]
  000eb	8d 4c 24 10	 lea	 ecx, DWORD PTR _devInstNext$[esp+24]
  000ef	6a 00		 push	 0
  000f1	ff 74 24 10	 push	 DWORD PTR _devInst$[esp+28]
  000f5	51		 push	 ecx
  000f6	ff d0		 call	 eax

; 1022 :             if (cr == CR_SUCCESS)

  000f8	85 c0		 test	 eax, eax
  000fa	74 3b		 je	 SHORT $LN19@DriverName
  000fc	0f 1f 40 00	 npad	 4
$LL4@DriverName:

; 1025 :                 break;
; 1026 :             }
; 1027 : 
; 1028 :             cr = (*lpfnCM_Get_Parent)(&devInstNext, devInst, 0);

  00100	8b 86 18 02 00
	00		 mov	 eax, DWORD PTR [esi+536]
  00106	8d 4c 24 10	 lea	 ecx, DWORD PTR _devInstNext$[esp+24]
  0010a	6a 00		 push	 0
  0010c	ff 74 24 10	 push	 DWORD PTR _devInst$[esp+28]
  00110	51		 push	 ecx
  00111	ff d0		 call	 eax

; 1029 :             if (cr == CR_SUCCESS)

  00113	85 c0		 test	 eax, eax
  00115	0f 85 8d 00 00
	00		 jne	 $LN3@DriverName

; 1030 :             {
; 1031 :                 devInst = devInstNext;

  0011b	8b 44 24 10	 mov	 eax, DWORD PTR _devInstNext$[esp+24]
  0011f	8b 8e 1c 02 00
	00		 mov	 ecx, DWORD PTR [esi+540]
  00125	6a 00		 push	 0
  00127	50		 push	 eax
  00128	89 44 24 14	 mov	 DWORD PTR _devInst$[esp+32], eax
  0012c	8d 44 24 18	 lea	 eax, DWORD PTR _devInstNext$[esp+32]
  00130	50		 push	 eax
  00131	ff d1		 call	 ecx
  00133	85 c0		 test	 eax, eax
  00135	75 c9		 jne	 SHORT $LL4@DriverName
$LN19@DriverName:

; 1023 :             {
; 1024 :                 devInst = devInstNext;

  00137	8b 4c 24 10	 mov	 ecx, DWORD PTR _devInstNext$[esp+24]
  0013b	89 4c 24 0c	 mov	 DWORD PTR _devInst$[esp+24], ecx
  0013f	e9 3c ff ff ff	 jmp	 $LL2@DriverName
$LN20@DriverName:

; 984  :         {
; 985  :             len = sizeof(buf);
; 986  :             cr = (*lpfnCM_Get_DevNode_Registry_PropertyA)(devInst,

  00144	8b 86 24 02 00
	00		 mov	 eax, DWORD PTR [esi+548]
  0014a	8d 4c 24 14	 lea	 ecx, DWORD PTR _len$[esp+24]
  0014e	6a 00		 push	 0
  00150	51		 push	 ecx
  00151	57		 push	 edi
  00152	6a 00		 push	 0
  00154	6a 01		 push	 1
  00156	ff 74 24 20	 push	 DWORD PTR _devInst$[esp+44]
  0015a	c7 44 24 2c 00
	02 00 00	 mov	 DWORD PTR _len$[esp+48], 512 ; 00000200H
  00162	ff d0		 call	 eax

; 987  :                 CM_DRP_DEVICEDESC,
; 988  :                 NULL,
; 989  :                 buf,
; 990  :                 &len,
; 991  :                 0);
; 992  : 
; 993  :             if (cr == CR_SUCCESS)

  00164	85 c0		 test	 eax, eax
  00166	75 20		 jne	 SHORT $LN9@DriverName

; 994  :             {
; 995  :                 Log(LOG_DEBUG, __LINE__, "<< USB.DrvName2DevDesc, ret %s", buf);

  00168	57		 push	 edi
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GGDOIMOO@?$DM?$DM?5USB?4DrvName2DevDesc?0?5ret?5?$CFs@
  0016e	68 e3 03 00 00	 push	 995			; 000003e3H
  00173	6a 10		 push	 16			; 00000010H
  00175	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0017a	83 c4 10	 add	 esp, 16			; 00000010H

; 996  :                 return buf;

  0017d	8b c7		 mov	 eax, edi

; 1042 :     return NULL;
; 1043 : }

  0017f	5f		 pop	 edi
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx
  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c2 04 00	 ret	 4
$LN9@DriverName:

; 997  :             }
; 998  :             else
; 999  :             {
; 1000 :                 Log(LOG_DEBUG, __LINE__, "<< USB.DrvName2DevDesc, GetDevNodeRegProps %u", cr);

  00188	50		 push	 eax
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@BAPAALJK@?$DM?$DM?5USB?4DrvName2DevDesc?0?5GetDevN@
  0018e	68 e8 03 00 00	 push	 1000			; 000003e8H
  00193	6a 10		 push	 16			; 00000010H
  00195	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0019a	83 c4 10	 add	 esp, 16			; 00000010H

; 1042 :     return NULL;
; 1043 : }

  0019d	33 c0		 xor	 eax, eax
  0019f	5f		 pop	 edi
  001a0	5e		 pop	 esi
  001a1	5b		 pop	 ebx
  001a2	8b e5		 mov	 esp, ebp
  001a4	5d		 pop	 ebp
  001a5	c2 04 00	 ret	 4
$LN3@DriverName:

; 1032 :             }
; 1033 :             else
; 1034 :             {
; 1035 :                 walkDone = 1;
; 1036 :                 break;
; 1037 :             }
; 1038 :         }
; 1039 :     }
; 1040 : 
; 1041 :     Log(LOG_DEBUG, __LINE__, "<< USB.DrvName2DevDesc, Ret Null");

  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@OFAOPKJL@?$DM?$DM?5USB?4DrvName2DevDesc?0?5Ret?5Nul@
  001ad	68 11 04 00 00	 push	 1041			; 00000411H
  001b2	6a 10		 push	 16			; 00000010H
  001b4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1042 :     return NULL;
; 1043 : }

  001bc	33 c0		 xor	 eax, eax
  001be	5f		 pop	 edi
  001bf	5e		 pop	 esi
  001c0	5b		 pop	 ebx
  001c1	8b e5		 mov	 esp, ebp
  001c3	5d		 pop	 ebp
  001c4	c2 04 00	 ret	 4
?DriverNameToDeviceDesc@USB@@IAEPADPAD@Z ENDP		; USB::DriverNameToDeviceDesc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_this$GSCopy$1$ = -596					; size = 4
_nBytes$ = -592						; size = 4
_hHubDevice$1$ = -588					; size = 4
_HubName$GSCopy$1$ = -584				; size = 4
_info$1$ = -580						; size = 4
$T2 = -576						; size = 24
_deviceName$3 = -552					; size = 24
_leafName$4 = -528					; size = 512
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_HubName$ = 8						; size = 4
_ConnectionInfo$ = 12					; size = 4
_ConfigDesc$ = 16					; size = 4
_StringDescs$ = 20					; size = 4
_DeviceDesc$ = 24					; size = 4
?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z PROC ; USB::EnumerateHub
; _this$ = ecx

; 1046 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 48 02 00
	00		 sub	 esp, 584		; 00000248H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 8d ac fd ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  00034	8b 45 08	 mov	 eax, DWORD PTR _HubName$[ebp]
  00037	8b 7d 0c	 mov	 edi, DWORD PTR _ConnectionInfo$[ebp]
  0003a	8b 5d 18	 mov	 ebx, DWORD PTR _DeviceDesc$[ebp]

; 1047 :     HANDLE          hHubDevice = NULL;
; 1048 :     ULONG           nBytes = 0;
; 1049 : 
; 1050 :     Log(LOG_DEBUG, __LINE__, ">> USB.EnumHub");

  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JENLAABL@?$DO?$DO?5USB?4EnumHub@
  00042	68 1a 04 00 00	 push	 1050			; 0000041aH
  00047	6a 10		 push	 16			; 00000010H
  00049	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _HubName$GSCopy$1$[ebp], eax
  0004f	c7 85 b0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _nBytes$[ebp], 0
  00059	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1051 : 
; 1052 :     // Allocate some space for a USBDEVICEINFO structure to hold the
; 1053 :     // hub info, hub name, and connection info pointers.  GPTR zero
; 1054 :     // initializes the structure for us.
; 1055 :     //
; 1056 :     PUSBDEVICEINFO info = (PUSBDEVICEINFO)malloc(sizeof(USBDEVICEINFO));

  0005e	6a 14		 push	 20			; 00000014H
  00060	e8 00 00 00 00	 call	 _malloc
  00065	8b f0		 mov	 esi, eax
  00067	83 c4 10	 add	 esp, 16			; 00000010H
  0006a	89 b5 bc fd ff
	ff		 mov	 DWORD PTR _info$1$[ebp], esi

; 1057 :     if (info)

  00070	85 f6		 test	 esi, esi
  00072	0f 84 4e 03 00
	00		 je	 $LN2@EnumerateH

; 1058 :     {
; 1059 :         memset(info, 0x00, sizeof(USBDEVICEINFO));
; 1060 : 
; 1061 :         // Keep copies of the Hub Name, Connection Info, and Configuration
; 1062 :         // Descriptor pointers
; 1063 :         //
; 1064 :         info->HubName = HubName;

  00078	8b 85 b8 fd ff
	ff		 mov	 eax, DWORD PTR _HubName$GSCopy$1$[ebp]
  0007e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00084	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1065 :         info->ConnectionInfo = ConnectionInfo;
; 1066 :         info->ConfigDesc = ConfigDesc;

  00087	8b 45 10	 mov	 eax, DWORD PTR _ConfigDesc$[ebp]
  0008a	89 46 0c	 mov	 DWORD PTR [esi+12], eax

; 1067 :         info->StringDescs = StringDescs;

  0008d	8b 45 14	 mov	 eax, DWORD PTR _StringDescs$[ebp]

; 1068 : 
; 1069 :         // Allocate some space for a USB_NODE_INFORMATION structure for this Hub,
; 1070 :         //
; 1071 :         info->HubInfo = (PUSB_NODE_INFORMATION)malloc(sizeof(USB_NODE_INFORMATION));

  00090	6a 4c		 push	 76			; 0000004cH
  00092	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  00095	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00098	e8 00 00 00 00	 call	 _malloc
  0009d	83 c4 04	 add	 esp, 4
  000a0	89 06		 mov	 DWORD PTR [esi], eax

; 1072 :         if (info->HubInfo)

  000a2	6a 4c		 push	 76			; 0000004cH
  000a4	85 c0		 test	 eax, eax
  000a6	0f 84 fb 02 00
	00		 je	 $LN4@EnumerateH

; 1073 :         {
; 1074 :             memset(info->HubInfo, 0x00, sizeof(USB_NODE_INFORMATION));

  000ac	6a 00		 push	 0
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 _memset
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  000b7	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _deviceName$3[ebp+16], 0

; 1785 : 		_Myres(0)

  000c1	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _deviceName$3[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000cb	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _deviceName$3[ebp]

; 3976 : 		_My_data._Mysize = 0;

  000d1	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _deviceName$3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  000db	c7 85 ec fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR _deviceName$3[ebp+20], 15 ; 0000000fH

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000e5	6a 04		 push	 4
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_04GBDIODIA@?2?2?4?2@
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  000ec	c6 85 d8 fd ff
	ff 00		 mov	 BYTE PTR _deviceName$3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000f3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1076 :             std::string deviceName{ "\\\\.\\" };

  000f8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2527 : 		return (append(_Ptr));

  000ff	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _deviceName$3[ebp]
  00105	ff b5 b8 fd ff
	ff		 push	 DWORD PTR _HubName$GSCopy$1$[ebp]
  0010b	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00110	83 bd ec fd ff
	ff 10		 cmp	 DWORD PTR _deviceName$3[ebp+20], 16 ; 00000010H

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00117	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _deviceName$3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1079 :             hHubDevice = CreateFile(deviceName.c_str(),

  0011d	6a 00		 push	 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1815 : 		if (_Large_string_engaged())

  0011f	0f 43 85 d8 fd
	ff ff		 cmovae	 eax, DWORD PTR _deviceName$3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1079 :             hHubDevice = CreateFile(deviceName.c_str(),

  00126	6a 00		 push	 0
  00128	6a 03		 push	 3
  0012a	6a 00		 push	 0
  0012c	6a 02		 push	 2
  0012e	68 00 00 00 40	 push	 1073741824		; 40000000H
  00133	50		 push	 eax
  00134	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  0013a	89 85 b4 fd ff
	ff		 mov	 DWORD PTR _hHubDevice$1$[ebp], eax

; 1080 :                 GENERIC_WRITE,
; 1081 :                 FILE_SHARE_WRITE,
; 1082 :                 NULL,
; 1083 :                 OPEN_EXISTING,
; 1084 :                 0,
; 1085 :                 NULL);
; 1086 : 
; 1087 :             if (hHubDevice != INVALID_HANDLE_VALUE)

  00140	83 f8 ff	 cmp	 eax, -1
  00143	0f 84 da 01 00
	00		 je	 $LN6@EnumerateH

; 1088 :             {
; 1089 :                 //
; 1090 :                 // Now query USBHUB for the USB_NODE_INFORMATION structure for this hub.
; 1091 :                 // This will tell us the number of downstream ports to enumerate, among
; 1092 :                 // other things.
; 1093 :                 //
; 1094 :                 BOOL success = DeviceIoControl(hHubDevice,

  00149	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0014b	8d 95 b0 fd ff
	ff		 lea	 edx, DWORD PTR _nBytes$[ebp]
  00151	6a 00		 push	 0
  00153	52		 push	 edx
  00154	6a 4c		 push	 76			; 0000004cH
  00156	51		 push	 ecx
  00157	6a 4c		 push	 76			; 0000004cH
  00159	51		 push	 ecx
  0015a	68 08 04 22 00	 push	 2229256			; 00220408H
  0015f	50		 push	 eax
  00160	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 1095 :                     IOCTL_USB_GET_NODE_INFORMATION,
; 1096 :                     info->HubInfo,
; 1097 :                     sizeof(USB_NODE_INFORMATION),
; 1098 :                     info->HubInfo,
; 1099 :                     sizeof(USB_NODE_INFORMATION),
; 1100 :                     &nBytes,
; 1101 :                     NULL);
; 1102 : 
; 1103 :                 if (success)

  00166	85 c0		 test	 eax, eax
  00168	0f 84 a8 01 00
	00		 je	 $LN174@EnumerateH

; 1104 :                 {
; 1105 :                     // Build the leaf name from the port number and the device description
; 1106 :                     //
; 1107 :                     CHAR leafName[512] = { 0 };

  0016e	68 00 02 00 00	 push	 512			; 00000200H
  00173	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _leafName$4[ebp]
  00179	6a 00		 push	 0
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 _memset
  00181	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1108 :                     if (ConnectionInfo)

  00184	85 ff		 test	 edi, edi
  00186	74 77		 je	 SHORT $LN8@EnumerateH

; 1109 :                     {
; 1110 :                         wsprintf(leafName, "[Port%lu] ", ConnectionInfo->ConnectionIndex);

  00188	ff 37		 push	 DWORD PTR [edi]
  0018a	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR _leafName$4[ebp]
  00190	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KFNJHJLN@?$FLPort?$CFlu?$FN?5@
  00195	50		 push	 eax
  00196	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 1111 :                         strcat(leafName, ConnectionStatuses[ConnectionInfo->ConnectionStatus]);

  0019c	8b 47 1f	 mov	 eax, DWORD PTR [edi+31]
  0019f	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a2	8b 14 85 00 00
	00 00		 mov	 edx, DWORD PTR ?ConnectionStatuses@@3PAPADA[eax*4]
  001a9	8b f2		 mov	 esi, edx
  001ab	0f 1f 44 00 00	 npad	 5
$LL167@EnumerateH:
  001b0	8a 02		 mov	 al, BYTE PTR [edx]
  001b2	42		 inc	 edx
  001b3	84 c0		 test	 al, al
  001b5	75 f9		 jne	 SHORT $LL167@EnumerateH
  001b7	8d bd f0 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$4[ebp]
  001bd	2b d6		 sub	 edx, esi
  001bf	4f		 dec	 edi
$LL168@EnumerateH:
  001c0	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  001c3	47		 inc	 edi
  001c4	84 c0		 test	 al, al
  001c6	75 f8		 jne	 SHORT $LL168@EnumerateH
  001c8	8b ca		 mov	 ecx, edx
  001ca	c1 e9 02	 shr	 ecx, 2
  001cd	f3 a5		 rep movsd
  001cf	8b ca		 mov	 ecx, edx
  001d1	83 e1 03	 and	 ecx, 3
  001d4	f3 a4		 rep movsb

; 1112 :                         strcat(leafName, " :  ");

  001d6	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR _leafName$4[ebp]
  001dc	49		 dec	 ecx
  001dd	0f 1f 00	 npad	 3
$LL169@EnumerateH:
  001e0	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  001e3	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001e6	84 c0		 test	 al, al
  001e8	75 f6		 jne	 SHORT $LL169@EnumerateH
  001ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04MKEDFNGB@?5?3?5?5@
  001ef	8b b5 bc fd ff
	ff		 mov	 esi, DWORD PTR _info$1$[ebp]
  001f5	89 01		 mov	 DWORD PTR [ecx], eax
  001f7	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_04MKEDFNGB@?5?3?5?5@+4
  001fc	88 41 04	 mov	 BYTE PTR [ecx+4], al
$LN8@EnumerateH:

; 1113 :                     }
; 1114 : 
; 1115 :                     if (DeviceDesc != NULL)

  001ff	85 db		 test	 ebx, ebx
  00201	74 33		 je	 SHORT $LN9@EnumerateH

; 1116 :                         strcat(leafName, DeviceDesc);

  00203	8b f3		 mov	 esi, ebx
$LL170@EnumerateH:
  00205	8a 03		 mov	 al, BYTE PTR [ebx]
  00207	43		 inc	 ebx
  00208	84 c0		 test	 al, al
  0020a	75 f9		 jne	 SHORT $LL170@EnumerateH
  0020c	8d bd f0 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$4[ebp]
  00212	2b de		 sub	 ebx, esi
  00214	4f		 dec	 edi
$LL171@EnumerateH:
  00215	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00218	47		 inc	 edi
  00219	84 c0		 test	 al, al
  0021b	75 f8		 jne	 SHORT $LL171@EnumerateH
  0021d	8b cb		 mov	 ecx, ebx
  0021f	c1 e9 02	 shr	 ecx, 2
  00222	f3 a5		 rep movsd
  00224	8b cb		 mov	 ecx, ebx
  00226	83 e1 03	 and	 ecx, 3
  00229	f3 a4		 rep movsb
  0022b	8b b5 bc fd ff
	ff		 mov	 esi, DWORD PTR _info$1$[ebp]
  00231	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]

; 1117 :                     else

  00234	eb 36		 jmp	 SHORT $LN10@EnumerateH
$LN9@EnumerateH:

; 1118 :                         strcat(leafName, info->HubName);

  00236	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00239	8b d3		 mov	 edx, ebx
  0023b	8b f3		 mov	 esi, ebx
  0023d	0f 1f 00	 npad	 3
$LL172@EnumerateH:
  00240	8a 02		 mov	 al, BYTE PTR [edx]
  00242	42		 inc	 edx
  00243	84 c0		 test	 al, al
  00245	75 f9		 jne	 SHORT $LL172@EnumerateH
  00247	8d bd f0 fd ff
	ff		 lea	 edi, DWORD PTR _leafName$4[ebp]
  0024d	2b d6		 sub	 edx, esi
  0024f	4f		 dec	 edi
$LL173@EnumerateH:
  00250	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00253	47		 inc	 edi
  00254	84 c0		 test	 al, al
  00256	75 f8		 jne	 SHORT $LL173@EnumerateH
  00258	8b ca		 mov	 ecx, edx
  0025a	c1 e9 02	 shr	 ecx, 2
  0025d	f3 a5		 rep movsd
  0025f	8b ca		 mov	 ecx, edx
  00261	83 e1 03	 and	 ecx, 3
  00264	f3 a4		 rep movsb
  00266	8b b5 bc fd ff
	ff		 mov	 esi, DWORD PTR _info$1$[ebp]
$LN10@EnumerateH:

; 1119 : 
; 1120 :                     // Now recursively enumerate the ports of this hub.
; 1121 :                     //
; 1122 :                     PushBackDetails(info->HubName);

  0026c	53		 push	 ebx
  0026d	8d 8d c0 fd ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00273	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00278	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0027c	8d 85 c0 fd ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00282	8b 9d ac fd ff
	ff		 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]
  00288	8b cb		 mov	 ecx, ebx
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00290	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00294	8b 95 d4 fd ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  0029a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0029d	72 2f		 jb	 SHORT $LN96@EnumerateH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0029f	8b 8d c0 fd ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  002a5	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002a6	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  002a8	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002ae	72 14		 jb	 SHORT $LN95@EnumerateH

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  002b0	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002b3	83 c2 23	 add	 edx, 35			; 00000023H
  002b6	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002b8	83 c0 fc	 add	 eax, -4			; fffffffcH
  002bb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002be	0f 87 4a 01 00
	00		 ja	 $LN178@EnumerateH
$LN95@EnumerateH:

; 207  : 	::operator delete(_Ptr, _Bytes);

  002c4	52		 push	 edx
  002c5	51		 push	 ecx
  002c6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002cb	83 c4 08	 add	 esp, 8
$LN96@EnumerateH:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1123 :                     HubInfo(&info->HubInfo->u.HubInformation);

  002ce	8b 06		 mov	 eax, DWORD PTR [esi]
  002d0	8b cb		 mov	 ecx, ebx
  002d2	83 c0 04	 add	 eax, 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  002d5	c7 85 d0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1123 :                     HubInfo(&info->HubInfo->u.HubInformation);

  002df	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002e0	c7 85 d4 fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002ea	c6 85 c0 fd ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1123 :                     HubInfo(&info->HubInfo->u.HubInformation);

  002f1	e8 00 00 00 00	 call	 ?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z ; USB::HubInfo

; 1124 :                     EnumerateHubPorts(hHubDevice,

  002f6	8b 06		 mov	 eax, DWORD PTR [esi]
  002f8	8b cb		 mov	 ecx, ebx
  002fa	8b bd b4 fd ff
	ff		 mov	 edi, DWORD PTR _hHubDevice$1$[ebp]
  00300	0f b6 40 06	 movzx	 eax, BYTE PTR [eax+6]
  00304	50		 push	 eax
  00305	57		 push	 edi
  00306	e8 00 00 00 00	 call	 ?EnumerateHubPorts@USB@@IAEXPAXK@Z ; USB::EnumerateHubPorts

; 1125 :                         info->HubInfo->u.HubInformation.HubDescriptor.bNumberOfPorts);
; 1126 : 
; 1127 :                     wPortsNumber += info->HubInfo->u.HubInformation.HubDescriptor.bNumberOfPorts;

  0030b	8b 06		 mov	 eax, DWORD PTR [esi]
  0030d	0f b6 40 06	 movzx	 eax, BYTE PTR [eax+6]
  00311	66 01 03	 add	 WORD PTR [ebx], ax
  00314	eb 06		 jmp	 SHORT $LN7@EnumerateH
$LN174@EnumerateH:

; 1095 :                     IOCTL_USB_GET_NODE_INFORMATION,
; 1096 :                     info->HubInfo,
; 1097 :                     sizeof(USB_NODE_INFORMATION),
; 1098 :                     info->HubInfo,
; 1099 :                     sizeof(USB_NODE_INFORMATION),
; 1100 :                     &nBytes,
; 1101 :                     NULL);
; 1102 : 
; 1103 :                 if (success)

  00316	8b bd b4 fd ff
	ff		 mov	 edi, DWORD PTR _hHubDevice$1$[ebp]
$LN7@EnumerateH:

; 1128 :                 }
; 1129 :                 CloseHandle(hHubDevice);

  0031c	57		 push	 edi
  0031d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN6@EnumerateH:

; 1130 :             }
; 1131 :             //
; 1132 :             // Clean up any stuff that got allocated
; 1133 :             //
; 1134 :             free(HubName);

  00323	ff b5 b8 fd ff
	ff		 push	 DWORD PTR _HubName$GSCopy$1$[ebp]
  00329	e8 00 00 00 00	 call	 _free

; 1135 : 
; 1136 :             if (info->HubInfo != NULL)

  0032e	8b 06		 mov	 eax, DWORD PTR [esi]
  00330	83 c4 04	 add	 esp, 4
  00333	85 c0		 test	 eax, eax
  00335	74 09		 je	 SHORT $LN11@EnumerateH

; 1137 :                 free(info->HubInfo);

  00337	50		 push	 eax
  00338	e8 00 00 00 00	 call	 _free
  0033d	83 c4 04	 add	 esp, 4
$LN11@EnumerateH:

; 1138 :         }

  00340	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00347	8b 95 ec fd ff
	ff		 mov	 edx, DWORD PTR _deviceName$3[ebp+20]
  0034d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00350	72 2f		 jb	 SHORT $LN153@EnumerateH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00352	8b 8d d8 fd ff
	ff		 mov	 ecx, DWORD PTR _deviceName$3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00358	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00359	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0035b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00361	72 14		 jb	 SHORT $LN152@EnumerateH

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00363	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00366	83 c2 23	 add	 edx, 35			; 00000023H
  00369	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0036b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0036e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00371	0f 87 9c 00 00
	00		 ja	 $LN179@EnumerateH
$LN152@EnumerateH:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00377	52		 push	 edx
  00378	51		 push	 ecx
  00379	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0037e	83 c4 08	 add	 esp, 8
$LN153@EnumerateH:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1143 :         free(info);

  00381	56		 push	 esi
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00382	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _deviceName$3[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0038c	c7 85 ec fd ff
	ff 0f 00 00 00	 mov	 DWORD PTR _deviceName$3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00396	c6 85 d8 fd ff
	ff 00		 mov	 BYTE PTR _deviceName$3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1143 :         free(info);

  0039d	e8 00 00 00 00	 call	 _free
  003a2	83 c4 04	 add	 esp, 4

; 1144 :     }
; 1145 :     else

  003a5	eb 35		 jmp	 SHORT $LN3@EnumerateH
$LN4@EnumerateH:

; 1139 :         else
; 1140 :         {
; 1141 :             Log(LOG_DEBUG, __LINE__, "-- USB.EnumHub, new HubInfo (%u) null", sizeof(USB_NODE_INFORMATION));

  003a7	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FMONKKAG@?9?9?5USB?4EnumHub?0?5new?5HubInfo?5?$CI?$CFu@
  003ac	68 75 04 00 00	 push	 1141			; 00000475H
  003b1	6a 10		 push	 16			; 00000010H
  003b3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003b8	83 c4 10	 add	 esp, 16			; 00000010H

; 1143 :         free(info);

  003bb	56		 push	 esi
  003bc	e8 00 00 00 00	 call	 _free
  003c1	83 c4 04	 add	 esp, 4

; 1144 :     }
; 1145 :     else

  003c4	eb 16		 jmp	 SHORT $LN3@EnumerateH
$LN2@EnumerateH:

; 1146 :     {
; 1147 :         Log(LOG_DEBUG, __LINE__, "-- USB.EnumHub, new Info (%u) null", sizeof(USBDEVICEINFO));

  003c6	6a 14		 push	 20			; 00000014H
  003c8	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@EDMNKMD@?9?9?5USB?4EnumHub?0?5new?5Info?5?$CI?$CFu?$CJ?5n@
  003cd	68 7b 04 00 00	 push	 1147			; 0000047bH
  003d2	6a 10		 push	 16			; 00000010H
  003d4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003d9	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@EnumerateH:

; 1148 :     }
; 1149 :     Log(LOG_DEBUG, __LINE__, "<< USB.EnumHub");

  003dc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NNDDHFCH@?$DM?$DM?5USB?4EnumHub@
  003e1	68 7d 04 00 00	 push	 1149			; 0000047dH
  003e6	6a 10		 push	 16			; 00000010H
  003e8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1151 : }

  003f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003fa	59		 pop	 ecx
  003fb	5f		 pop	 edi
  003fc	5e		 pop	 esi
  003fd	5b		 pop	 ebx
  003fe	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00401	33 cd		 xor	 ecx, ebp
  00403	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00408	8b e5		 mov	 esp, ebp
  0040a	5d		 pop	 ebp
  0040b	c2 14 00	 ret	 20			; 00000014H
$LN178@EnumerateH:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0040e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN179@EnumerateH:
  00413	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN176@EnumerateH:
  00418	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z$0:
  00000	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _deviceName$3[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z$1:
  0000b	8d 8d c0 fd ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 8a a8 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-600]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?EnumerateHub@USB@@IAEXPADPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_USB_DESCRIPTOR_REQUEST@@PAU_STRING_DESCRIPTOR_NODE@@0@Z ENDP ; USB::EnumerateHub
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_nBytes$ = -16						; size = 4
_rootHubName$ = -12					; size = 6
__$ArrayPad$ = -4					; size = 4
_HostController$ = 8					; size = 4
?GetRootHubName@USB@@IAEPADPAX@Z PROC			; USB::GetRootHubName
; _this$dead$ = ecx

; 1154 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 10	 mov	 DWORD PTR __$ArrayPad$[esp+20], eax
  00014	53		 push	 ebx
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _HostController$[ebp]
  00018	56		 push	 esi
  00019	57		 push	 edi

; 1155 :     BOOL                success;
; 1156 :     ULONG               nBytes = 0;
; 1157 :     USB_ROOT_HUB_NAME   rootHubName;
; 1158 :     PUSB_ROOT_HUB_NAME  rootHubNameW = NULL;
; 1159 :     PCHAR               rootHubNameA = NULL;
; 1160 : 
; 1161 :     Log(LOG_DEBUG, __LINE__, ">> USB.GetRootHub");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGMOMHHM@?$DO?$DO?5USB?4GetRootHub@
  0001f	68 89 04 00 00	 push	 1161			; 00000489H
  00024	6a 10		 push	 16			; 00000010H
  00026	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR _nBytes$[esp+44], 0
  0002e	33 ff		 xor	 edi, edi
  00030	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1162 : 
; 1163 :     memset(&rootHubName, 0x00, sizeof(rootHubName));

  00038	33 c0		 xor	 eax, eax
  0003a	89 44 24 14	 mov	 DWORD PTR _rootHubName$[esp+32], eax
  0003e	66 89 44 24 18	 mov	 WORD PTR _rootHubName$[esp+36], ax

; 1164 : 
; 1165 :     // Get the length of the name of the Root Hub attached to the
; 1166 :     // Host Controller
; 1167 :     //
; 1168 :     success = DeviceIoControl(HostController,

  00043	50		 push	 eax
  00044	8d 44 24 14	 lea	 eax, DWORD PTR _nBytes$[esp+36]
  00048	50		 push	 eax
  00049	6a 06		 push	 6
  0004b	8d 44 24 20	 lea	 eax, DWORD PTR _rootHubName$[esp+44]
  0004f	50		 push	 eax
  00050	57		 push	 edi
  00051	57		 push	 edi
  00052	68 08 04 22 00	 push	 2229256			; 00220408H
  00057	53		 push	 ebx
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 1169 :         IOCTL_USB_GET_ROOT_HUB_NAME,
; 1170 :         0,
; 1171 :         0,
; 1172 :         &rootHubName,
; 1173 :         sizeof(rootHubName),
; 1174 :         &nBytes,
; 1175 :         NULL);
; 1176 :     if (success)

  0005e	85 c0		 test	 eax, eax
  00060	74 55		 je	 SHORT $LN3@GetRootHub

; 1177 :     {
; 1178 :         // Allocate space to hold the Root Hub name
; 1179 :         //
; 1180 :         nBytes = rootHubName.ActualLength;

  00062	8b 44 24 14	 mov	 eax, DWORD PTR _rootHubName$[esp+32]

; 1181 : 
; 1182 :         rootHubNameW = (struct _USB_ROOT_HUB_NAME *)malloc(nBytes);

  00066	50		 push	 eax
  00067	89 44 24 14	 mov	 DWORD PTR _nBytes$[esp+36], eax
  0006b	e8 00 00 00 00	 call	 _malloc
  00070	8b f0		 mov	 esi, eax
  00072	83 c4 04	 add	 esp, 4

; 1183 :         if (rootHubNameW)

  00075	85 f6		 test	 esi, esi
  00077	74 3e		 je	 SHORT $LN3@GetRootHub

; 1184 :         {
; 1185 :             memset(rootHubNameW, 0x00, nBytes);

  00079	ff 74 24 10	 push	 DWORD PTR _nBytes$[esp+32]
  0007d	57		 push	 edi
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 _memset
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1186 : 
; 1187 :             // Get the name of the Root Hub attached to the Host Controller
; 1188 :             //
; 1189 :             success = DeviceIoControl(HostController,

  00087	8d 44 24 10	 lea	 eax, DWORD PTR _nBytes$[esp+32]
  0008b	57		 push	 edi
  0008c	50		 push	 eax
  0008d	ff 74 24 18	 push	 DWORD PTR _nBytes$[esp+40]
  00091	56		 push	 esi
  00092	57		 push	 edi
  00093	57		 push	 edi
  00094	68 08 04 22 00	 push	 2229256			; 00220408H
  00099	53		 push	 ebx
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 1190 :                 IOCTL_USB_GET_ROOT_HUB_NAME,
; 1191 :                 NULL,
; 1192 :                 0,
; 1193 :                 rootHubNameW,
; 1194 :                 nBytes,
; 1195 :                 &nBytes,
; 1196 :                 NULL);
; 1197 : 
; 1198 :             if (success)

  000a0	85 c0		 test	 eax, eax
  000a2	74 0a		 je	 SHORT $LN4@GetRootHub

; 1199 :             {
; 1200 :                 // Convert the Root Hub name
; 1201 :                 //
; 1202 :                 rootHubNameA = WideStrToMultiStr(rootHubNameW->RootHubName);

  000a4	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000a7	e8 00 00 00 00	 call	 ?WideStrToMultiStr@@YAPADPA_W@Z ; WideStrToMultiStr
  000ac	8b f8		 mov	 edi, eax
$LN4@GetRootHub:

; 1203 :             }
; 1204 :             free(rootHubNameW);

  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 _free
  000b4	83 c4 04	 add	 esp, 4
$LN3@GetRootHub:

; 1205 :         }
; 1206 :     }
; 1207 :     Log(LOG_DEBUG, __LINE__, "<< USB.GetRootHub, HubName %s", rootHubNameA);

  000b7	57		 push	 edi
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@MFMFEBEJ@?$DM?$DM?5USB?4GetRootHub?0?5HubName?5?$CFs@
  000bd	68 b7 04 00 00	 push	 1207			; 000004b7H
  000c2	6a 10		 push	 16			; 00000010H
  000c4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1208 :     return rootHubNameA;
; 1209 : }

  000c9	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+48]
  000cd	83 c4 10	 add	 esp, 16			; 00000010H
  000d0	8b c7		 mov	 eax, edi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	33 cc		 xor	 ecx, esp
  000d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 04 00	 ret	 4
?GetRootHubName@USB@@IAEPADPAX@Z ENDP			; USB::GetRootHubName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_nBytes$ = -16						; size = 4
_driverKeyName$ = -12					; size = 6
__$ArrayPad$ = -4					; size = 4
_HCD$ = 8						; size = 4
?GetHCDDriverKeyName@USB@@IAEPADPAX@Z PROC		; USB::GetHCDDriverKeyName
; _this$dead$ = ecx

; 1212 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 10	 mov	 DWORD PTR __$ArrayPad$[esp+20], eax
  00014	53		 push	 ebx
  00015	8b 5d 08	 mov	 ebx, DWORD PTR _HCD$[ebp]
  00018	56		 push	 esi
  00019	57		 push	 edi

; 1213 :     BOOL                    success;
; 1214 :     ULONG                   nBytes = 0;
; 1215 :     USB_HCD_DRIVERKEY_NAME  driverKeyName;
; 1216 :     PUSB_HCD_DRIVERKEY_NAME driverKeyNameW = NULL;
; 1217 :     PCHAR                   driverKeyNameA = NULL;
; 1218 : 
; 1219 :     Log(LOG_DEBUG, __LINE__, ">> USB.GetHCDDrvKeyName");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LFJMJGOI@?$DO?$DO?5USB?4GetHCDDrvKeyName@
  0001f	68 c3 04 00 00	 push	 1219			; 000004c3H
  00024	6a 10		 push	 16			; 00000010H
  00026	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR _nBytes$[esp+44], 0
  0002e	33 ff		 xor	 edi, edi
  00030	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1220 : 
; 1221 :     // Get the length of the name of the driver key of the HCD
; 1222 :     //
; 1223 :     memset(&driverKeyName, 0, sizeof(driverKeyName));

  00038	33 c0		 xor	 eax, eax
  0003a	89 44 24 14	 mov	 DWORD PTR _driverKeyName$[esp+32], eax
  0003e	66 89 44 24 18	 mov	 WORD PTR _driverKeyName$[esp+36], ax

; 1224 :     success = DeviceIoControl(HCD,

  00043	50		 push	 eax
  00044	8d 44 24 14	 lea	 eax, DWORD PTR _nBytes$[esp+36]
  00048	50		 push	 eax
  00049	6a 06		 push	 6
  0004b	8d 44 24 20	 lea	 eax, DWORD PTR _driverKeyName$[esp+44]
  0004f	50		 push	 eax
  00050	6a 06		 push	 6
  00052	50		 push	 eax
  00053	68 24 04 22 00	 push	 2229284			; 00220424H
  00058	53		 push	 ebx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 1225 :         IOCTL_GET_HCD_DRIVERKEY_NAME,
; 1226 :         &driverKeyName,
; 1227 :         sizeof(driverKeyName),
; 1228 :         &driverKeyName,
; 1229 :         sizeof(driverKeyName),
; 1230 :         &nBytes,
; 1231 :         NULL);
; 1232 :     if (success)

  0005f	85 c0		 test	 eax, eax
  00061	74 5b		 je	 SHORT $LN4@GetHCDDriv

; 1233 :     {
; 1234 : 
; 1235 :         // Allocate space to hold the driver key name
; 1236 :         //
; 1237 :         nBytes = driverKeyName.ActualLength;

  00063	8b 44 24 14	 mov	 eax, DWORD PTR _driverKeyName$[esp+32]
  00067	89 44 24 10	 mov	 DWORD PTR _nBytes$[esp+32], eax

; 1238 : 
; 1239 :         if (nBytes > sizeof(driverKeyName))

  0006b	83 f8 06	 cmp	 eax, 6
  0006e	76 4e		 jbe	 SHORT $LN4@GetHCDDriv

; 1240 :         {
; 1241 :             driverKeyNameW = (struct _USB_HCD_DRIVERKEY_NAME *)malloc(nBytes);

  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 _malloc
  00076	8b f0		 mov	 esi, eax
  00078	83 c4 04	 add	 esp, 4

; 1242 :             if (driverKeyNameW)

  0007b	85 f6		 test	 esi, esi
  0007d	74 3f		 je	 SHORT $LN4@GetHCDDriv

; 1243 :             {
; 1244 :                 memset(driverKeyNameW, 0x00, nBytes);

  0007f	ff 74 24 10	 push	 DWORD PTR _nBytes$[esp+32]
  00083	57		 push	 edi
  00084	56		 push	 esi
  00085	e8 00 00 00 00	 call	 _memset
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1245 : 
; 1246 :                 // Get the name of the driver key of the device attached to
; 1247 :                 // the specified port.
; 1248 :                 //
; 1249 :                 success = DeviceIoControl(HCD,

  0008d	8d 44 24 10	 lea	 eax, DWORD PTR _nBytes$[esp+32]
  00091	57		 push	 edi
  00092	50		 push	 eax
  00093	8b 44 24 18	 mov	 eax, DWORD PTR _nBytes$[esp+40]
  00097	50		 push	 eax
  00098	56		 push	 esi
  00099	50		 push	 eax
  0009a	56		 push	 esi
  0009b	68 24 04 22 00	 push	 2229284			; 00220424H
  000a0	53		 push	 ebx
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 1250 :                     IOCTL_GET_HCD_DRIVERKEY_NAME,
; 1251 :                     driverKeyNameW,
; 1252 :                     nBytes,
; 1253 :                     driverKeyNameW,
; 1254 :                     nBytes,
; 1255 :                     &nBytes,
; 1256 :                     NULL);
; 1257 : 
; 1258 :                 if (success)

  000a7	85 c0		 test	 eax, eax
  000a9	74 0a		 je	 SHORT $LN5@GetHCDDriv

; 1259 :                 {
; 1260 :                     // Convert the driver key name
; 1261 :                     //
; 1262 :                     driverKeyNameA = WideStrToMultiStr(driverKeyNameW->DriverKeyName);

  000ab	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000ae	e8 00 00 00 00	 call	 ?WideStrToMultiStr@@YAPADPA_W@Z ; WideStrToMultiStr
  000b3	8b f8		 mov	 edi, eax
$LN5@GetHCDDriv:

; 1263 :                 }
; 1264 :                 free(driverKeyNameW);

  000b5	56		 push	 esi
  000b6	e8 00 00 00 00	 call	 _free
  000bb	83 c4 04	 add	 esp, 4
$LN4@GetHCDDriv:

; 1265 :             }
; 1266 :         }
; 1267 :     }
; 1268 :     Log(LOG_DEBUG, __LINE__, "<< USB.GetHCDDrvKeyName, DrvKeyName %s", driverKeyNameA);

  000be	57		 push	 edi
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GAKGEKMO@?$DM?$DM?5USB?4GetHCDDrvKeyName?0?5DrvKey@
  000c4	68 f4 04 00 00	 push	 1268			; 000004f4H
  000c9	6a 10		 push	 16			; 00000010H
  000cb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1269 :     return driverKeyNameA;
; 1270 : }

  000d0	8b 4c 24 2c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+48]
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	8b c7		 mov	 eax, edi
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	33 cc		 xor	 ecx, esp
  000de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 04 00	 ret	 4
?GetHCDDriverKeyName@USB@@IAEPADPAX@Z ENDP		; USB::GetHCDDriverKeyName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_hHubDevice$GSCopy$1$ = -332				; size = 4
_i$1$ = -328						; size = 4
_nBytesReturned$2 = -324				; size = 4
_LanguageID$1$ = -320					; size = 4
_nBytes$1$ = -320					; size = 4
tv603 = -314						; size = 4
$T3 = -312						; size = 24
_stringDescReqBuf$4 = -288				; size = 267
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hHubDevice$ = 8					; size = 4
_ConnectionIndex$ = 12					; size = 4
_DescriptorIndex$ = 16					; size = 1
_NumLanguageIDs$ = 20					; size = 4
_LanguageIDs$ = 24					; size = 4
_StringDescNodeTail$ = 28				; size = 4
?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z PROC ; USB::GetStringDescriptors
; _this$dead$ = ecx

; 1273 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b 45 08	 mov	 eax, DWORD PTR _hHubDevice$[ebp]
  00031	8b 75 1c	 mov	 esi, DWORD PTR _StringDescNodeTail$[ebp]

; 1274 :     ULONG i;
; 1275 : 
; 1276 :     Log(LOG_DEBUG, __LINE__, ">> USB.GetStrDescs");

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HEHGMECG@?$DO?$DO?5USB?4GetStrDescs@
  00039	68 fc 04 00 00	 push	 1276			; 000004fcH
  0003e	6a 10		 push	 16			; 00000010H
  00040	89 85 b4 fe ff
	ff		 mov	 DWORD PTR _hHubDevice$GSCopy$1$[ebp], eax
  00046	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1277 : 
; 1278 :     for (i = 0; i < NumLanguageIDs; i++)

  0004e	c7 85 b8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  00058	83 7d 14 00	 cmp	 DWORD PTR _NumLanguageIDs$[ebp], 0
  0005c	0f 86 22 03 00
	00		 jbe	 $LN94@GetStringD
  00062	0f b6 7d 10	 movzx	 edi, BYTE PTR _DescriptorIndex$[ebp]
  00066	b8 00 03 00 00	 mov	 eax, 768		; 00000300H
  0006b	66 0b f8	 or	 di, ax
  0006e	66 89 bd c6 fe
	ff ff		 mov	 WORD PTR tv603[ebp], di
  00075	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@GetStringD:

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  00080	8b 45 18	 mov	 eax, DWORD PTR _LanguageIDs$[ebp]

; 217  :     Log(LOG_DEBUG, __LINE__, ">> USB.GetStrDesc");

  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OBKJMAF@?$DO?$DO?5USB?4GetStrDesc@
  00088	68 d9 00 00 00	 push	 217			; 000000d9H
  0008d	6a 10		 push	 16			; 00000010H

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  0008f	0f b7 18	 movzx	 ebx, WORD PTR [eax]
  00092	89 9d c0 fe ff
	ff		 mov	 DWORD PTR _LanguageID$1$[ebp], ebx

; 215  :     ULONG   nBytesReturned = 0;

  00098	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _nBytesReturned$2[ebp], 0

; 216  : 
; 217  :     Log(LOG_DEBUG, __LINE__, ">> USB.GetStrDesc");

  000a2	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 218  : 
; 219  :     UCHAR   stringDescReqBuf[sizeof(USB_DESCRIPTOR_REQUEST) + MAXIMUM_USB_STRING_LENGTH];
; 220  : 
; 221  :     PSTRING_DESCRIPTOR_NODE stringDescNode = NULL;
; 222  : 
; 223  :     nBytes = sizeof(stringDescReqBuf);
; 224  : 
; 225  :     PUSB_DESCRIPTOR_REQUEST stringDescReq = (PUSB_DESCRIPTOR_REQUEST)stringDescReqBuf;
; 226  :     PUSB_STRING_DESCRIPTOR stringDesc = (PUSB_STRING_DESCRIPTOR)(stringDescReq + 1);
; 227  : 
; 228  :     // Zero fill the entire request structure
; 229  :     //
; 230  :     memset(stringDescReq, 0, nBytes);

  000aa	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$4[ebp]
  000b0	68 0b 01 00 00	 push	 267			; 0000010bH
  000b5	6a 00		 push	 0
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 _memset

; 231  : 
; 232  :     // Indicate the port from which the descriptor will be requested
; 233  :     //
; 234  :     stringDescReq->ConnectionIndex = ConnectionIndex;

  000bd	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c3	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _stringDescReqBuf$4[ebp], eax

; 235  : 
; 236  :     //
; 237  :     // USBHUB uses URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE to process this
; 238  :     // IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION request.
; 239  :     //
; 240  :     // USBD will automatically initialize these fields:
; 241  :     //     bmRequest = 0x80
; 242  :     //     bRequest  = 0x06
; 243  :     //
; 244  :     // We must inititialize these fields:
; 245  :     //     wValue    = Descriptor Type (high) and Descriptor Index (low byte)
; 246  :     //     wIndex    = Zero (or Language ID for String Descriptors)
; 247  :     //     wLength   = Length of descriptor buffer
; 248  :     //
; 249  :     stringDescReq->SetupPacket.wValue = (USB_STRING_DESCRIPTOR_TYPE << 8)
; 250  :         | DescriptorIndex;
; 251  : 
; 252  :     stringDescReq->SetupPacket.wIndex = LanguageID;
; 253  : 
; 254  :     stringDescReq->SetupPacket.wLength = (USHORT)(nBytes - sizeof(USB_DESCRIPTOR_REQUEST));

  000c9	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  000ce	66 89 85 ea fe
	ff ff		 mov	 WORD PTR _stringDescReqBuf$4[ebp+10], ax

; 255  : 
; 256  :     // Now issue the get descriptor request.
; 257  :     //
; 258  :     success = DeviceIoControl(hHubDevice,

  000d5	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _nBytesReturned$2[ebp]
  000db	66 89 bd e6 fe
	ff ff		 mov	 WORD PTR _stringDescReqBuf$4[ebp+6], di
  000e2	6a 00		 push	 0
  000e4	50		 push	 eax
  000e5	68 0b 01 00 00	 push	 267			; 0000010bH
  000ea	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$4[ebp]
  000f0	66 89 9d e8 fe
	ff ff		 mov	 WORD PTR _stringDescReqBuf$4[ebp+8], bx
  000f7	50		 push	 eax
  000f8	68 0b 01 00 00	 push	 267			; 0000010bH
  000fd	50		 push	 eax
  000fe	68 10 04 22 00	 push	 2229264			; 00220410H
  00103	ff b5 b4 fe ff
	ff		 push	 DWORD PTR _hHubDevice$GSCopy$1$[ebp]
  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 259  :         IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION,
; 260  :         stringDescReq,
; 261  :         nBytes,
; 262  :         stringDescReq,
; 263  :         nBytes,
; 264  :         &nBytesReturned,
; 265  :         NULL);
; 266  : 
; 267  :     //
; 268  :     // Do some sanity checks on the return from the get descriptor request.
; 269  :     //
; 270  : 
; 271  :     if (!success)

  0010f	85 c0		 test	 eax, eax
  00111	75 1f		 jne	 SHORT $LN8@GetStringD

; 272  :     {
; 273  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, DeviceIoControl False");

  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@MLNPNNOJ@?$DM?$DM?5USB?4GetStrDesc?0?5DeviceIoCont@
  00118	68 11 01 00 00	 push	 273			; 00000111H
  0011d	6a 10		 push	 16			; 00000010H
  0011f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00124	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  00127	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 274  :         return NULL;

  0012d	e9 38 02 00 00	 jmp	 $LN5@GetStringD
$LN8@GetStringD:

; 275  :     }
; 276  : 
; 277  :     if (nBytesReturned < 2)

  00132	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR _nBytesReturned$2[ebp]
  00138	83 f8 02	 cmp	 eax, 2
  0013b	73 1d		 jae	 SHORT $LN9@GetStringD

; 278  :     {
; 279  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Bytes Ret %u", nBytesReturned);

  0013d	50		 push	 eax
  0013e	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@JKPBCDKN@?$DM?$DM?5USB?4GetStrDesc?0?5Bytes?5Ret?5?$CFu@
  00143	68 17 01 00 00	 push	 279			; 00000117H
  00148	6a 10		 push	 16			; 00000010H
  0014a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  0014f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 280  :         return NULL;

  00155	e9 0d 02 00 00	 jmp	 $LN97@GetStringD
$LN9@GetStringD:

; 281  :     }
; 282  : 
; 283  :     if (stringDesc->bDescriptorType != USB_STRING_DESCRIPTOR_TYPE)

  0015a	8a 8d ed fe ff
	ff		 mov	 cl, BYTE PTR _stringDescReqBuf$4[ebp+13]
  00160	80 f9 03	 cmp	 cl, 3
  00163	74 20		 je	 SHORT $LN10@GetStringD

; 284  :     {
; 285  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Inv DescriptorTp %d", stringDesc->bDescriptorType);

  00165	0f b6 c1	 movzx	 eax, cl
  00168	50		 push	 eax
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@ELGGMNKC@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Descript@
  0016e	68 1d 01 00 00	 push	 285			; 0000011dH
  00173	6a 10		 push	 16			; 00000010H
  00175	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  0017a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 286  :         return NULL;

  00180	e9 e2 01 00 00	 jmp	 $LN97@GetStringD
$LN10@GetStringD:

; 287  :     }
; 288  : 
; 289  :     if (stringDesc->bLength != nBytesReturned - sizeof(USB_DESCRIPTOR_REQUEST))

  00185	8d 48 f4	 lea	 ecx, DWORD PTR [eax-12]
  00188	0f b6 85 ec fe
	ff ff		 movzx	 eax, BYTE PTR _stringDescReqBuf$4[ebp+12]
  0018f	3b c1		 cmp	 eax, ecx
  00191	74 21		 je	 SHORT $LN11@GetStringD

; 290  :     {
; 291  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Inv Sz %d <> %d", (int)stringDesc->bLength, nBytesReturned - sizeof(USB_DESCRIPTOR_REQUEST));

  00193	51		 push	 ecx
  00194	50		 push	 eax
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@CHKNKAPD@?$DM?$DM?5USB?4GetStrDesc?0?5Inv?5Sz?5?$CFd?5?$DM?$DO@
  0019a	68 23 01 00 00	 push	 291			; 00000123H
  0019f	6a 10		 push	 16			; 00000010H
  001a1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001a6	83 c4 14	 add	 esp, 20			; 00000014H

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  001a9	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 292  :         return NULL;

  001af	e9 b6 01 00 00	 jmp	 $LN5@GetStringD
$LN11@GetStringD:

; 293  :     }
; 294  : 
; 295  :     if (stringDesc->bLength % 2 != 0)

  001b4	a8 01		 test	 al, 1
  001b6	74 1d		 je	 SHORT $LN12@GetStringD

; 296  :     {
; 297  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, Odd Sz %d", (int)stringDesc->bLength);

  001b8	50		 push	 eax
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@ILBIFDNN@?$DM?$DM?5USB?4GetStrDesc?0?5Odd?5Sz?5?$CFd@
  001be	68 29 01 00 00	 push	 297			; 00000129H
  001c3	6a 10		 push	 16			; 00000010H
  001c5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  001ca	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 298  :         return NULL;

  001d0	e9 92 01 00 00	 jmp	 $LN97@GetStringD
$LN12@GetStringD:

; 299  :     }
; 300  : 
; 301  :     //
; 302  :     // Looks good, allocate some (zero filled) space for the string descriptor
; 303  :     // node and copy the string descriptor to it.
; 304  :     //
; 305  : 
; 306  :     stringDescNode = (PSTRING_DESCRIPTOR_NODE)malloc(sizeof(STRING_DESCRIPTOR_NODE) + stringDesc->bLength);

  001d5	83 c0 08	 add	 eax, 8
  001d8	50		 push	 eax
  001d9	e8 00 00 00 00	 call	 _malloc
  001de	8b f8		 mov	 edi, eax
  001e0	83 c4 04	 add	 esp, 4

; 307  : 
; 308  :     if (stringDescNode == NULL)

  001e3	85 ff		 test	 edi, edi
  001e5	75 22		 jne	 SHORT $LN13@GetStringD

; 309  :     {
; 310  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, new DescNode null");

  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@BKJLPKEL@?$DM?$DM?5USB?4GetStrDesc?0?5new?5DescNode@
  001ec	68 36 01 00 00	 push	 310			; 00000136H
  001f1	6a 10		 push	 16			; 00000010H
  001f3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  001f8	89 3e		 mov	 DWORD PTR [esi], edi

; 310  :         Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, new DescNode null");

  001fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 311  :         return NULL;

  001fd	66 8b bd c6 fe
	ff ff		 mov	 di, WORD PTR tv603[ebp]
  00204	e9 61 01 00 00	 jmp	 $LN5@GetStringD
$LN13@GetStringD:

; 312  :     }
; 313  : 
; 314  :     memset(stringDescNode, 0x00, sizeof(STRING_DESCRIPTOR_NODE) + stringDesc->bLength);

  00209	0f b6 85 ec fe
	ff ff		 movzx	 eax, BYTE PTR _stringDescReqBuf$4[ebp+12]
  00210	83 c0 08	 add	 eax, 8
  00213	50		 push	 eax
  00214	6a 00		 push	 0
  00216	57		 push	 edi
  00217	e8 00 00 00 00	 call	 _memset

; 315  : 
; 316  :     stringDescNode->DescriptorIndex = DescriptorIndex;

  0021c	8a 45 10	 mov	 al, BYTE PTR _DescriptorIndex$[ebp]
  0021f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00222	88 47 04	 mov	 BYTE PTR [edi+4], al

; 317  :     stringDescNode->LanguageID = LanguageID;

  00225	66 89 5f 06	 mov	 WORD PTR [edi+6], bx

; 318  : 
; 319  :     memcpy(stringDescNode->StringDescriptor, stringDesc, stringDesc->bLength);

  00229	8d 5f 08	 lea	 ebx, DWORD PTR [edi+8]
  0022c	0f b6 85 ec fe
	ff ff		 movzx	 eax, BYTE PTR _stringDescReqBuf$4[ebp+12]
  00233	50		 push	 eax
  00234	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$4[ebp+12]
  0023a	50		 push	 eax
  0023b	53		 push	 ebx
  0023c	e8 00 00 00 00	 call	 _memcpy
  00241	83 c4 0c	 add	 esp, 12			; 0000000cH

; 320  : 
; 321  :     if (LanguageID)

  00244	66 83 bd c0 fe
	ff ff 00	 cmp	 WORD PTR _LanguageID$1$[ebp], 0
  0024c	0f 84 f8 00 00
	00		 je	 $LN16@GetStringD

; 322  :     {
; 323  :         nBytes = WideCharToMultiByte(

  00252	6a 00		 push	 0
  00254	6a 00		 push	 0
  00256	68 0b 01 00 00	 push	 267			; 0000010bH
  0025b	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$4[ebp]
  00261	50		 push	 eax
  00262	0f b6 03	 movzx	 eax, BYTE PTR [ebx]
  00265	8d 4f 0a	 lea	 ecx, DWORD PTR [edi+10]
  00268	83 e8 02	 sub	 eax, 2
  0026b	99		 cdq
  0026c	2b c2		 sub	 eax, edx
  0026e	d1 f8		 sar	 eax, 1
  00270	50		 push	 eax
  00271	51		 push	 ecx
  00272	6a 00		 push	 0
  00274	6a 00		 push	 0
  00276	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0027c	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _nBytes$1$[ebp], eax

; 324  :             CP_ACP,     // CodePage
; 325  :             0,          // CodePage
; 326  :             stringDescNode->StringDescriptor->bString,
; 327  :             (stringDescNode->StringDescriptor->bLength - 2) / 2,
; 328  :             (char *)stringDescReqBuf,
; 329  :             sizeof(USB_DESCRIPTOR_REQUEST) + MAXIMUM_USB_STRING_LENGTH,
; 330  :             NULL,       // lpDefaultChar
; 331  :             NULL);      // pUsedDefaultChar
; 332  :         if (!nBytes)

  00282	85 c0		 test	 eax, eax
  00284	0f 85 95 00 00
	00		 jne	 $LN15@GetStringD

; 334  :             Log(LOG_DEBUG, __LINE__, "-- USB.GetStrDesc, WideCharToMultiByte %s", GetLastErrorMessage(GetLastError()).c_str());

  0028a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00290	8b d0		 mov	 edx, eax
  00292	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00298	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; GetLastErrorMessage
  0029d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  002a4	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 1815 : 		if (_Large_string_engaged())

  002a8	72 02		 jb	 SHORT $LN26@GetStringD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstddef

; 346  : 	return (_Ptr);

  002aa	8b 00		 mov	 eax, DWORD PTR [eax]
$LN26@GetStringD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 334  :             Log(LOG_DEBUG, __LINE__, "-- USB.GetStrDesc, WideCharToMultiByte %s", GetLastErrorMessage(GetLastError()).c_str());

  002ac	50		 push	 eax
  002ad	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@NJJDPDGO@?9?9?5USB?4GetStrDesc?0?5WideCharToMu@
  002b2	68 4e 01 00 00	 push	 334			; 0000014eH
  002b7	6a 10		 push	 16			; 00000010H
  002b9	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002be	83 c4 10	 add	 esp, 16			; 00000010H
  002c1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  002c8	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR $T3[ebp+20]
  002ce	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  002d1	72 2f		 jb	 SHORT $LN74@GetStringD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002d3	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  002d9	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002da	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  002dc	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002e2	72 14		 jb	 SHORT $LN73@GetStringD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  002e4	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002e7	83 c2 23	 add	 edx, 35			; 00000023H
  002ea	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002ec	83 c0 fc	 add	 eax, -4			; fffffffcH
  002ef	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002f2	0f 87 c1 00 00
	00		 ja	 $LN70@GetStringD
$LN73@GetStringD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  002f8	52		 push	 edx
  002f9	51		 push	 ecx
  002fa	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002ff	83 c4 08	 add	 esp, 8
$LN74@GetStringD:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00302	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0030c	c7 85 dc fe ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00316	c6 85 c8 fe ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 336  :         else

  0031d	eb 2b		 jmp	 SHORT $LN16@GetStringD
$LN15@GetStringD:

; 337  :         {
; 338  :             memset(stringDescNode->StringDescriptor->bString, 0x00, (stringDescNode->StringDescriptor->bLength - 2));

  0031f	0f b6 03	 movzx	 eax, BYTE PTR [ebx]
  00322	8d 5f 0a	 lea	 ebx, DWORD PTR [edi+10]
  00325	83 e8 02	 sub	 eax, 2
  00328	50		 push	 eax
  00329	6a 00		 push	 0
  0032b	53		 push	 ebx
  0032c	e8 00 00 00 00	 call	 _memset
  00331	83 c4 0c	 add	 esp, 12			; 0000000cH

; 339  :             memcpy(stringDescNode->StringDescriptor->bString, stringDescReqBuf, nBytes);

  00334	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _stringDescReqBuf$4[ebp]
  0033a	ff b5 c0 fe ff
	ff		 push	 DWORD PTR _nBytes$1$[ebp]
  00340	50		 push	 eax
  00341	53		 push	 ebx
  00342	e8 00 00 00 00	 call	 _memcpy
  00347	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN16@GetStringD:

; 340  :         }
; 341  :     }
; 342  :     Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDesc, DescNode 0x%p", stringDescNode);

  0034a	57		 push	 edi
  0034b	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@LADAJLND@?$DM?$DM?5USB?4GetStrDesc?0?5DescNode?50x?$CF@
  00350	68 56 01 00 00	 push	 342			; 00000156H
  00355	6a 10		 push	 16			; 00000010H
  00357	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1279 :     {
; 1280 :         StringDescNodeTail->Next = GetStringDescriptor(hHubDevice,

  0035c	89 3e		 mov	 DWORD PTR [esi], edi

; 1281 :             ConnectionIndex,
; 1282 :             DescriptorIndex,
; 1283 :             *LanguageIDs);
; 1284 : 
; 1285 :         if (StringDescNodeTail->Next)
; 1286 :         {
; 1287 :             StringDescNodeTail = StringDescNodeTail->Next;

  0035e	8b f7		 mov	 esi, edi
  00360	66 8b bd c6 fe
	ff ff		 mov	 di, WORD PTR tv603[ebp]
$LN97@GetStringD:

; 1288 :         }
; 1289 : 
; 1290 :         LanguageIDs++;

  00367	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@GetStringD:

; 1277 : 
; 1278 :     for (i = 0; i < NumLanguageIDs; i++)

  0036a	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]

; 1288 :         }
; 1289 : 
; 1290 :         LanguageIDs++;

  00370	83 45 18 02	 add	 DWORD PTR _LanguageIDs$[ebp], 2
  00374	40		 inc	 eax
  00375	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  0037b	3b 45 14	 cmp	 eax, DWORD PTR _NumLanguageIDs$[ebp]
  0037e	0f 82 fc fc ff
	ff		 jb	 $LL4@GetStringD
$LN94@GetStringD:

; 1291 :     }
; 1292 : 
; 1293 :     Log(LOG_DEBUG, __LINE__, "<< USB.GetStrDescs, StrDescNodeTail 0x%p", StringDescNodeTail);

  00384	56		 push	 esi
  00385	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@OCOKNHIB@?$DM?$DM?5USB?4GetStrDescs?0?5StrDescNode@
  0038a	68 0d 05 00 00	 push	 1293			; 0000050dH
  0038f	6a 10		 push	 16			; 00000010H
  00391	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00396	83 c4 10	 add	 esp, 16			; 00000010H

; 1294 :     return StringDescNodeTail;

  00399	8b c6		 mov	 eax, esi

; 1295 : }

  0039b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0039e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003a5	59		 pop	 ecx
  003a6	5f		 pop	 edi
  003a7	5e		 pop	 esi
  003a8	5b		 pop	 ebx
  003a9	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003ac	33 cd		 xor	 ecx, ebp
  003ae	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003b3	8b e5		 mov	 esp, ebp
  003b5	5d		 pop	 ebp
  003b6	c2 18 00	 ret	 24			; 00000018H
$LN70@GetStringD:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003b9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@GetStringD:
  003be	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z$0:
  00000	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a ac fe ff
	ff		 mov	 ecx, DWORD PTR [edx-340]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetStringDescriptors@USB@@IAEPAU_STRING_DESCRIPTOR_NODE@@PAXKEKPAGPAU2@@Z ENDP ; USB::GetStringDescriptors
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_nBytesReturned$ = -60					; size = 4
_hHubDevice$GSCopy$1$ = -56				; size = 4
tv342 = -52						; size = 4
_configDescReqBuf$ = -48				; size = 21
__$ArrayPad$ = -4					; size = 4
_hHubDevice$ = 8					; size = 4
_ConnectionIndex$ = 12					; size = 4
_DescriptorIndex$dead$ = 16				; size = 1
?GetConfigDescriptor@USB@@IAEPAU_USB_DESCRIPTOR_REQUEST@@PAXKE@Z PROC ; USB::GetConfigDescriptor
; _this$dead$ = ecx

; 1298 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f0	 and	 esp, -16		; fffffff0H
  00006	83 ec 48	 sub	 esp, 72			; 00000048H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 44	 mov	 DWORD PTR __$ArrayPad$[esp+72], eax
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _hHubDevice$[ebp]
  00018	57		 push	 edi

; 1299 :     UCHAR   configDescReqBuf[sizeof(USB_DESCRIPTOR_REQUEST) + sizeof(USB_CONFIGURATION_DESCRIPTOR)];
; 1300 : 
; 1301 :     Log(LOG_DEBUG, __LINE__, ">> USB.GetCfgDesc");

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NBPLLDOB@?$DO?$DO?5USB?4GetCfgDesc@
  0001e	68 15 05 00 00	 push	 1301			; 00000515H
  00023	6a 10		 push	 16			; 00000010H
  00025	89 74 24 24	 mov	 DWORD PTR _hHubDevice$GSCopy$1$[esp+92], esi
  00029	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1302 : 
; 1303 :     // Request the Configuration Descriptor the first time using our
; 1304 :     // local buffer, which is just big enough for the Cofiguration
; 1305 :     // Descriptor itself.
; 1306 :     //
; 1307 :     ULONG nBytes = sizeof(configDescReqBuf);
; 1308 : 
; 1309 :     PUSB_DESCRIPTOR_REQUEST configDescReq = (PUSB_DESCRIPTOR_REQUEST)configDescReqBuf;
; 1310 :     PUSB_CONFIGURATION_DESCRIPTOR configDesc = (PUSB_CONFIGURATION_DESCRIPTOR)(configDescReq + 1);
; 1311 : 
; 1312 :     // Zero fill the entire request structure
; 1313 :     //
; 1314 :     memset(configDescReq, 0x00, nBytes);
; 1315 : 
; 1316 :     // Indicate the port from which the descriptor will be requested
; 1317 :     //
; 1318 :     configDescReq->ConnectionIndex = ConnectionIndex;

  0002e	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
  00034	0f 57 c0	 xorps	 xmm0, xmm0
  00037	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR _configDescReqBuf$[esp+96], 0
  0003f	0f 29 44 24 20	 movaps	 XMMWORD PTR _configDescReqBuf$[esp+80], xmm0
  00044	89 44 24 20	 mov	 DWORD PTR _configDescReqBuf$[esp+80], eax

; 1319 : 
; 1320 :     //
; 1321 :     // USBHUB uses URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE to process this
; 1322 :     // IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION request.
; 1323 :     //
; 1324 :     // USBD will automatically initialize these fields:
; 1325 :     //     bmRequest = 0x80
; 1326 :     //     bRequest  = 0x06
; 1327 :     //
; 1328 :     // We must inititialize these fields:
; 1329 :     //     wValue    = Descriptor Type (high) and Descriptor Index (low byte)
; 1330 :     //     wIndex    = Zero (or Language ID for String Descriptors)
; 1331 :     //     wLength   = Length of descriptor buffer
; 1332 :     //
; 1333 :     configDescReq->SetupPacket.wValue = (USB_CONFIGURATION_DESCRIPTOR_TYPE << 8)

  00048	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  0004d	66 89 44 24 26	 mov	 WORD PTR _configDescReqBuf$[esp+86], ax

; 1334 :         | DescriptorIndex;
; 1335 : 
; 1336 :     configDescReq->SetupPacket.wLength = (USHORT)(nBytes - sizeof(USB_DESCRIPTOR_REQUEST));

  00052	b8 09 00 00 00	 mov	 eax, 9

; 1337 : 
; 1338 :     // Now issue the get descriptor request.
; 1339 :     //
; 1340 :     ULONG   nBytesReturned = 0;
; 1341 :     BOOL success = DeviceIoControl(hHubDevice,

  00057	6a 00		 push	 0
  00059	66 89 44 24 2e	 mov	 WORD PTR _configDescReqBuf$[esp+94], ax
  0005e	8d 44 24 18	 lea	 eax, DWORD PTR _nBytesReturned$[esp+84]
  00062	50		 push	 eax
  00063	6a 15		 push	 21			; 00000015H
  00065	8d 44 24 2c	 lea	 eax, DWORD PTR _configDescReqBuf$[esp+92]
  00069	c6 44 24 40 00	 mov	 BYTE PTR _configDescReqBuf$[esp+112], 0
  0006e	50		 push	 eax
  0006f	6a 15		 push	 21			; 00000015H
  00071	50		 push	 eax
  00072	68 10 04 22 00	 push	 2229264			; 00220410H
  00077	56		 push	 esi
  00078	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR _nBytesReturned$[esp+112], 0
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 1342 :         IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION,
; 1343 :         configDescReq,
; 1344 :         nBytes,
; 1345 :         configDescReq,
; 1346 :         nBytes,
; 1347 :         &nBytesReturned,
; 1348 :         NULL);
; 1349 :     if (!success)

  00086	85 c0		 test	 eax, eax
  00088	75 29		 jne	 SHORT $LN2@GetConfigD

; 1350 :     {
; 1351 :         Log(LOG_DEBUG, __LINE__, "<< USB.GetCfgDesc, DeviceIoControl False");

  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@JPCNJMBL@?$DM?$DM?5USB?4GetCfgDesc?0?5DeviceIoCont@
  0008f	68 47 05 00 00	 push	 1351			; 00000547H
  00094	6a 10		 push	 16			; 00000010H
  00096	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1352 :         return NULL;

  0009e	33 c0		 xor	 eax, eax

; 1437 :     return configDescReq;
; 1438 : }

  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	8b 4c 24 44	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+72]
  000a6	33 cc		 xor	 ecx, esp
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 0c 00	 ret	 12			; 0000000cH
$LN2@GetConfigD:

; 1353 :     }
; 1354 : 
; 1355 :     if (nBytes != nBytesReturned)

  000b3	8b 44 24 14	 mov	 eax, DWORD PTR _nBytesReturned$[esp+80]
  000b7	83 f8 15	 cmp	 eax, 21			; 00000015H
  000ba	74 2c		 je	 SHORT $LN3@GetConfigD

; 1356 :     {
; 1357 :         Log(LOG_DEBUG, __LINE__, "<< USB.GetCfgDesc, Bytes %u <> BytesRet %u", nBytes, nBytesReturned);

  000bc	50		 push	 eax
  000bd	6a 15		 push	 21			; 00000015H
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@CHLLBENA@?$DM?$DM?5USB?4GetCfgDesc?0?5Bytes?5?$CFu?5?$DM?$DO?5@
  000c4	68 4d 05 00 00	 push	 1357			; 0000054dH
  000c9	6a 10		 push	 16			; 00000010H
  000cb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000d0	83 c4 14	 add	 esp, 20			; 00000014H

; 1358 :         return NULL;

  000d3	33 c0		 xor	 eax, eax

; 1437 :     return configDescReq;
; 1438 : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	8b 4c 24 44	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+72]
  000db	33 cc		 xor	 ecx, esp
  000dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 0c 00	 ret	 12			; 0000000cH
$LN3@GetConfigD:

; 1359 :     }
; 1360 : 
; 1361 :     if (configDesc->wTotalLength < sizeof(USB_CONFIGURATION_DESCRIPTOR))

  000e8	66 8b 44 24 2e	 mov	 ax, WORD PTR _configDescReqBuf$[esp+94]
  000ed	66 83 f8 09	 cmp	 ax, 9
  000f1	0f b7 c0	 movzx	 eax, ax
  000f4	73 2c		 jae	 SHORT $LN4@GetConfigD

; 1362 :     {
; 1363 :         Log(LOG_DEBUG, __LINE__, "<< USB.GetCfgDesc, Total %d < Sz struct %d", configDesc->wTotalLength, sizeof(USB_CONFIGURATION_DESCRIPTOR));

  000f6	6a 09		 push	 9
  000f8	50		 push	 eax
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@LLJEBADN@?$DM?$DM?5USB?4GetCfgDesc?0?5Total?5?$CFd?5?$DM?5S@
  000fe	68 53 05 00 00	 push	 1363			; 00000553H
  00103	6a 10		 push	 16			; 00000010H
  00105	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0010a	83 c4 14	 add	 esp, 20			; 00000014H

; 1364 :         return NULL;

  0010d	33 c0		 xor	 eax, eax

; 1437 :     return configDescReq;
; 1438 : }

  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	8b 4c 24 44	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+72]
  00115	33 cc		 xor	 ecx, esp
  00117	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c2 0c 00	 ret	 12			; 0000000cH
$LN4@GetConfigD:

; 1365 :     }
; 1366 : 
; 1367 :     // Now request the entire Configuration Descriptor using a dynamically
; 1368 :     // allocated buffer which is sized big enough to hold the entire descriptor
; 1369 :     //
; 1370 :     nBytes = sizeof(USB_DESCRIPTOR_REQUEST) + configDesc->wTotalLength;

  00122	8d 78 0c	 lea	 edi, DWORD PTR [eax+12]
  00125	89 44 24 1c	 mov	 DWORD PTR tv342[esp+80], eax

; 1371 : 
; 1372 :     configDescReq = (PUSB_DESCRIPTOR_REQUEST)malloc(nBytes);

  00129	57		 push	 edi
  0012a	e8 00 00 00 00	 call	 _malloc
  0012f	83 c4 04	 add	 esp, 4
  00132	8b f0		 mov	 esi, eax

; 1373 :     if (configDescReq)

  00134	57		 push	 edi
  00135	85 f6		 test	 esi, esi
  00137	0f 84 c0 00 00
	00		 je	 $LN5@GetConfigD

; 1374 :     {
; 1375 :         memset(configDescReq, 0x00, nBytes);

  0013d	6a 00		 push	 0
  0013f	56		 push	 esi
  00140	e8 00 00 00 00	 call	 _memset

; 1376 : 
; 1377 :         configDesc = (PUSB_CONFIGURATION_DESCRIPTOR)(configDescReq + 1);
; 1378 : 
; 1379 :         // Indicate the port from which the descriptor will be requested
; 1380 :         //
; 1381 :         configDescReq->ConnectionIndex = ConnectionIndex;

  00145	8b 45 0c	 mov	 eax, DWORD PTR _ConnectionIndex$[ebp]
  00148	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014b	89 06		 mov	 DWORD PTR [esi], eax

; 1382 : 
; 1383 :         //
; 1384 :         // USBHUB uses URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE to process this
; 1385 :         // IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION request.
; 1386 :         //
; 1387 :         // USBD will automatically initialize these fields:
; 1388 :         //     bmRequest = 0x80
; 1389 :         //     bRequest  = 0x06
; 1390 :         //
; 1391 :         // We must inititialize these fields:
; 1392 :         //     wValue    = Descriptor Type (high) and Descriptor Index (low byte)
; 1393 :         //     wIndex    = Zero (or Language ID for String Descriptors)
; 1394 :         //     wLength   = Length of descriptor buffer
; 1395 :         //
; 1396 :         configDescReq->SetupPacket.wValue = (USB_CONFIGURATION_DESCRIPTOR_TYPE << 8)

  0014d	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00152	66 89 46 06	 mov	 WORD PTR [esi+6], ax

; 1397 :             | DescriptorIndex;
; 1398 : 
; 1399 :         configDescReq->SetupPacket.wLength = (USHORT)(nBytes - sizeof(USB_DESCRIPTOR_REQUEST));

  00156	8d 47 f4	 lea	 eax, DWORD PTR [edi-12]
  00159	66 89 46 0a	 mov	 WORD PTR [esi+10], ax

; 1400 : 
; 1401 :         // Now issue the get descriptor request.
; 1402 :         //
; 1403 :         success = DeviceIoControl(hHubDevice,

  0015d	8d 44 24 14	 lea	 eax, DWORD PTR _nBytesReturned$[esp+80]
  00161	6a 00		 push	 0
  00163	50		 push	 eax
  00164	57		 push	 edi
  00165	56		 push	 esi
  00166	57		 push	 edi
  00167	56		 push	 esi
  00168	68 10 04 22 00	 push	 2229264			; 00220410H
  0016d	ff 74 24 34	 push	 DWORD PTR _hHubDevice$GSCopy$1$[esp+108]
  00171	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceIoControl@32

; 1404 :             IOCTL_USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION,
; 1405 :             configDescReq,
; 1406 :             nBytes,
; 1407 :             configDescReq,
; 1408 :             nBytes,
; 1409 :             &nBytesReturned,
; 1410 :             NULL);
; 1411 :         if (!success)

  00177	85 c0		 test	 eax, eax
  00179	75 2f		 jne	 SHORT $LN7@GetConfigD

; 1412 :         {
; 1413 :             Log(LOG_DEBUG, __LINE__, "<< USB.GetCfgDesc, Req DeviceIoControl False");

  0017b	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@FDNPACDH@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5DeviceIo@
  00180	68 85 05 00 00	 push	 1413			; 00000585H
  00185	6a 10		 push	 16			; 00000010H
  00187	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1414 :             free(configDescReq);

  0018c	56		 push	 esi
  0018d	e8 00 00 00 00	 call	 _free
  00192	83 c4 10	 add	 esp, 16			; 00000010H

; 1415 :             return NULL;

  00195	33 c0		 xor	 eax, eax

; 1437 :     return configDescReq;
; 1438 : }

  00197	5f		 pop	 edi
  00198	5e		 pop	 esi
  00199	8b 4c 24 44	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+72]
  0019d	33 cc		 xor	 ecx, esp
  0019f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a4	8b e5		 mov	 esp, ebp
  001a6	5d		 pop	 ebp
  001a7	c2 0c 00	 ret	 12			; 0000000cH
$LN7@GetConfigD:

; 1416 :         }
; 1417 : 
; 1418 :         if (nBytes != nBytesReturned)

  001aa	8b 44 24 14	 mov	 eax, DWORD PTR _nBytesReturned$[esp+80]
  001ae	3b f8		 cmp	 edi, eax
  001b0	74 31		 je	 SHORT $LN8@GetConfigD

; 1419 :         {
; 1420 :             Log(LOG_DEBUG, __LINE__, "<< USB.GetCfgDesc, Req Bytes %u <> BytesRet %u", nBytes, nBytesReturned);

  001b2	50		 push	 eax
  001b3	57		 push	 edi
  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@JDNANMP@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Bytes?5?$CFu@
  001b9	68 8c 05 00 00	 push	 1420			; 0000058cH
$LN11@GetConfigD:

; 1437 :     return configDescReq;
; 1438 : }

  001be	6a 10		 push	 16			; 00000010H
  001c0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001c5	56		 push	 esi
  001c6	e8 00 00 00 00	 call	 _free
  001cb	83 c4 18	 add	 esp, 24			; 00000018H
  001ce	33 c0		 xor	 eax, eax
  001d0	5f		 pop	 edi
  001d1	5e		 pop	 esi
  001d2	8b 4c 24 44	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+72]
  001d6	33 cc		 xor	 ecx, esp
  001d8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001dd	8b e5		 mov	 esp, ebp
  001df	5d		 pop	 ebp
  001e0	c2 0c 00	 ret	 12			; 0000000cH
$LN8@GetConfigD:

; 1421 :             free(configDescReq);
; 1422 :             return NULL;
; 1423 :         }
; 1424 : 
; 1425 :         if (configDesc->wTotalLength != (nBytes - sizeof(USB_DESCRIPTOR_REQUEST)))

  001e3	0f b7 46 0e	 movzx	 eax, WORD PTR [esi+14]
  001e7	8b 4c 24 1c	 mov	 ecx, DWORD PTR tv342[esp+80]
  001eb	3b c1		 cmp	 eax, ecx
  001ed	74 22		 je	 SHORT $LN6@GetConfigD

; 1426 :         {
; 1427 :             Log(LOG_DEBUG, __LINE__, "<< USB.GetCfgDesc, Req Total %d < Sz %d", configDesc->wTotalLength, (nBytes - sizeof(USB_DESCRIPTOR_REQUEST)));

  001ef	51		 push	 ecx
  001f0	50		 push	 eax
  001f1	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@LMLHDIHD@?$DM?$DM?5USB?4GetCfgDesc?0?5Req?5Total?5?$CFd@
  001f6	68 93 05 00 00	 push	 1427			; 00000593H

; 1428 :             free(configDescReq);
; 1429 :             return NULL;

  001fb	eb c1		 jmp	 SHORT $LN11@GetConfigD
$LN5@GetConfigD:

; 1430 :         }
; 1431 :     }
; 1432 :     else
; 1433 :     {
; 1434 :         Log(LOG_DEBUG, __LINE__, "-- USB.GetCfgDescriptor, new Buf (%u) null", nBytes);

  001fd	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@LPDCGPEM@?9?9?5USB?4GetCfgDescriptor?0?5new?5Bu@
  00202	68 9a 05 00 00	 push	 1434			; 0000059aH
  00207	6a 10		 push	 16			; 00000010H
  00209	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0020e	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@GetConfigD:

; 1435 :     }
; 1436 :     Log(LOG_DEBUG, __LINE__, "<< USB.GetCfgDesc, 0x%p", configDescReq);

  00211	56		 push	 esi
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HCFMPAHC@?$DM?$DM?5USB?4GetCfgDesc?0?50x?$CFp@
  00217	68 9c 05 00 00	 push	 1436			; 0000059cH
  0021c	6a 10		 push	 16			; 00000010H
  0021e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1437 :     return configDescReq;
; 1438 : }

  00223	8b 4c 24 5c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+96]
  00227	83 c4 10	 add	 esp, 16			; 00000010H
  0022a	8b c6		 mov	 eax, esi
  0022c	5f		 pop	 edi
  0022d	5e		 pop	 esi
  0022e	33 cc		 xor	 ecx, esp
  00230	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00235	8b e5		 mov	 esp, ebp
  00237	5d		 pop	 ebp
  00238	c2 0c 00	 ret	 12			; 0000000cH
?GetConfigDescriptor@USB@@IAEPAU_USB_DESCRIPTOR_REQUEST@@PAXKE@Z ENDP ; USB::GetConfigDescriptor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
$T2 = -1088						; size = 24
$T3 = -1064						; size = 24
$T4 = -1064						; size = 24
$T5 = -1064						; size = 24
$T6 = -1064						; size = 24
$T7 = -1064						; size = 24
$T8 = -1064						; size = 24
$T9 = -1064						; size = 24
$T10 = -1064						; size = 24
$T11 = -1064						; size = 24
_format$ = -1040					; size = 1024
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_HubInfo$ = 8						; size = 4
?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z PROC	; USB::HubInfo
; _this$ = ecx

; 1447 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 34 04 00
	00		 sub	 esp, 1076		; 00000434H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	8b 5d 08	 mov	 ebx, DWORD PTR _HubInfo$[ebp]

; 1448 :     USHORT wHubChar = 0;
; 1449 :     char format[1024] = { 0 };

  00033	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00039	68 00 04 00 00	 push	 1024			; 00000400H
  0003e	6a 00		 push	 0
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _memset

; 1450 : 
; 1451 :     Log(LOG_DEBUG, __LINE__, ">> USB.HubInfo");

  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GOACPFJP@?$DO?$DO?5USB?4HubInfo@
  0004b	68 ab 05 00 00	 push	 1451			; 000005abH
  00050	6a 10		 push	 16			; 00000010H
  00052	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1453 :     _snprintf(format, sizeof(format) - 1, "> Hub Power: %s", HubInfo->HubIsBusPowered ? "Bus Power" : "Self Power");

  00057	80 7b 47 00	 cmp	 BYTE PTR [ebx+71], 0
  0005b	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@JDJFLKOD@Self?5Power@
  00060	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_09GDHNALJA@Bus?5Power@
  00065	0f 44 c1	 cmove	 eax, ecx
  00068	50		 push	 eax
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KPNNFMHH@?$DO?5Hub?5Power?3?5?$CFs@
  0006e	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00074	68 ff 03 00 00	 push	 1023			; 000003ffH
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0007f	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00085	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  0008f	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00099	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1453 :     _snprintf(format, sizeof(format) - 1, "> Hub Power: %s", HubInfo->HubIsBusPowered ? "Bus Power" : "Self Power");

  0009c	83 c4 28	 add	 esp, 40			; 00000028H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0009f	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  000a9	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  000b3	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  000ba	66 0f 1f 44 00
	00		 npad	 6
$LL1105@HubInfo:

; 462  : 		return (__builtin_strlen(_First));

  000c0	8a 01		 mov	 al, BYTE PTR [ecx]
  000c2	41		 inc	 ecx
  000c3	84 c0		 test	 al, al
  000c5	75 f9		 jne	 SHORT $LL1105@HubInfo
  000c7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000c9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  000cf	51		 push	 ecx
  000d0	50		 push	 eax
  000d1	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000d7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1454 :     PushBackDetails(format);

  000dc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  000e3	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000e9	83 bd d4 fb ff
	ff 10		 cmp	 DWORD PTR $T2[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  000f0	0f 43 85 c0 fb
	ff ff		 cmovae	 eax, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  000f7	50		 push	 eax
  000f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  000fd	68 80 00 00 00	 push	 128			; 00000080H
  00102	6a 10		 push	 16			; 00000010H
  00104	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00109	8b 87 10 02 00
	00		 mov	 eax, DWORD PTR [edi+528]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 129  :         usbDevDetails.push_back(detail);

  0010f	8d b7 0c 02 00
	00		 lea	 esi, DWORD PTR [edi+524]
  00115	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00118	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0011e	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0011f	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00122	74 0d		 je	 SHORT $LN69@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00124	8b c8		 mov	 ecx, eax
  00126	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  0012b	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0012f	eb 08		 jmp	 SHORT $LN68@HubInfo
$LN69@HubInfo:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00131	50		 push	 eax
  00132	8b ce		 mov	 ecx, esi
  00134	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN68@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1454 :     PushBackDetails(format);

  00139	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00140	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  00146	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00149	72 2f		 jb	 SHORT $LN185@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0014b	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00151	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00152	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00154	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0015a	72 14		 jb	 SHORT $LN184@HubInfo

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0015c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0015f	83 c2 23	 add	 edx, 35			; 00000023H
  00162	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00164	83 c0 fc	 add	 eax, -4			; fffffffcH
  00167	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0016a	0f 87 c5 05 00
	00		 ja	 $LN1114@HubInfo
$LN184@HubInfo:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00170	52		 push	 edx
  00171	51		 push	 ecx
  00172	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00177	83 c4 08	 add	 esp, 8
$LN185@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1455 :     memset(format, 0x00, sizeof(format));

  0017a	68 00 04 00 00	 push	 1024			; 00000400H
  0017f	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00185	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1455 :     memset(format, 0x00, sizeof(format));

  0018f	6a 00		 push	 0
  00191	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00192	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0019c	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1455 :     memset(format, 0x00, sizeof(format));

  001a3	e8 00 00 00 00	 call	 _memset

; 1457 :     _snprintf(format, sizeof(format) - 1, "> Number of Ports: %d", HubInfo->HubDescriptor.bNumberOfPorts);

  001a8	0f b6 43 02	 movzx	 eax, BYTE PTR [ebx+2]
  001ac	50		 push	 eax
  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IOHBDCFM@?$DO?5Number?5of?5Ports?3?5?$CFd@
  001b2	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  001b8	68 ff 03 00 00	 push	 1023			; 000003ffH
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  001c3	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  001c9	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+16], 0

; 1785 : 		_Myres(0)

  001d3	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  001dd	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1457 :     _snprintf(format, sizeof(format) - 1, "> Number of Ports: %d", HubInfo->HubDescriptor.bNumberOfPorts);

  001e0	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  001e3	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  001ed	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001f7	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T11[ebp], 0
  001fe	66 90		 npad	 2
$LL1106@HubInfo:

; 462  : 		return (__builtin_strlen(_First));

  00200	8a 01		 mov	 al, BYTE PTR [ecx]
  00202	41		 inc	 ecx
  00203	84 c0		 test	 al, al
  00205	75 f9		 jne	 SHORT $LL1106@HubInfo
  00207	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00209	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0020f	51		 push	 ecx
  00210	50		 push	 eax
  00211	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00217	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1458 :     PushBackDetails(format);

  0021c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00223	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00229	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T11[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00230	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T11[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00237	50		 push	 eax
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0023d	68 80 00 00 00	 push	 128			; 00000080H
  00242	6a 10		 push	 16			; 00000010H
  00244	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00249	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  0024c	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00252	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00255	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00256	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00259	74 0d		 je	 SHORT $LN242@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0025b	8b c8		 mov	 ecx, eax
  0025d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00262	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00266	eb 08		 jmp	 SHORT $LN241@HubInfo
$LN242@HubInfo:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00268	50		 push	 eax
  00269	8b ce		 mov	 ecx, esi
  0026b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN241@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1458 :     PushBackDetails(format);

  00270	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00277	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T11[ebp+20]
  0027d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00280	72 2f		 jb	 SHORT $LN358@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00282	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T11[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00288	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00289	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0028b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00291	72 14		 jb	 SHORT $LN357@HubInfo

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00293	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00296	83 c2 23	 add	 edx, 35			; 00000023H
  00299	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0029b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0029e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002a1	0f 87 93 04 00
	00		 ja	 $LN1115@HubInfo
$LN357@HubInfo:

; 207  : 	::operator delete(_Ptr, _Bytes);

  002a7	52		 push	 edx
  002a8	51		 push	 ecx
  002a9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002ae	83 c4 08	 add	 esp, 8
$LN358@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1459 :     memset(format, 0x00, sizeof(format));

  002b1	68 00 04 00 00	 push	 1024			; 00000400H
  002b6	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  002bc	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1459 :     memset(format, 0x00, sizeof(format));

  002c6	6a 00		 push	 0
  002c8	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002c9	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002d3	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T11[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1459 :     memset(format, 0x00, sizeof(format));

  002da	e8 00 00 00 00	 call	 _memset

; 1460 : 
; 1461 :     wHubChar = HubInfo->HubDescriptor.wHubCharacteristics;

  002df	0f b7 5b 03	 movzx	 ebx, WORD PTR [ebx+3]
  002e3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1462 : 
; 1463 :     switch (wHubChar & 0x0003)

  002e6	8b c3		 mov	 eax, ebx
  002e8	83 e0 03	 and	 eax, 3
  002eb	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN1116@HubInfo[eax*4]
$LN8@HubInfo:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  002f2	6a 19		 push	 25			; 00000019H

; 1784 : 		_Mysize(0),

  002f4	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  002fe	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]

; 1785 : 		_Myres(0)

  00304	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0030e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@CEEHKAND@?$DO?5Power?5switching?3?5Ganged@

; 3976 : 		_My_data._Mysize = 0;

  00313	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0031d	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00327	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0032e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1466 :         PushBackDetails("> Power switching: Ganged");

  00333	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
$LN1110@HubInfo:

; 1506 : }

  0033a	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00340	8b cf		 mov	 ecx, edi
  00342	50		 push	 eax
  00343	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00348	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0034f	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T10[ebp+20]
  00355	83 fa 10	 cmp	 edx, 16			; 00000010H
  00358	0f 82 d2 00 00
	00		 jb	 $LN598@HubInfo
  0035e	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
  00364	42		 inc	 edx
  00365	8b c1		 mov	 eax, ecx
  00367	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0036d	0f 82 b3 00 00
	00		 jb	 $LN597@HubInfo
  00373	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00376	83 c2 23	 add	 edx, 35			; 00000023H
  00379	2b c1		 sub	 eax, ecx
  0037b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0037e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00381	0f 87 b8 03 00
	00		 ja	 $LN1111@HubInfo
  00387	e9 9a 00 00 00	 jmp	 $LN597@HubInfo
$LN9@HubInfo:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0038c	6a 1d		 push	 29			; 0000001dH

; 1784 : 		_Mysize(0),

  0038e	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00398	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]

; 1785 : 		_Myres(0)

  0039e	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BHNNAPDB@?$DO?5Power?5switching?3?5Individual@

; 3976 : 		_My_data._Mysize = 0;

  003ad	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  003b7	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  003c1	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003c8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1470 :         PushBackDetails("> Power switching: Individual");

  003cd	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003d4	e9 61 ff ff ff	 jmp	 $LN1110@HubInfo
$LN10@HubInfo:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003d9	6a 17		 push	 23			; 00000017H

; 1784 : 		_Mysize(0),

  003db	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003e5	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]

; 1785 : 		_Myres(0)

  003eb	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003f5	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FICFFJGB@?$DO?5Power?5switching?3?5None@

; 3976 : 		_My_data._Mysize = 0;

  003fa	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00404	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0040e	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00415	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1475 :         PushBackDetails("> Power switching: None");

  0041a	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00421	e9 14 ff ff ff	 jmp	 $LN1110@HubInfo
$LN597@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1479 :     switch (wHubChar & 0x0004)

  00426	52		 push	 edx
  00427	51		 push	 ecx
  00428	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0042d	83 c4 08	 add	 esp, 8
$LN598@HubInfo:
  00430	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0
  0043a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
  00444	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
$LN600@HubInfo:
  0044b	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0
  00455	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0045b	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 0
  00465	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  0046c	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0
  00476	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
  00480	f6 c3 04	 test	 bl, 4
  00483	74 65		 je	 SHORT $LN11@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00485	6a 16		 push	 22			; 00000016H
  00487	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@CFBEDMDO@?$DO?5Compound?5device?3?5Yes@
  0048c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1486 :         PushBackDetails("> Compound device: Yes");

  00491	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  00498	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  0049e	50		 push	 eax
  0049f	8b cf		 mov	 ecx, edi
  004a1	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  004a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  004ad	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+20]
  004b3	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  004b6	0f 82 cf 00 00
	00		 jb	 $LN770@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004bc	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  004c2	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004c3	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  004c5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  004cb	0f 82 b0 00 00
	00		 jb	 $LN769@HubInfo

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  004d1	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  004d4	83 c2 23	 add	 edx, 35			; 00000023H
  004d7	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004d9	83 c0 fc	 add	 eax, -4			; fffffffcH
  004dc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004df	0f 86 9c 00 00
	00		 jbe	 $LN769@HubInfo
  004e5	e9 55 02 00 00	 jmp	 $LN1111@HubInfo
$LN11@HubInfo:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  004ea	6a 15		 push	 21			; 00000015H
  004ec	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FBGEODEL@?$DO?5Compound?5device?3?5No@
  004f1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1482 :         PushBackDetails("> Compound device: No");

  004f6	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  004fd	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00503	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T7[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  0050a	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00511	50		 push	 eax
  00512	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00517	68 80 00 00 00	 push	 128			; 00000080H
  0051c	6a 10		 push	 16			; 00000010H
  0051e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00523	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00526	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0052c	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0052f	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00530	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00533	74 0d		 je	 SHORT $LN654@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00535	8b c8		 mov	 ecx, eax
  00537	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  0053c	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00540	eb 08		 jmp	 SHORT $LN653@HubInfo
$LN654@HubInfo:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00542	50		 push	 eax
  00543	8b ce		 mov	 ecx, esi
  00545	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN653@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1482 :         PushBackDetails("> Compound device: No");

  0054a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00551	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T7[ebp+20]
  00557	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0055a	72 2f		 jb	 SHORT $LN770@HubInfo
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0055c	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00562	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00563	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00565	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0056b	72 14		 jb	 SHORT $LN769@HubInfo

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0056d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00570	83 c2 23	 add	 edx, 35			; 00000023H
  00573	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00575	83 c0 fc	 add	 eax, -4			; fffffffcH
  00578	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0057b	0f 87 be 01 00
	00		 ja	 $LN1111@HubInfo
$LN769@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1490 :     switch (wHubChar & 0x0018)

  00581	52		 push	 edx
  00582	51		 push	 ecx
  00583	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00588	83 c4 08	 add	 esp, 8
$LN770@HubInfo:
  0058b	83 e3 18	 and	 ebx, 24			; 00000018H
  0058e	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
  00595	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
  0059f	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0
  005a9	0f b6 83 00 00
	00 00		 movzx	 eax, BYTE PTR $LN1107@HubInfo[ebx]
  005b0	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN1117@HubInfo[eax*4]
$LN13@HubInfo:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  005b7	6a 21		 push	 33			; 00000021H

; 1784 : 		_Mysize(0),

  005b9	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  005c3	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]

; 1785 : 		_Myres(0)

  005c9	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  005d3	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@ELIAJJDL@?$DO?5Over?9current?5Protection?3?5Glob@

; 3976 : 		_My_data._Mysize = 0;

  005d8	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  005e2	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  005ec	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  005f3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1493 :         PushBackDetails("> Over-current Protection: Global");

  005f8	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
$LN1112@HubInfo:

; 1506 : }

  005ff	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00605	8b cf		 mov	 ecx, edi
  00607	50		 push	 eax
  00608	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  0060d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00614	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T5[ebp+20]
  0061a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0061d	72 2f		 jb	 SHORT $LN1090@HubInfo
  0061f	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
  00625	42		 inc	 edx
  00626	8b c1		 mov	 eax, ecx
  00628	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0062e	72 14		 jb	 SHORT $LN1089@HubInfo
  00630	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00633	83 c2 23	 add	 edx, 35			; 00000023H
  00636	2b c1		 sub	 eax, ecx
  00638	83 c0 fc	 add	 eax, -4			; fffffffcH
  0063b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0063e	0f 87 fb 00 00
	00		 ja	 $LN1111@HubInfo
$LN1089@HubInfo:

; 1503 :         break;
; 1504 :     }
; 1505 :     Log(LOG_DEBUG, __LINE__, "<< USB.HubInfo");

  00644	52		 push	 edx
  00645	51		 push	 ecx
  00646	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0064b	83 c4 08	 add	 esp, 8
$LN1090@HubInfo:
  0064e	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0
  00658	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
  00662	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
$LN1092@HubInfo:
  00669	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CHOKIAKD@?$DM?$DM?5USB?4HubInfo@
  0066e	68 e1 05 00 00	 push	 1505			; 000005e1H
  00673	6a 10		 push	 16			; 00000010H
  00675	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0067a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1506 : }

  0067d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00680	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00687	59		 pop	 ecx
  00688	5f		 pop	 edi
  00689	5e		 pop	 esi
  0068a	5b		 pop	 ebx
  0068b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0068e	33 cd		 xor	 ecx, ebp
  00690	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00695	8b e5		 mov	 esp, ebp
  00697	5d		 pop	 ebp
  00698	c2 04 00	 ret	 4
$LN14@HubInfo:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0069b	6a 25		 push	 37			; 00000025H

; 1784 : 		_Mysize(0),

  0069d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  006a7	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]

; 1785 : 		_Myres(0)

  006ad	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  006b7	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@MEGDLCFA@?$DO?5Over?9current?5Protection?3?5Indi@

; 3976 : 		_My_data._Mysize = 0;

  006bc	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  006c6	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  006d0	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  006d7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1497 :         PushBackDetails("> Over-current Protection: Individual");

  006dc	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006e3	e9 17 ff ff ff	 jmp	 $LN1112@HubInfo
$LN15@HubInfo:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  006e8	6a 2d		 push	 45			; 0000002dH

; 1784 : 		_Mysize(0),

  006ea	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  006f4	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]

; 1785 : 		_Myres(0)

  006fa	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00704	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@FGJIHOLC@?$DO?5No?5Over?9current?5Protection?5?$CIB@

; 3976 : 		_My_data._Mysize = 0;

  00709	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00713	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0071d	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00724	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1502 :         PushBackDetails("> No Over-current Protection (Bus Power Only)");

  00729	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00730	e9 ca fe ff ff	 jmp	 $LN1112@HubInfo
$LN1114@HubInfo:
  00735	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1115@HubInfo:
  0073a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1111@HubInfo:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1506 : }

  0073f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1109@HubInfo:
$LN1116@HubInfo:
  00744	00 00 00 00	 DD	 $LN8@HubInfo
  00748	00 00 00 00	 DD	 $LN9@HubInfo
  0074c	00 00 00 00	 DD	 $LN10@HubInfo
  00750	00 00 00 00	 DD	 $LN10@HubInfo
$LN1117@HubInfo:
  00754	00 00 00 00	 DD	 $LN13@HubInfo
  00758	00 00 00 00	 DD	 $LN14@HubInfo
  0075c	00 00 00 00	 DD	 $LN15@HubInfo
  00760	00 00 00 00	 DD	 $LN1092@HubInfo
$LN1107@HubInfo:
  00764	00		 DB	 0
  00765	03		 DB	 3
  00766	03		 DB	 3
  00767	03		 DB	 3
  00768	03		 DB	 3
  00769	03		 DB	 3
  0076a	03		 DB	 3
  0076b	03		 DB	 3
  0076c	01		 DB	 1
  0076d	03		 DB	 3
  0076e	03		 DB	 3
  0076f	03		 DB	 3
  00770	03		 DB	 3
  00771	03		 DB	 3
  00772	03		 DB	 3
  00773	03		 DB	 3
  00774	02		 DB	 2
  00775	03		 DB	 3
  00776	03		 DB	 3
  00777	03		 DB	 3
  00778	03		 DB	 3
  00779	03		 DB	 3
  0077a	03		 DB	 3
  0077b	03		 DB	 3
  0077c	02		 DB	 2
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$0:
  00000	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$1:
  0000b	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$2:
  00016	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$3:
  00021	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$4:
  0002c	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$6:
  00037	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$5:
  00042	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00048	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$7:
  0004d	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$8:
  00058	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z$9:
  00063	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00069	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z:
  0006e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00072	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00075	8b 8a bc fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1092]
  0007b	33 c8		 xor	 ecx, eax
  0007d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00082	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00085	33 c8		 xor	 ecx, eax
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z
  00091	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?HubInfo@USB@@IAEXPAU_USB_HUB_INFORMATION@@@Z ENDP	; USB::HubInfo
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_StringDescs$GSCopy$1$ = -1092				; size = 4
$T2 = -1088						; size = 24
$T3 = -1088						; size = 24
$T4 = -1088						; size = 24
$T5 = -1088						; size = 24
$T6 = -1088						; size = 24
$T7 = -1088						; size = 24
$T8 = -1088						; size = 24
$T9 = -1088						; size = 24
$T10 = -1064						; size = 24
$T11 = -1064						; size = 24
$T12 = -1064						; size = 24
$T13 = -1064						; size = 24
$T14 = -1064						; size = 24
$T15 = -1064						; size = 24
$T16 = -1064						; size = 24
$T17 = -1064						; size = 24
$T18 = -1064						; size = 24
$T19 = -1064						; size = 24
$T20 = -1064						; size = 24
$T21 = -1064						; size = 24
$T22 = -1064						; size = 24
$T23 = -1064						; size = 24
_format$24 = -1040					; size = 1024
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ConnectInfo$ = 8					; size = 4
_StringDescs$ = 12					; size = 4
?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z PROC ; USB::ConnectionInfo
; _this$ = ecx

; 1576 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 38 04 00
	00		 sub	 esp, 1080		; 00000438H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	8b 45 0c	 mov	 eax, DWORD PTR _StringDescs$[ebp]
  00033	8b 5d 08	 mov	 ebx, DWORD PTR _ConnectInfo$[ebp]

; 1577 :     Log(LOG_DEBUG, __LINE__, ">> USB.ConnInfo");

  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IJBIPHPI@?$DO?$DO?5USB?4ConnInfo@
  0003b	68 29 06 00 00	 push	 1577			; 00000629H
  00040	6a 10		 push	 16			; 00000010H
  00042	89 85 bc fb ff
	ff		 mov	 DWORD PTR _StringDescs$GSCopy$1$[ebp], eax
  00048	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1578 : 
; 1579 :     if (!ConnectInfo)

  00050	85 db		 test	 ebx, ebx
  00052	75 0f		 jne	 SHORT $LN4@Connection

; 1580 :     {
; 1581 :         Log(LOG_DEBUG, __LINE__, "<< USB.ConnInfo, Input null");

  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GIKFEJKI@?$DM?$DM?5USB?4ConnInfo?0?5Input?5null@
  00059	68 2d 06 00 00	 push	 1581			; 0000062dH

; 1582 :         return;

  0005e	e9 51 12 00 00	 jmp	 $LN1823@Connection
$LN4@Connection:

; 1583 :     }
; 1584 : 
; 1585 :     if (ConnectInfo->ConnectionStatus == NoDeviceConnected)

  00063	83 7b 1f 00	 cmp	 DWORD PTR [ebx+31], 0
  00067	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0006d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0
  00077	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 0
  00081	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
  00088	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0
  00092	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH
  0009c	0f 85 82 00 00
	00		 jne	 $LN5@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000a2	6a 25		 push	 37			; 00000025H
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KIPJNEMD@?$DO?5ConnectionStatus?3?5NoDeviceCon@
  000a9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1587 :         PushBackDetails("> ConnectionStatus: NoDeviceConnected");

  000ae	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b5	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  000bb	50		 push	 eax
  000bc	8b cf		 mov	 ecx, edi
  000be	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  000c3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000ca	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T9[ebp+20]
  000d0	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  000d3	72 2f		 jb	 SHORT $LN104@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d5	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  000db	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000dc	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  000de	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000e4	72 14		 jb	 SHORT $LN103@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  000e6	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000e9	83 c2 23	 add	 edx, 35			; 00000023H
  000ec	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ee	83 c0 fc	 add	 eax, -4			; fffffffcH
  000f1	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000f4	0f 87 e2 11 00
	00		 ja	 $LN1827@Connection
$LN103@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  000fa	52		 push	 edx
  000fb	51		 push	 ecx
  000fc	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00101	83 c4 08	 add	 esp, 8
$LN104@Connection:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00104	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0010e	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00118	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1589 :     else

  0011f	e9 86 11 00 00	 jmp	 $LN14@Connection
$LN5@Connection:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00124	6a 14		 push	 20			; 00000014H
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EPIIACIH@?$DO?5Device?5Descriptor?3@
  0012b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1591 :         PushBackDetails("> Device Descriptor:");

  00130	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00137	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  0013d	50		 push	 eax
  0013e	8b cf		 mov	 ecx, edi
  00140	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00145	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0014c	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T8[ebp+20]
  00152	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00155	72 2f		 jb	 SHORT $LN185@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00157	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0015d	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0015e	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00160	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00166	72 14		 jb	 SHORT $LN184@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00168	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0016b	83 c2 23	 add	 edx, 35			; 00000023H
  0016e	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00170	83 c0 fc	 add	 eax, -4			; fffffffcH
  00173	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00176	0f 87 65 11 00
	00		 ja	 $LN1828@Connection
$LN184@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0017c	52		 push	 edx
  0017d	51		 push	 ecx
  0017e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00183	83 c4 08	 add	 esp, 8
$LN185@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1593 :         char format[1024] = { 0 };

  00186	68 00 04 00 00	 push	 1024			; 00000400H
  0018b	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00191	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1593 :         char format[1024] = { 0 };

  0019b	6a 00		 push	 0
  0019d	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0019e	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001a8	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1593 :         char format[1024] = { 0 };

  001af	e8 00 00 00 00	 call	 _memset

; 1594 :         _snprintf(format, sizeof(format) - 1, ">   bcdUSB: 0x%04X", ConnectInfo->DeviceDescriptor.bcdUSB);

  001b4	0f b7 43 06	 movzx	 eax, WORD PTR [ebx+6]
  001b8	50		 push	 eax
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EOGCPDGC@?$DO?5?5?5bcdUSB?3?50x?$CF04X@
  001be	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  001c4	68 ff 03 00 00	 push	 1023			; 000003ffH
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  001cf	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  001d5	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+16], 0

; 1785 : 		_Myres(0)

  001df	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  001e9	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1594 :         _snprintf(format, sizeof(format) - 1, ">   bcdUSB: 0x%04X", ConnectInfo->DeviceDescriptor.bcdUSB);

  001ec	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  001ef	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  001f9	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T23[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00203	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T23[ebp], 0
  0020a	66 0f 1f 44 00
	00		 npad	 6
$LL1804@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00210	8a 01		 mov	 al, BYTE PTR [ecx]
  00212	41		 inc	 ecx
  00213	84 c0		 test	 al, al
  00215	75 f9		 jne	 SHORT $LL1804@Connection
  00217	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00219	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  0021f	51		 push	 ecx
  00220	50		 push	 eax
  00221	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T23[ebp]
  00227	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1595 :         PushBackDetails(format);

  0022c	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00233	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T23[ebp]
  00239	50		 push	 eax
  0023a	8b cf		 mov	 ecx, edi
  0023c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00241	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00248	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T23[ebp+20]
  0024e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00251	72 2f		 jb	 SHORT $LN265@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00253	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T23[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00259	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0025a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0025c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00262	72 14		 jb	 SHORT $LN264@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00264	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00267	83 c2 23	 add	 edx, 35			; 00000023H
  0026a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0026c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0026f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00272	0f 87 6e 10 00
	00		 ja	 $LN1829@Connection
$LN264@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00278	52		 push	 edx
  00279	51		 push	 ecx
  0027a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0027f	83 c4 08	 add	 esp, 8
$LN265@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1596 :         memset(format, 0x00, sizeof(format));

  00282	68 00 04 00 00	 push	 1024			; 00000400H
  00287	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0028d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1596 :         memset(format, 0x00, sizeof(format));

  00297	6a 00		 push	 0
  00299	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0029a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T23[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002a4	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T23[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1596 :         memset(format, 0x00, sizeof(format));

  002ab	e8 00 00 00 00	 call	 _memset

; 1598 :         _snprintf(format, sizeof(format) - 1, ">   bDeviceClass: 0x%02X", ConnectInfo->DeviceDescriptor.bDeviceClass);

  002b0	0f b6 43 08	 movzx	 eax, BYTE PTR [ebx+8]
  002b4	50		 push	 eax
  002b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BBNICMHO@?$DO?5?5?5bDeviceClass?3?50x?$CF02X@
  002ba	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  002c0	68 ff 03 00 00	 push	 1023			; 000003ffH
  002c5	50		 push	 eax
  002c6	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002cb	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  002d1	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 1785 : 		_Myres(0)

  002db	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002e5	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1598 :         _snprintf(format, sizeof(format) - 1, ">   bDeviceClass: 0x%02X", ConnectInfo->DeviceDescriptor.bDeviceClass);

  002e8	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  002eb	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002f5	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002ff	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
$LL1805@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00306	8a 01		 mov	 al, BYTE PTR [ecx]
  00308	41		 inc	 ecx
  00309	84 c0		 test	 al, al
  0030b	75 f9		 jne	 SHORT $LL1805@Connection
  0030d	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0030f	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00315	51		 push	 ecx
  00316	50		 push	 eax
  00317	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0031d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1599 :         PushBackDetails(format);

  00322	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00329	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  0032f	50		 push	 eax
  00330	8b cf		 mov	 ecx, edi
  00332	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00337	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0033e	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T7[ebp+20]
  00344	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00347	72 2f		 jb	 SHORT $LN345@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00349	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0034f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00350	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00352	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00358	72 14		 jb	 SHORT $LN344@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0035a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0035d	83 c2 23	 add	 edx, 35			; 00000023H
  00360	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00362	83 c0 fc	 add	 eax, -4			; fffffffcH
  00365	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00368	0f 87 7d 0f 00
	00		 ja	 $LN1830@Connection
$LN344@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0036e	52		 push	 edx
  0036f	51		 push	 ecx
  00370	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00375	83 c4 08	 add	 esp, 8
$LN345@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1600 :         memset(format, 0x00, sizeof(format));

  00378	68 00 04 00 00	 push	 1024			; 00000400H
  0037d	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00383	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1600 :         memset(format, 0x00, sizeof(format));

  0038d	6a 00		 push	 0
  0038f	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00390	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0039a	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1600 :         memset(format, 0x00, sizeof(format));

  003a1	e8 00 00 00 00	 call	 _memset

; 1602 :         _snprintf(format, sizeof(format) - 1, ">   bDeviceSubClass: 0x%02X", ConnectInfo->DeviceDescriptor.bDeviceSubClass);

  003a6	0f b6 43 09	 movzx	 eax, BYTE PTR [ebx+9]
  003aa	50		 push	 eax
  003ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IBBMEPAK@?$DO?5?5?5bDeviceSubClass?3?50x?$CF02X@
  003b0	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  003b6	68 ff 03 00 00	 push	 1023			; 000003ffH
  003bb	50		 push	 eax
  003bc	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  003c1	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  003c7	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T22[ebp+16], 0

; 1785 : 		_Myres(0)

  003d1	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T22[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  003db	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1602 :         _snprintf(format, sizeof(format) - 1, ">   bDeviceSubClass: 0x%02X", ConnectInfo->DeviceDescriptor.bDeviceSubClass);

  003de	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  003e1	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T22[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  003eb	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T22[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  003f5	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T22[ebp], 0
  003fc	0f 1f 40 00	 npad	 4
$LL1806@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00400	8a 01		 mov	 al, BYTE PTR [ecx]
  00402	41		 inc	 ecx
  00403	84 c0		 test	 al, al
  00405	75 f9		 jne	 SHORT $LL1806@Connection
  00407	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00409	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  0040f	51		 push	 ecx
  00410	50		 push	 eax
  00411	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  00417	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1603 :         PushBackDetails(format);

  0041c	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00423	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T22[ebp]
  00429	50		 push	 eax
  0042a	8b cf		 mov	 ecx, edi
  0042c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00431	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00438	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T22[ebp+20]
  0043e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00441	72 2f		 jb	 SHORT $LN425@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00443	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T22[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00449	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0044a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0044c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00452	72 14		 jb	 SHORT $LN424@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00454	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00457	83 c2 23	 add	 edx, 35			; 00000023H
  0045a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0045c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0045f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00462	0f 87 88 0e 00
	00		 ja	 $LN1831@Connection
$LN424@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00468	52		 push	 edx
  00469	51		 push	 ecx
  0046a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0046f	83 c4 08	 add	 esp, 8
$LN425@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1604 :         memset(format, 0x00, sizeof(format));

  00472	68 00 04 00 00	 push	 1024			; 00000400H
  00477	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0047d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T22[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1604 :         memset(format, 0x00, sizeof(format));

  00487	6a 00		 push	 0
  00489	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0048a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T22[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00494	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T22[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1604 :         memset(format, 0x00, sizeof(format));

  0049b	e8 00 00 00 00	 call	 _memset

; 1606 :         _snprintf(format, sizeof(format) - 1, ">   bDeviceProtocol: 0x%02X", ConnectInfo->DeviceDescriptor.bDeviceProtocol);

  004a0	0f b6 43 0a	 movzx	 eax, BYTE PTR [ebx+10]
  004a4	50		 push	 eax
  004a5	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DONCAOLL@?$DO?5?5?5bDeviceProtocol?3?50x?$CF02X@
  004aa	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  004b0	68 ff 03 00 00	 push	 1023			; 000003ffH
  004b5	50		 push	 eax
  004b6	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  004bb	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  004c1	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 1785 : 		_Myres(0)

  004cb	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  004d5	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1606 :         _snprintf(format, sizeof(format) - 1, ">   bDeviceProtocol: 0x%02X", ConnectInfo->DeviceDescriptor.bDeviceProtocol);

  004d8	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  004db	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  004e5	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  004ef	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
$LL1807@Connection:

; 462  : 		return (__builtin_strlen(_First));

  004f6	8a 01		 mov	 al, BYTE PTR [ecx]
  004f8	41		 inc	 ecx
  004f9	84 c0		 test	 al, al
  004fb	75 f9		 jne	 SHORT $LL1807@Connection
  004fd	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  004ff	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00505	51		 push	 ecx
  00506	50		 push	 eax
  00507	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0050d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1607 :         PushBackDetails(format);

  00512	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  00519	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  0051f	50		 push	 eax
  00520	8b cf		 mov	 ecx, edi
  00522	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00527	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0052e	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+20]
  00534	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00537	72 2f		 jb	 SHORT $LN505@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00539	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0053f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00540	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00542	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00548	72 14		 jb	 SHORT $LN504@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0054a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0054d	83 c2 23	 add	 edx, 35			; 00000023H
  00550	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00552	83 c0 fc	 add	 eax, -4			; fffffffcH
  00555	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00558	0f 87 97 0d 00
	00		 ja	 $LN1832@Connection
$LN504@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0055e	52		 push	 edx
  0055f	51		 push	 ecx
  00560	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00565	83 c4 08	 add	 esp, 8
$LN505@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1608 :         memset(format, 0x00, sizeof(format));

  00568	68 00 04 00 00	 push	 1024			; 00000400H
  0056d	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00573	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1608 :         memset(format, 0x00, sizeof(format));

  0057d	6a 00		 push	 0
  0057f	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00580	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0058a	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1608 :         memset(format, 0x00, sizeof(format));

  00591	e8 00 00 00 00	 call	 _memset

; 1610 :         _snprintf(format, sizeof(format) - 1, ">   bMaxPacketSize0: 0x%02X (%d)", ConnectInfo->DeviceDescriptor.bMaxPacketSize0,

  00596	0f b6 43 0b	 movzx	 eax, BYTE PTR [ebx+11]
  0059a	50		 push	 eax
  0059b	50		 push	 eax
  0059c	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KJHHAJF@?$DO?5?5?5bMaxPacketSize0?3?50x?$CF02X?5?$CI?$CFd@
  005a1	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  005a7	68 ff 03 00 00	 push	 1023			; 000003ffH
  005ac	50		 push	 eax
  005ad	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  005b2	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  005b8	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T21[ebp+16], 0

; 1785 : 		_Myres(0)

  005c2	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T21[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  005cc	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1610 :         _snprintf(format, sizeof(format) - 1, ">   bMaxPacketSize0: 0x%02X (%d)", ConnectInfo->DeviceDescriptor.bMaxPacketSize0,

  005cf	83 c4 20	 add	 esp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  005d2	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T21[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  005dc	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T21[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  005e6	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T21[ebp], 0
  005ed	0f 1f 00	 npad	 3
$LL1808@Connection:

; 462  : 		return (__builtin_strlen(_First));

  005f0	8a 01		 mov	 al, BYTE PTR [ecx]
  005f2	41		 inc	 ecx
  005f3	84 c0		 test	 al, al
  005f5	75 f9		 jne	 SHORT $LL1808@Connection
  005f7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  005f9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  005ff	51		 push	 ecx
  00600	50		 push	 eax
  00601	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  00607	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1612 :         PushBackDetails(format);

  0060c	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  00613	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T21[ebp]
  00619	50		 push	 eax
  0061a	8b cf		 mov	 ecx, edi
  0061c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00621	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00628	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T21[ebp+20]
  0062e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00631	72 2f		 jb	 SHORT $LN585@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00633	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T21[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00639	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0063a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0063c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00642	72 14		 jb	 SHORT $LN584@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00644	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00647	83 c2 23	 add	 edx, 35			; 00000023H
  0064a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0064c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0064f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00652	0f 87 a2 0c 00
	00		 ja	 $LN1833@Connection
$LN584@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00658	52		 push	 edx
  00659	51		 push	 ecx
  0065a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0065f	83 c4 08	 add	 esp, 8
$LN585@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1613 :         memset(format, 0x00, sizeof(format));

  00662	68 00 04 00 00	 push	 1024			; 00000400H
  00667	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0066d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T21[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1613 :         memset(format, 0x00, sizeof(format));

  00677	6a 00		 push	 0
  00679	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0067a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T21[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00684	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T21[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1613 :         memset(format, 0x00, sizeof(format));

  0068b	e8 00 00 00 00	 call	 _memset

; 1615 :         _snprintf(format, sizeof(format) - 1, ">   idVendor: 0x%04X (%s)", ConnectInfo->DeviceDescriptor.idVendor,

  00690	0f b7 73 0c	 movzx	 esi, WORD PTR [ebx+12]
  00694	8b ce		 mov	 ecx, esi
  00696	e8 00 00 00 00	 call	 ?GetVendorString@USB@@SAPADG@Z ; USB::GetVendorString
  0069b	50		 push	 eax
  0069c	8b ce		 mov	 ecx, esi
  0069e	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  006a4	51		 push	 ecx
  006a5	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@FCNKAGPN@?$DO?5?5?5idVendor?3?50x?$CF04X?5?$CI?$CFs?$CJ@
  006aa	68 ff 03 00 00	 push	 1023			; 000003ffH
  006af	50		 push	 eax
  006b0	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  006b5	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  006bb	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 1785 : 		_Myres(0)

  006c5	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  006cf	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1615 :         _snprintf(format, sizeof(format) - 1, ">   idVendor: 0x%04X (%s)", ConnectInfo->DeviceDescriptor.idVendor,

  006d2	83 c4 20	 add	 esp, 32			; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  006d5	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  006df	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  006e9	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
$LL1809@Connection:

; 462  : 		return (__builtin_strlen(_First));

  006f0	8a 01		 mov	 al, BYTE PTR [ecx]
  006f2	41		 inc	 ecx
  006f3	84 c0		 test	 al, al
  006f5	75 f9		 jne	 SHORT $LL1809@Connection
  006f7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  006f9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  006ff	51		 push	 ecx
  00700	50		 push	 eax
  00701	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00707	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1617 :         PushBackDetails(format);

  0070c	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  00713	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00719	50		 push	 eax
  0071a	8b cf		 mov	 ecx, edi
  0071c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00721	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00728	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T5[ebp+20]
  0072e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00731	72 2f		 jb	 SHORT $LN665@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00733	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00739	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0073a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0073c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00742	72 14		 jb	 SHORT $LN664@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00744	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00747	83 c2 23	 add	 edx, 35			; 00000023H
  0074a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0074c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0074f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00752	0f 87 a7 0b 00
	00		 ja	 $LN1834@Connection
$LN664@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00758	52		 push	 edx
  00759	51		 push	 ecx
  0075a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0075f	83 c4 08	 add	 esp, 8
$LN665@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1618 :         memset(format, 0x00, sizeof(format));

  00762	68 00 04 00 00	 push	 1024			; 00000400H
  00767	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0076d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1618 :         memset(format, 0x00, sizeof(format));

  00777	6a 00		 push	 0
  00779	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0077a	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00784	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1618 :         memset(format, 0x00, sizeof(format));

  0078b	e8 00 00 00 00	 call	 _memset

; 1620 :         _snprintf(format, sizeof(format) - 1, ">   idProduct: 0x%04X", ConnectInfo->DeviceDescriptor.idProduct);

  00790	0f b7 43 0e	 movzx	 eax, WORD PTR [ebx+14]
  00794	50		 push	 eax
  00795	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FEBFICPG@?$DO?5?5?5idProduct?3?50x?$CF04X@
  0079a	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  007a0	68 ff 03 00 00	 push	 1023			; 000003ffH
  007a5	50		 push	 eax
  007a6	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  007ab	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  007b1	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp+16], 0

; 1785 : 		_Myres(0)

  007bb	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  007c5	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1620 :         _snprintf(format, sizeof(format) - 1, ">   idProduct: 0x%04X", ConnectInfo->DeviceDescriptor.idProduct);

  007c8	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  007cb	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  007d5	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T20[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  007df	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T20[ebp], 0
$LL1810@Connection:

; 462  : 		return (__builtin_strlen(_First));

  007e6	8a 01		 mov	 al, BYTE PTR [ecx]
  007e8	41		 inc	 ecx
  007e9	84 c0		 test	 al, al
  007eb	75 f9		 jne	 SHORT $LL1810@Connection
  007ed	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  007ef	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  007f5	51		 push	 ecx
  007f6	50		 push	 eax
  007f7	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  007fd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1621 :         PushBackDetails(format);

  00802	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  00809	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T20[ebp]
  0080f	50		 push	 eax
  00810	8b cf		 mov	 ecx, edi
  00812	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00817	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0081e	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T20[ebp+20]
  00824	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00827	72 2f		 jb	 SHORT $LN745@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00829	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T20[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0082f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00830	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00832	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00838	72 14		 jb	 SHORT $LN744@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0083a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0083d	83 c2 23	 add	 edx, 35			; 00000023H
  00840	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00842	83 c0 fc	 add	 eax, -4			; fffffffcH
  00845	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00848	0f 87 b6 0a 00
	00		 ja	 $LN1835@Connection
$LN744@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0084e	52		 push	 edx
  0084f	51		 push	 ecx
  00850	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00855	83 c4 08	 add	 esp, 8
$LN745@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1622 :         memset(format, 0x00, sizeof(format));

  00858	68 00 04 00 00	 push	 1024			; 00000400H
  0085d	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00863	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T20[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1622 :         memset(format, 0x00, sizeof(format));

  0086d	6a 00		 push	 0
  0086f	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00870	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T20[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0087a	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T20[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1622 :         memset(format, 0x00, sizeof(format));

  00881	e8 00 00 00 00	 call	 _memset

; 1624 :         _snprintf(format, sizeof(format) - 1, ">   bcdDevice: 0x%04X", ConnectInfo->DeviceDescriptor.bcdDevice);

  00886	0f b7 43 10	 movzx	 eax, WORD PTR [ebx+16]
  0088a	50		 push	 eax
  0088b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFDGHCDF@?$DO?5?5?5bcdDevice?3?50x?$CF04X@
  00890	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00896	68 ff 03 00 00	 push	 1023			; 000003ffH
  0089b	50		 push	 eax
  0089c	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  008a1	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  008a7	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 1785 : 		_Myres(0)

  008b1	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  008bb	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1624 :         _snprintf(format, sizeof(format) - 1, ">   bcdDevice: 0x%04X", ConnectInfo->DeviceDescriptor.bcdDevice);

  008be	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  008c1	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  008cb	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  008d5	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  008dc	0f 1f 40 00	 npad	 4
$LL1811@Connection:

; 462  : 		return (__builtin_strlen(_First));

  008e0	8a 01		 mov	 al, BYTE PTR [ecx]
  008e2	41		 inc	 ecx
  008e3	84 c0		 test	 al, al
  008e5	75 f9		 jne	 SHORT $LL1811@Connection
  008e7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  008e9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  008ef	51		 push	 ecx
  008f0	50		 push	 eax
  008f1	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  008f7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1625 :         PushBackDetails(format);

  008fc	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  00903	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  00909	50		 push	 eax
  0090a	8b cf		 mov	 ecx, edi
  0090c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00911	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00918	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T4[ebp+20]
  0091e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00921	72 2f		 jb	 SHORT $LN825@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00923	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00929	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0092a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0092c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00932	72 14		 jb	 SHORT $LN824@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00934	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00937	83 c2 23	 add	 edx, 35			; 00000023H
  0093a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0093c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0093f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00942	0f 87 c1 09 00
	00		 ja	 $LN1836@Connection
$LN824@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00948	52		 push	 edx
  00949	51		 push	 ecx
  0094a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0094f	83 c4 08	 add	 esp, 8
$LN825@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1626 :         memset(format, 0x00, sizeof(format));

  00952	68 00 04 00 00	 push	 1024			; 00000400H
  00957	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0095d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1626 :         memset(format, 0x00, sizeof(format));

  00967	6a 00		 push	 0
  00969	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0096a	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00974	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1626 :         memset(format, 0x00, sizeof(format));

  0097b	e8 00 00 00 00	 call	 _memset

; 1628 :         _snprintf(format, sizeof(format) - 1, ">   iManufacturer: 0x%02X", ConnectInfo->DeviceDescriptor.iManufacturer);

  00980	0f b6 43 12	 movzx	 eax, BYTE PTR [ebx+18]
  00984	50		 push	 eax
  00985	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@IFOFIIGL@?$DO?5?5?5iManufacturer?3?50x?$CF02X@
  0098a	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00990	68 ff 03 00 00	 push	 1023			; 000003ffH
  00995	50		 push	 eax
  00996	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0099b	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  009a1	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T19[ebp+16], 0

; 1785 : 		_Myres(0)

  009ab	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T19[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  009b5	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1628 :         _snprintf(format, sizeof(format) - 1, ">   iManufacturer: 0x%02X", ConnectInfo->DeviceDescriptor.iManufacturer);

  009b8	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  009bb	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T19[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  009c5	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T19[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  009cf	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T19[ebp], 0
$LL1812@Connection:

; 462  : 		return (__builtin_strlen(_First));

  009d6	8a 01		 mov	 al, BYTE PTR [ecx]
  009d8	41		 inc	 ecx
  009d9	84 c0		 test	 al, al
  009db	75 f9		 jne	 SHORT $LL1812@Connection
  009dd	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  009df	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  009e5	51		 push	 ecx
  009e6	50		 push	 eax
  009e7	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  009ed	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1629 :         PushBackDetails(format);

  009f2	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  009f9	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T19[ebp]
  009ff	50		 push	 eax
  00a00	8b cf		 mov	 ecx, edi
  00a02	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00a07	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00a0e	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T19[ebp+20]
  00a14	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00a17	72 2f		 jb	 SHORT $LN905@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a19	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T19[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00a1f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a20	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00a22	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00a28	72 14		 jb	 SHORT $LN904@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00a2a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00a2d	83 c2 23	 add	 edx, 35			; 00000023H
  00a30	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a32	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a35	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a38	0f 87 d0 08 00
	00		 ja	 $LN1837@Connection
$LN904@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00a3e	52		 push	 edx
  00a3f	51		 push	 ecx
  00a40	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a45	83 c4 08	 add	 esp, 8
$LN905@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1630 :         memset(format, 0x00, sizeof(format));

  00a48	68 00 04 00 00	 push	 1024			; 00000400H
  00a4d	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00a53	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T19[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1630 :         memset(format, 0x00, sizeof(format));

  00a5d	6a 00		 push	 0
  00a5f	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00a60	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T19[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00a6a	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T19[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1630 :         memset(format, 0x00, sizeof(format));

  00a71	e8 00 00 00 00	 call	 _memset

; 1631 : 
; 1632 :         if (ConnectInfo->DeviceDescriptor.iManufacturer)

  00a76	8a 43 12	 mov	 al, BYTE PTR [ebx+18]
  00a79	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a7c	8b b5 bc fb ff
	ff		 mov	 esi, DWORD PTR _StringDescs$GSCopy$1$[ebp]
  00a82	84 c0		 test	 al, al
  00a84	74 09		 je	 SHORT $LN7@Connection

; 1633 :         {
; 1634 :             StringDescriptor(ConnectInfo->DeviceDescriptor.iManufacturer, StringDescs);

  00a86	56		 push	 esi
  00a87	50		 push	 eax
  00a88	8b cf		 mov	 ecx, edi
  00a8a	e8 00 00 00 00	 call	 ?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::StringDescriptor
$LN7@Connection:

; 1637 :         _snprintf(format, sizeof(format) - 1, ">   iProduct: 0x%02X", ConnectInfo->DeviceDescriptor.iProduct);

  00a8f	0f b6 43 13	 movzx	 eax, BYTE PTR [ebx+19]
  00a93	50		 push	 eax
  00a94	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JLHEPLOO@?$DO?5?5?5iProduct?3?50x?$CF02X@
  00a99	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00a9f	68 ff 03 00 00	 push	 1023			; 000003ffH
  00aa4	50		 push	 eax
  00aa5	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00aaa	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00ab0	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T18[ebp+16], 0

; 1785 : 		_Myres(0)

  00aba	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T18[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00ac4	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1637 :         _snprintf(format, sizeof(format) - 1, ">   iProduct: 0x%02X", ConnectInfo->DeviceDescriptor.iProduct);

  00ac7	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00aca	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T18[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00ad4	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T18[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00ade	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T18[ebp], 0
$LL1813@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00ae5	8a 01		 mov	 al, BYTE PTR [ecx]
  00ae7	41		 inc	 ecx
  00ae8	84 c0		 test	 al, al
  00aea	75 f9		 jne	 SHORT $LL1813@Connection
  00aec	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00aee	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00af4	51		 push	 ecx
  00af5	50		 push	 eax
  00af6	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  00afc	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1638 :         PushBackDetails(format);

  00b01	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00b08	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T18[ebp]
  00b0e	50		 push	 eax
  00b0f	8b cf		 mov	 ecx, edi
  00b11	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00b16	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00b1d	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T18[ebp+20]
  00b23	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00b26	72 2f		 jb	 SHORT $LN985@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b28	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T18[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00b2e	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b2f	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00b31	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00b37	72 14		 jb	 SHORT $LN984@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00b39	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00b3c	83 c2 23	 add	 edx, 35			; 00000023H
  00b3f	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00b41	83 c0 fc	 add	 eax, -4			; fffffffcH
  00b44	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00b47	0f 87 c6 07 00
	00		 ja	 $LN1838@Connection
$LN984@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00b4d	52		 push	 edx
  00b4e	51		 push	 ecx
  00b4f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00b54	83 c4 08	 add	 esp, 8
$LN985@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1639 :         memset(format, 0x00, sizeof(format));

  00b57	68 00 04 00 00	 push	 1024			; 00000400H
  00b5c	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00b62	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T18[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1639 :         memset(format, 0x00, sizeof(format));

  00b6c	6a 00		 push	 0
  00b6e	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00b6f	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T18[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00b79	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T18[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1639 :         memset(format, 0x00, sizeof(format));

  00b80	e8 00 00 00 00	 call	 _memset

; 1640 : 
; 1641 :         if (ConnectInfo->DeviceDescriptor.iProduct)

  00b85	8a 43 13	 mov	 al, BYTE PTR [ebx+19]
  00b88	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b8b	84 c0		 test	 al, al
  00b8d	74 09		 je	 SHORT $LN8@Connection

; 1642 :         {
; 1643 :             StringDescriptor(ConnectInfo->DeviceDescriptor.iProduct, StringDescs);

  00b8f	56		 push	 esi
  00b90	50		 push	 eax
  00b91	8b cf		 mov	 ecx, edi
  00b93	e8 00 00 00 00	 call	 ?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::StringDescriptor
$LN8@Connection:

; 1646 :         _snprintf(format, sizeof(format) - 1, ">   iSerialNumber: 0x%02X", ConnectInfo->DeviceDescriptor.iSerialNumber);

  00b98	0f b6 43 14	 movzx	 eax, BYTE PTR [ebx+20]
  00b9c	50		 push	 eax
  00b9d	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LAPCHIKM@?$DO?5?5?5iSerialNumber?3?50x?$CF02X@
  00ba2	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00ba8	68 ff 03 00 00	 push	 1023			; 000003ffH
  00bad	50		 push	 eax
  00bae	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00bb3	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00bb9	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T17[ebp+16], 0

; 1785 : 		_Myres(0)

  00bc3	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T17[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00bcd	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1646 :         _snprintf(format, sizeof(format) - 1, ">   iSerialNumber: 0x%02X", ConnectInfo->DeviceDescriptor.iSerialNumber);

  00bd0	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00bd3	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T17[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00bdd	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T17[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00be7	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T17[ebp], 0
  00bee	66 90		 npad	 2
$LL1814@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00bf0	8a 01		 mov	 al, BYTE PTR [ecx]
  00bf2	41		 inc	 ecx
  00bf3	84 c0		 test	 al, al
  00bf5	75 f9		 jne	 SHORT $LL1814@Connection
  00bf7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00bf9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00bff	51		 push	 ecx
  00c00	50		 push	 eax
  00c01	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T17[ebp]
  00c07	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1647 :         PushBackDetails(format);

  00c0c	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00c13	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T17[ebp]
  00c19	50		 push	 eax
  00c1a	8b cf		 mov	 ecx, edi
  00c1c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00c21	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00c28	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T17[ebp+20]
  00c2e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00c31	72 2f		 jb	 SHORT $LN1065@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00c33	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T17[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00c39	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00c3a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00c3c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00c42	72 14		 jb	 SHORT $LN1064@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00c44	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00c47	83 c2 23	 add	 edx, 35			; 00000023H
  00c4a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00c4c	83 c0 fc	 add	 eax, -4			; fffffffcH
  00c4f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00c52	0f 87 c0 06 00
	00		 ja	 $LN1839@Connection
$LN1064@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00c58	52		 push	 edx
  00c59	51		 push	 ecx
  00c5a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00c5f	83 c4 08	 add	 esp, 8
$LN1065@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1648 :         memset(format, 0x00, sizeof(format));

  00c62	68 00 04 00 00	 push	 1024			; 00000400H
  00c67	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00c6d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T17[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1648 :         memset(format, 0x00, sizeof(format));

  00c77	6a 00		 push	 0
  00c79	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00c7a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T17[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00c84	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T17[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1648 :         memset(format, 0x00, sizeof(format));

  00c8b	e8 00 00 00 00	 call	 _memset

; 1649 : 
; 1650 :         if (ConnectInfo->DeviceDescriptor.iSerialNumber)

  00c90	8a 43 14	 mov	 al, BYTE PTR [ebx+20]
  00c93	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c96	84 c0		 test	 al, al
  00c98	74 09		 je	 SHORT $LN9@Connection

; 1651 :         {
; 1652 :             StringDescriptor(ConnectInfo->DeviceDescriptor.iSerialNumber, StringDescs);

  00c9a	56		 push	 esi
  00c9b	50		 push	 eax
  00c9c	8b cf		 mov	 ecx, edi
  00c9e	e8 00 00 00 00	 call	 ?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::StringDescriptor
$LN9@Connection:

; 1655 :         _snprintf(format, sizeof(format) - 1, ">   bNumConfigurations: 0x%02X", ConnectInfo->DeviceDescriptor.bNumConfigurations);

  00ca3	0f b6 43 15	 movzx	 eax, BYTE PTR [ebx+21]
  00ca7	50		 push	 eax
  00ca8	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@EFEAMJPP@?$DO?5?5?5bNumConfigurations?3?50x?$CF02X@
  00cad	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00cb3	68 ff 03 00 00	 push	 1023			; 000003ffH
  00cb8	50		 push	 eax
  00cb9	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00cbe	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00cc4	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T16[ebp+16], 0

; 1785 : 		_Myres(0)

  00cce	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T16[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00cd8	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1655 :         _snprintf(format, sizeof(format) - 1, ">   bNumConfigurations: 0x%02X", ConnectInfo->DeviceDescriptor.bNumConfigurations);

  00cdb	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00cde	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T16[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00ce8	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T16[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00cf2	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T16[ebp], 0
  00cf9	0f 1f 80 00 00
	00 00		 npad	 7
$LL1815@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00d00	8a 01		 mov	 al, BYTE PTR [ecx]
  00d02	41		 inc	 ecx
  00d03	84 c0		 test	 al, al
  00d05	75 f9		 jne	 SHORT $LL1815@Connection
  00d07	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00d09	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00d0f	51		 push	 ecx
  00d10	50		 push	 eax
  00d11	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  00d17	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1656 :         PushBackDetails(format);

  00d1c	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  00d23	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T16[ebp]
  00d29	50		 push	 eax
  00d2a	8b cf		 mov	 ecx, edi
  00d2c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00d31	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00d38	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T16[ebp+20]
  00d3e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00d41	72 2f		 jb	 SHORT $LN1145@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d43	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T16[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00d49	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d4a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00d4c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00d52	72 14		 jb	 SHORT $LN1144@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00d54	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00d57	83 c2 23	 add	 edx, 35			; 00000023H
  00d5a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00d5c	83 c0 fc	 add	 eax, -4			; fffffffcH
  00d5f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00d62	0f 87 b5 05 00
	00		 ja	 $LN1840@Connection
$LN1144@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00d68	52		 push	 edx
  00d69	51		 push	 ecx
  00d6a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d6f	83 c4 08	 add	 esp, 8
$LN1145@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1657 :         memset(format, 0x00, sizeof(format));

  00d72	68 00 04 00 00	 push	 1024			; 00000400H
  00d77	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00d7d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T16[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1657 :         memset(format, 0x00, sizeof(format));

  00d87	6a 00		 push	 0
  00d89	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00d8a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T16[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00d94	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T16[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1657 :         memset(format, 0x00, sizeof(format));

  00d9b	e8 00 00 00 00	 call	 _memset

; 1659 :         _snprintf(format, sizeof(format) - 1, ">   ConnectionStatus: %s", ConnectionStatuses[ConnectInfo->ConnectionStatus]);

  00da0	8b 43 1f	 mov	 eax, DWORD PTR [ebx+31]
  00da3	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?ConnectionStatuses@@3PAPADA[eax*4]
  00daa	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00db0	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@POKCFGAN@?$DO?5?5?5ConnectionStatus?3?5?$CFs@
  00db5	68 ff 03 00 00	 push	 1023			; 000003ffH
  00dba	50		 push	 eax
  00dbb	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00dc0	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00dc6	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 1785 : 		_Myres(0)

  00dd0	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00dda	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1659 :         _snprintf(format, sizeof(format) - 1, ">   ConnectionStatus: %s", ConnectionStatuses[ConnectInfo->ConnectionStatus]);

  00ddd	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00de0	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00dea	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00df4	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  00dfb	0f 1f 44 00 00	 npad	 5
$LL1816@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00e00	8a 01		 mov	 al, BYTE PTR [ecx]
  00e02	41		 inc	 ecx
  00e03	84 c0		 test	 al, al
  00e05	75 f9		 jne	 SHORT $LL1816@Connection
  00e07	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00e09	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00e0f	51		 push	 ecx
  00e10	50		 push	 eax
  00e11	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00e17	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1660 :         PushBackDetails(format);

  00e1c	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00e23	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00e29	50		 push	 eax
  00e2a	8b cf		 mov	 ecx, edi
  00e2c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00e31	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00e38	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T3[ebp+20]
  00e3e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00e41	72 2f		 jb	 SHORT $LN1225@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e43	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00e49	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e4a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00e4c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00e52	72 14		 jb	 SHORT $LN1224@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00e54	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00e57	83 c2 23	 add	 edx, 35			; 00000023H
  00e5a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00e5c	83 c0 fc	 add	 eax, -4			; fffffffcH
  00e5f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00e62	0f 87 ba 04 00
	00		 ja	 $LN1841@Connection
$LN1224@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00e68	52		 push	 edx
  00e69	51		 push	 ecx
  00e6a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e6f	83 c4 08	 add	 esp, 8
$LN1225@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1661 :         memset(format, 0x00, sizeof(format));

  00e72	68 00 04 00 00	 push	 1024			; 00000400H
  00e77	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00e7d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1661 :         memset(format, 0x00, sizeof(format));

  00e87	6a 00		 push	 0
  00e89	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00e8a	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00e94	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1661 :         memset(format, 0x00, sizeof(format));

  00e9b	e8 00 00 00 00	 call	 _memset

; 1663 :         _snprintf(format, sizeof(format) - 1, ">   Current Config Value: 0x%02X", ConnectInfo->CurrentConfigurationValue);

  00ea0	0f b6 43 16	 movzx	 eax, BYTE PTR [ebx+22]
  00ea4	50		 push	 eax
  00ea5	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@CNIJGGK@?$DO?5?5?5Current?5Config?5Value?3?50x?$CF02@
  00eaa	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00eb0	68 ff 03 00 00	 push	 1023			; 000003ffH
  00eb5	50		 push	 eax
  00eb6	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00ebb	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00ec1	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T15[ebp+16], 0

; 1785 : 		_Myres(0)

  00ecb	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T15[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00ed5	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1663 :         _snprintf(format, sizeof(format) - 1, ">   Current Config Value: 0x%02X", ConnectInfo->CurrentConfigurationValue);

  00ed8	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00edb	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T15[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00ee5	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T15[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00eef	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T15[ebp], 0
$LL1817@Connection:

; 462  : 		return (__builtin_strlen(_First));

  00ef6	8a 01		 mov	 al, BYTE PTR [ecx]
  00ef8	41		 inc	 ecx
  00ef9	84 c0		 test	 al, al
  00efb	75 f9		 jne	 SHORT $LL1817@Connection
  00efd	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00eff	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  00f05	51		 push	 ecx
  00f06	50		 push	 eax
  00f07	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  00f0d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1664 :         PushBackDetails(format);

  00f12	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  00f19	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  00f1f	50		 push	 eax
  00f20	8b cf		 mov	 ecx, edi
  00f22	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  00f27	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00f2e	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T15[ebp+20]
  00f34	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00f37	72 2f		 jb	 SHORT $LN1305@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f39	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T15[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00f3f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f40	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00f42	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00f48	72 14		 jb	 SHORT $LN1304@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00f4a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00f4d	83 c2 23	 add	 edx, 35			; 00000023H
  00f50	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00f52	83 c0 fc	 add	 eax, -4			; fffffffcH
  00f55	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00f58	0f 87 c9 03 00
	00		 ja	 $LN1842@Connection
$LN1304@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00f5e	52		 push	 edx
  00f5f	51		 push	 ecx
  00f60	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f65	83 c4 08	 add	 esp, 8
$LN1305@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1665 :         memset(format, 0x00, sizeof(format));

  00f68	68 00 04 00 00	 push	 1024			; 00000400H
  00f6d	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00f73	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T15[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1665 :         memset(format, 0x00, sizeof(format));

  00f7d	6a 00		 push	 0
  00f7f	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00f80	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T15[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00f8a	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T15[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1665 :         memset(format, 0x00, sizeof(format));

  00f91	e8 00 00 00 00	 call	 _memset

; 1666 : 
; 1667 :         switch (ConnectInfo->Speed)

  00f96	0f b6 43 17	 movzx	 eax, BYTE PTR [ebx+23]
  00f9a	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00fa0	83 c4 0c	 add	 esp, 12			; 0000000cH
  00fa3	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+16], 0
  00fad	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+20], 0
  00fb7	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T11[ebp], 0
  00fbe	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+16], 0
  00fc8	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH
  00fd2	83 e8 00	 sub	 eax, 0
  00fd5	0f 84 8e 00 00
	00		 je	 $LN10@Connection
  00fdb	83 e8 01	 sub	 eax, 1
  00fde	74 74		 je	 SHORT $LN11@Connection
  00fe0	83 e8 01	 sub	 eax, 1
  00fe3	74 5a		 je	 SHORT $LN12@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00fe5	6a 1d		 push	 29			; 0000001dH
  00fe7	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@IIJPBIOD@?$DO?5?5?5Device?5Bus?5Speed?3?5Unknown@
  00fec	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1679 :             PushBackDetails(">   Device Bus Speed: Unknown");

  00ff1	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 19 ; 00000013H
$LN1824@Connection:

; 1697 : }

  00ff8	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  00ffe	8b cf		 mov	 ecx, edi
  01000	50		 push	 eax
  01001	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  01006	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0100d	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T11[ebp+20]
  01013	83 fa 10	 cmp	 edx, 16			; 00000010H
  01016	72 73		 jb	 SHORT $LN1385@Connection
  01018	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T11[ebp]
  0101e	42		 inc	 edx
  0101f	8b c1		 mov	 eax, ecx
  01021	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01027	72 58		 jb	 SHORT $LN1384@Connection
  01029	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0102c	83 c2 23	 add	 edx, 35			; 00000023H
  0102f	2b c1		 sub	 eax, ecx
  01031	83 c0 fc	 add	 eax, -4			; fffffffcH
  01034	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01037	0f 87 ef 02 00
	00		 ja	 $LN1825@Connection
  0103d	eb 42		 jmp	 SHORT $LN1384@Connection
$LN12@Connection:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0103f	6a 1a		 push	 26			; 0000001aH
  01041	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OEKHLNNJ@?$DO?5?5?5Device?5Bus?5Speed?3?5High@
  01046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1676 :             PushBackDetails(">   Device Bus Speed: High");

  0104b	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01052	eb a4		 jmp	 SHORT $LN1824@Connection
$LN11@Connection:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  01054	6a 1a		 push	 26			; 0000001aH
  01056	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CJGBMBHK@?$DO?5?5?5Device?5Bus?5Speed?3?5Full@
  0105b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1673 :             PushBackDetails(">   Device Bus Speed: Full");

  01060	c7 45 fc 11 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 17 ; 00000011H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01067	eb 8f		 jmp	 SHORT $LN1824@Connection
$LN10@Connection:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  01069	6a 19		 push	 25			; 00000019H
  0106b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@CLDGMCFC@?$DO?5?5?5Device?5Bus?5Speed?3?5Low@
  01070	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1670 :             PushBackDetails(">   Device Bus Speed: Low");

  01075	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 16 ; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0107c	e9 77 ff ff ff	 jmp	 $LN1824@Connection
$LN1384@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1682 :         _snprintf(format, sizeof(format) - 1, ">   Device Address: 0x%02X", ConnectInfo->DeviceAddress);

  01081	52		 push	 edx
  01082	51		 push	 ecx
  01083	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01088	83 c4 08	 add	 esp, 8
$LN1385@Connection:
  0108b	0f b7 43 19	 movzx	 eax, WORD PTR [ebx+25]
  0108f	50		 push	 eax
  01090	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DEBOODEI@?$DO?5?5?5Device?5Address?3?50x?$CF02X@
  01095	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  0109b	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T14[ebp], 0
  010a2	68 ff 03 00 00	 push	 1023			; 000003ffH
  010a7	50		 push	 eax
  010a8	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T14[ebp+20], 15 ; 0000000fH
  010b2	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T14[ebp+16], 0
  010bc	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  010c1	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  010c7	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 1785 : 		_Myres(0)

  010d1	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  010db	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1682 :         _snprintf(format, sizeof(format) - 1, ">   Device Address: 0x%02X", ConnectInfo->DeviceAddress);

  010de	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  010e1	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  010eb	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  010f5	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
  010fc	0f 1f 40 00	 npad	 4
$LL1818@Connection:

; 462  : 		return (__builtin_strlen(_First));

  01100	8a 01		 mov	 al, BYTE PTR [ecx]
  01102	41		 inc	 ecx
  01103	84 c0		 test	 al, al
  01105	75 f9		 jne	 SHORT $LL1818@Connection
  01107	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  01109	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  0110f	51		 push	 ecx
  01110	50		 push	 eax
  01111	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  01117	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1683 :         PushBackDetails(format);

  0111c	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 20 ; 00000014H
  01123	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  01129	50		 push	 eax
  0112a	8b cf		 mov	 ecx, edi
  0112c	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  01131	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  01138	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T10[ebp+20]
  0113e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  01141	72 2f		 jb	 SHORT $LN1705@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01143	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  01149	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0114a	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0114c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01152	72 14		 jb	 SHORT $LN1704@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  01154	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01157	83 c2 23	 add	 edx, 35			; 00000023H
  0115a	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0115c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0115f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01162	0f 87 c4 01 00
	00		 ja	 $LN1825@Connection
$LN1704@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  01168	52		 push	 edx
  01169	51		 push	 ecx
  0116a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0116f	83 c4 08	 add	 esp, 8
$LN1705@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1684 :         memset(format, 0x00, sizeof(format));

  01172	68 00 04 00 00	 push	 1024			; 00000400H
  01177	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0117d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1684 :         memset(format, 0x00, sizeof(format));

  01187	6a 00		 push	 0
  01189	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0118a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  01194	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1684 :         memset(format, 0x00, sizeof(format));

  0119b	e8 00 00 00 00	 call	 _memset

; 1686 :         _snprintf(format, sizeof(format) - 1, ">   Open Pipes: %02lu", ConnectInfo->NumberOfOpenPipes);

  011a0	ff 73 1b	 push	 DWORD PTR [ebx+27]
  011a3	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  011a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MHCPFALG@?$DO?5?5?5Open?5Pipes?3?5?$CF02lu@
  011ae	68 ff 03 00 00	 push	 1023			; 000003ffH
  011b3	50		 push	 eax
  011b4	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  011b9	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  011bf	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  011c9	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  011d3	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1686 :         _snprintf(format, sizeof(format) - 1, ">   Open Pipes: %02lu", ConnectInfo->NumberOfOpenPipes);

  011d6	83 c4 1c	 add	 esp, 28			; 0000001cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  011d9	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  011e3	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  011ed	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
$LL1819@Connection:

; 462  : 		return (__builtin_strlen(_First));

  011f4	8a 01		 mov	 al, BYTE PTR [ecx]
  011f6	41		 inc	 ecx
  011f7	84 c0		 test	 al, al
  011f9	75 f9		 jne	 SHORT $LL1819@Connection
  011fb	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  011fd	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
  01203	51		 push	 ecx
  01204	50		 push	 eax
  01205	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0120b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1687 :         PushBackDetails(format);

  01210	c7 45 fc 15 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 21 ; 00000015H
  01217	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0121d	50		 push	 eax
  0121e	8b cf		 mov	 ecx, edi
  01220	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  01225	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0122c	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  01232	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  01235	72 2f		 jb	 SHORT $LN1785@Connection
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01237	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0123d	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0123e	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  01240	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01246	72 14		 jb	 SHORT $LN1784@Connection

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  01248	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0124b	83 c2 23	 add	 edx, 35			; 00000023H
  0124e	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01250	83 c0 fc	 add	 eax, -4			; fffffffcH
  01253	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01256	0f 87 d0 00 00
	00		 ja	 $LN1825@Connection
$LN1784@Connection:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0125c	52		 push	 edx
  0125d	51		 push	 ecx
  0125e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01263	83 c4 08	 add	 esp, 8
$LN1785@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1688 :         memset(format, 0x00, sizeof(format));

  01266	68 00 04 00 00	 push	 1024			; 00000400H
  0126b	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$24[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  01271	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1688 :         memset(format, 0x00, sizeof(format));

  0127b	6a 00		 push	 0
  0127d	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0127e	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  01288	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1688 :         memset(format, 0x00, sizeof(format));

  0128f	e8 00 00 00 00	 call	 _memset

; 1689 : 
; 1690 :         if (ConnectInfo->NumberOfOpenPipes)

  01294	8b 4b 1b	 mov	 ecx, DWORD PTR [ebx+27]
  01297	83 c4 0c	 add	 esp, 12			; 0000000cH
  0129a	85 c9		 test	 ecx, ecx
  0129c	74 0c		 je	 SHORT $LN14@Connection

; 1691 :         {
; 1692 :             PipeInfo(ConnectInfo->NumberOfOpenPipes, ConnectInfo->PipeList);

  0129e	8d 43 23	 lea	 eax, DWORD PTR [ebx+35]
  012a1	50		 push	 eax
  012a2	51		 push	 ecx
  012a3	8b cf		 mov	 ecx, edi
  012a5	e8 00 00 00 00	 call	 ?PipeInfo@USB@@IAEXKPAU_USB_PIPE_INFO@@@Z ; USB::PipeInfo
$LN14@Connection:

; 1693 :         }
; 1694 :     }
; 1695 : 
; 1696 :     Log(LOG_DEBUG, __LINE__, "<< USB.ConnInfo");

  012aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KGDOGDAK@?$DM?$DM?5USB?4ConnInfo@
  012af	68 a0 06 00 00	 push	 1696			; 000006a0H
$LN1823@Connection:

; 1697 : }

  012b4	6a 10		 push	 16			; 00000010H
  012b6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  012bb	83 c4 0c	 add	 esp, 12			; 0000000cH
  012be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  012c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  012c8	59		 pop	 ecx
  012c9	5f		 pop	 edi
  012ca	5e		 pop	 esi
  012cb	5b		 pop	 ebx
  012cc	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  012cf	33 cd		 xor	 ecx, ebp
  012d1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  012d6	8b e5		 mov	 esp, ebp
  012d8	5d		 pop	 ebp
  012d9	c2 08 00	 ret	 8
$LN1827@Connection:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  012dc	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1828@Connection:
  012e1	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1829@Connection:
  012e6	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1830@Connection:
  012eb	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1831@Connection:
  012f0	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1832@Connection:
  012f5	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1833@Connection:
  012fa	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1834@Connection:
  012ff	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1835@Connection:
  01304	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1836@Connection:
  01309	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1837@Connection:
  0130e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1838@Connection:
  01313	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1839@Connection:
  01318	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1840@Connection:
  0131d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1841@Connection:
  01322	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1842@Connection:
  01327	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1825@Connection:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1697 : }

  0132c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1822@Connection:
  01331	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$0:
  00000	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$1:
  0000b	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$2:
  00016	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T23[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$3:
  00021	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$4:
  0002c	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$5:
  00037	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$6:
  00042	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  00048	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$7:
  0004d	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$8:
  00058	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$9:
  00063	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00069	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$10:
  0006e	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  00074	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$11:
  00079	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T18[ebp]
  0007f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$12:
  00084	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T17[ebp]
  0008a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$13:
  0008f	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  00095	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$14:
  0009a	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  000a0	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$15:
  000a5	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  000ab	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$19:
  000b0	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  000b6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$18:
  000bb	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  000c1	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$17:
  000c6	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  000cc	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$16:
  000d1	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  000d7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$20:
  000dc	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  000e2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z$21:
  000e7	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000ed	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z:
  000f2	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  000f6	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  000f9	8b 8a b8 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1096]
  000ff	33 c8		 xor	 ecx, eax
  00101	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00106	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00109	33 c8		 xor	 ecx, eax
  0010b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00110	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z
  00115	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ConnectionInfo@USB@@IAEXPAU_USB_NODE_CONNECTION_INFORMATION_EX@@PAU_STRING_DESCRIPTOR_NODE@@@Z ENDP ; USB::ConnectionInfo
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_NumPipes$ = 8						; size = 4
_PipeInfo$ = 12						; size = 4
?PipeInfo@USB@@IAEXKPAU_USB_PIPE_INFO@@@Z PROC		; USB::PipeInfo
; _this$ = ecx

; 1703 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	51		 push	 ecx
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi

; 1704 :     ULONG i;
; 1705 : 
; 1706 :     Log(LOG_DEBUG, __LINE__, ">> USB.PipeInfo, %u", NumPipes);

  0000a	8b 7d 08	 mov	 edi, DWORD PTR _NumPipes$[ebp]
  0000d	8b d9		 mov	 ebx, ecx
  0000f	57		 push	 edi
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MPHLOHIN@?$DO?$DO?5USB?4PipeInfo?0?5?$CFu@
  00015	68 aa 06 00 00	 push	 1706			; 000006aaH
  0001a	6a 10		 push	 16			; 00000010H
  0001c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00021	83 c4 10	 add	 esp, 16			; 00000010H

; 1707 :     for (i = 0; i < NumPipes; i++)

  00024	85 ff		 test	 edi, edi
  00026	74 18		 je	 SHORT $LN3@PipeInfo

; 1704 :     ULONG i;
; 1705 : 
; 1706 :     Log(LOG_DEBUG, __LINE__, ">> USB.PipeInfo, %u", NumPipes);

  00028	8b 75 0c	 mov	 esi, DWORD PTR _PipeInfo$[ebp]
  0002b	0f 1f 44 00 00	 npad	 5
$LL4@PipeInfo:

; 1708 :     {
; 1709 :         EndpointDescriptor(&PipeInfo[i].EndpointDescriptor);

  00030	56		 push	 esi
  00031	8b cb		 mov	 ecx, ebx
  00033	e8 00 00 00 00	 call	 ?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z ; USB::EndpointDescriptor
  00038	83 c6 0b	 add	 esi, 11			; 0000000bH
  0003b	83 ef 01	 sub	 edi, 1
  0003e	75 f0		 jne	 SHORT $LL4@PipeInfo
$LN3@PipeInfo:

; 1710 :     }
; 1711 :     Log(LOG_DEBUG, __LINE__, "<< USB.PipeInfo");

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KIDKADGJ@?$DM?$DM?5USB?4PipeInfo@
  00045	68 af 06 00 00	 push	 1711			; 000006afH
  0004a	6a 10		 push	 16			; 00000010H
  0004c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1712 : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 08 00	 ret	 8
?PipeInfo@USB@@IAEXKPAU_USB_PIPE_INFO@@@Z ENDP		; USB::PipeInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_ConfigDesc$ = 8					; size = 4
_StringDescs$ = 12					; size = 4
?ConfigDesc@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z PROC ; USB::ConfigDesc
; _this$ = ecx

; 1718 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	51		 push	 ecx
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi

; 1719 :     PUCHAR                  descEnd = nullptr;
; 1720 :     PUSB_COMMON_DESCRIPTOR  commonDesc = nullptr;
; 1721 :     UCHAR                   bInterfaceClass;
; 1722 :     UCHAR                   bInterfaceSubClass;
; 1723 : 
; 1724 :     Log(LOG_DEBUG, __LINE__, ">> USB.ConnDesc");

  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BANBJKNP@?$DO?$DO?5USB?4ConnDesc@
  0000f	68 bc 06 00 00	 push	 1724			; 000006bcH
  00014	6a 10		 push	 16			; 00000010H
  00016	8b d9		 mov	 ebx, ecx
  00018	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1725 : 
; 1726 :     if (!ConfigDesc)

  0001d	8b 75 08	 mov	 esi, DWORD PTR _ConfigDesc$[ebp]
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
  00023	85 f6		 test	 esi, esi
  00025	75 0f		 jne	 SHORT $LN6@ConfigDesc

; 1727 :     {
; 1728 :         Log(LOG_DEBUG, __LINE__, "<< USB.ConnDesc, Input null");

  00027	b8 c0 06 00 00	 mov	 eax, 1728		; 000006c0H
  0002c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BM@HNNAHBOO@?$DM?$DM?5USB?4ConnDesc?0?5Input?5null@

; 1729 :         return;

  00031	e9 b7 00 00 00	 jmp	 $LN1@ConfigDesc
$LN6@ConfigDesc:

; 1730 :     }
; 1731 : 
; 1732 :     bInterfaceClass = 0;
; 1733 : 
; 1734 :     descEnd = (PUCHAR)ConfigDesc + ConfigDesc->wTotalLength;

  00036	0f b7 7e 02	 movzx	 edi, WORD PTR [esi+2]
  0003a	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  0003d	03 fe		 add	 edi, esi

; 1735 : 
; 1736 :     commonDesc = (PUSB_COMMON_DESCRIPTOR)ConfigDesc;
; 1737 : 
; 1738 :     while ((PUCHAR)commonDesc + sizeof(USB_COMMON_DESCRIPTOR) < descEnd &&

  0003f	3b c7		 cmp	 eax, edi
  00041	0f 83 9c 00 00
	00		 jae	 $LN20@ConfigDesc
  00047	8b 55 0c	 mov	 edx, DWORD PTR _StringDescs$[ebp]
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL2@ConfigDesc:
  00050	8a 0e		 mov	 cl, BYTE PTR [esi]
  00052	0f b6 c1	 movzx	 eax, cl
  00055	03 c6		 add	 eax, esi
  00057	3b c7		 cmp	 eax, edi
  00059	0f 87 84 00 00
	00		 ja	 $LN20@ConfigDesc

; 1739 :         (PUCHAR)commonDesc + commonDesc->bLength <= descEnd)
; 1740 :     {
; 1741 :         BOOL displayUnknown = FALSE;
; 1742 : 
; 1743 :         switch (commonDesc->bDescriptorType)

  0005f	0f b6 46 01	 movzx	 eax, BYTE PTR [esi+1]
  00063	83 c0 fe	 add	 eax, -2			; fffffffeH
  00066	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00069	77 56		 ja	 SHORT $LN15@ConfigDesc
  0006b	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN25@ConfigDesc[eax]
  00072	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN28@ConfigDesc[eax*4]
$LN7@ConfigDesc:

; 1744 :         {
; 1745 :         case USB_CONFIGURATION_DESCRIPTOR_TYPE:
; 1746 :             if (commonDesc->bLength != sizeof(USB_CONFIGURATION_DESCRIPTOR))

  00079	80 f9 09	 cmp	 cl, 9
  0007c	75 43		 jne	 SHORT $LN15@ConfigDesc

; 1747 :             {
; 1748 :                 displayUnknown = TRUE;
; 1749 :                 break;
; 1750 :             }
; 1751 :             ConfigurationDescriptor((PUSB_CONFIGURATION_DESCRIPTOR)commonDesc, StringDescs);

  0007e	52		 push	 edx
  0007f	56		 push	 esi
  00080	8b cb		 mov	 ecx, ebx
  00082	e8 00 00 00 00	 call	 ?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::ConfigurationDescriptor

; 1752 :             break;

  00087	eb 40		 jmp	 SHORT $LN16@ConfigDesc
$LN9@ConfigDesc:

; 1753 : 
; 1754 :         case USB_INTERFACE_DESCRIPTOR_TYPE:
; 1755 :             if ((commonDesc->bLength != sizeof(USB_INTERFACE_DESCRIPTOR)) &&

  00089	80 f9 09	 cmp	 cl, 9
  0008c	74 05		 je	 SHORT $LN10@ConfigDesc
  0008e	80 f9 0b	 cmp	 cl, 11			; 0000000bH
  00091	75 2e		 jne	 SHORT $LN15@ConfigDesc
$LN10@ConfigDesc:

; 1756 :                 (commonDesc->bLength != sizeof(USB_INTERFACE_DESCRIPTOR2)))
; 1757 :             {
; 1758 :                 displayUnknown = TRUE;
; 1759 :                 break;
; 1760 :             }
; 1761 :             bInterfaceClass = ((PUSB_INTERFACE_DESCRIPTOR)commonDesc)->bInterfaceClass;
; 1762 :             bInterfaceSubClass = ((PUSB_INTERFACE_DESCRIPTOR)commonDesc)->bInterfaceSubClass;
; 1763 : 
; 1764 :             InterfaceDescriptor((PUSB_INTERFACE_DESCRIPTOR)commonDesc, StringDescs);

  00093	52		 push	 edx
  00094	56		 push	 esi
  00095	8b cb		 mov	 ecx, ebx
  00097	e8 00 00 00 00	 call	 ?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::InterfaceDescriptor

; 1765 :             break;

  0009c	eb 2b		 jmp	 SHORT $LN16@ConfigDesc
$LN11@ConfigDesc:

; 1766 : 
; 1767 :         case USB_ENDPOINT_DESCRIPTOR_TYPE:
; 1768 :             if ((commonDesc->bLength != sizeof(USB_ENDPOINT_DESCRIPTOR)) &&

  0009e	80 f9 07	 cmp	 cl, 7
  000a1	74 05		 je	 SHORT $LN12@ConfigDesc
  000a3	80 f9 09	 cmp	 cl, 9
  000a6	75 19		 jne	 SHORT $LN15@ConfigDesc
$LN12@ConfigDesc:

; 1769 :                 (commonDesc->bLength != sizeof(USB_ENDPOINT_DESCRIPTOR2)))
; 1770 :             {
; 1771 :                 displayUnknown = TRUE;
; 1772 :                 break;
; 1773 :             }
; 1774 :             EndpointDescriptor((PUSB_ENDPOINT_DESCRIPTOR)commonDesc);

  000a8	56		 push	 esi
  000a9	8b cb		 mov	 ecx, ebx
  000ab	e8 00 00 00 00	 call	 ?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z ; USB::EndpointDescriptor

; 1775 :             break;

  000b0	eb 17		 jmp	 SHORT $LN16@ConfigDesc
$LN13@ConfigDesc:

; 1776 : 
; 1777 :         case USB_HID_DESCRIPTOR_TYPE:
; 1778 :             if (commonDesc->bLength < sizeof(USB_HID_DESCRIPTOR))

  000b2	80 f9 09	 cmp	 cl, 9
  000b5	72 0a		 jb	 SHORT $LN15@ConfigDesc

; 1779 :             {
; 1780 :                 displayUnknown = TRUE;
; 1781 :                 break;
; 1782 :             }
; 1783 :             HidDescriptor((PUSB_HID_DESCRIPTOR)commonDesc);

  000b7	56		 push	 esi
  000b8	8b cb		 mov	 ecx, ebx
  000ba	e8 00 00 00 00	 call	 ?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z ; USB::HidDescriptor

; 1784 :             break;

  000bf	eb 08		 jmp	 SHORT $LN16@ConfigDesc
$LN15@ConfigDesc:

; 1785 : 
; 1786 :         default:
; 1787 :             //if(bInterfaceClass==USB_DEVICE_CLASS_AUDIO)
; 1788 :             //    displayUnknown = !AudioDescriptor((PUSB_AUDIO_COMMON_DESCRIPTOR)commonDesc,bInterfaceSubClass);
; 1789 :             //else
; 1790 :             displayUnknown = TRUE;
; 1791 :             break;
; 1792 :         }
; 1793 : 
; 1794 :         if (displayUnknown)
; 1795 :         {
; 1796 :             UnknownDescriptor(commonDesc);

  000c1	56		 push	 esi
  000c2	8b cb		 mov	 ecx, ebx
  000c4	e8 00 00 00 00	 call	 ?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z ; USB::UnknownDescriptor
$LN16@ConfigDesc:

; 1797 :         }
; 1798 : 
; 1799 :         if (commonDesc->bLength == 0x00)

  000c9	8a 06		 mov	 al, BYTE PTR [esi]
  000cb	84 c0		 test	 al, al
  000cd	74 14		 je	 SHORT $LN20@ConfigDesc

; 1800 :             break;  //no more data
; 1801 : 
; 1802 :         commonDesc += commonDesc->bLength;

  000cf	8b 55 0c	 mov	 edx, DWORD PTR _StringDescs$[ebp]
  000d2	0f b6 c0	 movzx	 eax, al
  000d5	8d 34 46	 lea	 esi, DWORD PTR [esi+eax*2]
  000d8	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  000db	3b c7		 cmp	 eax, edi
  000dd	0f 82 6d ff ff
	ff		 jb	 $LL2@ConfigDesc
$LN20@ConfigDesc:

; 1803 :     }
; 1804 :     Log(LOG_DEBUG, __LINE__, "<< USB.ConnDesc");

  000e3	b8 0c 07 00 00	 mov	 eax, 1804		; 0000070cH
  000e8	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BA@DPPHAOCN@?$DM?$DM?5USB?4ConnDesc@
$LN1@ConfigDesc:

; 1805 : }

  000ed	51		 push	 ecx
  000ee	50		 push	 eax
  000ef	6a 10		 push	 16			; 00000010H
  000f1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 08 00	 ret	 8
  00102	66 90		 npad	 2
$LN28@ConfigDesc:
  00104	00 00 00 00	 DD	 $LN7@ConfigDesc
  00108	00 00 00 00	 DD	 $LN9@ConfigDesc
  0010c	00 00 00 00	 DD	 $LN11@ConfigDesc
  00110	00 00 00 00	 DD	 $LN13@ConfigDesc
  00114	00 00 00 00	 DD	 $LN15@ConfigDesc
$LN25@ConfigDesc:
  00118	00		 DB	 0
  00119	04		 DB	 4
  0011a	01		 DB	 1
  0011b	02		 DB	 2
  0011c	04		 DB	 4
  0011d	04		 DB	 4
  0011e	04		 DB	 4
  0011f	04		 DB	 4
  00120	04		 DB	 4
  00121	04		 DB	 4
  00122	04		 DB	 4
  00123	04		 DB	 4
  00124	04		 DB	 4
  00125	04		 DB	 4
  00126	04		 DB	 4
  00127	04		 DB	 4
  00128	04		 DB	 4
  00129	04		 DB	 4
  0012a	04		 DB	 4
  0012b	04		 DB	 4
  0012c	04		 DB	 4
  0012d	04		 DB	 4
  0012e	04		 DB	 4
  0012f	04		 DB	 4
  00130	04		 DB	 4
  00131	04		 DB	 4
  00132	04		 DB	 4
  00133	04		 DB	 4
  00134	04		 DB	 4
  00135	04		 DB	 4
  00136	04		 DB	 4
  00137	03		 DB	 3
?ConfigDesc@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ENDP ; USB::ConfigDesc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_StringDescs$GSCopy$1$ = -1092				; size = 4
$T2 = -1088						; size = 24
$T3 = -1088						; size = 24
$T4 = -1088						; size = 24
$T5 = -1064						; size = 24
$T6 = -1064						; size = 24
$T7 = -1064						; size = 24
$T8 = -1064						; size = 24
_format$ = -1040					; size = 1024
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ConfigDesc$ = 8					; size = 4
_StringDescs$ = 12					; size = 4
?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z PROC ; USB::ConfigurationDescriptor
; _this$ = ecx

; 1809 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 3c 04 00
	00		 sub	 esp, 1084		; 0000043cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b d9		 mov	 ebx, ecx
  00030	8b 45 0c	 mov	 eax, DWORD PTR _StringDescs$[ebp]
  00033	8b 7d 08	 mov	 edi, DWORD PTR _ConfigDesc$[ebp]

; 1810 :     char format[1024] = { 0 };

  00036	68 00 04 00 00	 push	 1024			; 00000400H
  0003b	89 85 bc fb ff
	ff		 mov	 DWORD PTR _StringDescs$GSCopy$1$[ebp], eax
  00041	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00047	6a 00		 push	 0
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _memset
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1811 : 
; 1812 :     Log(LOG_DEBUG, __LINE__, ">> USB.CfgDesc");

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KMFKJDAO@?$DO?$DO?5USB?4CfgDesc@
  00057	68 14 07 00 00	 push	 1812			; 00000714H
  0005c	6a 10		 push	 16			; 00000010H
  0005e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00066	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 1785 : 		_Myres(0)

  00070	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0007a	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]

; 3976 : 		_My_data._Mysize = 0;

  00080	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0008a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00094	6a 1b		 push	 27			; 0000001bH
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PCIMCBFD@?$DO?5Configuration?5Descriptor?3@
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0009b	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000a2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1814 :     PushBackDetails("> Configuration Descriptor:");

  000a7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  000ae	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000b4	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T8[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  000bb	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T8[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  000c2	50		 push	 eax
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  000c8	68 80 00 00 00	 push	 128			; 00000080H
  000cd	6a 10		 push	 16			; 00000010H
  000cf	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000d4	8b 83 10 02 00
	00		 mov	 eax, DWORD PTR [ebx+528]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 129  :         usbDevDetails.push_back(detail);

  000da	8d b3 0c 02 00
	00		 lea	 esi, DWORD PTR [ebx+524]
  000e0	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  000e3	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  000e9	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000ea	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  000ed	74 0d		 je	 SHORT $LN57@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  000ef	8b c8		 mov	 ecx, eax
  000f1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  000f6	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  000fa	eb 08		 jmp	 SHORT $LN56@Configurat
$LN57@Configurat:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  000fc	50		 push	 eax
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN56@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1814 :     PushBackDetails("> Configuration Descriptor:");

  00104	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0010b	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T8[ebp+20]
  00111	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00114	72 2f		 jb	 SHORT $LN173@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00116	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0011c	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0011d	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0011f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00125	72 14		 jb	 SHORT $LN172@Configurat

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00127	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0012a	83 c2 23	 add	 edx, 35			; 00000023H
  0012d	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00132	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00135	0f 87 ec 07 00
	00		 ja	 $LN1229@Configurat
$LN172@Configurat:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0013b	52		 push	 edx
  0013c	51		 push	 ecx
  0013d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00142	83 c4 08	 add	 esp, 8
$LN173@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1816 :     _snprintf(format, sizeof(format) - 1, ">   wTotalLength: 0x%04X", ConfigDesc->wTotalLength);

  00145	0f b7 47 02	 movzx	 eax, WORD PTR [edi+2]
  00149	50		 push	 eax
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JBGKFDNL@?$DO?5?5?5wTotalLength?3?50x?$CF04X@
  0014f	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00155	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1816 :     _snprintf(format, sizeof(format) - 1, ">   wTotalLength: 0x%04X", ConfigDesc->wTotalLength);

  0015f	68 ff 03 00 00	 push	 1023			; 000003ffH
  00164	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00165	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0016f	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1816 :     _snprintf(format, sizeof(format) - 1, ">   wTotalLength: 0x%04X", ConfigDesc->wTotalLength);

  00176	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0017b	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00181	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 1785 : 		_Myres(0)

  0018b	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00195	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1816 :     _snprintf(format, sizeof(format) - 1, ">   wTotalLength: 0x%04X", ConfigDesc->wTotalLength);

  00198	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0019b	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  001a5	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001af	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
$LL1220@Configurat:

; 462  : 		return (__builtin_strlen(_First));

  001b6	8a 01		 mov	 al, BYTE PTR [ecx]
  001b8	41		 inc	 ecx
  001b9	84 c0		 test	 al, al
  001bb	75 f9		 jne	 SHORT $LL1220@Configurat
  001bd	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  001bf	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  001c5	51		 push	 ecx
  001c6	50		 push	 eax
  001c7	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  001cd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1817 :     PushBackDetails(format);

  001d2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  001d9	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  001df	83 bd d4 fb ff
	ff 10		 cmp	 DWORD PTR $T4[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  001e6	0f 43 85 c0 fb
	ff ff		 cmovae	 eax, DWORD PTR $T4[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  001ed	50		 push	 eax
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  001f3	68 80 00 00 00	 push	 128			; 00000080H
  001f8	6a 10		 push	 16			; 00000010H
  001fa	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  001ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00202	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00208	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0020b	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0020c	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  0020f	74 0d		 je	 SHORT $LN230@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00211	8b c8		 mov	 ecx, eax
  00213	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00218	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0021c	eb 08		 jmp	 SHORT $LN229@Configurat
$LN230@Configurat:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  0021e	50		 push	 eax
  0021f	8b ce		 mov	 ecx, esi
  00221	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN229@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1817 :     PushBackDetails(format);

  00226	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0022d	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T4[ebp+20]
  00233	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00236	72 2f		 jb	 SHORT $LN346@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00238	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0023e	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0023f	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00241	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00247	72 14		 jb	 SHORT $LN345@Configurat

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00249	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0024c	83 c2 23	 add	 edx, 35			; 00000023H
  0024f	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00251	83 c0 fc	 add	 eax, -4			; fffffffcH
  00254	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00257	0f 87 cf 06 00
	00		 ja	 $LN1230@Configurat
$LN345@Configurat:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0025d	52		 push	 edx
  0025e	51		 push	 ecx
  0025f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00264	83 c4 08	 add	 esp, 8
$LN346@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1818 :     memset(format, 0x00, sizeof(format));

  00267	68 00 04 00 00	 push	 1024			; 00000400H
  0026c	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00272	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1818 :     memset(format, 0x00, sizeof(format));

  0027c	6a 00		 push	 0
  0027e	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0027f	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00289	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1818 :     memset(format, 0x00, sizeof(format));

  00290	e8 00 00 00 00	 call	 _memset

; 1820 :     _snprintf(format, sizeof(format) - 1, ">   bNumInterfaces: 0x%02X", ConfigDesc->bNumInterfaces);

  00295	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  00299	83 c4 0c	 add	 esp, 12			; 0000000cH
  0029c	50		 push	 eax
  0029d	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JNHEPBEN@?$DO?5?5?5bNumInterfaces?3?50x?$CF02X@
  002a2	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002a8	68 ff 03 00 00	 push	 1023			; 000003ffH
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002b3	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  002b9	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 1785 : 		_Myres(0)

  002c3	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002cd	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1820 :     _snprintf(format, sizeof(format) - 1, ">   bNumInterfaces: 0x%02X", ConfigDesc->bNumInterfaces);

  002d0	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  002d3	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002dd	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002e7	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
  002ee	66 90		 npad	 2
$LL1221@Configurat:

; 462  : 		return (__builtin_strlen(_First));

  002f0	8a 01		 mov	 al, BYTE PTR [ecx]
  002f2	41		 inc	 ecx
  002f3	84 c0		 test	 al, al
  002f5	75 f9		 jne	 SHORT $LL1221@Configurat
  002f7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  002f9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002ff	51		 push	 ecx
  00300	50		 push	 eax
  00301	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00307	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1821 :     PushBackDetails(format);

  0030c	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00313	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00319	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T7[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00320	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00327	50		 push	 eax
  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0032d	68 80 00 00 00	 push	 128			; 00000080H
  00332	6a 10		 push	 16			; 00000010H
  00334	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00339	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  0033c	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00342	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00345	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00346	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00349	74 0d		 je	 SHORT $LN402@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0034b	8b c8		 mov	 ecx, eax
  0034d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00352	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00356	eb 08		 jmp	 SHORT $LN401@Configurat
$LN402@Configurat:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00358	50		 push	 eax
  00359	8b ce		 mov	 ecx, esi
  0035b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN401@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1821 :     PushBackDetails(format);

  00360	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00367	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T7[ebp+20]
  0036d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00370	72 2f		 jb	 SHORT $LN518@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00372	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00378	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00379	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0037b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00381	72 14		 jb	 SHORT $LN517@Configurat

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00383	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00386	83 c2 23	 add	 edx, 35			; 00000023H
  00389	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0038b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0038e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00391	0f 87 9a 05 00
	00		 ja	 $LN1231@Configurat
$LN517@Configurat:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00397	52		 push	 edx
  00398	51		 push	 ecx
  00399	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0039e	83 c4 08	 add	 esp, 8
$LN518@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1822 :     memset(format, 0x00, sizeof(format));

  003a1	68 00 04 00 00	 push	 1024			; 00000400H
  003a6	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  003ac	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1822 :     memset(format, 0x00, sizeof(format));

  003b6	6a 00		 push	 0
  003b8	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  003b9	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  003c3	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1822 :     memset(format, 0x00, sizeof(format));

  003ca	e8 00 00 00 00	 call	 _memset

; 1824 :     _snprintf(format, sizeof(format) - 1, ">   bConfigurationValue: 0x%02X", ConfigDesc->bConfigurationValue);

  003cf	0f b6 47 05	 movzx	 eax, BYTE PTR [edi+5]
  003d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d6	50		 push	 eax
  003d7	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KHMLNGHE@?$DO?5?5?5bConfigurationValue?3?50x?$CF02X@
  003dc	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  003e2	68 ff 03 00 00	 push	 1023			; 000003ffH
  003e7	50		 push	 eax
  003e8	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  003ed	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  003f3	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 1785 : 		_Myres(0)

  003fd	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00407	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1824 :     _snprintf(format, sizeof(format) - 1, ">   bConfigurationValue: 0x%02X", ConfigDesc->bConfigurationValue);

  0040a	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0040d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00417	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00421	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
$LL1222@Configurat:

; 462  : 		return (__builtin_strlen(_First));

  00428	8a 01		 mov	 al, BYTE PTR [ecx]
  0042a	41		 inc	 ecx
  0042b	84 c0		 test	 al, al
  0042d	75 f9		 jne	 SHORT $LL1222@Configurat
  0042f	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00431	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00437	51		 push	 ecx
  00438	50		 push	 eax
  00439	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0043f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1825 :     PushBackDetails(format);

  00444	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  0044b	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00451	83 bd d4 fb ff
	ff 10		 cmp	 DWORD PTR $T3[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00458	0f 43 85 c0 fb
	ff ff		 cmovae	 eax, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0045f	50		 push	 eax
  00460	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00465	68 80 00 00 00	 push	 128			; 00000080H
  0046a	6a 10		 push	 16			; 00000010H
  0046c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00471	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00474	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0047a	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0047d	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0047e	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00481	74 0d		 je	 SHORT $LN574@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00483	8b c8		 mov	 ecx, eax
  00485	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  0048a	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0048e	eb 08		 jmp	 SHORT $LN573@Configurat
$LN574@Configurat:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00490	50		 push	 eax
  00491	8b ce		 mov	 ecx, esi
  00493	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN573@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1825 :     PushBackDetails(format);

  00498	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0049f	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T3[ebp+20]
  004a5	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  004a8	72 2f		 jb	 SHORT $LN690@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004aa	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  004b0	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004b1	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  004b3	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  004b9	72 14		 jb	 SHORT $LN689@Configurat

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  004bb	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  004be	83 c2 23	 add	 edx, 35			; 00000023H
  004c1	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004c3	83 c0 fc	 add	 eax, -4			; fffffffcH
  004c6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004c9	0f 87 67 04 00
	00		 ja	 $LN1232@Configurat
$LN689@Configurat:

; 207  : 	::operator delete(_Ptr, _Bytes);

  004cf	52		 push	 edx
  004d0	51		 push	 ecx
  004d1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004d6	83 c4 08	 add	 esp, 8
$LN690@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1826 :     memset(format, 0x00, sizeof(format));

  004d9	68 00 04 00 00	 push	 1024			; 00000400H
  004de	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  004e4	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1826 :     memset(format, 0x00, sizeof(format));

  004ee	6a 00		 push	 0
  004f0	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  004f1	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  004fb	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1826 :     memset(format, 0x00, sizeof(format));

  00502	e8 00 00 00 00	 call	 _memset

; 1828 :     _snprintf(format, sizeof(format) - 1, ">   iConfiguration: 0x%02X", ConfigDesc->iConfiguration);

  00507	0f b6 47 06	 movzx	 eax, BYTE PTR [edi+6]
  0050b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0050e	50		 push	 eax
  0050f	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MGNBONG@?$DO?5?5?5iConfiguration?3?50x?$CF02X@
  00514	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0051a	68 ff 03 00 00	 push	 1023			; 000003ffH
  0051f	50		 push	 eax
  00520	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00525	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  0052b	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 1785 : 		_Myres(0)

  00535	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0053f	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1828 :     _snprintf(format, sizeof(format) - 1, ">   iConfiguration: 0x%02X", ConfigDesc->iConfiguration);

  00542	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00545	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0054f	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00559	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
$LL1223@Configurat:

; 462  : 		return (__builtin_strlen(_First));

  00560	8a 01		 mov	 al, BYTE PTR [ecx]
  00562	41		 inc	 ecx
  00563	84 c0		 test	 al, al
  00565	75 f9		 jne	 SHORT $LL1223@Configurat
  00567	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00569	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0056f	51		 push	 ecx
  00570	50		 push	 eax
  00571	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00577	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1829 :     PushBackDetails(format);

  0057c	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00583	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00589	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T6[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00590	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00597	50		 push	 eax
  00598	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0059d	68 80 00 00 00	 push	 128			; 00000080H
  005a2	6a 10		 push	 16			; 00000010H
  005a4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  005a9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  005ac	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  005b2	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  005b5	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  005b6	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  005b9	74 0d		 je	 SHORT $LN746@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  005bb	8b c8		 mov	 ecx, eax
  005bd	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  005c2	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  005c6	eb 08		 jmp	 SHORT $LN745@Configurat
$LN746@Configurat:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  005c8	50		 push	 eax
  005c9	8b ce		 mov	 ecx, esi
  005cb	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN745@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1829 :     PushBackDetails(format);

  005d0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  005d7	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+20]
  005dd	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  005e0	72 2f		 jb	 SHORT $LN862@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005e2	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  005e8	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005e9	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  005eb	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  005f1	72 14		 jb	 SHORT $LN861@Configurat

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  005f3	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  005f6	83 c2 23	 add	 edx, 35			; 00000023H
  005f9	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  005fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  005fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00601	0f 87 34 03 00
	00		 ja	 $LN1233@Configurat
$LN861@Configurat:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00607	52		 push	 edx
  00608	51		 push	 ecx
  00609	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0060e	83 c4 08	 add	 esp, 8
$LN862@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1830 :     memset(format, 0x00, sizeof(format));

  00611	68 00 04 00 00	 push	 1024			; 00000400H
  00616	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0061c	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1830 :     memset(format, 0x00, sizeof(format));

  00626	6a 00		 push	 0
  00628	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00629	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00633	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1830 :     memset(format, 0x00, sizeof(format));

  0063a	e8 00 00 00 00	 call	 _memset

; 1831 : 
; 1832 :     if (ConfigDesc->iConfiguration)

  0063f	8a 47 06	 mov	 al, BYTE PTR [edi+6]
  00642	83 c4 0c	 add	 esp, 12			; 0000000cH
  00645	84 c0		 test	 al, al
  00647	74 0e		 je	 SHORT $LN2@Configurat

; 1833 :     {
; 1834 :         StringDescriptor(ConfigDesc->iConfiguration, StringDescs);

  00649	ff b5 bc fb ff
	ff		 push	 DWORD PTR _StringDescs$GSCopy$1$[ebp]
  0064f	8b cb		 mov	 ecx, ebx
  00651	50		 push	 eax
  00652	e8 00 00 00 00	 call	 ?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::StringDescriptor
$LN2@Configurat:

; 1837 :     _snprintf(format, sizeof(format) - 1, ">   bmAttributes: 0x%02X (%s)", ConfigDesc->bmAttributes,

  00657	8a 4f 07	 mov	 cl, BYTE PTR [edi+7]
  0065a	84 c9		 test	 cl, cl
  0065c	79 07		 jns	 SHORT $LN6@Configurat
  0065e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0M@KJBOJHIH@Bus?5Powered@
  00663	eb 1c		 jmp	 SHORT $LN5@Configurat
$LN6@Configurat:
  00665	f6 c1 40	 test	 cl, 64			; 00000040H
  00668	74 07		 je	 SHORT $LN4@Configurat
  0066a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0N@BBGKMOEA@Self?5Powered@
  0066f	eb 10		 jmp	 SHORT $LN5@Configurat
$LN4@Configurat:
  00671	f6 c1 20	 test	 cl, 32			; 00000020H
  00674	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0O@CEMJPFOE@Remote?5Wakeup@
  00679	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01OGPIMHDM@?$DP@
  0067e	0f 44 c2	 cmove	 eax, edx
$LN5@Configurat:
  00681	50		 push	 eax
  00682	0f b6 c1	 movzx	 eax, cl
  00685	50		 push	 eax
  00686	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GBBHCHCO@?$DO?5?5?5bmAttributes?3?50x?$CF02X?5?$CI?$CFs?$CJ@
  0068b	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00691	68 ff 03 00 00	 push	 1023			; 000003ffH
  00696	50		 push	 eax
  00697	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0069c	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  006a2	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  006ac	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  006b6	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1837 :     _snprintf(format, sizeof(format) - 1, ">   bmAttributes: 0x%02X (%s)", ConfigDesc->bmAttributes,

  006b9	83 c4 14	 add	 esp, 20			; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  006bc	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  006c6	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  006d0	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
$LL1224@Configurat:

; 462  : 		return (__builtin_strlen(_First));

  006d7	8a 01		 mov	 al, BYTE PTR [ecx]
  006d9	41		 inc	 ecx
  006da	84 c0		 test	 al, al
  006dc	75 f9		 jne	 SHORT $LL1224@Configurat
  006de	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  006e0	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  006e6	51		 push	 ecx
  006e7	50		 push	 eax
  006e8	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  006ee	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1841 :     PushBackDetails(format);

  006f3	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  006fa	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00700	83 bd d4 fb ff
	ff 10		 cmp	 DWORD PTR $T2[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00707	0f 43 85 c0 fb
	ff ff		 cmovae	 eax, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0070e	50		 push	 eax
  0070f	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00714	68 80 00 00 00	 push	 128			; 00000080H
  00719	6a 10		 push	 16			; 00000010H
  0071b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00720	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00723	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00729	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0072c	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0072d	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00730	74 0d		 je	 SHORT $LN918@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00732	8b c8		 mov	 ecx, eax
  00734	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00739	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0073d	eb 08		 jmp	 SHORT $LN917@Configurat
$LN918@Configurat:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  0073f	50		 push	 eax
  00740	8b ce		 mov	 ecx, esi
  00742	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN917@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1841 :     PushBackDetails(format);

  00747	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0074e	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  00754	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00757	72 2f		 jb	 SHORT $LN1034@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00759	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0075f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00760	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00762	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00768	72 14		 jb	 SHORT $LN1033@Configurat

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0076a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0076d	83 c2 23	 add	 edx, 35			; 00000023H
  00770	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00772	83 c0 fc	 add	 eax, -4			; fffffffcH
  00775	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00778	0f 87 c2 01 00
	00		 ja	 $LN1234@Configurat
$LN1033@Configurat:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0077e	52		 push	 edx
  0077f	51		 push	 ecx
  00780	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00785	83 c4 08	 add	 esp, 8
$LN1034@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1842 :     memset(format, 0x00, sizeof(format));

  00788	68 00 04 00 00	 push	 1024			; 00000400H
  0078d	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00793	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1842 :     memset(format, 0x00, sizeof(format));

  0079d	6a 00		 push	 0
  0079f	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  007a0	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  007aa	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1842 :     memset(format, 0x00, sizeof(format));

  007b1	e8 00 00 00 00	 call	 _memset

; 1844 :     _snprintf(format, sizeof(format) - 1, ">   MaxPower: 0x%02X (%d mA)", ConfigDesc->MaxPower,

  007b6	0f b6 4f 08	 movzx	 ecx, BYTE PTR [edi+8]
  007ba	83 c4 0c	 add	 esp, 12			; 0000000cH
  007bd	8d 04 09	 lea	 eax, DWORD PTR [ecx+ecx]
  007c0	50		 push	 eax
  007c1	51		 push	 ecx
  007c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@BADCCJC@?$DO?5?5?5MaxPower?3?50x?$CF02X?5?$CI?$CFd?5mA?$CJ@
  007c7	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  007cd	68 ff 03 00 00	 push	 1023			; 000003ffH
  007d2	50		 push	 eax
  007d3	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  007d8	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  007de	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 1785 : 		_Myres(0)

  007e8	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  007f2	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1844 :     _snprintf(format, sizeof(format) - 1, ">   MaxPower: 0x%02X (%d mA)", ConfigDesc->MaxPower,

  007f5	83 c4 14	 add	 esp, 20			; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  007f8	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00802	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0080c	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
$LL1225@Configurat:

; 462  : 		return (__builtin_strlen(_First));

  00813	8a 01		 mov	 al, BYTE PTR [ecx]
  00815	41		 inc	 ecx
  00816	84 c0		 test	 al, al
  00818	75 f9		 jne	 SHORT $LL1225@Configurat
  0081a	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0081c	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00822	51		 push	 ecx
  00823	50		 push	 eax
  00824	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0082a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1846 :     PushBackDetails(format);

  0082f	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00836	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0083c	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T5[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00843	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0084a	50		 push	 eax
  0084b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00850	68 80 00 00 00	 push	 128			; 00000080H
  00855	6a 10		 push	 16			; 00000010H
  00857	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0085c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  0085f	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00865	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00868	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00869	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  0086c	74 0d		 je	 SHORT $LN1090@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0086e	8b c8		 mov	 ecx, eax
  00870	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00875	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00879	eb 08		 jmp	 SHORT $LN1089@Configurat
$LN1090@Configurat:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  0087b	50		 push	 eax
  0087c	8b ce		 mov	 ecx, esi
  0087e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN1089@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1846 :     PushBackDetails(format);

  00883	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0088a	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T5[ebp+20]
  00890	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00893	72 2f		 jb	 SHORT $LN1206@Configurat
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00895	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0089b	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0089c	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0089e	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  008a4	72 14		 jb	 SHORT $LN1205@Configurat

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  008a6	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  008a9	83 c2 23	 add	 edx, 35			; 00000023H
  008ac	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  008ae	83 c0 fc	 add	 eax, -4			; fffffffcH
  008b1	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  008b4	0f 87 8b 00 00
	00		 ja	 $LN1235@Configurat
$LN1205@Configurat:

; 207  : 	::operator delete(_Ptr, _Bytes);

  008ba	52		 push	 edx
  008bb	51		 push	 ecx
  008bc	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  008c1	83 c4 08	 add	 esp, 8
$LN1206@Configurat:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1847 :     memset(format, 0x00, sizeof(format));

  008c4	68 00 04 00 00	 push	 1024			; 00000400H
  008c9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  008cf	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1847 :     memset(format, 0x00, sizeof(format));

  008d9	6a 00		 push	 0
  008db	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  008dc	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  008e6	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1847 :     memset(format, 0x00, sizeof(format));

  008ed	e8 00 00 00 00	 call	 _memset
  008f2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1848 : 
; 1849 :     Log(LOG_DEBUG, __LINE__, "<< USB.CfgDesc");

  008f5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OFLCOGDC@?$DM?$DM?5USB?4CfgDesc@
  008fa	68 39 07 00 00	 push	 1849			; 00000739H
  008ff	6a 10		 push	 16			; 00000010H
  00901	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00906	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1850 : }

  00909	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0090c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00913	59		 pop	 ecx
  00914	5f		 pop	 edi
  00915	5e		 pop	 esi
  00916	5b		 pop	 ebx
  00917	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0091a	33 cd		 xor	 ecx, ebp
  0091c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00921	8b e5		 mov	 esp, ebp
  00923	5d		 pop	 ebp
  00924	c2 08 00	 ret	 8
$LN1229@Configurat:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00927	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1230@Configurat:
  0092c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1231@Configurat:
  00931	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1232@Configurat:
  00936	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1233@Configurat:
  0093b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1234@Configurat:
  00940	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1235@Configurat:
  00945	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1227@Configurat:
  0094a	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$0:
  00000	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$1:
  0000b	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$2:
  00016	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$3:
  00021	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$4:
  0002c	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$5:
  00037	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$6:
  00042	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00048	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z:
  0004d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00051	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00054	8b 8a b4 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1100]
  0005a	33 c8		 xor	 ecx, eax
  0005c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00061	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00064	33 c8		 xor	 ecx, eax
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z
  00070	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ConfigurationDescriptor@USB@@IAEXPAU_USB_CONFIGURATION_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ENDP ; USB::ConfigurationDescriptor
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_StringDescs$GSCopy$1$ = -1092				; size = 4
$T2 = -1088						; size = 24
$T3 = -1088						; size = 24
$T4 = -1088						; size = 24
$T5 = -1064						; size = 24
$T6 = -1064						; size = 24
$T7 = -1064						; size = 24
$T8 = -1064						; size = 24
$T9 = -1064						; size = 24
$T10 = -1064						; size = 24
_format$ = -1040					; size = 1024
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_InterfaceDesc$ = 8					; size = 4
_StringDescs$ = 12					; size = 4
?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z PROC ; USB::InterfaceDescriptor
; _this$ = ecx

; 1854 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 3c 04 00
	00		 sub	 esp, 1084		; 0000043cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b d9		 mov	 ebx, ecx
  00030	8b 45 0c	 mov	 eax, DWORD PTR _StringDescs$[ebp]
  00033	8b 7d 08	 mov	 edi, DWORD PTR _InterfaceDesc$[ebp]

; 1855 :     char format[1024] = { 0 };

  00036	68 00 04 00 00	 push	 1024			; 00000400H
  0003b	89 85 bc fb ff
	ff		 mov	 DWORD PTR _StringDescs$GSCopy$1$[ebp], eax
  00041	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00047	6a 00		 push	 0
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 _memset
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1856 : 
; 1857 :     Log(LOG_DEBUG, __LINE__, ">> USB.InterfaceDesc");

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FGFFFEAJ@?$DO?$DO?5USB?4InterfaceDesc@
  00057	68 41 07 00 00	 push	 1857			; 00000741H
  0005c	6a 10		 push	 16			; 00000010H
  0005e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00066	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 1785 : 		_Myres(0)

  00070	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0007a	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]

; 3976 : 		_My_data._Mysize = 0;

  00080	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0008a	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00094	6a 17		 push	 23			; 00000017H
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FGHPJGGP@?$DO?5Interface?5Descriptor?3@
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0009b	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000a2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1859 :     PushBackDetails("> Interface Descriptor:");

  000a7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  000ae	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000b4	83 bd d4 fb ff
	ff 10		 cmp	 DWORD PTR $T4[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  000bb	0f 43 85 c0 fb
	ff ff		 cmovae	 eax, DWORD PTR $T4[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  000c2	50		 push	 eax
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  000c8	68 80 00 00 00	 push	 128			; 00000080H
  000cd	6a 10		 push	 16			; 00000010H
  000cf	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000d4	8b 83 10 02 00
	00		 mov	 eax, DWORD PTR [ebx+528]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 129  :         usbDevDetails.push_back(detail);

  000da	8d b3 0c 02 00
	00		 lea	 esi, DWORD PTR [ebx+524]
  000e0	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  000e3	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  000e9	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000ea	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  000ed	74 0d		 je	 SHORT $LN66@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  000ef	8b c8		 mov	 ecx, eax
  000f1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  000f6	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  000fa	eb 08		 jmp	 SHORT $LN65@InterfaceD
$LN66@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  000fc	50		 push	 eax
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN65@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1859 :     PushBackDetails("> Interface Descriptor:");

  00104	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0010b	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T4[ebp+20]
  00111	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00114	72 2f		 jb	 SHORT $LN182@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00116	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0011c	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0011d	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0011f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00125	72 14		 jb	 SHORT $LN181@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00127	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0012a	83 c2 23	 add	 edx, 35			; 00000023H
  0012d	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00132	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00135	0f 87 bf 0a 00
	00		 ja	 $LN1584@InterfaceD
$LN181@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0013b	52		 push	 edx
  0013c	51		 push	 ecx
  0013d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00142	83 c4 08	 add	 esp, 8
$LN182@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1861 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceNumber: 0x%02X", InterfaceDesc->bInterfaceNumber);

  00145	0f b6 47 02	 movzx	 eax, BYTE PTR [edi+2]
  00149	50		 push	 eax
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@ONGOLDBE@?$DO?5?5?5bInterfaceNumber?3?50x?$CF02X@
  0014f	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00155	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1861 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceNumber: 0x%02X", InterfaceDesc->bInterfaceNumber);

  0015f	68 ff 03 00 00	 push	 1023			; 000003ffH
  00164	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00165	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0016f	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1861 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceNumber: 0x%02X", InterfaceDesc->bInterfaceNumber);

  00176	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0017b	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00181	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 1785 : 		_Myres(0)

  0018b	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00195	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1861 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceNumber: 0x%02X", InterfaceDesc->bInterfaceNumber);

  00198	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0019b	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  001a5	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001af	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
$LL1573@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  001b6	8a 01		 mov	 al, BYTE PTR [ecx]
  001b8	41		 inc	 ecx
  001b9	84 c0		 test	 al, al
  001bb	75 f9		 jne	 SHORT $LL1573@InterfaceD
  001bd	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  001bf	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  001c5	51		 push	 ecx
  001c6	50		 push	 eax
  001c7	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  001cd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1862 :     PushBackDetails(format);

  001d2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  001d9	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  001df	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T10[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  001e6	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T10[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  001ed	50		 push	 eax
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  001f3	68 80 00 00 00	 push	 128			; 00000080H
  001f8	6a 10		 push	 16			; 00000010H
  001fa	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  001ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00202	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00208	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0020b	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0020c	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  0020f	74 0d		 je	 SHORT $LN239@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00211	8b c8		 mov	 ecx, eax
  00213	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00218	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0021c	eb 08		 jmp	 SHORT $LN238@InterfaceD
$LN239@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  0021e	50		 push	 eax
  0021f	8b ce		 mov	 ecx, esi
  00221	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN238@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1862 :     PushBackDetails(format);

  00226	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0022d	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T10[ebp+20]
  00233	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00236	72 2f		 jb	 SHORT $LN355@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00238	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0023e	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0023f	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00241	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00247	72 14		 jb	 SHORT $LN354@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00249	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0024c	83 c2 23	 add	 edx, 35			; 00000023H
  0024f	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00251	83 c0 fc	 add	 eax, -4			; fffffffcH
  00254	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00257	0f 87 a2 09 00
	00		 ja	 $LN1585@InterfaceD
$LN354@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0025d	52		 push	 edx
  0025e	51		 push	 ecx
  0025f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00264	83 c4 08	 add	 esp, 8
$LN355@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1863 :     memset(format, 0x00, sizeof(format));

  00267	68 00 04 00 00	 push	 1024			; 00000400H
  0026c	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00272	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1863 :     memset(format, 0x00, sizeof(format));

  0027c	6a 00		 push	 0
  0027e	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0027f	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00289	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1863 :     memset(format, 0x00, sizeof(format));

  00290	e8 00 00 00 00	 call	 _memset

; 1865 :     _snprintf(format, sizeof(format) - 1, ">   bAlternateSetting: 0x%02X", InterfaceDesc->bAlternateSetting);

  00295	0f b6 47 03	 movzx	 eax, BYTE PTR [edi+3]
  00299	83 c4 0c	 add	 esp, 12			; 0000000cH
  0029c	50		 push	 eax
  0029d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@JANOLKEO@?$DO?5?5?5bAlternateSetting?3?50x?$CF02X@
  002a2	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002a8	68 ff 03 00 00	 push	 1023			; 000003ffH
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002b3	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  002b9	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 1785 : 		_Myres(0)

  002c3	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002cd	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1865 :     _snprintf(format, sizeof(format) - 1, ">   bAlternateSetting: 0x%02X", InterfaceDesc->bAlternateSetting);

  002d0	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  002d3	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002dd	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002e7	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  002ee	66 90		 npad	 2
$LL1574@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  002f0	8a 01		 mov	 al, BYTE PTR [ecx]
  002f2	41		 inc	 ecx
  002f3	84 c0		 test	 al, al
  002f5	75 f9		 jne	 SHORT $LL1574@InterfaceD
  002f7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  002f9	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002ff	51		 push	 ecx
  00300	50		 push	 eax
  00301	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00307	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1866 :     PushBackDetails(format);

  0030c	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00313	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00319	83 bd d4 fb ff
	ff 10		 cmp	 DWORD PTR $T3[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00320	0f 43 85 c0 fb
	ff ff		 cmovae	 eax, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00327	50		 push	 eax
  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0032d	68 80 00 00 00	 push	 128			; 00000080H
  00332	6a 10		 push	 16			; 00000010H
  00334	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00339	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  0033c	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00342	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00345	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00346	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00349	74 0d		 je	 SHORT $LN411@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0034b	8b c8		 mov	 ecx, eax
  0034d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00352	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00356	eb 08		 jmp	 SHORT $LN410@InterfaceD
$LN411@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00358	50		 push	 eax
  00359	8b ce		 mov	 ecx, esi
  0035b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN410@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1866 :     PushBackDetails(format);

  00360	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00367	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T3[ebp+20]
  0036d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00370	72 2f		 jb	 SHORT $LN527@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00372	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00378	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00379	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0037b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00381	72 14		 jb	 SHORT $LN526@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00383	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00386	83 c2 23	 add	 edx, 35			; 00000023H
  00389	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0038b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0038e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00391	0f 87 6d 08 00
	00		 ja	 $LN1586@InterfaceD
$LN526@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00397	52		 push	 edx
  00398	51		 push	 ecx
  00399	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0039e	83 c4 08	 add	 esp, 8
$LN527@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1867 :     memset(format, 0x00, sizeof(format));

  003a1	68 00 04 00 00	 push	 1024			; 00000400H
  003a6	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  003ac	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1867 :     memset(format, 0x00, sizeof(format));

  003b6	6a 00		 push	 0
  003b8	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  003b9	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  003c3	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1867 :     memset(format, 0x00, sizeof(format));

  003ca	e8 00 00 00 00	 call	 _memset

; 1869 :     _snprintf(format, sizeof(format) - 1, ">   bNumEndpoints: 0x%02X", InterfaceDesc->bNumEndpoints);

  003cf	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  003d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d6	50		 push	 eax
  003d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EHJBAMGD@?$DO?5?5?5bNumEndpoints?3?50x?$CF02X@
  003dc	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  003e2	68 ff 03 00 00	 push	 1023			; 000003ffH
  003e7	50		 push	 eax
  003e8	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  003ed	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  003f3	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0

; 1785 : 		_Myres(0)

  003fd	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00407	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1869 :     _snprintf(format, sizeof(format) - 1, ">   bNumEndpoints: 0x%02X", InterfaceDesc->bNumEndpoints);

  0040a	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0040d	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00417	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00421	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
$LL1575@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  00428	8a 01		 mov	 al, BYTE PTR [ecx]
  0042a	41		 inc	 ecx
  0042b	84 c0		 test	 al, al
  0042d	75 f9		 jne	 SHORT $LL1575@InterfaceD
  0042f	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00431	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00437	51		 push	 ecx
  00438	50		 push	 eax
  00439	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0043f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1870 :     PushBackDetails(format);

  00444	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  0044b	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00451	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T9[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00458	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T9[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0045f	50		 push	 eax
  00460	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00465	68 80 00 00 00	 push	 128			; 00000080H
  0046a	6a 10		 push	 16			; 00000010H
  0046c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00471	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00474	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0047a	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0047d	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0047e	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00481	74 0d		 je	 SHORT $LN583@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00483	8b c8		 mov	 ecx, eax
  00485	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  0048a	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0048e	eb 08		 jmp	 SHORT $LN582@InterfaceD
$LN583@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00490	50		 push	 eax
  00491	8b ce		 mov	 ecx, esi
  00493	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN582@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1870 :     PushBackDetails(format);

  00498	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0049f	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T9[ebp+20]
  004a5	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  004a8	72 2f		 jb	 SHORT $LN699@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004aa	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  004b0	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004b1	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  004b3	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  004b9	72 14		 jb	 SHORT $LN698@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  004bb	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  004be	83 c2 23	 add	 edx, 35			; 00000023H
  004c1	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004c3	83 c0 fc	 add	 eax, -4			; fffffffcH
  004c6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004c9	0f 87 3a 07 00
	00		 ja	 $LN1587@InterfaceD
$LN698@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  004cf	52		 push	 edx
  004d0	51		 push	 ecx
  004d1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004d6	83 c4 08	 add	 esp, 8
$LN699@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1871 :     memset(format, 0x00, sizeof(format));

  004d9	68 00 04 00 00	 push	 1024			; 00000400H
  004de	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  004e4	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1871 :     memset(format, 0x00, sizeof(format));

  004ee	6a 00		 push	 0
  004f0	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  004f1	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  004fb	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1871 :     memset(format, 0x00, sizeof(format));

  00502	e8 00 00 00 00	 call	 _memset

; 1873 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceClass: 0x%02X (%s)", InterfaceDesc->bInterfaceClass,

  00507	8a 4f 05	 mov	 cl, BYTE PTR [edi+5]
  0050a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0050d	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01OGPIMHDM@?$DP@
  00512	80 f9 01	 cmp	 cl, 1
  00515	75 07		 jne	 SHORT $LN9@InterfaceD
  00517	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05KKCMAPLJ@Audio@
  0051c	eb 17		 jmp	 SHORT $LN8@InterfaceD
$LN9@InterfaceD:
  0051e	80 f9 03	 cmp	 cl, 3
  00521	75 07		 jne	 SHORT $LN7@InterfaceD
  00523	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03GLEFGMHP@HID@
  00528	eb 0b		 jmp	 SHORT $LN8@InterfaceD
$LN7@InterfaceD:
  0052a	80 f9 09	 cmp	 cl, 9
  0052d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03IFOKPDKP@Hub@
  00532	0f 45 c2	 cmovne	 eax, edx
$LN8@InterfaceD:
  00535	50		 push	 eax
  00536	0f b6 c1	 movzx	 eax, cl
  00539	50		 push	 eax
  0053a	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KPEKNPLO@?$DO?5?5?5bInterfaceClass?3?50x?$CF02X?5?$CI?$CFs@
  0053f	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00545	68 ff 03 00 00	 push	 1023			; 000003ffH
  0054a	50		 push	 eax
  0054b	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00550	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00556	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 1785 : 		_Myres(0)

  00560	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0056a	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1873 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceClass: 0x%02X (%s)", InterfaceDesc->bInterfaceClass,

  0056d	83 c4 14	 add	 esp, 20			; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00570	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0057a	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00584	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
  0058b	0f 1f 44 00 00	 npad	 5
$LL1576@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  00590	8a 01		 mov	 al, BYTE PTR [ecx]
  00592	41		 inc	 ecx
  00593	84 c0		 test	 al, al
  00595	75 f9		 jne	 SHORT $LL1576@InterfaceD
  00597	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00599	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0059f	51		 push	 ecx
  005a0	50		 push	 eax
  005a1	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  005a7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1877 :     PushBackDetails(format);

  005ac	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  005b3	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  005b9	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T8[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  005c0	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T8[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  005c7	50		 push	 eax
  005c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  005cd	68 80 00 00 00	 push	 128			; 00000080H
  005d2	6a 10		 push	 16			; 00000010H
  005d4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  005d9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  005dc	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  005e2	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  005e5	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  005e6	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  005e9	74 0d		 je	 SHORT $LN755@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  005eb	8b c8		 mov	 ecx, eax
  005ed	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  005f2	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  005f6	eb 08		 jmp	 SHORT $LN754@InterfaceD
$LN755@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  005f8	50		 push	 eax
  005f9	8b ce		 mov	 ecx, esi
  005fb	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN754@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1877 :     PushBackDetails(format);

  00600	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00607	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T8[ebp+20]
  0060d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00610	72 2f		 jb	 SHORT $LN871@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00612	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00618	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00619	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0061b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00621	72 14		 jb	 SHORT $LN870@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00623	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00626	83 c2 23	 add	 edx, 35			; 00000023H
  00629	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0062b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0062e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00631	0f 87 d7 05 00
	00		 ja	 $LN1588@InterfaceD
$LN870@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00637	52		 push	 edx
  00638	51		 push	 ecx
  00639	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0063e	83 c4 08	 add	 esp, 8
$LN871@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1878 :     memset(format, 0x00, sizeof(format));

  00641	68 00 04 00 00	 push	 1024			; 00000400H
  00646	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0064c	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1878 :     memset(format, 0x00, sizeof(format));

  00656	6a 00		 push	 0
  00658	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00659	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00663	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1878 :     memset(format, 0x00, sizeof(format));

  0066a	e8 00 00 00 00	 call	 _memset
  0066f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1879 : 
; 1880 :     if (InterfaceDesc->bInterfaceClass == USB_DEVICE_CLASS_AUDIO)

  00672	80 7f 05 01	 cmp	 BYTE PTR [edi+5], 1
  00676	75 4b		 jne	 SHORT $LN2@InterfaceD

; 1881 :     {
; 1882 :         _snprintf(format, sizeof(format) - 1, ">   bInterfaceSubClass: 0x%02X (%s)", InterfaceDesc->bInterfaceSubClass,

  00678	8a 4f 06	 mov	 cl, BYTE PTR [edi+6]
  0067b	80 f9 01	 cmp	 cl, 1
  0067e	75 07		 jne	 SHORT $LN13@InterfaceD
  00680	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0O@FIEMGMDK@Audio?5Control@
  00685	eb 1c		 jmp	 SHORT $LN12@InterfaceD
$LN13@InterfaceD:
  00687	80 f9 02	 cmp	 cl, 2
  0068a	75 07		 jne	 SHORT $LN11@InterfaceD
  0068c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BA@CCICINDB@Audio?5Streaming@
  00691	eb 10		 jmp	 SHORT $LN12@InterfaceD
$LN11@InterfaceD:
  00693	80 f9 03	 cmp	 cl, 3
  00696	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@ODBCJCKO@MIDI?5Streaming@
  0069b	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01OGPIMHDM@?$DP@
  006a0	0f 45 c2	 cmovne	 eax, edx
$LN12@InterfaceD:
  006a3	50		 push	 eax
  006a4	0f b6 c1	 movzx	 eax, cl
  006a7	50		 push	 eax
  006a8	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@PEKAFJHJ@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X?5@
  006ad	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  006b3	68 ff 03 00 00	 push	 1023			; 000003ffH
  006b8	50		 push	 eax
  006b9	e8 00 00 00 00	 call	 __snprintf
  006be	83 c4 14	 add	 esp, 20			; 00000014H

; 1883 :             (InterfaceDesc->bInterfaceSubClass == USB_AUDIO_SUBCLASS_AUDIOCONTROL ? "Audio Control" :
; 1884 :             (InterfaceDesc->bInterfaceSubClass == USB_AUDIO_SUBCLASS_AUDIOSTREAMING ? "Audio Streaming" :
; 1885 :                 (InterfaceDesc->bInterfaceSubClass == USB_AUDIO_SUBCLASS_MIDISTREAMING ? "MIDI Streaming" : "?"))));
; 1886 :     }
; 1887 :     else

  006c1	eb 1e		 jmp	 SHORT $LN3@InterfaceD
$LN2@InterfaceD:

; 1888 :         _snprintf(format, sizeof(format) - 1, ">   bInterfaceSubClass: 0x%02X", InterfaceDesc->bInterfaceSubClass);

  006c3	0f b6 47 06	 movzx	 eax, BYTE PTR [edi+6]
  006c7	50		 push	 eax
  006c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@MCCALMMN@?$DO?5?5?5bInterfaceSubClass?3?50x?$CF02X@
  006cd	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  006d3	68 ff 03 00 00	 push	 1023			; 000003ffH
  006d8	50		 push	 eax
  006d9	e8 00 00 00 00	 call	 __snprintf
  006de	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@InterfaceD:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  006e1	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  006e7	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 1785 : 		_Myres(0)

  006f1	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  006fb	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  006fe	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00708	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00712	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
  00719	0f 1f 80 00 00
	00 00		 npad	 7
$LL1577@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  00720	8a 01		 mov	 al, BYTE PTR [ecx]
  00722	41		 inc	 ecx
  00723	84 c0		 test	 al, al
  00725	75 f9		 jne	 SHORT $LL1577@InterfaceD
  00727	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00729	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0072f	51		 push	 ecx
  00730	50		 push	 eax
  00731	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00737	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1889 :     PushBackDetails(format);

  0073c	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00743	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00749	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T7[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00750	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00757	50		 push	 eax
  00758	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0075d	68 80 00 00 00	 push	 128			; 00000080H
  00762	6a 10		 push	 16			; 00000010H
  00764	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00769	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  0076c	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00772	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00775	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00776	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00779	74 0d		 je	 SHORT $LN927@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0077b	8b c8		 mov	 ecx, eax
  0077d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00782	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00786	eb 08		 jmp	 SHORT $LN926@InterfaceD
$LN927@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00788	50		 push	 eax
  00789	8b ce		 mov	 ecx, esi
  0078b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN926@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1889 :     PushBackDetails(format);

  00790	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00797	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T7[ebp+20]
  0079d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  007a0	72 2f		 jb	 SHORT $LN1043@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007a2	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  007a8	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007a9	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  007ab	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  007b1	72 14		 jb	 SHORT $LN1042@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  007b3	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  007b6	83 c2 23	 add	 edx, 35			; 00000023H
  007b9	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  007bb	83 c0 fc	 add	 eax, -4			; fffffffcH
  007be	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  007c1	0f 87 4c 04 00
	00		 ja	 $LN1589@InterfaceD
$LN1042@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  007c7	52		 push	 edx
  007c8	51		 push	 ecx
  007c9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007ce	83 c4 08	 add	 esp, 8
$LN1043@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1890 :     memset(format, 0x00, sizeof(format));

  007d1	68 00 04 00 00	 push	 1024			; 00000400H
  007d6	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  007dc	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1890 :     memset(format, 0x00, sizeof(format));

  007e6	6a 00		 push	 0
  007e8	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  007e9	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  007f3	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1890 :     memset(format, 0x00, sizeof(format));

  007fa	e8 00 00 00 00	 call	 _memset

; 1892 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceProtocol: 0x%02X", InterfaceDesc->bInterfaceProtocol);

  007ff	0f b6 47 07	 movzx	 eax, BYTE PTR [edi+7]
  00803	83 c4 0c	 add	 esp, 12			; 0000000cH
  00806	50		 push	 eax
  00807	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@HNOOPNHM@?$DO?5?5?5bInterfaceProtocol?3?50x?$CF02X@
  0080c	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00812	68 ff 03 00 00	 push	 1023			; 000003ffH
  00817	50		 push	 eax
  00818	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0081d	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00823	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  0082d	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00837	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1892 :     _snprintf(format, sizeof(format) - 1, ">   bInterfaceProtocol: 0x%02X", InterfaceDesc->bInterfaceProtocol);

  0083a	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0083d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00847	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00851	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
$LL1578@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  00858	8a 01		 mov	 al, BYTE PTR [ecx]
  0085a	41		 inc	 ecx
  0085b	84 c0		 test	 al, al
  0085d	75 f9		 jne	 SHORT $LL1578@InterfaceD
  0085f	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00861	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00867	51		 push	 ecx
  00868	50		 push	 eax
  00869	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0086f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1893 :     PushBackDetails(format);

  00874	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  0087b	8d 85 c0 fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00881	83 bd d4 fb ff
	ff 10		 cmp	 DWORD PTR $T2[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00888	0f 43 85 c0 fb
	ff ff		 cmovae	 eax, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0088f	50		 push	 eax
  00890	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00895	68 80 00 00 00	 push	 128			; 00000080H
  0089a	6a 10		 push	 16			; 00000010H
  0089c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  008a1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  008a4	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  008aa	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  008ad	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  008ae	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  008b1	74 0d		 je	 SHORT $LN1099@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  008b3	8b c8		 mov	 ecx, eax
  008b5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  008ba	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  008be	eb 08		 jmp	 SHORT $LN1098@InterfaceD
$LN1099@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  008c0	50		 push	 eax
  008c1	8b ce		 mov	 ecx, esi
  008c3	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN1098@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1893 :     PushBackDetails(format);

  008c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  008cf	8b 95 d4 fb ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  008d5	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  008d8	72 2f		 jb	 SHORT $LN1215@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  008da	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  008e0	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  008e1	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  008e3	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  008e9	72 14		 jb	 SHORT $LN1214@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  008eb	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  008ee	83 c2 23	 add	 edx, 35			; 00000023H
  008f1	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  008f3	83 c0 fc	 add	 eax, -4			; fffffffcH
  008f6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  008f9	0f 87 19 03 00
	00		 ja	 $LN1590@InterfaceD
$LN1214@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  008ff	52		 push	 edx
  00900	51		 push	 ecx
  00901	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00906	83 c4 08	 add	 esp, 8
$LN1215@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1894 :     memset(format, 0x00, sizeof(format));

  00909	68 00 04 00 00	 push	 1024			; 00000400H
  0090e	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00914	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1894 :     memset(format, 0x00, sizeof(format));

  0091e	6a 00		 push	 0
  00920	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00921	c7 85 d4 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0092b	c6 85 c0 fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1894 :     memset(format, 0x00, sizeof(format));

  00932	e8 00 00 00 00	 call	 _memset

; 1896 :     _snprintf(format, sizeof(format) - 1, ">   iInterface: 0x%02X", InterfaceDesc->iInterface);

  00937	0f b6 47 08	 movzx	 eax, BYTE PTR [edi+8]
  0093b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0093e	50		 push	 eax
  0093f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JAJKJCLD@?$DO?5?5?5iInterface?3?50x?$CF02X@
  00944	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0094a	68 ff 03 00 00	 push	 1023			; 000003ffH
  0094f	50		 push	 eax
  00950	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00955	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  0095b	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 1785 : 		_Myres(0)

  00965	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0096f	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1896 :     _snprintf(format, sizeof(format) - 1, ">   iInterface: 0x%02X", InterfaceDesc->iInterface);

  00972	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00975	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0097f	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00989	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
$LL1579@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  00990	8a 01		 mov	 al, BYTE PTR [ecx]
  00992	41		 inc	 ecx
  00993	84 c0		 test	 al, al
  00995	75 f9		 jne	 SHORT $LL1579@InterfaceD
  00997	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00999	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0099f	51		 push	 ecx
  009a0	50		 push	 eax
  009a1	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  009a7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1897 :     PushBackDetails(format);

  009ac	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  009b3	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  009b9	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T6[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  009c0	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  009c7	50		 push	 eax
  009c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  009cd	68 80 00 00 00	 push	 128			; 00000080H
  009d2	6a 10		 push	 16			; 00000010H
  009d4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  009d9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  009dc	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  009e2	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  009e5	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  009e6	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  009e9	74 0d		 je	 SHORT $LN1271@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  009eb	8b c8		 mov	 ecx, eax
  009ed	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  009f2	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  009f6	eb 08		 jmp	 SHORT $LN1270@InterfaceD
$LN1271@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  009f8	50		 push	 eax
  009f9	8b ce		 mov	 ecx, esi
  009fb	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN1270@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1897 :     PushBackDetails(format);

  00a00	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00a07	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+20]
  00a0d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00a10	72 2f		 jb	 SHORT $LN1387@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a12	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00a18	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a19	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00a1b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00a21	72 14		 jb	 SHORT $LN1386@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00a23	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00a26	83 c2 23	 add	 edx, 35			; 00000023H
  00a29	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a2b	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a2e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a31	0f 87 e6 01 00
	00		 ja	 $LN1591@InterfaceD
$LN1386@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00a37	52		 push	 edx
  00a38	51		 push	 ecx
  00a39	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a3e	83 c4 08	 add	 esp, 8
$LN1387@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1898 :     memset(format, 0x00, sizeof(format));

  00a41	68 00 04 00 00	 push	 1024			; 00000400H
  00a46	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00a4c	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1898 :     memset(format, 0x00, sizeof(format));

  00a56	6a 00		 push	 0
  00a58	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00a59	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00a63	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1898 :     memset(format, 0x00, sizeof(format));

  00a6a	e8 00 00 00 00	 call	 _memset

; 1899 : 
; 1900 :     if (InterfaceDesc->iInterface)

  00a6f	8a 47 08	 mov	 al, BYTE PTR [edi+8]
  00a72	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a75	84 c0		 test	 al, al
  00a77	74 0e		 je	 SHORT $LN4@InterfaceD

; 1901 :     {
; 1902 :         StringDescriptor(InterfaceDesc->iInterface, StringDescs);

  00a79	ff b5 bc fb ff
	ff		 push	 DWORD PTR _StringDescs$GSCopy$1$[ebp]
  00a7f	8b cb		 mov	 ecx, ebx
  00a81	50		 push	 eax
  00a82	e8 00 00 00 00	 call	 ?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z ; USB::StringDescriptor
$LN4@InterfaceD:

; 1903 :     }
; 1904 : 
; 1905 :     if (InterfaceDesc->bLength == sizeof(USB_INTERFACE_DESCRIPTOR2))

  00a87	80 3f 0b	 cmp	 BYTE PTR [edi], 11	; 0000000bH
  00a8a	0f 85 38 01 00
	00		 jne	 $LN5@InterfaceD

; 1909 :         _snprintf(format, sizeof(format) - 1, ">   wNumClasses: 0x%04X", interfaceDesc2->wNumClasses);

  00a90	0f b7 47 09	 movzx	 eax, WORD PTR [edi+9]
  00a94	50		 push	 eax
  00a95	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MFPCCAIN@?$DO?5?5?5wNumClasses?3?50x?$CF04X@
  00a9a	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00aa0	68 ff 03 00 00	 push	 1023			; 000003ffH
  00aa5	50		 push	 eax
  00aa6	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00aab	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00ab1	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 1785 : 		_Myres(0)

  00abb	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00ac5	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1909 :         _snprintf(format, sizeof(format) - 1, ">   wNumClasses: 0x%04X", interfaceDesc2->wNumClasses);

  00ac8	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00acb	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00ad5	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00adf	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
$LL1580@InterfaceD:

; 462  : 		return (__builtin_strlen(_First));

  00ae6	8a 01		 mov	 al, BYTE PTR [ecx]
  00ae8	41		 inc	 ecx
  00ae9	84 c0		 test	 al, al
  00aeb	75 f9		 jne	 SHORT $LL1580@InterfaceD
  00aed	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00aef	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00af5	51		 push	 ecx
  00af6	50		 push	 eax
  00af7	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00afd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1910 :         PushBackDetails(format);

  00b02	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00b09	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00b0f	83 bd ec fb ff
	ff 10		 cmp	 DWORD PTR $T5[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00b16	0f 43 85 d8 fb
	ff ff		 cmovae	 eax, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00b1d	50		 push	 eax
  00b1e	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00b23	68 80 00 00 00	 push	 128			; 00000080H
  00b28	6a 10		 push	 16			; 00000010H
  00b2a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00b2f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00b32	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00b38	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00b3b	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00b3c	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00b3f	74 0d		 je	 SHORT $LN1443@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00b41	8b c8		 mov	 ecx, eax
  00b43	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00b48	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00b4c	eb 08		 jmp	 SHORT $LN1442@InterfaceD
$LN1443@InterfaceD:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00b4e	50		 push	 eax
  00b4f	8b ce		 mov	 ecx, esi
  00b51	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN1442@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1910 :         PushBackDetails(format);

  00b56	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00b5d	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR $T5[ebp+20]
  00b63	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00b66	72 2f		 jb	 SHORT $LN1559@InterfaceD
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b68	8b 8d d8 fb ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00b6e	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b6f	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00b71	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00b77	72 14		 jb	 SHORT $LN1558@InterfaceD

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00b79	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00b7c	83 c2 23	 add	 edx, 35			; 00000023H
  00b7f	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00b81	83 c0 fc	 add	 eax, -4			; fffffffcH
  00b84	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00b87	0f 87 95 00 00
	00		 ja	 $LN1592@InterfaceD
$LN1558@InterfaceD:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00b8d	52		 push	 edx
  00b8e	51		 push	 ecx
  00b8f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00b94	83 c4 08	 add	 esp, 8
$LN1559@InterfaceD:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1911 :         memset(format, 0x00, sizeof(format));

  00b97	68 00 04 00 00	 push	 1024			; 00000400H
  00b9c	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00ba2	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1911 :         memset(format, 0x00, sizeof(format));

  00bac	6a 00		 push	 0
  00bae	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00baf	c7 85 ec fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00bb9	c6 85 d8 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1911 :         memset(format, 0x00, sizeof(format));

  00bc0	e8 00 00 00 00	 call	 _memset
  00bc5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@InterfaceD:

; 1912 :     }
; 1913 : 
; 1914 :     Log(LOG_DEBUG, __LINE__, "<< USB.InterfaceDesc");

  00bc8	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HIFPCDPI@?$DM?$DM?5USB?4InterfaceDesc@
  00bcd	68 7a 07 00 00	 push	 1914			; 0000077aH
  00bd2	6a 10		 push	 16			; 00000010H
  00bd4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00bd9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1915 : }

  00bdc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00bdf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00be6	59		 pop	 ecx
  00be7	5f		 pop	 edi
  00be8	5e		 pop	 esi
  00be9	5b		 pop	 ebx
  00bea	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00bed	33 cd		 xor	 ecx, ebp
  00bef	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00bf4	8b e5		 mov	 esp, ebp
  00bf6	5d		 pop	 ebp
  00bf7	c2 08 00	 ret	 8
$LN1584@InterfaceD:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00bfa	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1585@InterfaceD:
  00bff	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1586@InterfaceD:
  00c04	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1587@InterfaceD:
  00c09	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1588@InterfaceD:
  00c0e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1589@InterfaceD:
  00c13	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1590@InterfaceD:
  00c18	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1591@InterfaceD:
  00c1d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1592@InterfaceD:
  00c22	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1582@InterfaceD:
  00c27	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$0:
  00000	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$1:
  0000b	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$2:
  00016	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$3:
  00021	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$4:
  0002c	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$5:
  00037	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$6:
  00042	8d 8d c0 fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00048	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$7:
  0004d	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z$8:
  00058	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z:
  00063	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00067	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0006a	8b 8a b4 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1100]
  00070	33 c8		 xor	 ecx, eax
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0007a	33 c8		 xor	 ecx, eax
  0007c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00081	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z
  00086	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?InterfaceDescriptor@USB@@IAEXPAU_USB_INTERFACE_DESCRIPTOR@@PAU_STRING_DESCRIPTOR_NODE@@@Z ENDP ; USB::InterfaceDescriptor
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
$T2 = -1092						; size = 24
$T3 = -1092						; size = 24
$T4 = -1092						; size = 24
$T5 = -1092						; size = 24
$T6 = -1092						; size = 24
$T7 = -1068						; size = 24
$T8 = -1068						; size = 24
$T9 = -1068						; size = 24
$T10 = -1068						; size = 24
$T11 = -1068						; size = 24
$T12 = -1068						; size = 24
_format$ = -1044					; size = 1024
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_EndpointDesc$ = 8					; size = 4
?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z PROC ; USB::EndpointDescriptor
; _this$ = ecx

; 1919 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 38 04 00
	00		 sub	 esp, 1080		; 00000438H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	8b 5d 08	 mov	 ebx, DWORD PTR _EndpointDesc$[ebp]

; 1920 :     char format[1024] = { 0 };

  00033	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00039	68 00 04 00 00	 push	 1024			; 00000400H
  0003e	6a 00		 push	 0
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _memset
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1921 : 
; 1922 :     Log(LOG_DEBUG, __LINE__, ">> USB.EndpointDesc");

  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BNJCNLHH@?$DO?$DO?5USB?4EndpointDesc@
  0004e	68 82 07 00 00	 push	 1922			; 00000782H
  00053	6a 10		 push	 16			; 00000010H
  00055	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  0005d	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T12[ebp+16], 0

; 1785 : 		_Myres(0)

  00067	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T12[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00071	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]

; 3976 : 		_My_data._Mysize = 0;

  00077	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T12[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00081	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T12[ebp+20], 15 ; 0000000fH

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0008b	6a 16		 push	 22			; 00000016H
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NNPPCJHP@?$DO?5Endpoint?5Descriptor?3@
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00092	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T12[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00099	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1924 :     PushBackDetails("> Endpoint Descriptor:");

  0009e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  000a5	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000ab	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T12[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  000b2	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T12[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  000b9	50		 push	 eax
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  000bf	68 80 00 00 00	 push	 128			; 00000080H
  000c4	6a 10		 push	 16			; 00000010H
  000c6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000cb	8b 87 10 02 00
	00		 mov	 eax, DWORD PTR [edi+528]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 129  :         usbDevDetails.push_back(detail);

  000d1	8d b7 0c 02 00
	00		 lea	 esi, DWORD PTR [edi+524]
  000d7	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  000da	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  000e0	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000e1	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  000e4	74 0d		 je	 SHORT $LN66@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  000e6	8b c8		 mov	 ecx, eax
  000e8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  000ed	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  000f1	eb 08		 jmp	 SHORT $LN65@EndpointDe
$LN66@EndpointDe:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  000f3	50		 push	 eax
  000f4	8b ce		 mov	 ecx, esi
  000f6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN65@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1924 :     PushBackDetails("> Endpoint Descriptor:");

  000fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00102	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T12[ebp+20]
  00108	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0010b	72 2f		 jb	 SHORT $LN182@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010d	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T12[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00113	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00114	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00116	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0011c	72 14		 jb	 SHORT $LN181@EndpointDe

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0011e	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00121	83 c2 23	 add	 edx, 35			; 00000023H
  00124	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00126	83 c0 fc	 add	 eax, -4			; fffffffcH
  00129	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0012c	0f 87 a6 08 00
	00		 ja	 $LN1562@EndpointDe
$LN181@EndpointDe:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00132	52		 push	 edx
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00139	83 c4 08	 add	 esp, 8
$LN182@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1926 :     if (USB_ENDPOINT_DIRECTION_IN(EndpointDesc->bEndpointAddress))

  0013c	8a 43 02	 mov	 al, BYTE PTR [ebx+2]
  0013f	84 c0		 test	 al, al
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00141	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T12[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1926 :     if (USB_ENDPOINT_DIRECTION_IN(EndpointDesc->bEndpointAddress))

  0014b	0f b6 c0	 movzx	 eax, al
  0014e	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0014f	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T12[ebp+20], 15 ; 0000000fH
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1926 :     if (USB_ENDPOINT_DIRECTION_IN(EndpointDesc->bEndpointAddress))

  00159	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0015f	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T12[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1926 :     if (USB_ENDPOINT_DIRECTION_IN(EndpointDesc->bEndpointAddress))

  00166	0f 89 fc 00 00
	00		 jns	 $LN4@EndpointDe

; 1928 :         _snprintf(format, sizeof(format) - 1, ">   bEndpointAddress: 0x%02X IN", EndpointDesc->bEndpointAddress);

  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IMJGHBI@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5IN@
  00171	68 ff 03 00 00	 push	 1023			; 000003ffH
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0017c	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00182	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+16], 0

; 1785 : 		_Myres(0)

  0018c	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00196	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1928 :         _snprintf(format, sizeof(format) - 1, ">   bEndpointAddress: 0x%02X IN", EndpointDesc->bEndpointAddress);

  00199	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0019c	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T11[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  001a6	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001b0	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T11[ebp], 0
$LL1549@EndpointDe:

; 462  : 		return (__builtin_strlen(_First));

  001b7	8a 01		 mov	 al, BYTE PTR [ecx]
  001b9	41		 inc	 ecx
  001ba	84 c0		 test	 al, al
  001bc	75 f9		 jne	 SHORT $LL1549@EndpointDe
  001be	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  001c0	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  001c6	51		 push	 ecx
  001c7	50		 push	 eax
  001c8	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  001ce	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1929 :         PushBackDetails(format);

  001d3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
$LN1560@EndpointDe:

; 1983 : }

  001da	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T11[ebp+20], 16 ; 00000010H
  001e1	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  001e7	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T11[ebp]
  001ee	50		 push	 eax
  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  001f4	68 80 00 00 00	 push	 128			; 00000080H
  001f9	6a 10		 push	 16			; 00000010H
  001fb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00200	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00203	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00209	83 c4 10	 add	 esp, 16			; 00000010H
  0020c	51		 push	 ecx
  0020d	39 46 08	 cmp	 DWORD PTR [esi+8], eax
  00210	74 0d		 je	 SHORT $LN239@EndpointDe
  00212	8b c8		 mov	 ecx, eax
  00214	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00219	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H
  0021d	eb 08		 jmp	 SHORT $LN238@EndpointDe
$LN239@EndpointDe:
  0021f	50		 push	 eax
  00220	8b ce		 mov	 ecx, esi
  00222	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN238@EndpointDe:
  00227	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0022e	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T11[ebp+20]
  00234	83 fa 10	 cmp	 edx, 16			; 00000010H
  00237	0f 82 a8 00 00
	00		 jb	 $LN527@EndpointDe
  0023d	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T11[ebp]
  00243	42		 inc	 edx
  00244	8b c1		 mov	 eax, ecx
  00246	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0024c	0f 82 89 00 00
	00		 jb	 $LN526@EndpointDe
  00252	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00255	83 c2 23	 add	 edx, 35			; 00000023H
  00258	2b c1		 sub	 eax, ecx
  0025a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0025d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00260	0f 87 77 07 00
	00		 ja	 $LN1563@EndpointDe
  00266	eb 73		 jmp	 SHORT $LN526@EndpointDe
$LN4@EndpointDe:

; 1934 :         _snprintf(format, sizeof(format) - 1, ">   bEndpointAddress: 0x%02X OUT", EndpointDesc->bEndpointAddress);

  00268	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@PIKLNKCM@?$DO?5?5?5bEndpointAddress?3?50x?$CF02X?5OU@
  0026d	68 ff 03 00 00	 push	 1023			; 000003ffH
  00272	50		 push	 eax
  00273	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00278	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  0027e	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 1785 : 		_Myres(0)

  00288	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00292	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1934 :         _snprintf(format, sizeof(format) - 1, ">   bEndpointAddress: 0x%02X OUT", EndpointDesc->bEndpointAddress);

  00295	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00298	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002a2	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002ac	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
$LL1550@EndpointDe:

; 462  : 		return (__builtin_strlen(_First));

  002b3	8a 01		 mov	 al, BYTE PTR [ecx]
  002b5	41		 inc	 ecx
  002b6	84 c0		 test	 al, al
  002b8	75 f9		 jne	 SHORT $LL1550@EndpointDe
  002ba	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  002bc	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002c2	51		 push	 ecx
  002c3	50		 push	 eax
  002c4	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  002ca	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1935 :         PushBackDetails(format);

  002cf	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  002d6	e9 ff fe ff ff	 jmp	 $LN1560@EndpointDe
$LN526@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1939 :     switch (EndpointDesc->bmAttributes & 0x03)

  002db	52		 push	 edx
  002dc	51		 push	 ecx
  002dd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002e2	83 c4 08	 add	 esp, 8
$LN527@EndpointDe:
  002e5	68 00 04 00 00	 push	 1024			; 00000400H
  002ea	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002f0	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
  002f7	6a 00		 push	 0
  002f9	50		 push	 eax
  002fa	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH
  00304	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T10[ebp+16], 0
  0030e	e8 00 00 00 00	 call	 _memset
  00313	0f b6 43 03	 movzx	 eax, BYTE PTR [ebx+3]
  00317	83 c4 0c	 add	 esp, 12			; 0000000cH
  0031a	83 e0 03	 and	 eax, 3
  0031d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN1564@EndpointDe[eax*4]
$LN6@EndpointDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00324	6a 1a		 push	 26			; 0000001aH

; 1784 : 		_Mysize(0),

  00326	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00330	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]

; 1785 : 		_Myres(0)

  00336	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00340	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@ICIOMPJC@?$DO?5?5?5Transfer?5Type?3?5Control@

; 3976 : 		_My_data._Mysize = 0;

  00345	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0034f	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00359	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00360	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1942 :         PushBackDetails(">   Transfer Type: Control");

  00365	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
$LN1558@EndpointDe:

; 1983 : }

  0036c	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  00372	8b cf		 mov	 ecx, edi
  00374	50		 push	 eax
  00375	e8 00 00 00 00	 call	 ?PushBackDetails@USB@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; USB::PushBackDetails
  0037a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00381	8b 95 d0 fb ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+20]
  00387	83 fa 10	 cmp	 edx, 16			; 00000010H
  0038a	0f 82 1f 01 00
	00		 jb	 $LN847@EndpointDe
  00390	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  00396	42		 inc	 edx
  00397	8b c1		 mov	 eax, ecx
  00399	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0039f	0f 82 00 01 00
	00		 jb	 $LN846@EndpointDe
  003a5	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  003a8	83 c2 23	 add	 edx, 35			; 00000023H
  003ab	2b c1		 sub	 eax, ecx
  003ad	83 c0 fc	 add	 eax, -4			; fffffffcH
  003b0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003b3	0f 87 29 06 00
	00		 ja	 $LN1559@EndpointDe
  003b9	e9 e7 00 00 00	 jmp	 $LN846@EndpointDe
$LN7@EndpointDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003be	6a 1e		 push	 30			; 0000001eH

; 1784 : 		_Mysize(0),

  003c0	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003ca	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]

; 1785 : 		_Myres(0)

  003d0	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003da	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@DMDNFJME@?$DO?5?5?5Transfer?5Type?3?5Isochronous@

; 3976 : 		_My_data._Mysize = 0;

  003df	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  003e9	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  003f3	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  003fa	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1946 :         PushBackDetails(">   Transfer Type: Isochronous");

  003ff	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00406	e9 61 ff ff ff	 jmp	 $LN1558@EndpointDe
$LN8@EndpointDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0040b	6a 17		 push	 23			; 00000017H

; 1784 : 		_Mysize(0),

  0040d	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00417	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]

; 1785 : 		_Myres(0)

  0041d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00427	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@ELEHNLID@?$DO?5?5?5Transfer?5Type?3?5Bulk@

; 3976 : 		_My_data._Mysize = 0;

  0042c	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00436	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00440	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00447	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1950 :         PushBackDetails(">   Transfer Type: Bulk");

  0044c	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00453	e9 14 ff ff ff	 jmp	 $LN1558@EndpointDe
$LN9@EndpointDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00458	6a 1c		 push	 28			; 0000001cH

; 1784 : 		_Mysize(0),

  0045a	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00464	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]

; 1785 : 		_Myres(0)

  0046a	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00474	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MOOEBEKA@?$DO?5?5?5Transfer?5Type?3?5Interrupt@

; 3976 : 		_My_data._Mysize = 0;

  00479	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00483	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0048d	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00494	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1954 :         PushBackDetails(">   Transfer Type: Interrupt");

  00499	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004a0	e9 c7 fe ff ff	 jmp	 $LN1558@EndpointDe
$LN846@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1959 :     _snprintf(format, sizeof(format) - 1, ">   wMaxPacketSize: 0x%04X (%d)", EndpointDesc->wMaxPacketSize, EndpointDesc->wMaxPacketSize);

  004a5	52		 push	 edx
  004a6	51		 push	 ecx
  004a7	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004ac	83 c4 08	 add	 esp, 8
$LN847@EndpointDe:
  004af	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
  004b6	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
  004c0	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0
$LN849@EndpointDe:
  004ca	0f b7 43 04	 movzx	 eax, WORD PTR [ebx+4]
  004ce	50		 push	 eax
  004cf	50		 push	 eax
  004d0	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@OFHICAPC@?$DO?5?5?5wMaxPacketSize?3?50x?$CF04X?5?$CI?$CFd?$CJ@
  004d5	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  004db	68 ff 03 00 00	 push	 1023			; 000003ffH
  004e0	50		 push	 eax
  004e1	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  004e6	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  004ec	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0

; 1785 : 		_Myres(0)

  004f6	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00500	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1959 :     _snprintf(format, sizeof(format) - 1, ">   wMaxPacketSize: 0x%04X (%d)", EndpointDesc->wMaxPacketSize, EndpointDesc->wMaxPacketSize);

  00503	83 c4 14	 add	 esp, 20			; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00506	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00510	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0051a	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
$LL1551@EndpointDe:

; 462  : 		return (__builtin_strlen(_First));

  00521	8a 01		 mov	 al, BYTE PTR [ecx]
  00523	41		 inc	 ecx
  00524	84 c0		 test	 al, al
  00526	75 f9		 jne	 SHORT $LL1551@EndpointDe
  00528	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0052a	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00530	51		 push	 ecx
  00531	50		 push	 eax
  00532	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00538	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1960 :     PushBackDetails(format);

  0053d	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00544	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0054a	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T9[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00551	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T9[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00558	50		 push	 eax
  00559	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0055e	68 80 00 00 00	 push	 128			; 00000080H
  00563	6a 10		 push	 16			; 00000010H
  00565	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0056a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  0056d	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00573	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00576	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00577	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  0057a	74 0d		 je	 SHORT $LN903@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0057c	8b c8		 mov	 ecx, eax
  0057e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00583	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00587	eb 08		 jmp	 SHORT $LN902@EndpointDe
$LN903@EndpointDe:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00589	50		 push	 eax
  0058a	8b ce		 mov	 ecx, esi
  0058c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN902@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1960 :     PushBackDetails(format);

  00591	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00598	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T9[ebp+20]
  0059e	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  005a1	72 2f		 jb	 SHORT $LN1019@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005a3	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  005a9	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005aa	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  005ac	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  005b2	72 14		 jb	 SHORT $LN1018@EndpointDe

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  005b4	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  005b7	83 c2 23	 add	 edx, 35			; 00000023H
  005ba	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  005bc	83 c0 fc	 add	 eax, -4			; fffffffcH
  005bf	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  005c2	0f 87 1a 04 00
	00		 ja	 $LN1559@EndpointDe
$LN1018@EndpointDe:

; 207  : 	::operator delete(_Ptr, _Bytes);

  005c8	52		 push	 edx
  005c9	51		 push	 ecx
  005ca	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  005cf	83 c4 08	 add	 esp, 8
$LN1019@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1961 :     memset(format, 0x00, sizeof(format));

  005d2	68 00 04 00 00	 push	 1024			; 00000400H
  005d7	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  005dd	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1961 :     memset(format, 0x00, sizeof(format));

  005e7	6a 00		 push	 0
  005e9	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  005ea	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  005f4	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T9[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1961 :     memset(format, 0x00, sizeof(format));

  005fb	e8 00 00 00 00	 call	 _memset
  00600	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1962 : 
; 1963 :     if (EndpointDesc->bLength == sizeof(USB_ENDPOINT_DESCRIPTOR))

  00603	80 3b 07	 cmp	 BYTE PTR [ebx], 7
  00606	0f 85 27 01 00
	00		 jne	 $LN10@EndpointDe

; 1965 :         _snprintf(format, sizeof(format) - 1, ">   bInterval: 0x%02X", EndpointDesc->bInterval);

  0060c	0f b6 43 06	 movzx	 eax, BYTE PTR [ebx+6]
  00610	50		 push	 eax
  00611	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LPGMHCMJ@?$DO?5?5?5bInterval?3?50x?$CF02X@
  00616	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0061c	68 ff 03 00 00	 push	 1023			; 000003ffH
  00621	50		 push	 eax
  00622	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00627	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  0062d	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 1785 : 		_Myres(0)

  00637	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00641	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1965 :         _snprintf(format, sizeof(format) - 1, ">   bInterval: 0x%02X", EndpointDesc->bInterval);

  00644	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00647	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00651	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0065b	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
$LL1552@EndpointDe:

; 462  : 		return (__builtin_strlen(_First));

  00662	8a 01		 mov	 al, BYTE PTR [ecx]
  00664	41		 inc	 ecx
  00665	84 c0		 test	 al, al
  00667	75 f9		 jne	 SHORT $LL1552@EndpointDe
  00669	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0066b	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00671	51		 push	 ecx
  00672	50		 push	 eax
  00673	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00679	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1966 :         PushBackDetails(format);

  0067e	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00685	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0068b	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T8[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00692	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T8[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00699	50		 push	 eax
  0069a	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0069f	68 80 00 00 00	 push	 128			; 00000080H
  006a4	6a 10		 push	 16			; 00000010H
  006a6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  006ab	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  006ae	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  006b4	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  006b7	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  006b8	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  006bb	74 0d		 je	 SHORT $LN1075@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  006bd	8b c8		 mov	 ecx, eax
  006bf	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  006c4	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  006c8	eb 08		 jmp	 SHORT $LN1074@EndpointDe
$LN1075@EndpointDe:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  006ca	50		 push	 eax
  006cb	8b ce		 mov	 ecx, esi
  006cd	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN1074@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1966 :         PushBackDetails(format);

  006d2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  006d9	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T8[ebp+20]
  006df	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  006e2	72 2f		 jb	 SHORT $LN1191@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006e4	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  006ea	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006eb	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  006ed	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  006f3	72 14		 jb	 SHORT $LN1190@EndpointDe

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  006f5	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  006f8	83 c2 23	 add	 edx, 35			; 00000023H
  006fb	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006fd	83 c0 fc	 add	 eax, -4			; fffffffcH
  00700	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00703	0f 87 d9 02 00
	00		 ja	 $LN1559@EndpointDe
$LN1190@EndpointDe:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00709	52		 push	 edx
  0070a	51		 push	 ecx
  0070b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00710	83 c4 08	 add	 esp, 8
$LN1191@EndpointDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00713	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0071d	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00727	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T8[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1969 :     else

  0072e	e9 5d 02 00 00	 jmp	 $LN1557@EndpointDe
$LN10@EndpointDe:

; 1973 :         _snprintf(format, sizeof(format) - 1, ">   wInterval: 0x%04X", endpointDesc2->wInterval);

  00733	0f b7 43 06	 movzx	 eax, WORD PTR [ebx+6]
  00737	50		 push	 eax
  00738	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HBLIDDIE@?$DO?5?5?5wInterval?3?50x?$CF04X@
  0073d	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00743	68 ff 03 00 00	 push	 1023			; 000003ffH
  00748	50		 push	 eax
  00749	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0074e	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00754	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 1785 : 		_Myres(0)

  0075e	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00768	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1973 :         _snprintf(format, sizeof(format) - 1, ">   wInterval: 0x%04X", endpointDesc2->wInterval);

  0076b	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0076e	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00778	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00782	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
  00789	0f 1f 80 00 00
	00 00		 npad	 7
$LL1553@EndpointDe:

; 462  : 		return (__builtin_strlen(_First));

  00790	8a 01		 mov	 al, BYTE PTR [ecx]
  00792	41		 inc	 ecx
  00793	84 c0		 test	 al, al
  00795	75 f9		 jne	 SHORT $LL1553@EndpointDe
  00797	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00799	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0079f	51		 push	 ecx
  007a0	50		 push	 eax
  007a1	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  007a7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1974 :         PushBackDetails(format);

  007ac	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  007b3	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  007b9	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T7[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  007c0	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  007c7	50		 push	 eax
  007c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  007cd	68 80 00 00 00	 push	 128			; 00000080H
  007d2	6a 10		 push	 16			; 00000010H
  007d4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  007d9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  007dc	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  007e2	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  007e5	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  007e6	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  007e9	74 0d		 je	 SHORT $LN1247@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  007eb	8b c8		 mov	 ecx, eax
  007ed	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  007f2	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  007f6	eb 08		 jmp	 SHORT $LN1246@EndpointDe
$LN1247@EndpointDe:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  007f8	50		 push	 eax
  007f9	8b ce		 mov	 ecx, esi
  007fb	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN1246@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1974 :         PushBackDetails(format);

  00800	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00807	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T7[ebp+20]
  0080d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00810	72 2f		 jb	 SHORT $LN1363@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00812	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00818	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00819	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0081b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00821	72 14		 jb	 SHORT $LN1362@EndpointDe

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00823	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00826	83 c2 23	 add	 edx, 35			; 00000023H
  00829	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0082b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0082e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00831	0f 87 ab 01 00
	00		 ja	 $LN1559@EndpointDe
$LN1362@EndpointDe:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00837	52		 push	 edx
  00838	51		 push	 ecx
  00839	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0083e	83 c4 08	 add	 esp, 8
$LN1363@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1975 :         memset(format, 0x00, sizeof(format));

  00841	68 00 04 00 00	 push	 1024			; 00000400H
  00846	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0084c	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T7[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1975 :         memset(format, 0x00, sizeof(format));

  00856	6a 00		 push	 0
  00858	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00859	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00863	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1975 :         memset(format, 0x00, sizeof(format));

  0086a	e8 00 00 00 00	 call	 _memset

; 1977 :         _snprintf(format, sizeof(format) - 1, ">   bSyncAddress: 0x%02X", endpointDesc2->bSyncAddress);

  0086f	0f b6 43 08	 movzx	 eax, BYTE PTR [ebx+8]
  00873	83 c4 0c	 add	 esp, 12			; 0000000cH
  00876	50		 push	 eax
  00877	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CECFOBBD@?$DO?5?5?5bSyncAddress?3?50x?$CF02X@
  0087c	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00882	68 ff 03 00 00	 push	 1023			; 000003ffH
  00887	50		 push	 eax
  00888	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0088d	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00893	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  0089d	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  008a7	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1977 :         _snprintf(format, sizeof(format) - 1, ">   bSyncAddress: 0x%02X", endpointDesc2->bSyncAddress);

  008aa	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  008ad	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  008b7	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  008c1	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
$LL1554@EndpointDe:

; 462  : 		return (__builtin_strlen(_First));

  008c8	8a 01		 mov	 al, BYTE PTR [ecx]
  008ca	41		 inc	 ecx
  008cb	84 c0		 test	 al, al
  008cd	75 f9		 jne	 SHORT $LL1554@EndpointDe
  008cf	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  008d1	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  008d7	51		 push	 ecx
  008d8	50		 push	 eax
  008d9	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  008df	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1978 :         PushBackDetails(format);

  008e4	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  008eb	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  008f1	83 bd d0 fb ff
	ff 10		 cmp	 DWORD PTR $T2[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  008f8	0f 43 85 bc fb
	ff ff		 cmovae	 eax, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  008ff	50		 push	 eax
  00900	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00905	68 80 00 00 00	 push	 128			; 00000080H
  0090a	6a 10		 push	 16			; 00000010H
  0090c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00911	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00914	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0091a	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0091d	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0091e	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00921	74 0d		 je	 SHORT $LN1419@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00923	8b c8		 mov	 ecx, eax
  00925	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  0092a	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0092e	eb 08		 jmp	 SHORT $LN1418@EndpointDe
$LN1419@EndpointDe:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00930	50		 push	 eax
  00931	8b ce		 mov	 ecx, esi
  00933	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN1418@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1978 :         PushBackDetails(format);

  00938	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0093f	8b 95 d0 fb ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  00945	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00948	72 2b		 jb	 SHORT $LN1535@EndpointDe
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0094a	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00950	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00951	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00953	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00959	72 10		 jb	 SHORT $LN1534@EndpointDe

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0095b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0095e	83 c2 23	 add	 edx, 35			; 00000023H
  00961	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00963	83 c0 fc	 add	 eax, -4			; fffffffcH
  00966	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00969	77 77		 ja	 SHORT $LN1559@EndpointDe
$LN1534@EndpointDe:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0096b	52		 push	 edx
  0096c	51		 push	 ecx
  0096d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00972	83 c4 08	 add	 esp, 8
$LN1535@EndpointDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00975	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0097f	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00989	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
$LN1557@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1982 :     Log(LOG_DEBUG, __LINE__, "<< USB.EndpointDesc");

  00990	68 00 04 00 00	 push	 1024			; 00000400H
  00995	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0099b	6a 00		 push	 0
  0099d	50		 push	 eax
  0099e	e8 00 00 00 00	 call	 _memset
  009a3	83 c4 0c	 add	 esp, 12			; 0000000cH
  009a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KDOIKLAK@?$DM?$DM?5USB?4EndpointDesc@
  009ab	68 be 07 00 00	 push	 1982			; 000007beH
  009b0	6a 10		 push	 16			; 00000010H
  009b2	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  009b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1983 : }

  009ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  009bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  009c4	59		 pop	 ecx
  009c5	5f		 pop	 edi
  009c6	5e		 pop	 esi
  009c7	5b		 pop	 ebx
  009c8	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009cb	33 cd		 xor	 ecx, ebp
  009cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009d2	8b e5		 mov	 esp, ebp
  009d4	5d		 pop	 ebp
  009d5	c2 04 00	 ret	 4
$LN1562@EndpointDe:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  009d8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1563@EndpointDe:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1983 : }

  009dd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1559@EndpointDe:
  009e2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1556@EndpointDe:
  009e7	90		 npad	 1
$LN1564@EndpointDe:
  009e8	00 00 00 00	 DD	 $LN6@EndpointDe
  009ec	00 00 00 00	 DD	 $LN7@EndpointDe
  009f0	00 00 00 00	 DD	 $LN8@EndpointDe
  009f4	00 00 00 00	 DD	 $LN9@EndpointDe
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$0:
  00000	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$1:
  0000b	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$2:
  00016	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$3:
  00021	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$4:
  0002c	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$5:
  00037	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0003d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$6:
  00042	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00048	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$7:
  0004d	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$8:
  00058	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$9:
  00063	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00069	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z$10:
  0006e	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00074	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z:
  00079	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0007d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00080	8b 8a b8 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1096]
  00086	33 c8		 xor	 ecx, eax
  00088	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00090	33 c8		 xor	 ecx, eax
  00092	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00097	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z
  0009c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?EndpointDescriptor@USB@@IAEXPAU_USB_ENDPOINT_DESCRIPTOR@@@Z ENDP ; USB::EndpointDescriptor
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
$T2 = -1092						; size = 24
$T3 = -1092						; size = 24
$T4 = -1068						; size = 24
$T5 = -1068						; size = 24
$T6 = -1068						; size = 24
_format$ = -1044					; size = 1024
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_HidDesc$ = 8						; size = 4
?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z PROC	; USB::HidDescriptor
; _this$ = ecx

; 1987 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 38 04 00
	00		 sub	 esp, 1080		; 00000438H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f1		 mov	 esi, ecx
  00030	8b 7d 08	 mov	 edi, DWORD PTR _HidDesc$[ebp]

; 1988 :     UCHAR i;
; 1989 :     char format[1024] = { 0 };

  00033	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00039	68 00 04 00 00	 push	 1024			; 00000400H
  0003e	6a 00		 push	 0
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _memset
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1990 : 
; 1991 :     Log(LOG_DEBUG, __LINE__, ">> USB.HidDesc");

  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IBOMINBP@?$DO?$DO?5USB?4HidDesc@
  0004e	68 c7 07 00 00	 push	 1991			; 000007c7H
  00053	6a 10		 push	 16			; 00000010H
  00055	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  0005d	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 1785 : 		_Myres(0)

  00067	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00071	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]

; 3976 : 		_My_data._Mysize = 0;

  00077	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00081	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0008b	6a 11		 push	 17			; 00000011H
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FKMEKGFJ@?$DO?5HID?5Descriptor?3@
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00092	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00099	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1993 :     PushBackDetails("> HID Descriptor:");

  0009e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  000a5	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000ab	83 bd d0 fb ff
	ff 10		 cmp	 DWORD PTR $T3[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  000b2	0f 43 85 bc fb
	ff ff		 cmovae	 eax, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  000b9	50		 push	 eax
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  000bf	68 80 00 00 00	 push	 128			; 00000080H
  000c4	6a 10		 push	 16			; 00000010H
  000c6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000cb	8b 86 10 02 00
	00		 mov	 eax, DWORD PTR [esi+528]

; 917  : 		if (_Has_unused_capacity())

  000d1	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 129  :         usbDevDetails.push_back(detail);

  000d7	81 c6 0c 02 00
	00		 add	 esi, 524		; 0000020cH
  000dd	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  000e0	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000e1	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  000e4	74 0d		 je	 SHORT $LN53@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  000e6	8b c8		 mov	 ecx, eax
  000e8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  000ed	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  000f1	eb 08		 jmp	 SHORT $LN52@HidDescrip
$LN53@HidDescrip:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  000f3	50		 push	 eax
  000f4	8b ce		 mov	 ecx, esi
  000f6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN52@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1993 :     PushBackDetails("> HID Descriptor:");

  000fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00102	8b 95 d0 fb ff
	ff		 mov	 edx, DWORD PTR $T3[ebp+20]
  00108	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0010b	72 2f		 jb	 SHORT $LN169@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010d	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00113	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00114	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00116	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0011c	72 14		 jb	 SHORT $LN168@HidDescrip

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0011e	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00121	83 c2 23	 add	 edx, 35			; 00000023H
  00124	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00126	83 c0 fc	 add	 eax, -4			; fffffffcH
  00129	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0012c	0f 87 60 05 00
	00		 ja	 $LN854@HidDescrip
$LN168@HidDescrip:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00132	52		 push	 edx
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00139	83 c4 08	 add	 esp, 8
$LN169@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1995 :     _snprintf(format, sizeof(format) - 1, ">   bcdHID: 0x%04X", HidDesc->bcdHID);

  0013c	0f b7 47 02	 movzx	 eax, WORD PTR [edi+2]
  00140	50		 push	 eax
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JNJCPDHI@?$DO?5?5?5bcdHID?3?50x?$CF04X@
  00146	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0014c	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1995 :     _snprintf(format, sizeof(format) - 1, ">   bcdHID: 0x%04X", HidDesc->bcdHID);

  00156	68 ff 03 00 00	 push	 1023			; 000003ffH
  0015b	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0015c	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00166	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1995 :     _snprintf(format, sizeof(format) - 1, ">   bcdHID: 0x%04X", HidDesc->bcdHID);

  0016d	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00172	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00178	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 1785 : 		_Myres(0)

  00182	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0018c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1995 :     _snprintf(format, sizeof(format) - 1, ">   bcdHID: 0x%04X", HidDesc->bcdHID);

  0018f	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00192	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0019c	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001a6	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  001ad	0f 1f 00	 npad	 3
$LL877@HidDescrip:

; 462  : 		return (__builtin_strlen(_First));

  001b0	8a 01		 mov	 al, BYTE PTR [ecx]
  001b2	41		 inc	 ecx
  001b3	84 c0		 test	 al, al
  001b5	75 f9		 jne	 SHORT $LL877@HidDescrip
  001b7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  001b9	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  001bf	51		 push	 ecx
  001c0	50		 push	 eax
  001c1	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  001c7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1996 :     PushBackDetails(format);

  001cc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  001d3	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  001d9	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T6[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  001e0	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  001e7	50		 push	 eax
  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  001ed	68 80 00 00 00	 push	 128			; 00000080H
  001f2	6a 10		 push	 16			; 00000010H
  001f4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  001f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  001fc	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00202	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00205	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00206	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00209	74 0d		 je	 SHORT $LN226@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0020b	8b c8		 mov	 ecx, eax
  0020d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00212	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00216	eb 08		 jmp	 SHORT $LN225@HidDescrip
$LN226@HidDescrip:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00218	50		 push	 eax
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN225@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1996 :     PushBackDetails(format);

  00220	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00227	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+20]
  0022d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00230	72 2f		 jb	 SHORT $LN342@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00232	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00238	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00239	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0023b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00241	72 14		 jb	 SHORT $LN341@HidDescrip

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00243	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00246	83 c2 23	 add	 edx, 35			; 00000023H
  00249	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0024b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0024e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00251	0f 87 40 04 00
	00		 ja	 $LN884@HidDescrip
$LN341@HidDescrip:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00257	52		 push	 edx
  00258	51		 push	 ecx
  00259	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0025e	83 c4 08	 add	 esp, 8
$LN342@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1997 :     memset(format, 0x00, sizeof(format));

  00261	68 00 04 00 00	 push	 1024			; 00000400H
  00266	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0026c	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1997 :     memset(format, 0x00, sizeof(format));

  00276	6a 00		 push	 0
  00278	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00279	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00283	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1997 :     memset(format, 0x00, sizeof(format));

  0028a	e8 00 00 00 00	 call	 _memset

; 1999 :     _snprintf(format, sizeof(format) - 1, ">   bCountryCode: 0x%02X", HidDesc->bCountryCode);

  0028f	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  00293	83 c4 0c	 add	 esp, 12			; 0000000cH
  00296	50		 push	 eax
  00297	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CKIDJFBI@?$DO?5?5?5bCountryCode?3?50x?$CF02X@
  0029c	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002a2	68 ff 03 00 00	 push	 1023			; 000003ffH
  002a7	50		 push	 eax
  002a8	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002ad	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  002b3	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  002bd	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002c7	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 1999 :     _snprintf(format, sizeof(format) - 1, ">   bCountryCode: 0x%02X", HidDesc->bCountryCode);

  002ca	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  002cd	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002d7	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002e1	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
$LL878@HidDescrip:

; 462  : 		return (__builtin_strlen(_First));

  002e8	8a 01		 mov	 al, BYTE PTR [ecx]
  002ea	41		 inc	 ecx
  002eb	84 c0		 test	 al, al
  002ed	75 f9		 jne	 SHORT $LL878@HidDescrip
  002ef	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  002f1	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002f7	51		 push	 ecx
  002f8	50		 push	 eax
  002f9	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  002ff	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2000 :     PushBackDetails(format);

  00304	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  0030b	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00311	83 bd d0 fb ff
	ff 10		 cmp	 DWORD PTR $T2[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00318	0f 43 85 bc fb
	ff ff		 cmovae	 eax, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0031f	50		 push	 eax
  00320	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00325	68 80 00 00 00	 push	 128			; 00000080H
  0032a	6a 10		 push	 16			; 00000010H
  0032c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00331	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00334	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0033a	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0033d	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0033e	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00341	74 0d		 je	 SHORT $LN398@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00343	8b c8		 mov	 ecx, eax
  00345	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  0034a	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0034e	eb 08		 jmp	 SHORT $LN397@HidDescrip
$LN398@HidDescrip:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00350	50		 push	 eax
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN397@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2000 :     PushBackDetails(format);

  00358	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0035f	8b 95 d0 fb ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  00365	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00368	72 2f		 jb	 SHORT $LN514@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0036a	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00370	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00371	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00373	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00379	72 14		 jb	 SHORT $LN513@HidDescrip

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0037b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0037e	83 c2 23	 add	 edx, 35			; 00000023H
  00381	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00383	83 c0 fc	 add	 eax, -4			; fffffffcH
  00386	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00389	0f 87 0d 03 00
	00		 ja	 $LN885@HidDescrip
$LN513@HidDescrip:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0038f	52		 push	 edx
  00390	51		 push	 ecx
  00391	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00396	83 c4 08	 add	 esp, 8
$LN514@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2001 :     memset(format, 0x00, sizeof(format));

  00399	68 00 04 00 00	 push	 1024			; 00000400H
  0039e	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  003a4	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2001 :     memset(format, 0x00, sizeof(format));

  003ae	6a 00		 push	 0
  003b0	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  003b1	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  003bb	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2001 :     memset(format, 0x00, sizeof(format));

  003c2	e8 00 00 00 00	 call	 _memset

; 2003 :     _snprintf(format, sizeof(format) - 1, ">   bNumDescriptors: 0x%02X", HidDesc->bNumDescriptors);

  003c7	0f b6 47 05	 movzx	 eax, BYTE PTR [edi+5]
  003cb	83 c4 0c	 add	 esp, 12			; 0000000cH
  003ce	50		 push	 eax
  003cf	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MKJBFMNP@?$DO?5?5?5bNumDescriptors?3?50x?$CF02X@
  003d4	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  003da	68 ff 03 00 00	 push	 1023			; 000003ffH
  003df	50		 push	 eax
  003e0	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  003e5	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  003eb	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 1785 : 		_Myres(0)

  003f5	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  003ff	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2003 :     _snprintf(format, sizeof(format) - 1, ">   bNumDescriptors: 0x%02X", HidDesc->bNumDescriptors);

  00402	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00405	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0040f	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00419	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
$LL879@HidDescrip:

; 462  : 		return (__builtin_strlen(_First));

  00420	8a 01		 mov	 al, BYTE PTR [ecx]
  00422	41		 inc	 ecx
  00423	84 c0		 test	 al, al
  00425	75 f9		 jne	 SHORT $LL879@HidDescrip
  00427	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00429	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0042f	51		 push	 ecx
  00430	50		 push	 eax
  00431	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00437	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2004 :     PushBackDetails(format);

  0043c	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00443	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00449	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T5[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00450	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00457	50		 push	 eax
  00458	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0045d	68 80 00 00 00	 push	 128			; 00000080H
  00462	6a 10		 push	 16			; 00000010H
  00464	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00469	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  0046c	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00472	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00475	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00476	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00479	74 0d		 je	 SHORT $LN570@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0047b	8b c8		 mov	 ecx, eax
  0047d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00482	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00486	eb 08		 jmp	 SHORT $LN569@HidDescrip
$LN570@HidDescrip:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00488	50		 push	 eax
  00489	8b ce		 mov	 ecx, esi
  0048b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN569@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2004 :     PushBackDetails(format);

  00490	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00497	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T5[ebp+20]
  0049d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  004a0	72 2f		 jb	 SHORT $LN686@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004a2	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  004a8	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004a9	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  004ab	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  004b1	72 14		 jb	 SHORT $LN685@HidDescrip

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  004b3	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  004b6	83 c2 23	 add	 edx, 35			; 00000023H
  004b9	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004bb	83 c0 fc	 add	 eax, -4			; fffffffcH
  004be	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004c1	0f 87 da 01 00
	00		 ja	 $LN886@HidDescrip
$LN685@HidDescrip:

; 207  : 	::operator delete(_Ptr, _Bytes);

  004c7	52		 push	 edx
  004c8	51		 push	 ecx
  004c9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004ce	83 c4 08	 add	 esp, 8
$LN686@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2005 :     memset(format, 0x00, sizeof(format));

  004d1	68 00 04 00 00	 push	 1024			; 00000400H
  004d6	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  004dc	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2005 :     memset(format, 0x00, sizeof(format));

  004e6	6a 00		 push	 0
  004e8	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  004e9	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  004f3	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2005 :     memset(format, 0x00, sizeof(format));

  004fa	e8 00 00 00 00	 call	 _memset

; 2006 : 
; 2007 :     for (i = 0; i < HidDesc->bNumDescriptors; i++)

  004ff	32 db		 xor	 bl, bl
  00501	83 c4 0c	 add	 esp, 12			; 0000000cH
  00504	38 5f 05	 cmp	 BYTE PTR [edi+5], bl
  00507	0f 86 53 01 00
	00		 jbe	 $LN876@HidDescrip
  0050d	0f 1f 00	 npad	 3
$LL4@HidDescrip:

; 2009 :         _snprintf(format, sizeof(format) - 1, ">   %.3i, bDescriptorType: 0x%02X, wDescriptorLength: 0x%04X", i,

  00510	0f b6 cb	 movzx	 ecx, bl
  00513	8d 04 4f	 lea	 eax, DWORD PTR [edi+ecx*2]
  00516	0f b7 44 01 07	 movzx	 eax, WORD PTR [ecx+eax+7]
  0051b	50		 push	 eax
  0051c	8d 04 4f	 lea	 eax, DWORD PTR [edi+ecx*2]
  0051f	0f b6 44 01 06	 movzx	 eax, BYTE PTR [ecx+eax+6]
  00524	50		 push	 eax
  00525	51		 push	 ecx
  00526	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@JAEDHMBE@?$DO?5?5?5?$CF?43i?0?5bDescriptorType?3?50x?$CF0@
  0052b	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00531	68 ff 03 00 00	 push	 1023			; 000003ffH
  00536	50		 push	 eax
  00537	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0053c	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00542	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 1785 : 		_Myres(0)

  0054c	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00556	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2009 :         _snprintf(format, sizeof(format) - 1, ">   %.3i, bDescriptorType: 0x%02X, wDescriptorLength: 0x%04X", i,

  00559	83 c4 18	 add	 esp, 24			; 00000018H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0055c	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00566	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00570	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
$LL880@HidDescrip:

; 462  : 		return (__builtin_strlen(_First));

  00577	8a 01		 mov	 al, BYTE PTR [ecx]
  00579	41		 inc	 ecx
  0057a	84 c0		 test	 al, al
  0057c	75 f9		 jne	 SHORT $LL880@HidDescrip
  0057e	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00580	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00586	51		 push	 ecx
  00587	50		 push	 eax
  00588	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0058e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2011 :         PushBackDetails(format);

  00593	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  0059a	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  005a0	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T4[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  005a7	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T4[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  005ae	50		 push	 eax
  005af	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  005b4	68 80 00 00 00	 push	 128			; 00000080H
  005b9	6a 10		 push	 16			; 00000010H
  005bb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  005c0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  005c3	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  005c9	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  005cc	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  005cd	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  005d0	74 0d		 je	 SHORT $LN742@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  005d2	8b c8		 mov	 ecx, eax
  005d4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  005d9	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  005dd	eb 08		 jmp	 SHORT $LN741@HidDescrip
$LN742@HidDescrip:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  005df	50		 push	 eax
  005e0	8b ce		 mov	 ecx, esi
  005e2	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN741@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2011 :         PushBackDetails(format);

  005e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  005ee	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T4[ebp+20]
  005f4	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  005f7	72 2b		 jb	 SHORT $LN858@HidDescrip
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005f9	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  005ff	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00600	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00602	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00608	72 10		 jb	 SHORT $LN857@HidDescrip

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0060a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0060d	83 c2 23	 add	 edx, 35			; 00000023H
  00610	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00612	83 c0 fc	 add	 eax, -4			; fffffffcH
  00615	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00618	77 78		 ja	 SHORT $LN854@HidDescrip
$LN857@HidDescrip:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0061a	52		 push	 edx
  0061b	51		 push	 ecx
  0061c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00621	83 c4 08	 add	 esp, 8
$LN858@HidDescrip:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2012 :         memset(format, 0x00, sizeof(format));

  00624	68 00 04 00 00	 push	 1024			; 00000400H
  00629	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0062f	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2012 :         memset(format, 0x00, sizeof(format));

  00639	6a 00		 push	 0
  0063b	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0063c	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00646	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2012 :         memset(format, 0x00, sizeof(format));

  0064d	e8 00 00 00 00	 call	 _memset
  00652	fe c3		 inc	 bl
  00654	83 c4 0c	 add	 esp, 12			; 0000000cH
  00657	3a 5f 05	 cmp	 bl, BYTE PTR [edi+5]
  0065a	0f 82 b0 fe ff
	ff		 jb	 $LL4@HidDescrip
$LN876@HidDescrip:

; 2013 :     }
; 2014 : 
; 2015 :     Log(LOG_DEBUG, __LINE__, "<< USB.HidDesc");

  00660	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MIAEPICD@?$DM?$DM?5USB?4HidDesc@
  00665	68 df 07 00 00	 push	 2015			; 000007dfH
  0066a	6a 10		 push	 16			; 00000010H
  0066c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00671	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2016 : }

  00674	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00677	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0067e	59		 pop	 ecx
  0067f	5f		 pop	 edi
  00680	5e		 pop	 esi
  00681	5b		 pop	 ebx
  00682	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00685	33 cd		 xor	 ecx, ebp
  00687	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0068c	8b e5		 mov	 esp, ebp
  0068e	5d		 pop	 ebp
  0068f	c2 04 00	 ret	 4
$LN854@HidDescrip:
  00692	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN884@HidDescrip:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00697	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN885@HidDescrip:
  0069c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN886@HidDescrip:
  006a1	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN882@HidDescrip:
  006a6	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$0:
  00000	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$1:
  0000b	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$2:
  00016	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$3:
  00021	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z$4:
  0002c	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z:
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 8a b8 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1096]
  00044	33 c8		 xor	 ecx, eax
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0004e	33 c8		 xor	 ecx, eax
  00050	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00055	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z
  0005a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?HidDescriptor@USB@@IAEXPAU_USB_HID_DESCRIPTOR@@@Z ENDP	; USB::HidDescriptor
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
$T2 = -10040						; size = 24
_format$ = -10016					; size = 10000
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_Index$ = 8						; size = 1
_StringDescs$ = 12					; size = 4
?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z PROC ; USB::StringDescriptor
; _this$ = ecx

; 2020 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 2c 27 00 00	 mov	 eax, 10028		; 0000272cH
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00025	53		 push	 ebx
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	8b f9		 mov	 edi, ecx
  00034	8b 75 0c	 mov	 esi, DWORD PTR _StringDescs$[ebp]

; 2021 :     char format[10000] = { 0 };

  00037	8d 85 e0 d8 ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  0003d	68 10 27 00 00	 push	 10000			; 00002710H
  00042	6a 00		 push	 0
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 _memset

; 2022 : 
; 2023 :     Log(LOG_DEBUG, __LINE__, ">> USB.StrDesc, Idx %d", (int)Index);

  0004a	8a 5d 08	 mov	 bl, BYTE PTR _Index$[ebp]
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	0f b6 c3	 movzx	 eax, bl
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCHICFEL@?$DO?$DO?5USB?4StrDesc?0?5Idx?5?$CFd@
  00059	68 e7 07 00 00	 push	 2023			; 000007e7H
  0005e	6a 10		 push	 16			; 00000010H
  00060	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00065	83 c4 10	 add	 esp, 16			; 00000010H

; 2024 : 
; 2025 :     while (StringDescs)

  00068	85 f6		 test	 esi, esi
  0006a	0f 84 5b 01 00
	00		 je	 $LN3@StringDesc
$LL2@StringDesc:

; 2026 :     {
; 2027 :         if (StringDescs->DescriptorIndex == Index)

  00070	38 5e 04	 cmp	 BYTE PTR [esi+4], bl
  00073	74 0b		 je	 SHORT $LN181@StringDesc

; 2048 :             break;
; 2049 :         }
; 2050 : 
; 2051 :         StringDescs = StringDescs->Next;

  00075	8b 36		 mov	 esi, DWORD PTR [esi]
  00077	85 f6		 test	 esi, esi
  00079	75 f5		 jne	 SHORT $LL2@StringDesc

; 2026 :     {
; 2027 :         if (StringDescs->DescriptorIndex == Index)

  0007b	e9 4b 01 00 00	 jmp	 $LN3@StringDesc
$LN181@StringDesc:

; 2045 :             _snprintf(format, sizeof(format) - 1, ">   0x%04X: %s", StringDescs->LanguageID, (char const* )StringDescs->StringDescriptor->bString);

  00080	8d 46 0a	 lea	 eax, DWORD PTR [esi+10]
  00083	50		 push	 eax
  00084	0f b7 46 06	 movzx	 eax, WORD PTR [esi+6]
  00088	50		 push	 eax
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CCEKBNHE@?$DO?5?5?50x?$CF04X?3?5?$CFs@
  0008e	8d 85 e0 d8 ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00094	68 0f 27 00 00	 push	 9999			; 0000270fH
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0009f	8d 8d e0 d8 ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  000a5	c7 85 d8 d8 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  000af	c7 85 dc d8 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  000b9	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2045 :             _snprintf(format, sizeof(format) - 1, ">   0x%04X: %s", StringDescs->LanguageID, (char const* )StringDescs->StringDescriptor->bString);

  000bc	83 c4 14	 add	 esp, 20			; 00000014H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  000bf	c7 85 d8 d8 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  000c9	c7 85 dc d8 ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  000d3	c6 85 c8 d8 ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  000da	66 0f 1f 44 00
	00		 npad	 6
$LL185@StringDesc:

; 462  : 		return (__builtin_strlen(_First));

  000e0	8a 01		 mov	 al, BYTE PTR [ecx]
  000e2	41		 inc	 ecx
  000e3	84 c0		 test	 al, al
  000e5	75 f9		 jne	 SHORT $LL185@StringDesc
  000e7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  000e9	8d 85 e0 d8 ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  000ef	51		 push	 ecx
  000f0	50		 push	 eax
  000f1	8d 8d c8 d8 ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000f7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2046 :             PushBackDetails(format);

  000fc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  00103	8d 85 c8 d8 ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00109	83 bd dc d8 ff
	ff 10		 cmp	 DWORD PTR $T2[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00110	0f 43 85 c8 d8
	ff ff		 cmovae	 eax, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00117	50		 push	 eax
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  0011d	68 80 00 00 00	 push	 128			; 00000080H
  00122	6a 10		 push	 16			; 00000010H
  00124	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00129	8b 87 10 02 00
	00		 mov	 eax, DWORD PTR [edi+528]

; 917  : 		if (_Has_unused_capacity())

  0012f	8d 8d c8 d8 ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00135	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00138	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00139	39 87 14 02 00
	00		 cmp	 DWORD PTR [edi+532], eax

; 917  : 		if (_Has_unused_capacity())

  0013f	74 10		 je	 SHORT $LN49@StringDesc
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00141	8b c8		 mov	 ecx, eax
  00143	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00148	83 87 10 02 00
	00 18		 add	 DWORD PTR [edi+528], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0014f	eb 0c		 jmp	 SHORT $LN48@StringDesc
$LN49@StringDesc:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00151	50		 push	 eax
  00152	8d 8f 0c 02 00
	00		 lea	 ecx, DWORD PTR [edi+524]
  00158	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN48@StringDesc:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2046 :             PushBackDetails(format);

  0015d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00164	8b 95 dc d8 ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  0016a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0016d	72 2b		 jb	 SHORT $LN165@StringDesc
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0016f	8b 8d c8 d8 ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00175	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00176	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00178	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0017e	72 10		 jb	 SHORT $LN164@StringDesc

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00180	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00183	83 c2 23	 add	 edx, 35			; 00000023H
  00186	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00188	83 c0 fc	 add	 eax, -4			; fffffffcH
  0018b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0018e	77 6d		 ja	 SHORT $LN189@StringDesc
$LN164@StringDesc:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00190	52		 push	 edx
  00191	51		 push	 ecx
  00192	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00197	83 c4 08	 add	 esp, 8
$LN165@StringDesc:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2047 :             memset(format, 0x00, sizeof(format));

  0019a	68 10 27 00 00	 push	 10000			; 00002710H
  0019f	8d 85 e0 d8 ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  001a5	c7 85 d8 d8 ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2047 :             memset(format, 0x00, sizeof(format));

  001af	6a 00		 push	 0
  001b1	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  001b2	c7 85 dc d8 ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001bc	c6 85 c8 d8 ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2047 :             memset(format, 0x00, sizeof(format));

  001c3	e8 00 00 00 00	 call	 _memset
  001c8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@StringDesc:

; 2052 :     }
; 2053 : 
; 2054 :     Log(LOG_DEBUG, __LINE__, "<< USB.StrDesc");

  001cb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DKFDMJNG@?$DM?$DM?5USB?4StrDesc@
  001d0	68 06 08 00 00	 push	 2054			; 00000806H
  001d5	6a 10		 push	 16			; 00000010H
  001d7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2055 : }

  001df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e9	59		 pop	 ecx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	5b		 pop	 ebx
  001ed	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f0	33 cd		 xor	 ecx, ebp
  001f2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 08 00	 ret	 8
$LN189@StringDesc:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001fd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN187@StringDesc:
  00202	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z$0:
  00000	8d 8d c8 d8 ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a c4 d8 ff
	ff		 mov	 ecx, DWORD PTR [edx-10044]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?StringDescriptor@USB@@IAEXEPAU_STRING_DESCRIPTOR_NODE@@@Z ENDP ; USB::StringDescriptor
; Function compile flags: /Ogtp
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp
_TEXT	SEGMENT
_i$1$ = -1093						; size = 1
$T2 = -1092						; size = 24
$T3 = -1092						; size = 24
$T4 = -1068						; size = 24
$T5 = -1068						; size = 24
$T6 = -1068						; size = 24
_format$ = -1044					; size = 1024
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_CommonDesc$ = 8					; size = 4
?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z PROC ; USB::UnknownDescriptor
; _this$ = ecx

; 2059 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 40 04 00
	00		 sub	 esp, 1088		; 00000440H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f1		 mov	 esi, ecx
  00030	8b 7d 08	 mov	 edi, DWORD PTR _CommonDesc$[ebp]

; 2060 :     char format[1024] = { 0 };

  00033	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00039	68 00 04 00 00	 push	 1024			; 00000400H
  0003e	6a 00		 push	 0
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _memset
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2061 :     UCHAR   i;
; 2062 : 
; 2063 :     Log(LOG_DEBUG, __LINE__, ">> USB.UnknownDesc");

  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LEEGFGLN@?$DO?$DO?5USB?4UnknownDesc@
  0004e	68 0f 08 00 00	 push	 2063			; 0000080fH
  00053	6a 10		 push	 16			; 00000010H
  00055	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  0005d	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 1785 : 		_Myres(0)

  00067	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 0

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00071	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]

; 3976 : 		_My_data._Mysize = 0;

  00077	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00081	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  0008b	6a 15		 push	 21			; 00000015H
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FBFGEGLK@?$DO?5Unknown?5Descriptor?3@
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00092	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00099	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2065 :     PushBackDetails("> Unknown Descriptor:");

  0009e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  000a5	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  000ab	83 bd d0 fb ff
	ff 10		 cmp	 DWORD PTR $T3[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  000b2	0f 43 85 bc fb
	ff ff		 cmovae	 eax, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  000b9	50		 push	 eax
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  000bf	68 80 00 00 00	 push	 128			; 00000080H
  000c4	6a 10		 push	 16			; 00000010H
  000c6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000cb	8b 86 10 02 00
	00		 mov	 eax, DWORD PTR [esi+528]

; 917  : 		if (_Has_unused_capacity())

  000d1	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 129  :         usbDevDetails.push_back(detail);

  000d7	81 c6 0c 02 00
	00		 add	 esi, 524		; 0000020cH
  000dd	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  000e0	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  000e1	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  000e4	74 0d		 je	 SHORT $LN55@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  000e6	8b c8		 mov	 ecx, eax
  000e8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  000ed	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  000f1	eb 08		 jmp	 SHORT $LN54@UnknownDes
$LN55@UnknownDes:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  000f3	50		 push	 eax
  000f4	8b ce		 mov	 ecx, esi
  000f6	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN54@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2065 :     PushBackDetails("> Unknown Descriptor:");

  000fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00102	8b 95 d0 fb ff
	ff		 mov	 edx, DWORD PTR $T3[ebp+20]
  00108	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  0010b	72 2f		 jb	 SHORT $LN171@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010d	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00113	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00114	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00116	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0011c	72 14		 jb	 SHORT $LN170@UnknownDes

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0011e	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00121	83 c2 23	 add	 edx, 35			; 00000023H
  00124	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00126	83 c0 fc	 add	 eax, -4			; fffffffcH
  00129	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0012c	0f 87 78 05 00
	00		 ja	 $LN684@UnknownDes
$LN170@UnknownDes:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00132	52		 push	 edx
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00139	83 c4 08	 add	 esp, 8
$LN171@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2067 :     _snprintf(format, sizeof(format) - 1, ">   bDescriptorType: 0x%02X", CommonDesc->bDescriptorType);

  0013c	0f b6 47 01	 movzx	 eax, BYTE PTR [edi+1]
  00140	50		 push	 eax
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HOMJLHIG@?$DO?5?5?5bDescriptorType?3?50x?$CF02X@
  00146	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0014c	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T3[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2067 :     _snprintf(format, sizeof(format) - 1, ">   bDescriptorType: 0x%02X", CommonDesc->bDescriptorType);

  00156	68 ff 03 00 00	 push	 1023			; 000003ffH
  0015b	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0015c	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00166	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2067 :     _snprintf(format, sizeof(format) - 1, ">   bDescriptorType: 0x%02X", CommonDesc->bDescriptorType);

  0016d	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00172	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00178	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 1785 : 		_Myres(0)

  00182	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0018c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2067 :     _snprintf(format, sizeof(format) - 1, ">   bDescriptorType: 0x%02X", CommonDesc->bDescriptorType);

  0018f	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  00192	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  0019c	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  001a6	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
  001ad	0f 1f 00	 npad	 3
$LL879@UnknownDes:

; 462  : 		return (__builtin_strlen(_First));

  001b0	8a 01		 mov	 al, BYTE PTR [ecx]
  001b2	41		 inc	 ecx
  001b3	84 c0		 test	 al, al
  001b5	75 f9		 jne	 SHORT $LL879@UnknownDes
  001b7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  001b9	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  001bf	51		 push	 ecx
  001c0	50		 push	 eax
  001c1	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  001c7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2068 :     PushBackDetails(format);

  001cc	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  001d3	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  001d9	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T6[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  001e0	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  001e7	50		 push	 eax
  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  001ed	68 80 00 00 00	 push	 128			; 00000080H
  001f2	6a 10		 push	 16			; 00000010H
  001f4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  001f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  001fc	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00202	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00205	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00206	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00209	74 0d		 je	 SHORT $LN228@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0020b	8b c8		 mov	 ecx, eax
  0020d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00212	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00216	eb 08		 jmp	 SHORT $LN227@UnknownDes
$LN228@UnknownDes:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00218	50		 push	 eax
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN227@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2068 :     PushBackDetails(format);

  00220	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00227	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+20]
  0022d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00230	72 2f		 jb	 SHORT $LN344@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00232	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00238	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00239	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0023b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00241	72 14		 jb	 SHORT $LN343@UnknownDes

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00243	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00246	83 c2 23	 add	 edx, 35			; 00000023H
  00249	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0024b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0024e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00251	0f 87 58 04 00
	00		 ja	 $LN886@UnknownDes
$LN343@UnknownDes:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00257	52		 push	 edx
  00258	51		 push	 ecx
  00259	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0025e	83 c4 08	 add	 esp, 8
$LN344@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2069 :     memset(format, 0x00, sizeof(format));

  00261	68 00 04 00 00	 push	 1024			; 00000400H
  00266	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0026c	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T6[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2069 :     memset(format, 0x00, sizeof(format));

  00276	6a 00		 push	 0
  00278	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00279	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00283	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T6[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2069 :     memset(format, 0x00, sizeof(format));

  0028a	e8 00 00 00 00	 call	 _memset

; 2071 :     _snprintf(format, sizeof(format) - 1, ">   bLength: 0x%02X", CommonDesc->bLength);

  0028f	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  00292	83 c4 0c	 add	 esp, 12			; 0000000cH
  00295	50		 push	 eax
  00296	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PKPADJND@?$DO?5?5?5bLength?3?50x?$CF02X@
  0029b	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002a1	68 ff 03 00 00	 push	 1023			; 000003ffH
  002a6	50		 push	 eax
  002a7	e8 00 00 00 00	 call	 __snprintf
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002ac	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  002b2	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 1785 : 		_Myres(0)

  002bc	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  002c6	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2071 :     _snprintf(format, sizeof(format) - 1, ">   bLength: 0x%02X", CommonDesc->bLength);

  002c9	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  002cc	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  002d6	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  002e0	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
$LL880@UnknownDes:

; 462  : 		return (__builtin_strlen(_First));

  002e7	8a 01		 mov	 al, BYTE PTR [ecx]
  002e9	41		 inc	 ecx
  002ea	84 c0		 test	 al, al
  002ec	75 f9		 jne	 SHORT $LL880@UnknownDes
  002ee	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  002f0	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  002f6	51		 push	 ecx
  002f7	50		 push	 eax
  002f8	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  002fe	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2072 :     PushBackDetails(format);

  00303	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  0030a	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00310	83 bd d0 fb ff
	ff 10		 cmp	 DWORD PTR $T2[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00317	0f 43 85 bc fb
	ff ff		 cmovae	 eax, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0031e	50		 push	 eax
  0031f	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00324	68 80 00 00 00	 push	 128			; 00000080H
  00329	6a 10		 push	 16			; 00000010H
  0032b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00330	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  00333	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00339	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  0033c	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0033d	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00340	74 0d		 je	 SHORT $LN400@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00342	8b c8		 mov	 ecx, eax
  00344	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00349	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  0034d	eb 08		 jmp	 SHORT $LN399@UnknownDes
$LN400@UnknownDes:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  0034f	50		 push	 eax
  00350	8b ce		 mov	 ecx, esi
  00352	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN399@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2072 :     PushBackDetails(format);

  00357	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  0035e	8b 95 d0 fb ff
	ff		 mov	 edx, DWORD PTR $T2[ebp+20]
  00364	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00367	72 2f		 jb	 SHORT $LN516@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00369	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  0036f	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00370	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00372	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00378	72 14		 jb	 SHORT $LN515@UnknownDes

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0037a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0037d	83 c2 23	 add	 edx, 35			; 00000023H
  00380	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00382	83 c0 fc	 add	 eax, -4			; fffffffcH
  00385	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00388	0f 87 26 03 00
	00		 ja	 $LN887@UnknownDes
$LN515@UnknownDes:

; 207  : 	::operator delete(_Ptr, _Bytes);

  0038e	52		 push	 edx
  0038f	51		 push	 ecx
  00390	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00395	83 c4 08	 add	 esp, 8
$LN516@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2073 :     memset(format, 0x00, sizeof(format));

  00398	68 00 04 00 00	 push	 1024			; 00000400H
  0039d	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  003a3	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2073 :     memset(format, 0x00, sizeof(format));

  003ad	6a 00		 push	 0
  003af	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  003b0	c7 85 d0 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  003ba	c6 85 bc fb ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2073 :     memset(format, 0x00, sizeof(format));

  003c1	e8 00 00 00 00	 call	 _memset
  003c6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2074 : 
; 2075 :     _snprintf(format, sizeof(format) - 1, ">   ");

  003c9	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  003cf	68 00 00 00 00	 push	 OFFSET ??_C@_04CKDHMDHJ@?$DO?5?5?5@
  003d4	68 ff 03 00 00	 push	 1023			; 000003ffH
  003d9	50		 push	 eax
  003da	e8 00 00 00 00	 call	 __snprintf

; 2076 :     for (i = 0; i < CommonDesc->bLength; i++)

  003df	32 c0		 xor	 al, al
  003e1	83 c4 0c	 add	 esp, 12			; 0000000cH
  003e4	88 85 bb fb ff
	ff		 mov	 BYTE PTR _i$1$[ebp], al
  003ea	38 07		 cmp	 BYTE PTR [edi], al
  003ec	0f 86 77 01 00
	00		 jbe	 $LN878@UnknownDes
$LL4@UnknownDes:

; 2077 :     {
; 2078 :         _snprintf(format, sizeof(format) - 1, "%s.%02X", format, ((PUCHAR)CommonDesc)[i]);

  003f2	0f b6 d8	 movzx	 ebx, al
  003f5	0f b6 04 3b	 movzx	 eax, BYTE PTR [ebx+edi]
  003f9	50		 push	 eax
  003fa	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00400	50		 push	 eax
  00401	68 00 00 00 00	 push	 OFFSET ??_C@_07GHOKFMCD@?$CFs?4?$CF02X@
  00406	68 ff 03 00 00	 push	 1023			; 000003ffH
  0040b	50		 push	 eax
  0040c	e8 00 00 00 00	 call	 __snprintf

; 2079 : 
; 2080 :         if (i % 16 == 15)

  00411	83 e3 0f	 and	 ebx, 15			; 0000000fH
  00414	83 c4 14	 add	 esp, 20			; 00000014H
  00417	80 fb 0f	 cmp	 bl, 15			; 0000000fH
  0041a	0f 85 33 01 00
	00		 jne	 $LN2@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00420	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00426	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 1785 : 		_Myres(0)

  00430	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0043a	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0043d	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00447	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00451	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
$LL881@UnknownDes:

; 462  : 		return (__builtin_strlen(_First));

  00458	8a 01		 mov	 al, BYTE PTR [ecx]
  0045a	41		 inc	 ecx
  0045b	84 c0		 test	 al, al
  0045d	75 f9		 jne	 SHORT $LL881@UnknownDes
  0045f	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00461	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00467	51		 push	 ecx
  00468	50		 push	 eax
  00469	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0046f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2082 :             PushBackDetails(format);

  00474	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  0047b	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00481	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T5[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  00488	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  0048f	50		 push	 eax
  00490	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  00495	68 80 00 00 00	 push	 128			; 00000080H
  0049a	6a 10		 push	 16			; 00000010H
  0049c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  004a1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  004a4	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  004aa	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  004ad	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  004ae	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  004b1	74 0d		 je	 SHORT $LN572@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  004b3	8b c8		 mov	 ecx, eax
  004b5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  004ba	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  004be	eb 08		 jmp	 SHORT $LN571@UnknownDes
$LN572@UnknownDes:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  004c0	50		 push	 eax
  004c1	8b ce		 mov	 ecx, esi
  004c3	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN571@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2082 :             PushBackDetails(format);

  004c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  004cf	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T5[ebp+20]
  004d5	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  004d8	72 2f		 jb	 SHORT $LN688@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004da	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  004e0	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004e1	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  004e3	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  004e9	72 14		 jb	 SHORT $LN687@UnknownDes

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  004eb	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  004ee	83 c2 23	 add	 edx, 35			; 00000023H
  004f1	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004f3	83 c0 fc	 add	 eax, -4			; fffffffcH
  004f6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004f9	0f 87 ab 01 00
	00		 ja	 $LN684@UnknownDes
$LN687@UnknownDes:

; 207  : 	::operator delete(_Ptr, _Bytes);

  004ff	52		 push	 edx
  00500	51		 push	 ecx
  00501	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00506	83 c4 08	 add	 esp, 8
$LN688@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2083 :             memset(format, 0x00, sizeof(format));

  00509	68 00 04 00 00	 push	 1024			; 00000400H
  0050e	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  00514	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T5[ebp+16], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2083 :             memset(format, 0x00, sizeof(format));

  0051e	6a 00		 push	 0
  00520	50		 push	 eax
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00521	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  0052b	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T5[ebp], 0
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2083 :             memset(format, 0x00, sizeof(format));

  00532	e8 00 00 00 00	 call	 _memset
  00537	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2084 :             _snprintf(format, sizeof(format) - 1, ">   ");

  0053a	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  00540	68 00 00 00 00	 push	 OFFSET ??_C@_04CKDHMDHJ@?$DO?5?5?5@
  00545	68 ff 03 00 00	 push	 1023			; 000003ffH
  0054a	50		 push	 eax
  0054b	e8 00 00 00 00	 call	 __snprintf
  00550	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@UnknownDes:

; 2076 :     for (i = 0; i < CommonDesc->bLength; i++)

  00553	8a 85 bb fb ff
	ff		 mov	 al, BYTE PTR _i$1$[ebp]
  00559	fe c0		 inc	 al
  0055b	88 85 bb fb ff
	ff		 mov	 BYTE PTR _i$1$[ebp], al
  00561	3a 07		 cmp	 al, BYTE PTR [edi]
  00563	0f 82 89 fe ff
	ff		 jb	 $LL4@UnknownDes
$LN878@UnknownDes:

; 2085 :         }
; 2086 :     }
; 2087 : 
; 2088 :     if (i % 16 != 0)

  00569	a8 0f		 test	 al, 15			; 0000000fH
  0056b	0f 84 07 01 00
	00		 je	 $LN862@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  00571	8d 8d ec fb ff
	ff		 lea	 ecx, DWORD PTR _format$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1784 : 		_Mysize(0),

  00577	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 1785 : 		_Myres(0)

  00581	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 462  : 		return (__builtin_strlen(_First));

  0058b	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3976 : 		_My_data._Mysize = 0;

  0058e	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3977 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00598	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  005a2	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  005a9	0f 1f 80 00 00
	00 00		 npad	 7
$LL882@UnknownDes:

; 462  : 		return (__builtin_strlen(_First));

  005b0	8a 01		 mov	 al, BYTE PTR [ecx]
  005b2	41		 inc	 ecx
  005b3	84 c0		 test	 al, al
  005b5	75 f9		 jne	 SHORT $LL882@UnknownDes
  005b7	2b ca		 sub	 ecx, edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 2676 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  005b9	8d 85 ec fb ff
	ff		 lea	 eax, DWORD PTR _format$[ebp]
  005bf	51		 push	 ecx
  005c0	50		 push	 eax
  005c1	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  005c7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2090 :         PushBackDetails(format);

  005cc	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1814 : 		const value_type * _Result = _Bx._Buf;

  005d3	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]

; 1825 : 		return (_BUF_SIZE <= _Myres);

  005d9	83 bd e8 fb ff
	ff 10		 cmp	 DWORD PTR $T4[ebp+20], 16 ; 00000010H

; 1815 : 		if (_Large_string_engaged())

  005e0	0f 43 85 d4 fb
	ff ff		 cmovae	 eax, DWORD PTR $T4[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  005e7	50		 push	 eax
  005e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GFKFEIAL@?9?9?5USB?4PushBackDets?0?5?$CFs@
  005ed	68 80 00 00 00	 push	 128			; 00000080H
  005f2	6a 10		 push	 16			; 00000010H
  005f4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 1726 : 		return (this->_Myend() != this->_Mylast());

  005f9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 917  : 		if (_Has_unused_capacity())

  005fc	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
; File c:\users\giulif\downloads\study\git\sysstatus\usb.h

; 128  :         Log(LOG_DEBUG,__LINE__,"-- USB.PushBackDets, %s",detail.c_str());

  00602	83 c4 10	 add	 esp, 16			; 00000010H
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 917  : 		if (_Has_unused_capacity())

  00605	51		 push	 ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  00606	39 46 08	 cmp	 DWORD PTR [esi+8], eax

; 917  : 		if (_Has_unused_capacity())

  00609	74 0d		 je	 SHORT $LN744@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  0060b	8b c8		 mov	 ecx, eax
  0060d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector

; 905  : 		++this->_Mylast();

  00612	83 46 04 18	 add	 DWORD PTR [esi+4], 24	; 00000018H

; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00616	eb 08		 jmp	 SHORT $LN743@UnknownDes
$LN744@UnknownDes:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  00618	50		 push	 eax
  00619	8b ce		 mov	 ecx, esi
  0061b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@ABV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
$LN743@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2090 :         PushBackDetails(format);

  00620	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 1825 : 		return (_BUF_SIZE <= _Myres);

  00627	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR $T4[ebp+20]
  0062d	83 fa 10	 cmp	 edx, 16			; 00000010H

; 3987 : 		if (_My_data._Large_string_engaged())

  00630	72 2b		 jb	 SHORT $LN860@UnknownDes
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00632	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3992 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00638	42		 inc	 edx
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00639	8b c1		 mov	 eax, ecx

; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  0063b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00641	72 10		 jb	 SHORT $LN859@UnknownDes

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  00643	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00646	83 c2 23	 add	 edx, 35			; 00000023H
  00649	2b c1		 sub	 eax, ecx

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0064b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0064e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00651	77 66		 ja	 SHORT $LN888@UnknownDes
$LN859@UnknownDes:

; 207  : 	::operator delete(_Ptr, _Bytes);

  00653	52		 push	 edx
  00654	51		 push	 ecx
  00655	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0065a	83 c4 08	 add	 esp, 8
$LN860@UnknownDes:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring

; 3995 : 		_My_data._Mysize = 0;

  0065d	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T4[ebp+16], 0

; 3996 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00667	c7 85 e8 fb ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\iosfwd

; 506  : 		_Left = _Right;

  00671	c6 85 d4 fb ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
$LN862@UnknownDes:
; File c:\users\giulif\downloads\study\git\sysstatus\usb.cpp

; 2093 :     Log(LOG_DEBUG, __LINE__, "<< USB.UnknownDesc");

  00678	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MFCGDLMP@?$DM?$DM?5USB?4UnknownDesc@
  0067d	68 2d 08 00 00	 push	 2093			; 0000082dH
  00682	6a 10		 push	 16			; 00000010H
  00684	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00689	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2094 : }

  0068c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0068f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00696	59		 pop	 ecx
  00697	5f		 pop	 edi
  00698	5e		 pop	 esi
  00699	5b		 pop	 ebx
  0069a	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0069d	33 cd		 xor	 ecx, ebp
  0069f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006a4	8b e5		 mov	 esp, ebp
  006a6	5d		 pop	 ebp
  006a7	c2 04 00	 ret	 4
$LN684@UnknownDes:
  006aa	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN886@UnknownDes:
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory0

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006af	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN887@UnknownDes:
  006b4	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN888@UnknownDes:
  006b9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN884@UnknownDes:
  006be	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$0:
  00000	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$1:
  0000b	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$2:
  00016	8d 8d bc fb ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$3:
  00021	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z$4:
  0002c	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00032	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z:
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 8a b0 fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1104]
  00044	33 c8		 xor	 ecx, eax
  00046	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004b	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0004e	33 c8		 xor	 ecx, eax
  00050	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00055	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z
  0005a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UnknownDescriptor@USB@@IAEXPAU_USB_COMMON_DESCRIPTOR@@@Z ENDP ; USB::UnknownDescriptor
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx

; 1731 : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1732 :  #if _ITERATOR_DEBUG_LEVEL != 0
; 1733 : 		_STL_VERIFY(_Pos < size(), "vector subscript out of range");
; 1734 :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 1735 : 
; 1736 : 		return (this->_Myfirst()[_Pos]);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  00006	8d 14 40	 lea	 edx, DWORD PTR [eax+eax*2]
  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	8d 04 d0	 lea	 eax, DWORD PTR [eax+edx*8]

; 1737 : 		}

  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
END
