; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	e:\Tools\SysStatus\SysStatus.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@	; `string'
PUBLIC	??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@	; `string'
PUBLIC	??_C@_0L@MPHEPFAH@SystemName?$AA@		; `string'
PUBLIC	??_C@_0BI@LFKNNEKA@SystemCreationClassName?$AA@	; `string'
PUBLIC	??_C@_0BA@LLOCDJF@MaxBatteryError?$AA@		; `string'
PUBLIC	??_C@_0BD@EBMPMBCC@CapacityMultiplier?$AA@	; `string'
PUBLIC	??_C@_0BA@EMGHNHBI@ManufactureDate?$AA@		; `string'
PUBLIC	??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@	; `string'
PUBLIC	??_C@_08JLKOPNJP@IsLinear?$AA@			; `string'
PUBLIC	??_C@_0M@NIGABCBB@MinReadable?$AA@		; `string'
PUBLIC	??_C@_0M@EIBDACPL@MaxReadable?$AA@		; `string'
PUBLIC	??_C@_0BK@CCJKGBMI@UpperThresholdNonCritical?$AA@ ; `string'
PUBLIC	??_C@_0BE@HGEJIDLL@UpperThresholdFatal?$AA@	; `string'
PUBLIC	??_C@_0BH@FKDKGMLL@UpperThresholdCritical?$AA@	; `string'
PUBLIC	??_C@_0BK@LBKIMOJN@LowerThresholdNonCritical?$AA@ ; `string'
PUBLIC	??_C@_0BE@NPMAGCMK@LowerThresholdFatal?$AA@	; `string'
PUBLIC	??_C@_0BH@NMAIJHFM@LowerThresholdCritical?$AA@	; `string'
PUBLIC	??_C@_09FBKECFPC@NormalMin?$AA@			; `string'
PUBLIC	??_C@_09EDCPMBJN@NormalMax?$AA@			; `string'
PUBLIC	??_C@_0P@OAFFNBPO@NominalReading?$AA@		; `string'
PUBLIC	??_C@_09BKMALBOE@Tolerance?$AA@			; `string'
PUBLIC	??_C@_08NLCOAFEI@Accuracy?$AA@			; `string'
PUBLIC	??_C@_0P@IDBBEDLI@CurrentReading?$AA@		; `string'
PUBLIC	??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@	; `string'
PUBLIC	??_C@_0N@JBKHOEPE@SystemUpTime?$AA@		; `string'
PUBLIC	??_C@_0BC@HMBPBBJB@SystemCallsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BF@NPGOAGED@ProcessorQueueLength?$AA@	; `string'
PUBLIC	??_C@_0BK@NGGOKLMO@PercentRegistryQuotaInUse?$AA@ ; `string'
PUBLIC	??_C@_0BJ@PHDBHNCO@FloatingEmulationsPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BF@LGMPDKBA@FileWriteBytesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@NKKLPLAB@FileReadBytesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BM@PIKKJCOI@FileControlOperationsPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BH@EMNLAEFK@FileControlBytesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BK@DHKAACDP@ExceptionDispatchesPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BG@GIPKJDB@ContextSwitchesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BG@KHFHJKMP@AlignmentFixupsPerSec?$AA@	; `string'
PUBLIC	??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@ ; `string'
PUBLIC	??_C@_0BG@FPNGHOGK@PercentPrivilegedTime?$AA@	; `string'
PUBLIC	??_C@_0BF@GMGAHOLM@PercentInterruptTime?$AA@	; `string'
PUBLIC	??_C@_0P@LMLLFJEI@PercentDPCTime?$AA@		; `string'
PUBLIC	??_C@_0O@LEJEMNCG@PercentC3Time?$AA@		; `string'
PUBLIC	??_C@_0O@HPMIBOID@PercentC2Time?$AA@		; `string'
PUBLIC	??_C@_0O@PJFMGMCN@PercentC1Time?$AA@		; `string'
PUBLIC	??_C@_0BB@FCICDGPJ@InterruptsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BB@KHEGFAIJ@DPCsQueuedPerSec?$AA@	; `string'
PUBLIC	??_C@_07BHCICOFH@DPCRate?$AA@			; `string'
PUBLIC	??_C@_0BE@EPCEDEOH@C3TransitionsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@JIMGLELP@C2TransitionsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@DLJADCBG@C1TransitionsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BA@JCLIOML@PercentUserTime?$AA@		; `string'
PUBLIC	??_C@_0BF@EMKPKJGP@PercentProcessorTime?$AA@	; `string'
PUBLIC	??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@ ; `string'
PUBLIC	??_C@_0BB@JKLALBIF@PercentUsagePeak?$AA@	; `string'
PUBLIC	??_C@_0N@CKGFJCHF@PercentUsage?$AA@		; `string'
PUBLIC	??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@ ; `string'
PUBLIC	??_C@_08FBPDBPOE@Sections?$AA@			; `string'
PUBLIC	??_C@_0L@GLBCAKLN@Semaphores?$AA@		; `string'
PUBLIC	??_C@_06HEBKAGDH@Events?$AA@			; `string'
PUBLIC	??_C@_07LDPBBEEB@Mutexes?$AA@			; `string'
PUBLIC	??_C@_07CMIGFCHA@Threads?$AA@			; `string'
PUBLIC	??_C@_09BNGODGIH@Processes?$AA@			; `string'
PUBLIC	??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@ ; `string'
PUBLIC	??_C@_0BC@KBPIOBBH@WriteCopiesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BH@KEMPGDKK@TransitionFaultsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BH@KPIDEMMH@SystemDriverTotalBytes?$AA@	; `string'
PUBLIC	??_C@_0BK@MNCINJBF@SystemDriverResidentBytes?$AA@ ; `string'
PUBLIC	??_C@_0BF@JBGABIBK@SystemCodeTotalBytes?$AA@	; `string'
PUBLIC	??_C@_0BI@KPKNFENK@SystemCodeResidentBytes?$AA@	; `string'
PUBLIC	??_C@_0BJ@NPNGHFJN@SystemCacheResidentBytes?$AA@ ; `string'
PUBLIC	??_C@_0BH@OMBHLDMN@PoolPagedResidentBytes?$AA@	; `string'
PUBLIC	??_C@_0P@PJENKINF@PoolPagedBytes?$AA@		; `string'
PUBLIC	??_C@_0BA@LDKKFHCE@PoolPagedAllocs?$AA@		; `string'
PUBLIC	??_C@_0BC@GMPJEGLC@PoolNonpagedBytes?$AA@	; `string'
PUBLIC	??_C@_0BD@GAOJBHDB@PoolNonpagedAllocs?$AA@	; `string'
PUBLIC	??_C@_0CA@DKFDEGAA@PercentCommittedBytesInUse_Base?$AA@ ; `string'
PUBLIC	??_C@_0BL@EHMKCOHH@PercentCommittedBytesInUse?$AA@ ; `string'
PUBLIC	??_C@_0BB@EHHNOBPH@PageWritesPerSec?$AA@	; `string'
PUBLIC	??_C@_0M@PJBDCOH@PagesPerSec?$AA@		; `string'
PUBLIC	??_C@_0BC@PGIEMCPC@PagesOutputPerSec?$AA@	; `string'
PUBLIC	??_C@_0BB@NHNEKMAP@PagesInputPerSec?$AA@	; `string'
PUBLIC	??_C@_0BA@BHCICMAP@PageReadsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BB@HOEEGAIG@PageFaultsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BL@MIKHIOLC@FreeSystemPageTableEntries?$AA@ ; `string'
PUBLIC	??_C@_0BH@BIADJNEE@DemandZeroFaultsPerSec?$AA@	; `string'
PUBLIC	??_C@_0P@FAEGOFEG@CommittedBytes?$AA@		; `string'
PUBLIC	??_C@_0M@HHOMCEFN@CommitLimit?$AA@		; `string'
PUBLIC	??_C@_0BC@ONMHHFEO@CacheFaultsPerSec?$AA@	; `string'
PUBLIC	??_C@_0P@BPAGOPIK@CacheBytesPeak?$AA@		; `string'
PUBLIC	??_C@_0L@ECJIAGHC@CacheBytes?$AA@		; `string'
PUBLIC	??_C@_0BA@FJNBCKHA@AvailableMBytes?$AA@		; `string'
PUBLIC	??_C@_0BA@DKABBPEK@AvailableKBytes?$AA@		; `string'
PUBLIC	??_C@_0P@HPKKNIPF@AvailableBytes?$AA@		; `string'
PUBLIC	??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@ ; `string'
PUBLIC	??_C@_0BD@FOPDLNII@SyncPinReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BD@EPCDKGPG@SyncMDLReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@FFPMMLME@SyncFastReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BD@IDCIAAHF@SyncDataMapsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@PJJLELAC@SyncCopyReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BB@NGKOLIIB@ReadAheadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0P@LNBHDMMD@PinReadsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BI@KGBEKIEP@PinReadHitsPercent_Base?$AA@	; `string'
PUBLIC	??_C@_0BD@INCEIJBE@PinReadHitsPercent?$AA@	; `string'
PUBLIC	??_C@_0P@KMMHCHLN@MDLReadsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BI@NMONEPAO@MDLReadHitsPercent_Base?$AA@	; `string'
PUBLIC	??_C@_0BD@PNDPPHMH@MDLReadHitsPercent?$AA@	; `string'
PUBLIC	??_C@_0BF@GOGJJNKE@LazyWritePagesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BH@JCPDBLIF@LazyWriteFlushesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BA@LEBBLHFN@FastReadsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BN@JGPDPBED@FastReadResourceMissesPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BL@HBAEFMGM@FastReadNotPossiblesPerSec?$AA@ ; `string'
PUBLIC	??_C@_0P@GAMMIBDO@DataMapsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BH@JDIGEHGG@DataMapPinsPerSec_Base?$AA@	; `string'
PUBLIC	??_C@_0BC@OOMEAEEA@DataMapPinsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BI@ILDKBHLK@DataMapHitsPercent_Base?$AA@	; `string'
PUBLIC	??_C@_0BD@KOAAJIJA@DataMapHitsPercent?$AA@	; `string'
PUBLIC	??_C@_0BF@JDDABGEO@DataFlushPagesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BC@MJKDEPG@DataFlushesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BA@BIHGDHJL@CopyReadsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BJ@FGOEJAHL@CopyReadHitsPercent_Base?$AA@ ; `string'
PUBLIC	??_C@_0BE@FFJCEMDJ@CopyReadHitsPercent?$AA@	; `string'
PUBLIC	??_C@_0BE@PNDFACCO@AsyncPinReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@OMOFBJFA@AsyncMDLReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BF@GKOKALKG@AsyncFastReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@CAOOLPND@AsyncDataMapsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BF@MGINILGA@AsyncCopyReadsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@ ; `string'
PUBLIC	??_C@_0BB@HAMOOOJ@WriteLargePerSec?$AA@		; `string'
PUBLIC	??_C@_0BC@LMECNINB@WriteDeniedPerSec?$AA@	; `string'
PUBLIC	??_C@_0BI@GPDBBABB@WritePacketsSmallPerSec?$AA@	; `string'
PUBLIC	??_C@_0BD@NEABLLFJ@WritePacketsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BM@IJPFNDGO@WriteOperationsRandomPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BH@OANOHFDO@WriteBytesPagingPerSec?$AA@	; `string'
PUBLIC	??_C@_0BK@PNNKNAIA@WriteBytesNonPagingPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BI@HNBBGOIH@WriteBytesNetworkPerSec?$AA@	; `string'
PUBLIC	??_C@_0BG@GCNKDHCE@WriteBytesCachePerSec?$AA@	; `string'
PUBLIC	??_C@_0BD@BALBBJPI@ServerSessionsHung?$AA@	; `string'
PUBLIC	??_C@_0P@EPIIEJNA@ServerSessions?$AA@		; `string'
PUBLIC	??_C@_0BB@LGLKKLGK@ServerReconnects?$AA@	; `string'
PUBLIC	??_C@_0BC@GAMKMMKB@ServerDisconnects?$AA@	; `string'
PUBLIC	??_C@_0BB@FFKFENGC@ReadsLargePerSec?$AA@	; `string'
PUBLIC	??_C@_0BC@MGHKCLNK@ReadsDeniedPerSec?$AA@	; `string'
PUBLIC	??_C@_0BH@JCFIFLJN@ReadPacketsSmallPerSec?$AA@	; `string'
PUBLIC	??_C@_0BC@JALNAJBD@ReadPacketsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BL@CFIGOGID@ReadOperationsRandomPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BG@OLGMIDCE@ReadBytesPagingPerSec?$AA@	; `string'
PUBLIC	??_C@_0BJ@ILOCGCLG@ReadBytesNonPagingPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BH@IAHICFAL@ReadBytesNetworkPerSec?$AA@	; `string'
PUBLIC	??_C@_0BF@LPDAMOL@ReadBytesCachePerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@OGCPPNJJ@NetworkErrorsPerSec?$AA@	; `string'
PUBLIC	??_C@_0BK@PGBFPAJ@FileWriteOperationsPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BJ@BKIGCPAP@FileReadOperationsPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CAIAAECL@FileDataOperationsPerSec?$AA@ ; `string'
PUBLIC	??_C@_0BA@DJMJIEBG@CurrentCommands?$AA@		; `string'
PUBLIC	??_C@_0BC@EOFEMAHF@ConnectsWindowsNT?$AA@	; `string'
PUBLIC	??_C@_0BF@NEFNEICN@ConnectsLanManager21?$AA@	; `string'
PUBLIC	??_C@_0BF@MNEGHJGM@ConnectsLanManager20?$AA@	; `string'
PUBLIC	??_C@_0N@IJGODAGI@ConnectsCore?$AA@		; `string'
PUBLIC	??_C@_0BJ@EHOOHGK@PacketsTransmittedPerSec?$AA@	; `string'
PUBLIC	??_C@_0BG@PFNBEMLM@PacketsReceivedPerSec?$AA@	; `string'
PUBLIC	??_C@_0O@GPMHHPHG@PacketsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BB@NADCFLBJ@BytesTotalPerSec?$AA@	; `string'
PUBLIC	??_C@_0BH@GKKKHEEC@BytesTransmittedPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@IEAMAKJB@BytesReceivedPerSec?$AA@	; `string'
PUBLIC	??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@ ; `string'
PUBLIC	??_C@_0BG@KEJCKNPB@PercentFreeSpace_Base?$AA@	; `string'
PUBLIC	??_C@_0BB@FDAACFPN@PercentFreeSpace?$AA@	; `string'
PUBLIC	??_C@_0BC@IJGACNJB@AvgDiskSecPerRead?$AA@	; `string'
PUBLIC	??_C@_0O@EJBHEMAA@FreeMegabytes?$AA@		; `string'
PUBLIC	??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@ ; `string'
PUBLIC	??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@	; `string'
PUBLIC	??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@	; `string'
PUBLIC	??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@	; `string'
PUBLIC	??_C@_0O@JFLPIICD@SplitIOPerSec?$AA@		; `string'
PUBLIC	??_C@_0BF@PLICIEBG@PercentIdleTime_Base?$AA@	; `string'
PUBLIC	??_C@_0BA@LOOKHAGM@PercentIdleTime?$AA@		; `string'
PUBLIC	??_C@_0BK@OCJABKEM@PercentDiskWriteTime_Base?$AA@ ; `string'
PUBLIC	??_C@_0BF@DOKCNDOL@PercentDiskWriteTime?$AA@	; `string'
PUBLIC	??_C@_0BF@CHKOMNLI@PercentDiskTime_Base?$AA@	; `string'
PUBLIC	??_C@_0BA@HPDMAPLN@PercentDiskTime?$AA@		; `string'
PUBLIC	??_C@_0BJ@JDFDIKDL@PercentDiskReadTime_Base?$AA@ ; `string'
PUBLIC	??_C@_0BE@KMHMAHCP@PercentDiskReadTime?$AA@	; `string'
PUBLIC	??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@	; `string'
PUBLIC	??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@	; `string'
PUBLIC	??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@	; `string'
PUBLIC	??_C@_0BB@FFLCGPKG@DiskWritesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BF@BLPLIECA@DiskWriteBytesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BE@INHPJNPE@DiskTransfersPerSec?$AA@	; `string'
PUBLIC	??_C@_0BA@GPEPCNFG@DiskReadsPerSec?$AA@		; `string'
PUBLIC	??_C@_0BE@IJJNINGL@DiskReadBytesPerSec?$AA@	; `string'
PUBLIC	??_C@_0BA@BBEHMIEJ@DiskBytesPerSec?$AA@		; `string'
PUBLIC	??_C@_0BH@CFGDHLM@CurrentDiskQueueLength?$AA@	; `string'
PUBLIC	??_C@_0BI@LJILLEEA@AvgDiskWriteQueueLength?$AA@	; `string'
PUBLIC	??_C@_0BI@ICCNFHHL@AvgDiskSecPerWrite_Base?$AA@	; `string'
PUBLIC	??_C@_0BD@MEJEANKD@AvgDiskSecPerWrite?$AA@	; `string'
PUBLIC	??_C@_0BL@BNDKFKFB@AvgDiskSecPerTransfer_Base?$AA@ ; `string'
PUBLIC	??_C@_0BG@JDCFEBPA@AvgDiskSecPerTransfer?$AA@	; `string'
PUBLIC	??_C@_0BH@OOEPJOH@AvgDiskSecPerRead_Base?$AA@	; `string'
PUBLIC	??_C@_0BD@LLDDCMMH@AvgDiskSecPerRead?$DL?$AA@	; `string'
PUBLIC	??_C@_0BH@NCJLEAHB@AvgDiskReadQueueLength?$AA@	; `string'
PUBLIC	??_C@_0BD@CKOOLAI@AvgDiskQueueLength?$AA@	; `string'
PUBLIC	??_C@_0BK@CFFBJGE@AvgDiskBytesPerWrite_Base?$AA@ ; `string'
PUBLIC	??_C@_0BF@POONAKDE@AvgDiskBytesPerWrite?$AA@	; `string'
PUBLIC	??_C@_0BN@DKGECFBJ@AvgDiskBytesPerTransfer_Base?$AA@ ; `string'
PUBLIC	??_C@_0BI@NOBLAOA@AvgDiskBytesPerTransfer?$AA@	; `string'
PUBLIC	??_C@_0BJ@BDMNCNHC@AvgDiskBytesPerRead_Base?$AA@ ; `string'
PUBLIC	??_C@_0BE@EFDGHEPA@AvgDiskBytesPerRead?$AA@	; `string'
PUBLIC	??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@ ; `string'
PUBLIC	??_C@_0BN@DMMADKEM@SupportsFileBasedCompression?$AA@ ; `string'
PUBLIC	??_C@_0BD@BJDMHPHA@SupportsDiskQuotas?$AA@	; `string'
PUBLIC	??_C@_0BB@JJBCJECG@QuotasRebuilding?$AA@	; `string'
PUBLIC	??_C@_0BB@MPFPEDFA@QuotasIncomplete?$AA@	; `string'
PUBLIC	??_C@_0O@HEHOMNCC@QuotasEnabled?$AA@		; `string'
PUBLIC	??_C@_0BG@ELFKDNP@MaximumFileNameLength?$AA@	; `string'
PUBLIC	??_C@_0BA@JDIBBDEO@IndexingEnabled?$AA@		; `string'
PUBLIC	??_C@_0M@FMPADJNN@DirtyBitSet?$AA@		; `string'
PUBLIC	??_C@_09HICOCIIF@Automount?$AA@			; `string'
PUBLIC	??_C@_0L@FPFLHALM@FileSystem?$AA@		; `string'
PUBLIC	??_C@_09NKILGKMH@DriveType?$AA@			; `string'
PUBLIC	??_C@_0M@EHMJIHII@DriveLetter?$AA@		; `string'
PUBLIC	??_C@_05IEIONIFO@Label?$AA@			; `string'
PUBLIC	??_C@_0N@NNCPDPIH@Win32_Volume?$AA@		; `string'
PUBLIC	??_C@_0N@EPHJOCBJ@ResourceType?$AA@		; `string'
PUBLIC	??_C@_0N@ONCOBKP@ProviderName?$AA@		; `string'
PUBLIC	??_C@_0L@LNKKEMJM@Persistent?$AA@		; `string'
PUBLIC	??_C@_0L@FLEBOKCI@RemoteName?$AA@		; `string'
PUBLIC	??_C@_09CLGGKACF@LocalName?$AA@			; `string'
PUBLIC	??_C@_0L@CCMICFHJ@RemotePath?$AA@		; `string'
PUBLIC	??_C@_0P@LNPCDAPC@ConnectionType?$AA@		; `string'
PUBLIC	??_C@_0BA@FLFAPDFG@ConnectionState?$AA@		; `string'
PUBLIC	??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@	; `string'
PUBLIC	??_C@_0BI@NOBDNJPM@MofSelfInstallDirectory?$AA@	; `string'
PUBLIC	??_C@_0BA@NHHFPHIJ@MaxWaitOnEvents?$AA@		; `string'
PUBLIC	??_C@_0BH@PBKELOKA@MaxWaitOnClientObjects?$AA@	; `string'
PUBLIC	??_C@_0P@CEPALFMK@MaxLogFileSize?$AA@		; `string'
PUBLIC	??_C@_0BF@PHEPMKDN@LowThresholdOnEvents?$AA@	; `string'
PUBLIC	??_C@_0BM@NGNJMOHJ@LowThresholdOnClientObjects?$AA@ ; `string'
PUBLIC	??_C@_0N@FMFGOJPB@LoggingLevel?$AA@		; `string'
PUBLIC	??_C@_0BB@FALFKNPE@LoggingDirectory?$AA@	; `string'
PUBLIC	??_C@_0BN@GKEEMEKI@LastStartupHeapPreallocation?$AA@ ; `string'
PUBLIC	??_C@_0BG@MDEOBFAH@InstallationDirectory?$AA@	; `string'
PUBLIC	??_C@_0BG@LKICGCBK@HighThresholdOnEvents?$AA@	; `string'
PUBLIC	??_C@_0BN@FBHHPGGC@HighThresholdOnClientObjects?$AA@ ; `string'
PUBLIC	??_C@_0BP@DHLDKHJI@EnableStartupHeapPreallocation?$AA@ ; `string'
PUBLIC	??_C@_0N@OBNHEDLP@EnableEvents?$AA@		; `string'
PUBLIC	??_C@_0BL@FLALGEND@EnableAnonWin9xConnections?$AA@ ; `string'
PUBLIC	??_C@_0BA@GMIIIOHB@DatabaseMaxSize?$AA@		; `string'
PUBLIC	??_C@_0BC@PJAEIMII@DatabaseDirectory?$AA@	; `string'
PUBLIC	??_C@_0N@DMPKCKPJ@BuildVersion?$AA@		; `string'
PUBLIC	??_C@_0P@HCKKJOFA@BackupLastTime?$AA@		; `string'
PUBLIC	??_C@_0P@HCBDPJED@BackupInterval?$AA@		; `string'
PUBLIC	??_C@_0P@LBFHKJDL@AutoStartWin9X?$AA@		; `string'
PUBLIC	??_C@_0BA@FCAEOBFB@AutorecoverMofs?$AA@		; `string'
PUBLIC	??_C@_0BB@HHJGCMCA@ASPScriptEnabled?$AA@	; `string'
PUBLIC	??_C@_0BK@HACJICBD@ASPScriptDefaultNamespace?$AA@ ; `string'
PUBLIC	??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@	; `string'
PUBLIC	??_C@_0BF@GDCPFLAD@RemainingGracePeriod?$AA@	; `string'
PUBLIC	??_C@_0BK@MHMKFBPN@RemainingEvaluationPeriod?$AA@ ; `string'
PUBLIC	??_C@_0BB@FFPKNIIL@IsNotificationOn?$AA@	; `string'
PUBLIC	??_C@_0BD@HINAAJAB@ActivationRequired?$AA@	; `string'
PUBLIC	??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@ ; `string'
PUBLIC	??_C@_0N@PEAHLPLG@AllowMaximum?$AA@		; `string'
PUBLIC	??_C@_0P@IBLGFEE@MaximumAllowed?$AA@		; `string'
PUBLIC	??_C@_04HMIIHGGM@Path?$AA@			; `string'
PUBLIC	??_C@_0M@MCIKNCEL@Win32_Share?$AA@		; `string'
PUBLIC	??_C@_0L@FFDIDHBB@ServerName?$AA@		; `string'
PUBLIC	??_C@_0M@BCMAAPLG@ProxyServer?$AA@		; `string'
PUBLIC	??_C@_0BA@LEMEMCNN@ProxyPortNumber?$AA@		; `string'
PUBLIC	??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@		; `string'
PUBLIC	??_C@_0L@LICOLOBE@DMASupport?$AA@		; `string'
PUBLIC	??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@	; `string'
PUBLIC	??_C@_0M@EONNPILK@InitialSize?$AA@		; `string'
PUBLIC	??_C@_09LCEICGML@FreeSpace?$AA@			; `string'
PUBLIC	??_C@_0P@GFMPEM@Win32_PageFile?$AA@		; `string'
PUBLIC	??_C@_0BH@EOFEPLNL@TotalVisibleMemorySize?$AA@	; `string'
PUBLIC	??_C@_0BH@IBKKELEK@TotalVirtualMemorySize?$AA@	; `string'
PUBLIC	??_C@_0BD@PBNAJGBH@TotalSwapSpaceSize?$AA@	; `string'
PUBLIC	??_C@_09IIJPJFOC@SuiteMask?$AA@			; `string'
PUBLIC	??_C@_0BI@BKJHEEOL@SizeStoredInPagingFiles?$AA@	; `string'
PUBLIC	??_C@_07NAEHBBNL@Primary?$AA@			; `string'
PUBLIC	??_C@_0BC@LMIHOAGL@PlusVersionNumber?$AA@	; `string'
PUBLIC	??_C@_0O@NNCCMBIG@PlusProductID?$AA@		; `string'
PUBLIC	??_C@_0L@KNGIFFNB@PAEEnabled?$AA@		; `string'
PUBLIC	??_C@_0BF@KAMHDIPP@OtherTypeDescription?$AA@	; `string'
PUBLIC	??_C@_0BD@GLJCNHGP@OperatingSystemSKU?$AA@	; `string'
PUBLIC	??_C@_0O@PBBGLGFJ@NumberOfUsers?$AA@		; `string'
PUBLIC	??_C@_0BC@FILGLGHH@NumberOfProcesses?$AA@	; `string'
PUBLIC	??_C@_0BG@MGHJNMGE@NumberOfLicensedUsers?$AA@	; `string'
PUBLIC	??_C@_0N@FEFLNODO@MUILanguages?$AA@		; `string'
PUBLIC	??_C@_0BF@OEEDDGBK@MaxProcessMemorySize?$AA@	; `string'
PUBLIC	??_C@_0BF@BJJFAIPL@MaxNumberOfProcesses?$AA@	; `string'
PUBLIC	??_C@_06BMNFLCFO@Locale?$AA@			; `string'
PUBLIC	??_C@_0O@GFNPHCJN@LocalDateTime?$AA@		; `string'
PUBLIC	??_C@_0P@DKHNBJBB@LastBootUpTime?$AA@		; `string'
PUBLIC	??_C@_0BB@GLODIIPC@LargeSystemCache?$AA@	; `string'
PUBLIC	??_C@_0BC@HEKPKJCK@FreeVirtualMemory?$AA@	; `string'
PUBLIC	??_C@_0BH@GDCHGEBO@FreeSpaceInPagingFiles?$AA@	; `string'
PUBLIC	??_C@_0BD@KJPLACJD@FreePhysicalMemory?$AA@	; `string'
PUBLIC	??_C@_0BL@LKLGBOHP@ForegroundApplicationBoost?$AA@ ; `string'
PUBLIC	??_C@_0BA@LIJDDPMD@EncryptionLevel?$AA@		; `string'
PUBLIC	??_C@_0M@DGCHPHG@Distributed?$AA@		; `string'
PUBLIC	??_C@_05GCIPIGEI@Debug?$AA@			; `string'
PUBLIC	??_C@_0CG@FOLHLACL@DataExecutionPrevention_SupportP@ ; `string'
PUBLIC	??_C@_0CA@KCIFHCEN@DataExecutionPrevention_Drivers?$AA@ ; `string'
PUBLIC	??_C@_0CK@PHHDEHCB@DataExecutionPrevention_32BitApp@ ; `string'
PUBLIC	??_C@_0CC@LDMHMPMB@DataExecutionPrevention_Availabl@ ; `string'
PUBLIC	??_C@_0L@IOMOHLID@OSLanguage?$AA@		; `string'
PUBLIC	??_C@_0BB@IEJHMEDK@WindowsDirectory?$AA@	; `string'
PUBLIC	??_C@_0BA@FNJMICPB@SystemDirectory?$AA@		; `string'
PUBLIC	??_C@_0M@JBPIDKPO@SystemDrive?$AA@		; `string'
PUBLIC	??_C@_0N@LCIKLBMI@SystemDevice?$AA@		; `string'
PUBLIC	??_C@_0L@BLKKOICB@BootDevice?$AA@		; `string'
PUBLIC	??_C@_0M@GGPOPAAP@ProductType?$AA@		; `string'
PUBLIC	??_C@_0P@DAFCPCAO@RegisteredUser?$AA@		; `string'
PUBLIC	??_C@_0N@MHPBIIPD@Organization?$AA@		; `string'
PUBLIC	??_C@_06MNBFCOOH@OSType?$AA@			; `string'
PUBLIC	??_C@_0P@HNONGDKL@OSProductSuite?$AA@		; `string'
PUBLIC	??_C@_0BI@HEBPKKOL@ServicePackMinorVersion?$AA@	; `string'
PUBLIC	??_C@_0BI@MCMKKPJH@ServicePackMajorVersion?$AA@	; `string'
PUBLIC	??_C@_0L@EGALIDNG@CSDVersion?$AA@		; `string'
PUBLIC	??_C@_09LLAGGHGM@BuildType?$AA@			; `string'
PUBLIC	??_C@_0P@NOCBMKBI@OSArchitecture?$AA@		; `string'
PUBLIC	??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@	; `string'
PUBLIC	??_C@_0O@ODMHJIAL@VariableSpeed?$AA@		; `string'
PUBLIC	??_C@_0N@HOGGFFKF@DesiredSpeed?$AA@		; `string'
PUBLIC	??_C@_09BEHCCOGC@Win32_Fan?$AA@			; `string'
PUBLIC	??_C@_0M@GAHMDPOP@DisplayType?$AA@		; `string'
PUBLIC	??_C@_09LPCHGGLO@Bandwidth?$AA@			; `string'
PUBLIC	??_C@_0M@FCPFJAEP@MonitorType?$AA@		; `string'
PUBLIC	??_C@_0BE@EAJFLPNK@MonitorManufacturer?$AA@	; `string'
PUBLIC	??_C@_0BG@EKBBLDAL@PixelsPerYLogicalInch?$AA@	; `string'
PUBLIC	??_C@_0BG@JHIHGKIO@PixelsPerXLogicalInch?$AA@	; `string'
PUBLIC	??_C@_0M@GOACCFHI@ScreenWidth?$AA@		; `string'
PUBLIC	??_C@_0N@EJILFHEF@ScreenHeight?$AA@		; `string'
PUBLIC	??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@	; `string'
PUBLIC	??_C@_0P@HLGPBKPI@WallpaperTiled?$AA@		; `string'
PUBLIC	??_C@_0BD@MNOICNPG@WallpaperStretched?$AA@	; `string'
PUBLIC	??_C@_09FAKNONCF@Wallpaper?$AA@			; `string'
PUBLIC	??_C@_0BD@LIKEHLGN@ScreenSaverTimeout?$AA@	; `string'
PUBLIC	??_C@_0BC@ENMGOCGL@ScreenSaverSecure?$AA@	; `string'
PUBLIC	??_C@_0BG@OPEGFPLM@ScreenSaverExecutable?$AA@	; `string'
PUBLIC	??_C@_0BC@KENIIHPI@ScreenSaverActive?$AA@	; `string'
PUBLIC	??_C@_07NOCIGAPP@Pattern?$AA@			; `string'
PUBLIC	??_C@_0O@HLNDODKM@IconTitleWrap?$AA@		; `string'
PUBLIC	??_C@_0O@COINDPHH@IconTitleSize?$AA@		; `string'
PUBLIC	??_C@_0BC@HAAMKFAI@IconTitleFaceName?$AA@	; `string'
PUBLIC	??_C@_0M@FALLBHKM@IconSpacing?$AA@		; `string'
PUBLIC	??_C@_0BA@MJNOPNAD@GridGranularity?$AA@		; `string'
PUBLIC	??_C@_0BA@CNEMFCKH@DragFullWindows?$AA@		; `string'
PUBLIC	??_C@_0BA@NKDGIFD@CursorBlinkRate?$AA@		; `string'
PUBLIC	??_C@_0L@GMHAONPD@CoolSwitch?$AA@		; `string'
PUBLIC	??_C@_0M@EEKAPENF@BorderWidth?$AA@		; `string'
PUBLIC	??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@		; `string'
PUBLIC	??_C@_0O@FDHFFDED@TempDirectory?$AA@		; `string'
PUBLIC	??_C@_0BB@FHBPINGK@ScratchDirectory?$AA@	; `string'
PUBLIC	??_C@_09PABAEPFH@LastDrive?$AA@			; `string'
PUBLIC	??_C@_0BC@BJLIMIEA@ConfigurationPath?$AA@	; `string'
PUBLIC	??_C@_0O@KLLIKPKC@BootDirectory?$AA@		; `string'
PUBLIC	??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@	; `string'
PUBLIC	??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@	; `string'
PUBLIC	??_C@_07PKCEDPHO@LastUse?$AA@			; `string'
PUBLIC	??_C@_0L@PLFFHFAH@Attributes?$AA@		; `string'
PUBLIC	??_C@_08OBOKCFEP@Accesses?$AA@			; `string'
PUBLIC	??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@	; `string'
PUBLIC	??_C@_09HKGIPMHJ@Writeable?$AA@			; `string'
PUBLIC	??_C@_06JIODDOFH@System?$AA@			; `string'
PUBLIC	??_C@_08PMHOKLA@Readable?$AA@			; `string'
PUBLIC	??_C@_0N@JFOMFNHF@LastModified?$AA@		; `string'
PUBLIC	??_C@_0N@BLGOKNC@LastAccessed?$AA@		; `string'
PUBLIC	??_C@_0L@PCJCDOJK@InUseCount?$AA@		; `string'
PUBLIC	??_C@_06FHBILLDG@Hidden?$AA@			; `string'
PUBLIC	??_C@_05MBDCODDP@Group?$AA@			; `string'
PUBLIC	??_C@_06PDIOKLEE@FSName?$AA@			; `string'
PUBLIC	??_C@_0BB@CPNPJAMG@EncryptionMethod?$AA@	; `string'
PUBLIC	??_C@_09KLPLELGE@Encrypted?$AA@			; `string'
PUBLIC	??_C@_0N@GPGLEEKJ@CreationDate?$AA@		; `string'
PUBLIC	??_C@_0L@FBPJPEIN@Compressed?$AA@		; `string'
PUBLIC	??_C@_07CNOHFBBG@Archive?$AA@			; `string'
PUBLIC	??_C@_0L@OHPKPJND@AccessMask?$AA@		; `string'
PUBLIC	??_C@_08BHIEONMC@FileSize?$AA@			; `string'
PUBLIC	??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@		; `string'
PUBLIC	??_C@_0BJ@MNHPDIFA@SupportsQualityofService?$AA@ ; `string'
PUBLIC	??_C@_0BF@BHPPOJFK@SupportsMulticasting?$AA@	; `string'
PUBLIC	??_C@_0BM@MDHHIPIM@SupportsGuaranteedBandwidth?$AA@ ; `string'
PUBLIC	??_C@_0BI@FGBPBAKA@SupportsGracefulClosing?$AA@	; `string'
PUBLIC	??_C@_0BH@PFGLDBHN@SupportsFragmentation?$DL?$AA@ ; `string'
PUBLIC	??_C@_0BG@MJFBKLBP@SupportsExpeditedData?$AA@	; `string'
PUBLIC	??_C@_0BD@BJHEFNDH@SupportsEncryption?$AA@	; `string'
PUBLIC	??_C@_0BH@KMFDMCNH@SupportsDisconnectData?$AA@	; `string'
PUBLIC	??_C@_0BE@OAOGNDFG@SupportsConnectData?$AA@	; `string'
PUBLIC	??_C@_0BF@ONDNBOBK@SupportsBroadcasting?$AA@	; `string'
PUBLIC	??_C@_0BF@DJOBDJFP@PseudoStreamOriented?$AA@	; `string'
PUBLIC	??_C@_0BD@PCBKNDJA@MinimumAddressSize?$AA@	; `string'
PUBLIC	??_C@_0BA@NLEIFDG@MessageOriented?$AA@		; `string'
PUBLIC	??_C@_0BD@IBPHBINL@MaximumMessageSize?$AA@	; `string'
PUBLIC	??_C@_0BD@FFCOFDOJ@MaximumAddressSize?$AA@	; `string'
PUBLIC	??_C@_0BF@FAHCIDLD@GuaranteesSequencing?$AA@	; `string'
PUBLIC	??_C@_0BD@ECGOALCK@GuaranteesDelivery?$AA@	; `string'
PUBLIC	??_C@_0BG@IODJFDPJ@ConnectionlessService?$AA@	; `string'
PUBLIC	??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@	; `string'
PUBLIC	??_C@_0N@LMIHDJBC@Workstations?$AA@		; `string'
PUBLIC	??_C@_0N@LMMEGDEF@UnitsPerWeek?$AA@		; `string'
PUBLIC	??_C@_0L@GHILPLPE@ScriptPath?$AA@		; `string'
PUBLIC	??_C@_07EELFDIBP@Profile?$AA@			; `string'
PUBLIC	??_C@_0L@FILALLBE@Privileges?$AA@		; `string'
PUBLIC	??_C@_0P@CIBDNLPH@PrimaryGroupId?$AA@		; `string'
PUBLIC	??_C@_0BA@HLOHOKEI@PasswordExpires?$AA@		; `string'
PUBLIC	??_C@_0M@HKNCEPDC@PasswordAge?$AA@		; `string'
PUBLIC	??_C@_0L@PBGCNDPG@Parameters?$AA@		; `string'
PUBLIC	??_C@_0P@FMELCCCP@NumberOfLogons?$AA@		; `string'
PUBLIC	??_C@_0P@BDLNENEK@MaximumStorage?$AA@		; `string'
PUBLIC	??_C@_0L@HFGJFNDM@LogonHours?$AA@		; `string'
PUBLIC	??_C@_09JEOPKIAO@LastLogon?$AA@			; `string'
PUBLIC	??_C@_0L@NKJIFPDG@LastLogoff?$AA@		; `string'
PUBLIC	??_C@_05BOOEKJH@Flags?$AA@			; `string'
PUBLIC	??_C@_0M@NALIBBDH@CountryCode?$AA@		; `string'
PUBLIC	??_C@_07JABLCLAF@Comment?$AA@			; `string'
PUBLIC	??_C@_08DOHJINHB@CodePage?$AA@			; `string'
PUBLIC	??_C@_08BHOPBADB@Caption?$DL?$AA@		; `string'
PUBLIC	??_C@_0BB@OBONNEPA@BadPasswordCount?$AA@	; `string'
PUBLIC	??_C@_0BD@JGGENGAP@AuthorizationFlags?$AA@	; `string'
PUBLIC	??_C@_0P@FLJOKOM@AccountExpires?$AA@		; `string'
PUBLIC	??_C@_0M@KEGPAPIK@UserComment?$AA@		; `string'
PUBLIC	??_C@_08LFHMHDM@UserType?$AA@			; `string'
PUBLIC	??_C@_06HAPGBBDI@UserId?$AA@			; `string'
PUBLIC	??_C@_0M@NDLIHBHJ@LogonServer?$AA@		; `string'
PUBLIC	??_C@_0BD@GBDEODMP@HomeDirectoryDrive?$AA@	; `string'
PUBLIC	??_C@_0O@PKMMPAKN@HomeDirectory?$AA@		; `string'
PUBLIC	??_C@_08FPDCFGEH@FullName?$AA@			; `string'
PUBLIC	??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@ ; `string'
PUBLIC	??_C@_0BE@CHHDIDN@WINSSecondaryServer?$AA@	; `string'
PUBLIC	??_C@_0M@CMEBCDLL@WINSScopeID?$AA@		; `string'
PUBLIC	??_C@_0BC@BECMMLFM@WINSPrimaryServer?$AA@	; `string'
PUBLIC	??_C@_0BD@POPKKJKC@WINSHostLookupFile?$AA@	; `string'
PUBLIC	??_C@_0BI@MIGGLKDO@WINSEnableLMHostsLookup?$AA@	; `string'
PUBLIC	??_C@_0O@CIEPJIDD@TcpWindowSize?$AA@		; `string'
PUBLIC	??_C@_0BL@JOFENPLC@TcpUseRFC1122UrgentPointer?$AA@ ; `string'
PUBLIC	??_C@_0BC@CEGEJAFC@TcpNumConnections?$AA@	; `string'
PUBLIC	??_C@_0BK@ICGANMDC@TcpMaxDataRetransmissions?$AA@ ; `string'
PUBLIC	??_C@_0BN@NBAJINBE@TcpMaxConnectRetransmissions?$AA@ ; `string'
PUBLIC	??_C@_0BE@MJKNHDFN@TcpipNetbiosOptions?$AA@	; `string'
PUBLIC	??_C@_0BF@KBFAFCNG@PMTUDiscoveryEnabled?$AA@	; `string'
PUBLIC	??_C@_0BF@DPKIODPI@PMTUBHDetectEnabled?$DL?$AA@	; `string'
PUBLIC	??_C@_0BC@CHJCENM@NumForwardPackets?$AA@	; `string'
PUBLIC	??_C@_03BLLMIPHO@MTU?$AA@			; `string'
PUBLIC	??_C@_0O@HNPIKCNH@KeepAliveTime?$AA@		; `string'
PUBLIC	??_C@_0BC@HLLJNCGL@KeepAliveInterval?$AA@	; `string'
PUBLIC	??_C@_0BE@KIGHGIHN@IPXVirtualNetNumber?$AA@	; `string'
PUBLIC	??_C@_0BB@HFHJDNKD@IPXNetworkNumber?$AA@	; `string'
PUBLIC	??_C@_0N@FHNNAGIP@IPXMediaType?$AA@		; `string'
PUBLIC	??_C@_0N@EAKCLKKB@IPXFrameType?$AA@		; `string'
PUBLIC	??_C@_0L@ONDAOAGP@IPXEnabled?$AA@		; `string'
PUBLIC	??_C@_0L@JNAHKDDE@IPXAddress?$AA@		; `string'
PUBLIC	??_C@_0BD@EFBIPBIB@IPUseZeroBroadcast?$AA@	; `string'
PUBLIC	??_C@_0BE@IDDAOKAD@IPSecPermitUDPPorts?$AA@	; `string'
PUBLIC	??_C@_0BE@JOIOPHFJ@IPSecPermitTCPPorts?$AA@	; `string'
PUBLIC	??_C@_0BH@HHIPIHMF@IPSecPermitIPProtocols?$AA@	; `string'
PUBLIC	??_C@_0BG@IJANIIKC@IPPortSecurityEnabled?$AA@	; `string'
PUBLIC	??_C@_0BI@LBDHONDJ@IPFilterSecurityEnabled?$AA@	; `string'
PUBLIC	??_C@_09KIFLBGKF@IPEnabled?$AA@			; `string'
PUBLIC	??_C@_0BD@KDBLHBOO@IPConnectionMetric?$AA@	; `string'
PUBLIC	??_C@_09LFCMALKM@IGMPLevel?$AA@			; `string'
PUBLIC	??_C@_0BC@JPOLFPNM@GatewayCostMetric?$AA@	; `string'
PUBLIC	??_C@_0BL@EIIPDLGE@FullDNSRegistrationEnabled?$AA@ ; `string'
PUBLIC	??_C@_0BE@GGFBGHJP@ForwardBufferMemory?$AA@	; `string'
PUBLIC	??_C@_0BN@OACMHJBD@DomainDNSRegistrationEnabled?$AA@ ; `string'
PUBLIC	??_C@_0BF@CIMMNJEP@DNSServerSearchOrder?$AA@	; `string'
PUBLIC	??_C@_0BM@LEBEBEIJ@DNSEnabledForWINSResolution?$AA@ ; `string'
PUBLIC	??_C@_0BL@NEHFNDKH@DNSDomainSuffixSearchOrder?$AA@ ; `string'
PUBLIC	??_C@_0BC@MIONLOAH@DHCPLeaseObtained?$AA@	; `string'
PUBLIC	??_C@_0BB@BOGKHOEE@DHCPLeaseExpires?$AA@	; `string'
PUBLIC	??_C@_0M@HIMIFMFA@DHCPEnabled?$AA@		; `string'
PUBLIC	??_C@_0L@EIDNNLHD@DefaultTTL?$AA@		; `string'
PUBLIC	??_C@_0L@JFBEJJHM@DefaultTOS?$AA@		; `string'
PUBLIC	??_C@_0BE@GOBIIDKA@DeadGWDetectEnabled?$AA@	; `string'
PUBLIC	??_C@_0N@OAKOAPMO@DatabasePath?$AA@		; `string'
PUBLIC	??_C@_0BA@DHDIOMKI@ArpUseEtherSNAP?$AA@		; `string'
PUBLIC	??_C@_0BF@NNMMFFI@ArpAlwaysSourceRoute?$AA@	; `string'
PUBLIC	??_C@_08EKHHNDLH@IPSubnet?$AA@			; `string'
PUBLIC	??_C@_09FBHLGFBK@DNSDomain?$AA@			; `string'
PUBLIC	??_C@_0BB@HACNIBBH@DefaultIPGateway?$AA@	; `string'
PUBLIC	??_C@_0L@BJOKJMLN@DHCPServer?$AA@		; `string'
PUBLIC	??_C@_09NIGMFFPO@IPAddress?$AA@			; `string'
PUBLIC	??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@ ; `string'
PUBLIC	??_C@_0L@COBEMNCH@NetEnabled?$AA@		; `string'
PUBLIC	??_C@_0P@LMPBIBLI@InterfaceIndex?$AA@		; `string'
PUBLIC	??_C@_09HBJECKPO@Installed?$AA@			; `string'
PUBLIC	??_C@_09MMNBJFFE@AutoSense?$AA@			; `string'
PUBLIC	??_C@_0O@JDINGPBK@AdapterTypeID?$AA@		; `string'
PUBLIC	??_C@_0M@CBMGKKGD@AdapterType?$AA@		; `string'
PUBLIC	??_C@_0BB@CPOCLJND@PermanentAddress?$AA@	; `string'
PUBLIC	??_C@_0BB@HCIBJPII@NetworkAddresses?$AA@	; `string'
PUBLIC	??_C@_04MEIDEPGF@GUID?$AA@			; `string'
PUBLIC	??_C@_08MFFAALKH@MaxSpeed?$AA@			; `string'
PUBLIC	??_C@_0BE@OHJLPIPO@NetConnectionStatus?$AA@	; `string'
PUBLIC	??_C@_0BA@FMEGGBNH@NetConnectionID?$AA@		; `string'
PUBLIC	??_C@_0M@IOFGKGDC@ServiceName?$AA@		; `string'
PUBLIC	??_C@_0BA@PKOOKBHK@PhysicalAdapter?$AA@		; `string'
PUBLIC	??_C@_0L@MLCHOGMM@MACAddress?$AA@		; `string'
PUBLIC	??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@	; `string'
PUBLIC	??_C@_0BH@LMHCBHLE@VppMixedVoltageSupport?$AA@	; `string'
PUBLIC	??_C@_0BH@BMAHGALK@VccMixedVoltageSupport?$AA@	; `string'
PUBLIC	??_C@_0O@OPICFFNJ@ThermalRating?$AA@		; `string'
PUBLIC	??_C@_0BA@HLMBNLEL@SupportsHotPlug?$AA@		; `string'
PUBLIC	??_C@_0P@MHGKENBB@SpecialPurpose?$AA@		; `string'
PUBLIC	??_C@_06LOOAMPBO@Shared?$AA@			; `string'
PUBLIC	??_C@_0BD@MJCDBDLK@PurposeDescription?$AA@	; `string'
PUBLIC	??_C@_09KGLBDKHB@PMESignal?$AA@			; `string'
PUBLIC	??_C@_0O@ICFBEHEI@LengthAllowed?$AA@		; `string'
PUBLIC	??_C@_0O@JIADPBNP@HeightAllowed?$AA@		; `string'
PUBLIC	??_C@_0N@OHNMFPEL@CurrentUsage?$AA@		; `string'
PUBLIC	??_C@_0BA@JKMEMADA@SlotDesignation?$AA@		; `string'
PUBLIC	??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@	; `string'
PUBLIC	??_C@_0N@BGAIBJKD@VisibleAlarm?$AA@		; `string'
PUBLIC	??_C@_0BB@EPPDMJMG@TypeDescriptions?$AA@	; `string'
PUBLIC	??_C@_0P@GDBINLPP@SMBIOSAssetTag?$AA@		; `string'
PUBLIC	??_C@_0BC@MJACHPAA@ServicePhilosophy?$AA@	; `string'
PUBLIC	??_C@_0BE@CDEDGENH@ServiceDescriptions?$AA@	; `string'
PUBLIC	??_C@_0P@LBCDFKMM@SecurityStatus?$AA@		; `string'
PUBLIC	??_C@_0P@IFAJDLJO@SecurityBreach?$AA@		; `string'
PUBLIC	??_C@_0BD@BOLIJOBH@NumberOfPowerCords?$AA@	; `string'
PUBLIC	??_C@_0M@FLPBGKMO@LockPresent?$AA@		; `string'
PUBLIC	??_C@_0P@FPMIANAI@HeatGeneration?$AA@		; `string'
PUBLIC	??_C@_0BK@DMAHAAAM@CurrentRequiredOrProduced?$AA@ ; `string'
PUBLIC	??_C@_0BI@OIOFCGCN@CableManagementStrategy?$AA@	; `string'
PUBLIC	??_C@_0BC@OICCILBJ@BreachDescription?$AA@	; `string'
PUBLIC	??_C@_0N@FBKDMIBE@AudibleAlarm?$AA@		; `string'
PUBLIC	??_C@_0N@MLFAOMIG@ChassisTypes?$AA@		; `string'
PUBLIC	??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@	; `string'
PUBLIC	??_C@_05KFFLJNBG@TagId?$AA@			; `string'
PUBLIC	??_C@_05JNKNAC@State?$AA@			; `string'
PUBLIC	??_C@_09CIMAKHDE@StartName?$AA@			; `string'
PUBLIC	??_C@_0M@CFFFGGEC@ServiceType?$AA@		; `string'
PUBLIC	??_C@_0BI@JAIDFKNN@ServiceSpecificExitCode?$AA@	; `string'
PUBLIC	??_C@_08FHJJFIAP@ExitCode?$AA@			; `string'
PUBLIC	??_C@_0N@GPBKMKLE@ErrorControl?$AA@		; `string'
PUBLIC	??_C@_0BA@DKLNMHH@DesktopInteract?$AA@		; `string'
PUBLIC	??_C@_0L@MPAKMMDG@AcceptStop?$AA@		; `string'
PUBLIC	??_C@_0M@MEIJGDEJ@AcceptPause?$AA@		; `string'
PUBLIC	??_C@_08LHLJMCNC@PathName?$AA@			; `string'
PUBLIC	??_C@_0M@MLHPPPJP@DisplayName?$AA@		; `string'
PUBLIC	??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@	; `string'
PUBLIC	??_C@_07JDPBNNMM@SIDType?$AA@			; `string'
PUBLIC	??_C@_0N@FPKOIMIG@LocalAccount?$AA@		; `string'
PUBLIC	??_C@_03OMFNLMOB@SID?$AA@			; `string'
PUBLIC	??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@	; `string'
PUBLIC	??_C@_0N@JHIKPPPP@ProposedSize?$AA@		; `string'
PUBLIC	??_C@_0M@JHEHBNHB@MaximumSize?$AA@		; `string'
PUBLIC	??_C@_0M@MLALLFJB@CurrentSize?$AA@		; `string'
PUBLIC	??_C@_0P@OGGGECNI@Win32_Registry?$AA@		; `string'
PUBLIC	??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@	; `string'
PUBLIC	??_C@_0BE@FBEKBLIJ@ServicePackInEffect?$AA@	; `string'
PUBLIC	??_C@_0M@PIGNGIJB@FixComments?$AA@		; `string'
PUBLIC	??_C@_0M@NBDMPIKF@InstalledOn?$AA@		; `string'
PUBLIC	??_C@_0M@NMGHOPGA@InstalledBy?$AA@		; `string'
PUBLIC	??_C@_08GFKGEEBB@HotFixID?$AA@			; `string'
PUBLIC	??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@ ; `string'
PUBLIC	??_C@_09JCLOCIPO@WordCount?$AA@			; `string'
PUBLIC	??_C@_0O@FDAGMPND@URLUpdateInfo?$AA@		; `string'
PUBLIC	??_C@_0N@CIJCJNDA@URLInfoAbout?$AA@		; `string'
PUBLIC	??_C@_0L@LNLOEOEC@Transforms?$AA@		; `string'
PUBLIC	??_C@_0L@BDBMLIBF@RegCompany?$AA@		; `string'
PUBLIC	??_C@_08KOFIEIPM@RegOwner?$AA@			; `string'
PUBLIC	??_C@_0M@PLFIHHBG@PackageName?$AA@		; `string'
PUBLIC	??_C@_0M@OMMGPPBL@PackageCode?$AA@		; `string'
PUBLIC	??_C@_0N@LIDMIFHK@PackageCache?$AA@		; `string'
PUBLIC	??_C@_0N@ONDNCIN@LocalPackage?$AA@		; `string'
PUBLIC	??_C@_08BENDAOKD@Language?$AA@			; `string'
PUBLIC	??_C@_0O@GCCHCBIO@InstallSource?$AA@		; `string'
PUBLIC	??_C@_0O@PPCFOOHH@HelpTelephone?$AA@		; `string'
PUBLIC	??_C@_08LMOOJGEG@HelpLink?$AA@			; `string'
PUBLIC	??_C@_0N@FNHIHJOE@InstallState?$AA@		; `string'
PUBLIC	??_C@_0BA@DLLPKNMD@InstallLocation?$AA@		; `string'
PUBLIC	??_C@_0P@CAOEPKFE@AssignmentType?$AA@		; `string'
PUBLIC	??_C@_09IHHILKBJ@ProductID?$AA@			; `string'
PUBLIC	??_C@_0O@LCAALOJJ@Win32_Product?$AA@		; `string'
PUBLIC	??_C@_09ODBEMGCH@SKUNumber?$AA@			; `string'
PUBLIC	??_C@_0BC@IBEJLMDM@IdentifyingNumber?$AA@	; `string'
PUBLIC	??_C@_04NOKDILIH@UUID?$AA@			; `string'
PUBLIC	??_C@_06LGGLFMPE@Vendor?$AA@			; `string'
PUBLIC	??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@ ; `string'
PUBLIC	??_C@_09CLAAHCGK@Workgroup?$AA@			; `string'
PUBLIC	??_C@_0L@FAPFOCCC@WakeUpType?$AA@		; `string'
PUBLIC	??_C@_0BE@LPDNMOEG@TotalPhysicalMemory?$AA@	; `string'
PUBLIC	??_C@_0N@HHACICKK@ThermalState?$AA@		; `string'
PUBLIC	??_C@_0BF@IKJAHOGK@SystemStartupSetting?$AA@	; `string'
PUBLIC	??_C@_0BF@HNHDCNN@SystemStartupOptions?$AA@	; `string'
PUBLIC	??_C@_0BD@MJBJDOPG@SystemStartupDelay?$AA@	; `string'
PUBLIC	??_C@_0BK@GHHBNFKI@SupportContactDescription?$AA@ ; `string'
PUBLIC	??_C@_05CPOHHMHJ@Roles?$AA@			; `string'
PUBLIC	??_C@_0L@ODMHPMJN@ResetLimit?$AA@		; `string'
PUBLIC	??_C@_0L@NDDNCBN@ResetCount?$AA@		; `string'
PUBLIC	??_C@_0BA@JGMMLHGF@ResetCapability?$AA@		; `string'
PUBLIC	??_C@_0BB@CIHLIHGG@PrimaryOwnerName?$AA@	; `string'
PUBLIC	??_C@_0BE@GNDJOKHP@PrimaryOwnerContact?$AA@	; `string'
PUBLIC	??_C@_0BB@PGEJAGBJ@PowerSupplyState?$AA@	; `string'
PUBLIC	??_C@_0L@PFLEPOFF@PowerState?$AA@		; `string'
PUBLIC	??_C@_0BG@MGBDJIM@PowerOnPasswordStatus?$AA@	; `string'
PUBLIC	??_C@_0N@EOPDJAGI@PCSystemType?$AA@		; `string'
PUBLIC	??_C@_0BA@BAAGJACJ@PauseAfterReset?$AA@		; `string'
PUBLIC	??_C@_0N@BDBDHMKI@PartOfDomain?$AA@		; `string'
PUBLIC	??_C@_0P@DEDOEGFN@OEMStringArray?$AA@		; `string'
PUBLIC	??_C@_0O@KFCLFAME@OEMLogoBitmap?$AA@		; `string'
PUBLIC	??_C@_0BJ@OJMPPEPI@NetworkServerModeEnabled?$AA@ ; `string'
PUBLIC	??_C@_0L@INCFKHMA@NameFormat?$AA@		; `string'
PUBLIC	??_C@_0N@FDMFJCLB@LastLoadInfo?$AA@		; `string'
PUBLIC	??_C@_0BH@NPMFKEOG@KeyboardPasswordStatus?$AA@	; `string'
PUBLIC	??_C@_0BA@FHFMLOBH@InitialLoadInfo?$AA@		; `string'
PUBLIC	??_C@_0BC@MOGIEFCC@InfraredSupported?$AA@	; `string'
PUBLIC	??_C@_0BG@OFHEPCGG@FrontPanelResetStatus?$AA@	; `string'
PUBLIC	??_C@_0BK@DMLHGPE@EnableDaylightSavingsTime?$AA@ ; `string'
PUBLIC	??_C@_0L@DHGJAMBB@DomainRole?$AA@		; `string'
PUBLIC	??_C@_06HFDFFJHI@Domain?$AA@			; `string'
PUBLIC	??_C@_0M@HMDMJNAL@DNSHostName?$AA@		; `string'
PUBLIC	??_C@_0BB@PNOOHJBN@DaylightInEffect?$AA@	; `string'
PUBLIC	??_C@_0BA@KEBGPOLH@CurrentTimeZone?$AA@		; `string'
PUBLIC	??_C@_0BD@NPOFELCJ@ChassisBootupState?$AA@	; `string'
PUBLIC	??_C@_0M@FAIFADKE@BootupState?$AA@		; `string'
PUBLIC	??_C@_0BB@KCAGDBFG@BootROMSupported?$AA@	; `string'
PUBLIC	??_C@_0BF@NHNHHNLM@BootOptionOnWatchDog?$AA@	; `string'
PUBLIC	??_C@_0BC@LOIFGJNH@BootOptionOnLimit?$AA@	; `string'
PUBLIC	??_C@_0BJ@HFJMLPDD@AutomaticResetCapability?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CCCKPNOE@AutomaticResetBootOption?$AA@ ; `string'
PUBLIC	??_C@_0BJ@GMKDMOMC@AutomaticManagedPagefile?$AA@ ; `string'
PUBLIC	??_C@_0BE@BPKIAGEB@AdminPasswordStatus?$AA@	; `string'
PUBLIC	??_C@_08KAFEAHEM@UserName?$AA@			; `string'
PUBLIC	??_C@_0BD@KEFEPCEP@NumberOfProcessors?$AA@	; `string'
PUBLIC	??_C@_0L@GEHHDFHH@SystemType?$AA@		; `string'
PUBLIC	??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@	; `string'
PUBLIC	??_C@_0BL@GIIBFPAF@Win32_SystemMemoryResource?$AA@ ; `string'
PUBLIC	??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@	; `string'
PUBLIC	??_C@_03GMFFJGJI@Use?$AA@			; `string'
PUBLIC	??_C@_0BG@BDKPEMKD@MemoryErrorCorrection?$AA@	; `string'
PUBLIC	??_C@_0M@LPAFCHAO@MaxCapacity?$AA@		; `string'
PUBLIC	??_C@_0O@EOCLGIEK@MemoryDevices?$AA@		; `string'
PUBLIC	??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@ ; `string'
PUBLIC	??_C@_0L@NHBAOOAD@TypeDetail?$AA@		; `string'
PUBLIC	??_C@_0L@EONKMHCB@TotalWidth?$AA@		; `string'
PUBLIC	??_C@_05HOIAGEJD@Speed?$AA@			; `string'
PUBLIC	??_C@_0O@MJAFBIEI@PositionInRow?$AA@		; `string'
PUBLIC	??_C@_0BD@OOBFBMPB@InterleavePosition?$AA@	; `string'
PUBLIC	??_C@_0BE@GAJMAAIE@InterleaveDataDepth?$AA@	; `string'
PUBLIC	??_C@_0L@JPOMKNPI@FormFactor?$AA@		; `string'
PUBLIC	??_C@_0O@DKGGAIKL@DeviceLocator?$AA@		; `string'
PUBLIC	??_C@_09ELEBPJGH@BankLabel?$AA@			; `string'
PUBLIC	??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@	; `string'
PUBLIC	??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@	; `string'
PUBLIC	??_C@_0BB@CCADGENH@ErrorGranularity?$AA@	; `string'
PUBLIC	??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@	; `string'
PUBLIC	??_C@_0L@NKIIONIP@MemoryType?$AA@		; `string'
PUBLIC	??_C@_0BK@CHMJMDKA@Win32_DeviceMemoryAddress?$AA@ ; `string'
PUBLIC	??_C@_0M@GMGLDKG@WritePolicy?$AA@		; `string'
PUBLIC	??_C@_0BD@EHELDMNK@SystemLevelAddress?$AA@	; `string'
PUBLIC	??_C@_0O@LOONNFKJ@SupportedSRAM?$AA@		; `string'
PUBLIC	??_C@_0BA@JKJCLFJA@StartingAddress?$AA@		; `string'
PUBLIC	??_C@_0BC@CACAEAGO@ReplacementPolicy?$AA@	; `string'
PUBLIC	??_C@_0L@OICKBPFP@ReadPolicy?$AA@		; `string'
PUBLIC	??_C@_0BG@GMMANAIM@OtherErrorDescription?$AA@	; `string'
PUBLIC	??_C@_08KDOEBHGA@Location?$AA@			; `string'
PUBLIC	??_C@_08BFDFHGHF@LineSize?$AA@			; `string'
PUBLIC	??_C@_0O@BJDNNDOA@InstalledSize?$AA@		; `string'
PUBLIC	??_C@_0L@NIIIAJJG@FlushTimer?$AA@		; `string'
PUBLIC	??_C@_0BC@FEODMBII@ErrorTransferSize?$AA@	; `string'
PUBLIC	??_C@_09LMOKKAAG@ErrorTime?$AA@			; `string'
PUBLIC	??_C@_0BA@DBMDPLBE@ErrorResolution?$AA@		; `string'
PUBLIC	??_C@_09EPPHMMOH@ErrorInfo?$AA@			; `string'
PUBLIC	??_C@_0P@LPKOAMHJ@ErrorDataOrder?$AA@		; `string'
PUBLIC	??_C@_09GOCFECJA@ErrorData?$AA@			; `string'
PUBLIC	??_C@_0BB@OEAEPHLK@ErrorCorrectType?$AA@	; `string'
PUBLIC	??_C@_0N@BEELHEFJ@ErrorAddress?$AA@		; `string'
PUBLIC	??_C@_0M@PJGEGKNG@ErrorAccess?$AA@		; `string'
PUBLIC	??_C@_0O@DMEOEBEF@EndingAddress?$AA@		; `string'
PUBLIC	??_C@_0M@JJECGOOK@CurrentSRAM?$AA@		; `string'
PUBLIC	??_C@_0BB@HJBOPHEK@CorrectableError?$AA@	; `string'
PUBLIC	??_C@_0N@FNMLGPI@MaxCacheSize?$AA@		; `string'
PUBLIC	??_C@_09LDLPEFB@CacheType?$AA@			; `string'
PUBLIC	??_C@_0L@GKCEABFB@CacheSpeed?$AA@		; `string'
PUBLIC	??_C@_0O@BJAAJMNJ@Associativity?$AA@		; `string'
PUBLIC	??_C@_0BE@FGEPBFNL@AdditionalErrorData?$AA@	; `string'
PUBLIC	??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@	; `string'
PUBLIC	??_C@_0P@OCFCAPCK@ReportSetMarks?$AA@		; `string'
PUBLIC	??_C@_07DDDGKLAD@Padding?$AA@			; `string'
PUBLIC	??_C@_0BC@NKLHGLCM@MaxPartitionCount?$AA@	; `string'
PUBLIC	??_C@_0M@GCKGDCME@FeaturesLow?$AA@		; `string'
PUBLIC	??_C@_0N@PNICBLFI@FeaturesHigh?$AA@		; `string'
PUBLIC	??_C@_0BD@IDPNAMKG@EOTWarningZoneSize?$AA@	; `string'
PUBLIC	??_C@_03NLPJKHLD@ECC?$AA@			; `string'
PUBLIC	??_C@_0M@COKFBABJ@Compression?$AA@		; `string'
PUBLIC	??_C@_02HOGEDOAB@Id?$AA@			; `string'
PUBLIC	??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@		; `string'
PUBLIC	??_C@_0N@NINPCONM@CleanerMedia?$AA@		; `string'
PUBLIC	??_C@_0P@CNPPDDMA@WriteProtectOn?$AA@		; `string'
PUBLIC	??_C@_08PINBMPEF@Capacity?$AA@			; `string'
PUBLIC	??_C@_0BC@FNAKMFAB@CreationClassName?$AA@	; `string'
PUBLIC	??_C@_0BB@GANKFIKA@MediaDescription?$AA@	; `string'
PUBLIC	??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@	; `string'
PUBLIC	??_C@_0P@HEMAHOJD@StartingOffset?$AA@		; `string'
PUBLIC	??_C@_0BB@CLPKNLNO@RewritePartition?$AA@	; `string'
PUBLIC	??_C@_07ODOLMOGH@Purpose?$AA@			; `string'
PUBLIC	??_C@_0O@NMDEFEE@HiddenSectors?$AA@		; `string'
PUBLIC	??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@		; `string'
PUBLIC	??_C@_09JFLKFGKE@BlockSize?$AA@			; `string'
PUBLIC	??_C@_06IOEANFCI@Access?$AA@			; `string'
PUBLIC	??_C@_0BB@GMPNKCND@PrimaryPartition?$AA@	; `string'
PUBLIC	??_C@_0O@GKABHDFN@BootPartition?$AA@		; `string'
PUBLIC	??_C@_08GBCOMNMP@Bootable?$AA@			; `string'
PUBLIC	??_C@_04KOACHJEN@Type?$AA@			; `string'
PUBLIC	??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@	; `string'
PUBLIC	??_C@_0BC@KOKBEBBE@TracksPerCylinder?$AA@	; `string'
PUBLIC	??_C@_0M@BHKEFGGG@TotalTracks?$AA@		; `string'
PUBLIC	??_C@_0N@BJMAPGKO@TotalSectors?$AA@		; `string'
PUBLIC	??_C@_0L@PLGEACLG@TotalHeads?$AA@		; `string'
PUBLIC	??_C@_0P@NEMACPGO@TotalCylinders?$AA@		; `string'
PUBLIC	??_C@_0BA@CCMKCJPC@SectorsPerTrack?$AA@		; `string'
PUBLIC	??_C@_0O@IHENGMAG@InterfaceType?$AA@		; `string'
PUBLIC	??_C@_0BB@HMBACBBL@FirmwareRevision?$AA@	; `string'
PUBLIC	??_C@_0P@MMMIFHLL@BytesPerSector?$AA@		; `string'
PUBLIC	??_C@_09GDNFOKKF@Signature?$AA@			; `string'
PUBLIC	??_C@_0L@BLANPANH@Partitions?$AA@		; `string'
PUBLIC	??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@		; `string'
PUBLIC	??_C@_0BF@HGGDLIIF@SpecificationVersion?$AA@	; `string'
PUBLIC	??_C@_0BN@FJFLBOEO@ReservedSystemPaletteEntries?$AA@ ; `string'
PUBLIC	??_C@_0L@NCAJOFAD@Monochrome?$AA@		; `string'
PUBLIC	??_C@_0P@BADPIIJO@MinRefreshRate?$AA@		; `string'
PUBLIC	??_C@_0P@DHIEOPKP@MaxRefreshRate?$AA@		; `string'
PUBLIC	??_C@_0BD@KFJBBNPN@MaxMemorySupported?$AA@	; `string'
PUBLIC	??_C@_0BI@NCJGCGIA@InstalledDisplayDrivers?$AA@	; `string'
PUBLIC	??_C@_09OGGCGCBA@ICMMethod?$AA@			; `string'
PUBLIC	??_C@_09MBIABGHL@ICMIntent?$AA@			; `string'
PUBLIC	??_C@_0L@GAFFCADK@DriverDate?$AA@		; `string'
PUBLIC	??_C@_0L@HJOBJMDE@DitherType?$AA@		; `string'
PUBLIC	??_C@_0BD@HBMCPLLH@DeviceSpecificPens?$AA@	; `string'
PUBLIC	??_C@_0O@KKIKAADI@DriverVersion?$AA@		; `string'
PUBLIC	??_C@_0M@HMKFJKEG@InfFilename?$AA@		; `string'
PUBLIC	??_C@_0L@CKHNOAKJ@AdapterRAM?$AA@		; `string'
PUBLIC	??_C@_0P@MPKKGADB@AdapterDACType?$AA@		; `string'
PUBLIC	??_C@_0BF@LPCADEJI@AdapterCompatibility?$AA@	; `string'
PUBLIC	??_C@_0BI@DFJMJFBI@AcceleratorCapabilities?$AA@	; `string'
PUBLIC	??_C@_0BF@FKKNOPFN@SystemPaletteEntries?$AA@	; `string'
PUBLIC	??_C@_0BD@DECAKEGH@NumberOfVideoPages?$AA@	; `string'
PUBLIC	??_C@_0BF@JCFFEIIM@NumberOfColorPlanes?$DL?$AA@	; `string'
PUBLIC	??_C@_0BC@PEHKLIOA@ColorTableEntries?$AA@	; `string'
PUBLIC	??_C@_0P@OMEGAAG@VideoProcessor?$AA@		; `string'
PUBLIC	??_C@_0BF@MAGAOPPB@VideoModeDescription?$AA@	; `string'
PUBLIC	??_C@_09LIEAKBEG@VideoMode?$AA@			; `string'
PUBLIC	??_C@_0BA@COFLHODM@VideoMemoryType?$AA@		; `string'
PUBLIC	??_C@_0BC@GFHBBCIN@VideoArchitecture?$AA@	; `string'
PUBLIC	??_C@_0BE@BKBIMFEG@CurrentNumberOfRows?$AA@	; `string'
PUBLIC	??_C@_0BH@IKBJPLJ@CurrentNumberOfColumns?$AA@	; `string'
PUBLIC	??_C@_0BA@CDIHNLEF@CurrentScanMode?$AA@		; `string'
PUBLIC	??_C@_0BD@JKLPINND@CurrentRefreshRate?$AA@	; `string'
PUBLIC	??_C@_0BG@NCBMILGB@CurrentNumberOfColors?$AA@	; `string'
PUBLIC	??_C@_0BK@LFIAOAGD@CurrentVerticalResolution?$AA@ ; `string'
PUBLIC	??_C@_0BM@OFHJCNEB@CurrentHorizontalResolution?$AA@ ; `string'
PUBLIC	??_C@_0BE@FEOPMOOE@CurrentBitsPerPixel?$AA@	; `string'
PUBLIC	??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@	; `string'
PUBLIC	??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@	; `string'
PUBLIC	??_C@_0O@GHJKPLAG@DMABufferSize?$AA@		; `string'
PUBLIC	??_C@_0O@GILLNKKD@MPU401Address?$AA@		; `string'
PUBLIC	??_C@_0M@MNPNDAHP@ProductName?$AA@		; `string'
PUBLIC	??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@	; `string'
PUBLIC	??_C@_0BG@LCMFOHKE@XOnXOffOutFlowControl?$AA@	; `string'
PUBLIC	??_C@_0BF@FMELJHC@XOnXOffInFlowControl?$AA@	; `string'
PUBLIC	??_C@_0BB@OHGPOKOF@XOnXMitThreshold?$AA@	; `string'
PUBLIC	??_C@_0N@LMKFMCPA@XOnCharacter?$AA@		; `string'
PUBLIC	??_C@_0BC@PIOKAKHD@XOffXMitThreshold?$AA@	; `string'
PUBLIC	??_C@_0O@IABHIILA@XOffCharacter?$AA@		; `string'
PUBLIC	??_C@_09CMMJGBDB@SettingID?$AA@			; `string'
PUBLIC	??_C@_0BD@HDDKDMKB@RTSFlowControlType?$AA@	; `string'
PUBLIC	??_C@_0BD@KACACAPH@ParityCheckEnabled?$AA@	; `string'
PUBLIC	??_C@_0P@ELDMBJ@EventCharacter?$AA@		; `string'
PUBLIC	??_C@_0BI@MDNCEDD@ErrorReplacementEnabled?$AA@	; `string'
PUBLIC	??_C@_0BG@HECEEKCN@ErrorReplaceCharacter?$AA@	; `string'
PUBLIC	??_C@_0N@HDNBGKMG@EOFCharacter?$AA@		; `string'
PUBLIC	??_C@_0BD@HKACMHPL@DTRFlowControlType?$AA@	; `string'
PUBLIC	??_C@_0P@FDLAEJMA@DSRSensitivity?$AA@		; `string'
PUBLIC	??_C@_0BC@HDHNIDHE@DSROutflowControl?$AA@	; `string'
PUBLIC	??_C@_0BB@LNMOOKGE@DiscardNULLBytes?$AA@	; `string'
PUBLIC	??_C@_0BC@BMKJGEMK@CTSOutflowControl?$AA@	; `string'
PUBLIC	??_C@_0BD@MCBMPIAJ@ContinueXMitOnXOff?$AA@	; `string'
PUBLIC	??_C@_0BC@OGEDEEBA@BinaryModeEnabled?$AA@	; `string'
PUBLIC	??_C@_0BG@DFLLPBBO@AbortReadWriteOnError?$AA@	; `string'
PUBLIC	??_C@_06OICOCAHF@IsBusy?$AA@			; `string'
PUBLIC	??_C@_08DPBIGBFM@StopBits?$AA@			; `string'
PUBLIC	??_C@_06OKNHBMNM@Parity?$AA@			; `string'
PUBLIC	??_C@_0M@PAFDOFKP@BitsPerByte?$AA@		; `string'
PUBLIC	??_C@_08FCNNIBJG@BaudRate?$AA@			; `string'
PUBLIC	??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@ ; `string'
PUBLIC	??_C@_0BD@GDEAPHBI@SupportsXOnXOffSet?$AA@	; `string'
PUBLIC	??_C@_0BA@OPAGJFHI@SupportsXOnXOff?$AA@		; `string'
PUBLIC	??_C@_0BK@GGENNCGN@SupportsSpecialCharacters?$AA@ ; `string'
PUBLIC	??_C@_0P@NGNOBJLG@SupportsRTSCTS?$AA@		; `string'
PUBLIC	??_C@_0N@GBIJPBEE@SupportsRLSD?$AA@		; `string'
PUBLIC	??_C@_0BE@JCPAAGPO@SupportsParityCheck?$AA@	; `string'
PUBLIC	??_C@_0BE@JOEIKOLI@SupportsIntTimeouts?$AA@	; `string'
PUBLIC	??_C@_0BI@LJLLOLPH@SupportsElapsedTimeouts?$AA@	; `string'
PUBLIC	??_C@_0P@GODDIGIP@SupportsDTRDSR?$AA@		; `string'
PUBLIC	??_C@_0BC@EEEMKCBH@Supports16BitMode?$AA@	; `string'
PUBLIC	??_C@_0BB@EPIEMKMF@SettableStopBits?$AA@	; `string'
PUBLIC	??_C@_0N@OBGEBGNG@SettableRLSD?$AA@		; `string'
PUBLIC	??_C@_0BE@NMPLPPIE@SettableParityCheck?$AA@	; `string'
PUBLIC	??_C@_0P@MOHECAJ@SettableParity?$AA@		; `string'
PUBLIC	??_C@_0BE@FMKJPGFK@SettableFlowControl?$AA@	; `string'
PUBLIC	??_C@_0BB@BOCNMDDI@SettableDataBits?$AA@	; `string'
PUBLIC	??_C@_0BB@CCEBCKAP@SettableBaudRate?$AA@	; `string'
PUBLIC	??_C@_0BB@NCMHEECO@OSAutoDiscovered?$AA@	; `string'
PUBLIC	??_C@_0BI@EAKFLPF@MaximumOutputBufferSize?$AA@	; `string'
PUBLIC	??_C@_0BH@PKAPBGLB@MaximumInputBufferSize?$AA@	; `string'
PUBLIC	??_C@_06JCOMDNII@Binary?$AA@			; `string'
PUBLIC	??_C@_0N@KFNBCBNP@ProviderType?$AA@		; `string'
PUBLIC	??_C@_0M@BFAJGJNN@MaxBaudRate?$AA@		; `string'
PUBLIC	??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@	; `string'
PUBLIC	??_C@_0BF@OGNJDJGP@ProtectionManagement?$AA@	; `string'
PUBLIC	??_C@_0BA@IDEAMGMB@MaxTransferRate?$AA@		; `string'
PUBLIC	??_C@_0N@OLJPFNHL@MaxDataWidth?$AA@		; `string'
PUBLIC	??_C@_05FNNGFGLF@Index?$AA@			; `string'
PUBLIC	??_C@_09DJCHLIFB@DeviceMap?$AA@			; `string'
PUBLIC	??_C@_0BD@LPBNFPJD@ControllerTimeouts?$AA@	; `string'
PUBLIC	??_C@_0BA@BJODOJJC@HardwareVersion?$AA@		; `string'
PUBLIC	??_C@_0L@DJBCKAGE@DriverName?$AA@		; `string'
PUBLIC	??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@	; `string'
PUBLIC	??_C@_0M@DEJHGOJI@VoltageCaps?$AA@		; `string'
PUBLIC	??_C@_0O@KHACBBMN@UpgradeMethod?$AA@		; `string'
PUBLIC	??_C@_08HJBCPKNB@UniqueId?$AA@			; `string'
PUBLIC	??_C@_08HPJGCEAH@Stepping?$AA@			; `string'
PUBLIC	??_C@_0BC@GCIFEBIL@SocketDesignation?$AA@	; `string'
PUBLIC	??_C@_04EBAMNOLK@Role?$AA@			; `string'
PUBLIC	??_C@_08DNLDHPFP@Revision?$AA@			; `string'
PUBLIC	??_C@_0O@DAODMABE@ProcessorType?$AA@		; `string'
PUBLIC	??_C@_0M@DHKOOBFD@ProcessorId?$AA@		; `string'
PUBLIC	??_C@_0BH@LLAHKBOJ@OtherFamilyDescription?$AA@	; `string'
PUBLIC	??_C@_0P@HLLBIGKP@LoadPercentage?$AA@		; `string'
PUBLIC	??_C@_05KOHFLOFG@Level?$AA@			; `string'
PUBLIC	??_C@_08JALCBBMK@ExtClock?$AA@			; `string'
PUBLIC	??_C@_09KNGBBIL@DataWidth?$AA@			; `string'
PUBLIC	??_C@_0P@IHAGOHLC@CurrentVoltage?$AA@		; `string'
PUBLIC	??_C@_0BC@JFANJPME@CurrentClockSpeed?$AA@	; `string'
PUBLIC	??_C@_09OJECCCEO@CpuStatus?$AA@			; `string'
PUBLIC	??_C@_0N@IPOPOCBB@AddressWidth?$AA@		; `string'
PUBLIC	??_C@_0N@EKFHDKJL@L3CacheSpeed?$AA@		; `string'
PUBLIC	??_C@_0M@PICLIDHN@L3CacheSize?$AA@		; `string'
PUBLIC	??_C@_0N@NBPCHGPE@L2CacheSpeed?$AA@		; `string'
PUBLIC	??_C@_0M@DJKFFMLN@L2CacheSize?$AA@		; `string'
PUBLIC	??_C@_06BOFMEHLD@Family?$AA@			; `string'
PUBLIC	??_C@_0BK@OBFFNDNO@NumberOfLogicalProcessors?$AA@ ; `string'
PUBLIC	??_C@_0O@MJOHKFKO@MaxClockSpeed?$AA@		; `string'
PUBLIC	??_C@_0O@FFCOPHIP@NumberOfCores?$AA@		; `string'
PUBLIC	??_C@_0N@MDJPNJNL@Architecture?$AA@		; `string'
PUBLIC	??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@		; `string'
PUBLIC	??_C@_09IAGOJBFI@StartMode?$AA@			; `string'
PUBLIC	??_C@_07LCDJNPHI@Started?$AA@			; `string'
PUBLIC	??_C@_06ENMIEFDD@OEMUrl?$AA@			; `string'
PUBLIC	??_C@_0P@NBBGILI@DependentFiles?$AA@		; `string'
PUBLIC	??_C@_08GLFJHHAH@HelpFile?$AA@			; `string'
PUBLIC	??_C@_07JFPHJDHA@InfName?$AA@			; `string'
PUBLIC	??_C@_0BC@MLDLGMGB@SupportedPlatform?$AA@	; `string'
PUBLIC	??_C@_0M@PJPGFADP@MonitorName?$AA@		; `string'
PUBLIC	??_C@_08JFJMIJHO@DataFile?$AA@			; `string'
PUBLIC	??_C@_0L@LKBOBDBI@ConfigFile?$AA@		; `string'
PUBLIC	??_C@_08CKKAOMLK@FilePath?$AA@			; `string'
PUBLIC	??_C@_0L@EAJLGPDF@DriverPath?$AA@		; `string'
PUBLIC	??_C@_0BA@PFCCEOEE@DefaultDataType?$AA@		; `string'
PUBLIC	??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@	; `string'
PUBLIC	??_C@_05NNNCCOHC@Alias?$AA@			; `string'
PUBLIC	??_C@_0BD@JJNGNMBL@Win32_PortResource?$AA@	; `string'
PUBLIC	??_C@_0BA@KNNOFNF@ConnectorPinout?$AA@		; `string'
PUBLIC	??_C@_0O@CPCPFFAH@ConnectorType?$AA@		; `string'
PUBLIC	??_C@_08BOPEOHEK@PortType?$AA@			; `string'
PUBLIC	??_C@_0BM@JBGCGAG@InternalReferenceDesignator?$AA@ ; `string'
PUBLIC	??_C@_0BM@OAEDMMAI@ExternalReferenceDesignator?$AA@ ; `string'
PUBLIC	??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@	; `string'
PUBLIC	??_C@_05MKJLCFN@Synch?$AA@			; `string'
PUBLIC	??_C@_0L@NEGJIGMA@SampleRate?$AA@		; `string'
PUBLIC	??_C@_0L@KGPBCGJE@Resolution?$AA@		; `string'
PUBLIC	??_C@_0BD@MJAHKLJJ@QuadSpeedThreshold?$AA@	; `string'
PUBLIC	??_C@_0L@KHOEHLLF@InfSection?$AA@		; `string'
PUBLIC	??_C@_0M@LNGELFEC@InfFileName?$AA@		; `string'
PUBLIC	??_C@_0BF@FLDPHBAC@DoubleSpeedThreshold?$AA@	; `string'
PUBLIC	??_C@_0L@DEGCDBKP@Handedness?$AA@		; `string'
PUBLIC	??_C@_0N@OGCCLEJJ@HardwareType?$AA@		; `string'
PUBLIC	??_C@_0BA@PLLFIHNG@DeviceInterface?$AA@		; `string'
PUBLIC	??_C@_0BA@EHILAMBM@NumberOfButtons?$AA@		; `string'
PUBLIC	??_C@_0N@HMDMLBLH@PointingType?$AA@		; `string'
PUBLIC	??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@	; `string'
PUBLIC	??_C@_0L@MCPBCGGP@HardwareID?$AA@		; `string'
PUBLIC	??_C@_0N@EEHHOFBP@CompatibleID?$AA@		; `string'
PUBLIC	??_C@_09GPHNMGJN@ClassGuid?$AA@			; `string'
PUBLIC	??_C@_07LMLHFMEG@Service?$AA@			; `string'
PUBLIC	??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@		; `string'
PUBLIC	??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@	; `string'
PUBLIC	??_C@_07DOAOMMKG@Enabled?$AA@			; `string'
PUBLIC	??_C@_0L@PMICFDLL@DeviceType?$AA@		; `string'
PUBLIC	??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@	; `string'
PUBLIC	??_C@_0BB@MKKJDBAN@SecondaryBusType?$AA@	; `string'
PUBLIC	??_C@_0P@EJGNFGBG@RevisionNumber?$AA@		; `string'
PUBLIC	??_C@_0P@GCEIIPJN@PrimaryBusType?$AA@		; `string'
PUBLIC	??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@	; `string'
PUBLIC	??_C@_08FJIAHGMM@Password?$AA@			; `string'
PUBLIC	??_C@_08EOCJLAAL@IsLocked?$AA@			; `string'
PUBLIC	??_C@_0BF@DODFNOHG@NumberOfFunctionKeys?$AA@	; `string'
PUBLIC	??_C@_06KMHOJANB@Layout?$AA@			; `string'
PUBLIC	??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@		; `string'
PUBLIC	??_C@_06BOOCMPNK@Vector?$AA@			; `string'
PUBLIC	??_C@_0M@NKHMGHID@TriggerType?$AA@		; `string'
PUBLIC	??_C@_0N@NCNNCPPP@TriggerLevel?$AA@		; `string'
PUBLIC	??_C@_09PKFILKGD@Shareable?$AA@			; `string'
PUBLIC	??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@	; `string'
PUBLIC	??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@	; `string'
PUBLIC	??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@	; `string'
PUBLIC	??_C@_0O@PBOKHICP@ActiveCooling?$AA@		; `string'
PUBLIC	??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@		; `string'
PUBLIC	??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@	; `string'
PUBLIC	??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@	; `string'
PUBLIC	??_C@_07JENHGIOM@V86_API?$AA@			; `string'
PUBLIC	??_C@_0BG@LEBBIDOP@TargetOperatingSystem?$AA@	; `string'
PUBLIC	??_C@_0BB@CCKMONLJ@ServiceTableSize?$AA@	; `string'
PUBLIC	??_C@_06CGGMGNDK@PM_API?$AA@			; `string'
PUBLIC	??_C@_0BA@JOJBKDJN@LanguageEdition?$AA@		; `string'
PUBLIC	??_C@_0BG@IOIHNNJK@DeviceDescriptorBlock?$AA@	; `string'
PUBLIC	??_C@_07DFGIDBBA@Control?$AA@			; `string'
PUBLIC	??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@		; `string'
PUBLIC	??_C@_08HKOOHOAE@WordMode?$AA@			; `string'
PUBLIC	??_C@_0M@MOIPDDOB@TypeCTiming?$AA@		; `string'
PUBLIC	??_C@_0P@HFMGHLOP@TransferWidths?$AA@		; `string'
PUBLIC	??_C@_0BA@HBAKOKJE@MaxTransferSize?$AA@		; `string'
PUBLIC	??_C@_0O@BPLPAGKN@ChannelTiming?$AA@		; `string'
PUBLIC	??_C@_08IOOBKHAJ@ByteMode?$AA@			; `string'
PUBLIC	??_C@_09LDKFCLB@BurstMode?$AA@			; `string'
PUBLIC	??_C@_0M@HJPEAMBM@AddressSize?$AA@		; `string'
PUBLIC	??_C@_0L@PGAIMACF@DMAChannel?$AA@		; `string'
PUBLIC	??_C@_04HOKNCALA@Port?$AA@			; `string'
PUBLIC	??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@	; `string'
PUBLIC	??_C@_0N@GFEIEMMN@TransferRate?$AA@		; `string'
PUBLIC	??_C@_04EBKMHHBE@Size?$AA@			; `string'
PUBLIC	??_C@_0N@BGGJIJCI@SCSITargetId?$AA@		; `string'
PUBLIC	??_C@_08IICBNDDA@SCSIPort?$AA@			; `string'
PUBLIC	??_C@_0BA@FGFDLPLK@SCSILogicalUnit?$AA@		; `string'
PUBLIC	??_C@_07IMFLOLAO@SCSIBus?$AA@			; `string'
PUBLIC	??_C@_0O@MEKHAACN@RevisionLevel?$AA@		; `string'
PUBLIC	??_C@_0BH@COPKOGMD@NumberOfMediaSupported?$AA@	; `string'
PUBLIC	??_C@_0O@IIJMNCFJ@NeedsCleaning?$AA@		; `string'
PUBLIC	??_C@_0N@DELMGCCC@MinBlockSize?$AA@		; `string'
PUBLIC	??_C@_0BJ@FCFAAAMD@MfrAssignedRevisionLevel?$AA@ ; `string'
PUBLIC	??_C@_09HPDNNFFF@MediaType?$AA@			; `string'
PUBLIC	??_C@_0M@BKHKLNGH@MediaLoaded?$AA@		; `string'
PUBLIC	??_C@_0N@HBNKJHPM@MaxMediaSize?$AA@		; `string'
PUBLIC	??_C@_0BH@GKGMNPDK@MaximumComponentLength?$AA@	; `string'
PUBLIC	??_C@_0N@HEPDBKFE@MaxBlockSize?$AA@		; `string'
PUBLIC	??_C@_0BC@JDDJOAMF@FileSystemFlagsEx?$AA@	; `string'
PUBLIC	??_C@_0BA@KMBBNBII@FileSystemFlags?$AA@		; `string'
PUBLIC	??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@	; `string'
PUBLIC	??_C@_0P@HKGKOHLF@DriveIntegrity?$AA@		; `string'
PUBLIC	??_C@_0BB@GHOHONOE@DefaultBlockSize?$AA@	; `string'
PUBLIC	??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@	; `string'
PUBLIC	??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@	; `string'
PUBLIC	??_C@_0N@FNJCOOAL@Capabilities?$AA@		; `string'
PUBLIC	??_C@_0BD@KNELKJMD@VolumeSerialNumber?$AA@	; `string'
PUBLIC	??_C@_0L@PEPMOJNO@VolumeName?$AA@		; `string'
PUBLIC	??_C@_05FHDOJGAA@Drive?$AA@			; `string'
PUBLIC	??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@	; `string'
PUBLIC	??_C@_07FFFMBEEK@BusType?$AA@			; `string'
PUBLIC	??_C@_06KNDINCOD@BusNum?$AA@			; `string'
PUBLIC	??_C@_09HPFDNOIF@Win32_Bus?$AA@			; `string'
PUBLIC	??_C@_0BF@GFDCFGAP@SoftwareElementState?$AA@	; `string'
PUBLIC	??_C@_0BC@MBHIKAHO@SoftwareElementID?$AA@	; `string'
PUBLIC	??_C@_0O@BHMENNOL@SMBIOSPresent?$AA@		; `string'
PUBLIC	??_C@_0BD@NBGOPAJG@SMBIOSMinorVersion?$AA@	; `string'
PUBLIC	??_C@_0BD@GHLLPFOK@SMBIOSMajorVersion?$AA@	; `string'
PUBLIC	??_C@_0BC@GDJFCIN@SMBIOSBIOSVersion?$AA@	; `string'
PUBLIC	??_C@_0M@FEKFCCJH@ReleaseDate?$AA@		; `string'
PUBLIC	??_C@_0M@PLCFCEDN@PrimaryBIOS?$AA@		; `string'
PUBLIC	??_C@_0O@LMGDODCH@OtherTargetOS?$AA@		; `string'
PUBLIC	??_C@_0BA@OPCNKLIC@ListOfLanguages?$AA@		; `string'
PUBLIC	??_C@_0BF@JGHHIKJK@InstallableLanguages?$AA@	; `string'
PUBLIC	??_C@_0BD@IAKLNJOL@IdentificationCode?$AA@	; `string'
PUBLIC	??_C@_0BA@LAFEEKJE@CurrentLanguage?$AA@		; `string'
PUBLIC	??_C@_07FOHBHJJA@CodeSet?$AA@			; `string'
PUBLIC	??_C@_0M@PIEABBJI@BuildNumber?$AA@		; `string'
PUBLIC	??_C@_0M@JNJNMLGA@BIOSVersion?$AA@		; `string'
PUBLIC	??_C@_0BE@DHLHFABD@BiosCharacteristics?$AA@	; `string'
PUBLIC	??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@		; `string'
PUBLIC	??_C@_0BE@IIEJDIAD@SmartBatteryVersion?$AA@	; `string'
PUBLIC	??_C@_0BA@KENPOHHF@MaxRechargeTime?$AA@		; `string'
PUBLIC	??_C@_0BD@HADPLBCE@FullChargeCapacity?$AA@	; `string'
PUBLIC	??_C@_0N@DDGBNILM@ExpectedLife?$AA@		; `string'
PUBLIC	??_C@_0BE@NEEKJBPN@ExpectedBatteryLife?$AA@	; `string'
PUBLIC	??_C@_0BB@NPKJIND@EstimatedRunTime?$AA@		; `string'
PUBLIC	??_C@_0BJ@CDCEHMEP@EstimatedChargeRemaining?$AA@ ; `string'
PUBLIC	??_C@_0O@PBABLEFL@DesignVoltage?$AA@		; `string'
PUBLIC	??_C@_0P@IFPGNGPN@DesignCapacity?$AA@		; `string'
PUBLIC	??_C@_09CAHFAGKL@Chemistry?$AA@			; `string'
PUBLIC	??_C@_0BE@HNKJKBND@BatteryRechargeTime?$AA@	; `string'
PUBLIC	??_C@_0BB@HMDCOCCC@TimeToFullCharge?$AA@	; `string'
PUBLIC	??_C@_0O@IKADLBCG@TimeOnBattery?$AA@		; `string'
PUBLIC	??_C@_0O@PKGMNGNM@BatteryStatus?$AA@		; `string'
PUBLIC	??_C@_0O@CLAKILND@Win32_Battery?$AA@		; `string'
PUBLIC	??_C@_0BE@DAJBDDHL@SpecialRequirements?$AA@	; `string'
PUBLIC	??_C@_0L@NLNCHAIH@SlotLayout?$AA@		; `string'
PUBLIC	??_C@_03LMAAELJP@SKU?$AA@			; `string'
PUBLIC	??_C@_0N@FPJJBBNM@SerialNumber?$AA@		; `string'
PUBLIC	??_C@_0BG@KNNEFNEE@RequiresDaughterBoard?$AA@	; `string'
PUBLIC	??_C@_0BI@NLNEBFOD@RequirementsDescription?$AA@	; `string'
PUBLIC	??_C@_0M@KLOLJEDG@Replaceable?$AA@		; `string'
PUBLIC	??_C@_09DADBKOHO@Removable?$AA@			; `string'
PUBLIC	??_C@_09HKGEBMAI@PoweredOn?$AA@			; `string'
PUBLIC	??_C@_0L@MIOPIENN@PartNumber?$AA@		; `string'
PUBLIC	??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@	; `string'
PUBLIC	??_C@_0N@FCOIALPI@HotSwappable?$AA@		; `string'
PUBLIC	??_C@_0N@CCJNCHMP@HostingBoard?$AA@		; `string'
PUBLIC	??_C@_05IBAMDCFI@Width?$AA@			; `string'
PUBLIC	??_C@_06ODJMJFLN@Weight?$AA@			; `string'
PUBLIC	??_C@_06HCAKHJJK@Height?$AA@			; `string'
PUBLIC	??_C@_05BOMFGPKE@Depth?$AA@			; `string'
PUBLIC	??_C@_0O@GLLHAKAI@ConfigOptions?$AA@		; `string'
PUBLIC	??_C@_07NGFJPNPN@Version?$AA@			; `string'
PUBLIC	??_C@_05NFIJOKEG@Model?$AA@			; `string'
PUBLIC	??_C@_07HMDPOHHF@Product?$AA@			; `string'
PUBLIC	??_C@_03PJHNOEGB@Tag?$AA@			; `string'
PUBLIC	??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@		; `string'
PUBLIC	??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@		; `string'
PUBLIC	??_C@_0L@PKEHCAEI@StatusInfo?$AA@		; `string'
PUBLIC	??_C@_06PGDKHFME@Status?$AA@			; `string'
PUBLIC	??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@	; `string'
PUBLIC	??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@ ; `string'
PUBLIC	??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@ ; `string'
PUBLIC	??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@	; `string'
PUBLIC	??_C@_0O@NDKHIJAE@LastErrorCode?$AA@		; `string'
PUBLIC	??_C@_0M@NBIJNNJJ@InstallDate?$AA@		; `string'
PUBLIC	??_C@_0BB@KIDBLMK@ErrorDescription?$AA@		; `string'
PUBLIC	??_C@_0N@FJHLDHMG@ErrorCleared?$AA@		; `string'
PUBLIC	??_C@_0M@OHKMKKDH@Description?$AA@		; `string'
PUBLIC	??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@	; `string'
PUBLIC	??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@	; `string'
PUBLIC	??_C@_07OJKFJLLK@Caption?$AA@			; `string'
PUBLIC	??_C@_0N@MFGCECDI@Availability?$AA@		; `string'
PUBLIC	??_C@_0N@BBNLMPJO@Manufacturer?$AA@		; `string'
PUBLIC	??_C@_08JLPEJKOE@DeviceID?$AA@			; `string'
PUBLIC	??_C@_0M@HHJKGII@PNPDeviceID?$AA@		; `string'
PUBLIC	??_C@_04FABLJDN@Name?$AA@			; `string'
PUBLIC	??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@	; `string'
PUBLIC	??_C@_07NFANNNEC@UNKNOWN?$AA@			; `string'
PUBLIC	??_C@_08HHHILLLH@VIVOtech?$AA@			; `string'
PUBLIC	??_C@_0N@CCDIFCFP@Vendor?5x1427?$AA@		; `string'
PUBLIC	??_C@_0BC@GAEDCENO@Star?5Microsystems?$AA@	; `string'
PUBLIC	??_C@_0BC@GGOFANFE@SAGEM?5Denmark?5A?1S?$AA@	; `string'
PUBLIC	??_C@_0N@EKANAEP@Vendor?5x0BED?$AA@		; `string'
PUBLIC	??_C@_0N@OEOECLEK@TMD?5Security?$AA@		; `string'
PUBLIC	??_C@_0M@LKDAPJIF@Toshiba?5TEC?$AA@		; `string'
PUBLIC	??_C@_0N@LMLGHGF@Vendor?5x07D1?$AA@		; `string'
PUBLIC	??_C@_0N@BHJPEAKB@Vendor?5x07C0?$AA@		; `string'
PUBLIC	??_C@_06NMEADBLN@Sankio?$AA@			; `string'
PUBLIC	??_C@_0N@OGJAAGP@Vendor?5x0707?$AA@		; `string'
PUBLIC	??_C@_0CO@FNFDMCAN@JXT?5Precision?5Electronics?5Techni@ ; `string'
PUBLIC	??_C@_0O@KCHFFECA@EISST?5Limited?$AA@		; `string'
PUBLIC	??_C@_0BJ@FPNGMFON@INTELLIGENT?5ENERGY?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0DD@JFHBCIAC@Shandong?5Synthesis?5Electronic?5Te@ ; `string'
PUBLIC	??_C@_0BL@MKIOGMIA@VMC?5Consulting?5Corporation?$AA@ ; `string'
PUBLIC	??_C@_0CC@GLDMKJH@DongGuan?5HYX?5Industrial?5Co?4?0?5Ltd@ ; `string'
PUBLIC	??_C@_0BI@NCIPEGB@RWA?5?$CIHong?5Kong?$CJ?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0CD@JGKEGNMJ@PENTAX?5RICOH?5IMAGING?5COMPANY?0?5LT@ ; `string'
PUBLIC	??_C@_0CG@OAMKINAC@Dongguan?5Jinyue?5Electronics?5Co?4?0@ ; `string'
PUBLIC	??_C@_0L@IOINFDHJ@Daimler?5AG?$AA@		; `string'
PUBLIC	??_C@_0CI@EJBKCNKI@Zhe?5Jiang?5Huasheng?5Technology?5Co@ ; `string'
PUBLIC	??_C@_0BN@PKAIGMCM@MEGATRON?5Elektronik?5AG?5?$CG?5Co?4?$AA@ ; `string'
PUBLIC	??_C@_06CJJNEMAE@Phorus?$AA@			; `string'
PUBLIC	??_C@_0CF@LHOCOHOF@DongGuan?5Elinke?5Industrial?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_0P@OEFFHHLL@DRS?9RSTA?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0P@KJGACBOE@Carmanah?5Signs?$AA@		; `string'
PUBLIC	??_C@_0P@GGHEMJJH@ALGOLTEK?0?5INC?4?$AA@	; `string'
PUBLIC	??_C@_0BF@GEOEIPEL@RCA?5DA?5AMAZONIA?5LTDA?$AA@	; `string'
PUBLIC	??_C@_0BL@PDKHOHKG@Immedia?5Semiconductor?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_06JAGNIOHH@INUVIO?$AA@			; `string'
PUBLIC	??_C@_0BL@GPGPDPPI@Optimus?5Semiconductor?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@EPMKAPFK@Infinitegra?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0CE@MEBHAOHC@Ningbo?5Jiatang?5Electronic?5Co?4?0?5L@ ; `string'
PUBLIC	??_C@_0CF@JLNODIAF@Dongguan?5Kowell?5Electronic?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_0BI@MHBLLANG@Weida?5Hi?9Tech?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BG@OBILOFPF@AVer?5Information?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CL@DMEHNIKM@DongGuan?5City?5MingJi?5Electronics@ ; `string'
PUBLIC	??_C@_0CA@CFAALAJE@ALL?5LINK?5CONN?4?5TECHNOLOGY?5CORP?4?$AA@ ; `string'
PUBLIC	??_C@_0CG@NMMKCBIB@DongGuan?5LongTao?5Electronic?5Co?4?0@ ; `string'
PUBLIC	??_C@_0BJ@KIEOKLMB@INTECH?5ELECTRONICS?5CORP?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@PLHJJNHE@Norel?5Systems?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BM@PDILJJBJ@Ubisys?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0DD@CFLDKGBD@Shenzhen?5Hong?5Junde?5Precision?5Te@ ; `string'
PUBLIC	??_C@_0CN@BNJPCKEF@TOP?5Exactitude?5Industry?5?$CIShenZhe@ ; `string'
PUBLIC	??_C@_0CO@JCAFCPHA@SUZHOU?5XINYA?5ELECTRIC?5COMMUNICAT@ ; `string'
PUBLIC	??_C@_0BO@KGBBCJH@Chain?9In?5Electronic?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@HBLEADPM@GTECH?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0M@GHCMHPKC@Seneye?5Ltd?4?$AA@		; `string'
PUBLIC	??_C@_0BO@ONHDIMLP@ZEN?5FACTORY?5GROUP?5?$CIASIA?$CJ?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@PGAFDCCK@DDUSB?5Technology?$AA@	; `string'
PUBLIC	??_C@_0BN@HAAHPMIC@KYOCERA?5ELCO?5Korea?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@DEJKGIMK@Smith?5Micro?5Software?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0M@NMCNEDLC@Lytro?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0CE@JOMBCIJH@Shenzhen?5Deren?5Electronic?5Co?4?0?5L@ ; `string'
PUBLIC	??_C@_0CK@CLEDKDEL@Shenzhen?5New?9Conn?5International?5@ ; `string'
PUBLIC	??_C@_0N@EBDJACPJ@3C?5TEK?5CORP?4?$AA@		; `string'
PUBLIC	??_C@_0CE@EAHJMINJ@Shenzhen?5Rapoo?5Technology?5Co?4?0?5L@ ; `string'
PUBLIC	??_C@_0CH@IDDOGDKP@Shenzhen?5Pangngai?5Industrial?5Co?4@ ; `string'
PUBLIC	??_C@_0BO@GKPDCPNP@HyunWoo?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0DA@CGBDOBCP@Dongguan?5DaTang?5Industrial?5Inves@ ; `string'
PUBLIC	??_C@_0BJ@MAPFGIK@Summit?5Semiconductor?5LLC?$AA@ ; `string'
PUBLIC	??_C@_0BK@CFHJHDDG@SYNCONN?5INTERCONNECT?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0CK@KHHEAIMH@TeLink?5Semiconductor?5?$CIShanghai?$CJ?5@ ; `string'
PUBLIC	??_C@_0BL@MHJFMACI@Irvine?5Sensors?5Corporation?$AA@ ; `string'
PUBLIC	??_C@_0BB@MDEMAKAA@SuperD?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0P@BCJJHJDJ@JARGY?5CO?4?5LTD?4?$AA@	; `string'
PUBLIC	??_C@_0BH@EHAGJFEE@Fullconn?5Industry?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CB@POEOBKIH@Digibras?5Industria?5do?5Brasil?5S?4A@ ; `string'
PUBLIC	??_C@_08PDELGFBH@UbiVelox?$AA@			; `string'
PUBLIC	??_C@_0DI@DKAFDFAC@Perfect?5Fortune?5Electric?5Wire?5?$CG?5@ ; `string'
PUBLIC	??_C@_0CA@OBJDCDKL@UNH?5Interoperability?5Laboratory?$AA@ ; `string'
PUBLIC	??_C@_0BC@FEINIIOM@Anton?1Bauer?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BL@LPJGBHEM@Velosti?5Technology?5Limited?$AA@ ; `string'
PUBLIC	??_C@_06HHAPBGEJ@BAANTO?$AA@			; `string'
PUBLIC	??_C@_0BO@OPKCBFPL@Speeder?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@MIHCGNOI@Minebea?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0CB@GILKPBEO@Innopower?5Technology?5Corporation@ ; `string'
PUBLIC	??_C@_0CK@PEDMBLOK@Dongguan?5City?5Qirui?5Electronics?5@ ; `string'
PUBLIC	??_C@_0BM@GMFHMCEF@The?5Silanna?5Group?5Pty?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@GNFPHMGK@Trantek?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@KJMMFBKI@Incasolution?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0O@BNIKCMOM@INSIDE?5Secure?$AA@		; `string'
PUBLIC	??_C@_0CN@EJBOGONI@ChuangYi?5Hardware?5Precision?5Moul@ ; `string'
PUBLIC	??_C@_0BE@CNAOMOBO@Express?5Way?5Limited?$AA@	; `string'
PUBLIC	??_C@_0M@MGCPLAOJ@AWare?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BE@BMBKAED@SpeedConn?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_07CEDODHPO@NXT?5Plc?$AA@			; `string'
PUBLIC	??_C@_0CF@CFJNEAJP@BitifEye?5Digital?5Test?5Solutions?5@ ; `string'
PUBLIC	??_C@_0CD@NDCLAIIH@Phonic?5Ear?0?5Inc?4?5Frontrow?5Divisi@ ; `string'
PUBLIC	??_C@_0BJ@OHNJGPJN@Marunix?5Electron?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0BP@GJOKBILK@KangXiang?5Electronic?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CM@MLMJGOMM@Shenzhen?5Autone?9Tronic?5Technolog@ ; `string'
PUBLIC	??_C@_0BG@JCFEOFFG@Greenconn?5Corporation?$AA@	; `string'
PUBLIC	??_C@_09GCGEMCFF@Tensorcom?$AA@			; `string'
PUBLIC	??_C@_0BK@MFDKEFFA@CKM?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@LPLOPAA@Huawei?5Device?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@CONNOJEO@Avery?5Design?5Systems?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@DNEMFNPO@Kunshan?5Jiahua?5Electronics?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_05CCBNKHPD@Avnet?$AA@			; `string'
PUBLIC	??_C@_0O@LJFFELIC@Miltope?5Corp?4?$AA@		; `string'
PUBLIC	??_C@_0O@PFEHLJC@Phase?5One?5A?1S?$AA@		; `string'
PUBLIC	??_C@_0BH@JCNJIDNH@Motorola?5Mobility?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@LAOLKJDB@Trigence?5Semiconductor?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BK@OFJMDPCF@Valor?5Communication?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CD@FPBFIKDM@Grain?5Media?5Technology?5Corporati@ ; `string'
PUBLIC	??_C@_0CO@EAFKPNFN@Shenzhen?5DLK?5Electronics?5Technol@ ; `string'
PUBLIC	??_C@_0CH@JIBHMNOD@Hotron?5Precision?5Electronic?5Ind?4@ ; `string'
PUBLIC	??_C@_0CO@GPGEJOEG@Sun?5Fair?5Electric?5Wire?5?$CG?5Cable?5?$CI@ ; `string'
PUBLIC	??_C@_0BD@PEIOBOIA@Granite?5River?5Labs?$AA@	; `string'
PUBLIC	??_C@_0CH@BNMEADNA@XiaMen?5GaoLuChang?5Electronics?5Co@ ; `string'
PUBLIC	??_C@_0BP@OIDAFMJB@Evernew?5Wire?5?$CG?5Cable?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CG@NEPAELKJ@Wiretek?5International?5Investment@ ; `string'
PUBLIC	??_C@_0CB@CHMCCAAM@3eYamaichi?5Electronics?5Co?4?0?5Ltd?4@ ; `string'
PUBLIC	??_C@_0CG@OHNMOHEM@Wuerth?9Elektronik?5eiSos?5GmbH?5?$CG?5C@ ; `string'
PUBLIC	??_C@_0CM@MMCEPGGG@Jiafuh?5Metal?5?$CG?5Plastic?5?$CIShenZhen@ ; `string'
PUBLIC	??_C@_0BP@FAJGPKNC@Compupack?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@PBMDMJMJ@Netcom?5Technology?5?$CIHK?$CJ?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0CF@DANJAKAE@SHENZHEN?5JASON?5ELECTRONICS?5CO?4?0?5@ ; `string'
PUBLIC	??_C@_08EPBIMIG@CalDigit?$AA@			; `string'
PUBLIC	??_C@_0BF@BAPBHHHN@TMC?1Allion?5Test?5Labs?$AA@	; `string'
PUBLIC	??_C@_0BM@BKHGEKPK@Transcend?5Information?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0DH@EJJEPBOI@HUIZHOU?5HUANGJI?5PRECISIONS?5FLEX?5@ ; `string'
PUBLIC	??_C@_0BI@FBCKNBLM@JVC?5KENWOOD?5Corporation?$AA@ ; `string'
PUBLIC	??_C@_0BD@LDDEGFID@Y?5Soft?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0CD@KDAPKLEA@Visteon?5Sistemas?5Automotives?5Ltd@ ; `string'
PUBLIC	??_C@_0CF@JOALJALB@Chin?9Ban?5Electronics?5?$CIHong?5Kong?$CJ@ ; `string'
PUBLIC	??_C@_0CJ@CNOJBLBI@Amphenol?5AssembleTech?5?$CIXiamen?$CJ?5C@ ; `string'
PUBLIC	??_C@_0CF@GAGJPPB@Shenzhen?5Linoya?5Electronic?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_0N@JLDIPNLJ@KT?5Tech?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0P@GBIKBMAL@VIA?5Labs?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BJ@PMOEHKIK@SOFTHARD?5Technology?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0DE@EMOPPBDG@Sumitomo?5Electric?5Ind?4?0?5Ltd?4?0?5Op@ ; `string'
PUBLIC	??_C@_0BK@EIBNNPGD@FENGHUA?5KINGSUN?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@MCDKIGNK@Shenzhen?5CARVE?5Electronics?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_0BP@FNHFFJPK@Microconn?5Electronic?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@CFCNDLPN@CE?5LINK?5LIMITED?$AA@	; `string'
PUBLIC	??_C@_0N@JJLIGBFN@Luxshare?9ICT?$AA@		; `string'
PUBLIC	??_C@_0BK@DJALMDKA@CESI?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CJ@OEPJLPBL@Unicorn?5Electronics?5Components?5C@ ; `string'
PUBLIC	??_C@_0CI@FBHBCILE@Shenzhen?5Tronixin?5Electronics?5Co@ ; `string'
PUBLIC	??_C@_0BG@PIIFGLBL@DETAS?5TECHNOLOGY?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@DHGBCKNB@Freeport?5Resources?5Enterprises?5C@ ; `string'
PUBLIC	??_C@_0BN@KHNMKBEO@DAIICHI?5PARTS?5?$CIHK?$CJ?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0CI@GOBPPKNF@Belkin?5Electronic?5?$CIChangzhou?$CJ?5Co@ ; `string'
PUBLIC	??_C@_0BD@BJBLIGAM@D?9Link?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0DB@KONADFN@Changzhou?5Wujin?5BEST?5Electronic?5@ ; `string'
PUBLIC	??_C@_0CA@CAPPIABK@NIAN?5YEONG?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@GMPBKEIC@NXP?5Semiconductors?$AA@	; `string'
PUBLIC	??_C@_0DA@LDONKOKE@Siemens?5Enterprise?5Communication@ ; `string'
PUBLIC	??_C@_0CB@EHEKJNGP@Owl?5Computing?5Technologies?0?5Inc?4@ ; `string'
PUBLIC	??_C@_0BH@OKNGIEAK@Cresta?5Technology?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@OBPDBGLK@Franklin?5Technology?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CC@LPIGCLDE@Morning?5Star?5Industrial?5Co?4?0?5Ltd@ ; `string'
PUBLIC	??_C@_0CI@NHHBKKBH@Dongguan?5Goldconn?5Electronics?5Co@ ; `string'
PUBLIC	??_C@_0BD@GGCBPHPK@Innostor?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0CE@MEDMJIF@Chang?5Yang?5Electronics?5Company?5L@ ; `string'
PUBLIC	??_C@_0BP@DOFDLEGP@SASKEN?5COMMUNICATION?5TECH?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@COMGKDHO@Analogix?5Semiconductor?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CG@LKIHKKAD@Cal?9Comp?5Electronics?5?$CG?5Communica@ ; `string'
PUBLIC	??_C@_0CG@BIKNKPGD@Shenzhen?5Tenwei?5Electronics?5Co?4?0@ ; `string'
PUBLIC	??_C@_0DC@MLCJGJKA@How?5Weih?5Precision?5Technology?5?$CIS@ ; `string'
PUBLIC	??_C@_0BJ@HDEECJAH@Transwitch?5?$CIIsrael?$CJ?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@IADLJBAM@MOSER?5BAER?5INDIA?5LIMITED?$AA@ ; `string'
PUBLIC	??_C@_0CH@IFPLLPOK@WIN?5WIN?5PRECISION?5INDUSTRIAL?5CO?4@ ; `string'
PUBLIC	??_C@_0BL@BINCEHIC@Concraft?5Holding?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0DA@GFKEDMJF@Vtion?5Information?5Technology?5?$CIFu@ ; `string'
PUBLIC	??_C@_0BO@OPAJPFGF@COMLINK?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@GIBECCII@WAN?5SHIH?5ELECTRONIC?5?$CIH?4K?4?$CJ?5CO?4?0?5@ ; `string'
PUBLIC	??_C@_0BH@JAAJJDAF@Etron?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CB@BKOLJNN@HUNG?5TA?5H?4T?4ENTERPRISE?5CO?4?0?5LTD?4@ ; `string'
PUBLIC	??_C@_0CE@BIOHJJL@Continental?5Automotive?5Systems?5I@ ; `string'
PUBLIC	??_C@_0BD@LIIMMKIN@KOBIAN?5CANADA?5INC?4?$AA@	; `string'
PUBLIC	??_C@_0BJ@FEMBFAJG@Point?5Grey?5Research?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@FHOGIFBC@Inventure?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0CK@INFLCDIC@Telecommunication?5Metrology?5Cent@ ; `string'
PUBLIC	??_C@_0BH@NMLKIBDM@GDA?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@NACGMHGM@BUFFALO?5KOKUYO?5SUPPLY?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0CE@EGHGGAJG@Document?5Capture?5Technologies?0?5I@ ; `string'
PUBLIC	??_C@_0BD@GCMMCDEJ@S?4R?4N?4?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BK@FNCNBIIF@Parade?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_04EOPNHLPE@PLDA?$AA@			; `string'
PUBLIC	??_C@_0CH@EKHHMHEC@Shenzhen?5My?9Power?5Technology?5Co?4@ ; `string'
PUBLIC	??_C@_0DE@IMGLKMI@Yueqing?5Changling?5Electronic?5Ins@ ; `string'
PUBLIC	??_C@_0BF@JDCHKKGB@The?5Linux?5Foundation?$AA@	; `string'
PUBLIC	??_C@_0BL@NKBOOFNF@Walta?5Electronic?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@EBGBPGPI@ASAP?5International?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@MMCBELAO@QIXING?5INDUSTRIAL?5?$CIHK?$CJ?5CO?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@HAMMCKPN@Fresco?5Logic?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BF@EEHMEIJP@Pegatron?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0CI@PCPBKJFB@SHENZHEN?5LINKCONN?5ELECTRONICS?5CO@ ; `string'
PUBLIC	??_C@_0BC@KIFIHBOP@Qisda?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BJ@IKAGMPGB@Montage?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@JJOGFDJ@DRAGON?5JOY?5LIMITED?$AA@	; `string'
PUBLIC	??_C@_0CA@GDMPIAIK@Horng?5Tong?5Enterprise?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@GIIFDIFG@Johnson?5Controls?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CL@OJLMBANN@NINGBO?5HENTEK?5DRAGON?5ELECTRONICS@ ; `string'
PUBLIC	??_C@_0N@LKKAKDAC@Amphenol?5KAE?$AA@		; `string'
PUBLIC	??_C@_0DA@BKKOBFJG@Telecommunications?5Technology?5As@ ; `string'
PUBLIC	??_C@_0BO@JLIFAMG@Texas?5Instruments?5?9?5Stellaris?$AA@ ; `string'
PUBLIC	??_C@_0BB@EIGDHDFJ@OPEX?5CORPORATION?$AA@	; `string'
PUBLIC	??_C@_0BL@CHCFPHFA@Aces?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@GEGPHPDK@ALPINE?5ELECTRONICS?0?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@NCJEDCIM@ASTRON?5INTERNATIONAL?5CORP?4?$AA@ ; `string'
PUBLIC	??_C@_0CP@DAEKMFBI@Shenzhen?5Luxshare?5Precision?5Indu@ ; `string'
PUBLIC	??_C@_0BG@IEKIELLN@Egis?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BF@DNKPBOCD@Mindray?5DS?5USA?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BM@KDIOKGMF@Kaetat?5Industrial?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0DA@PPLCBMMB@Philips?5?$CG?5Lite?9ON?5Digital?5Soluti@ ; `string'
PUBLIC	??_C@_08PDBDCLGF@LS?5Mtron?$AA@			; `string'
PUBLIC	??_C@_0CA@MAOFGAIM@SHENZHEN?5D?$CGS?5INDUSTRIES?5LIMITED?$AA@ ; `string'
PUBLIC	??_C@_0BO@IHAPHGGJ@Lanterra?5Industrial?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CH@KIMIGBPK@Orient?5Semiconductor?5Electronics@ ; `string'
PUBLIC	??_C@_0CD@HFOIMFJ@Sunplus?5Innovation?5Technology?5In@ ; `string'
PUBLIC	??_C@_0CA@FCJOHAEE@Contac?5Cable?5Industrial?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0P@JGHIOJAI@Ford?5Motor?5Co?4?$AA@	; `string'
PUBLIC	??_C@_0BO@IHCMPCEB@Shenzhen?5Yuanchuan?5Electronic?$AA@ ; `string'
PUBLIC	??_C@_0BO@MCHPBGAI@Super?5Talent?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0O@IPLHGMF@Amlogic?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0CI@GNFBMNPP@ShenMing?5Electron?5?$CIDong?5Guan?$CJ?5Co@ ; `string'
PUBLIC	??_C@_0DA@EOOOBNLE@The?5Hong?5Kong?5Standards?5and?5Test@ ; `string'
PUBLIC	??_C@_0BN@ODKKJGBD@Plastron?5Precision?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@DPNOIOGL@ViXS?5Systems?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BK@FLEFAHEK@MStar?5Semiconductor?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@BAHHJBOM@Octekconn?5Incorporation?$AA@ ; `string'
PUBLIC	??_C@_0CD@KCEJLGKF@SHEN?5ZHEN?5REX?5TECHNOLOGY?5CO?4?0?5LT@ ; `string'
PUBLIC	??_C@_0CI@ENEIOO@High?5Top?5Precision?5Electronic?5Co@ ; `string'
PUBLIC	??_C@_0BF@FJNJCEIJ@Desan?5Wire?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0M@BNPJBJHO@Salcomp?5Plc?$AA@		; `string'
PUBLIC	??_C@_0CJ@EENODCNA@Johnson?5Component?5?$CG?5Equipments?5C@ ; `string'
PUBLIC	??_C@_0BA@KBMPMKDN@SGS?5Taiwan?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BH@HJFKHBGL@Simula?5Technology?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@GMHKDAOP@Proconn?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BF@HMENCDPO@Lumberg?5Connect?5GmbH?$AA@	; `string'
PUBLIC	??_C@_0BG@IOFCBCHK@Bayer?5Health?5Care?5LLC?$AA@ ; `string'
PUBLIC	??_C@_0BF@IBCFPAGK@Global?5Unichip?5Corp?4?$AA@	; `string'
PUBLIC	??_C@_0O@IHDBJOFK@Tandberg?5Data?$AA@		; `string'
PUBLIC	??_C@_0O@NGCCHBJG@Silicon?5Image?$AA@		; `string'
PUBLIC	??_C@_0BJ@KAKHDDLA@TERMINUS?5TECHNOLOGY?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0BG@DLODCOOG@Biwin?5Technology?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0DB@NGACLDBO@Astec?5Power?0?5a?5division?5of?5Emers@ ; `string'
PUBLIC	??_C@_0BI@PPNCKFLJ@Amphenol?5East?5Asia?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@BIONMJOM@USB?9IF?5non?9workshop?$AA@	; `string'
PUBLIC	??_C@_08GALBDMNI@Best?5Buy?$AA@			; `string'
PUBLIC	??_C@_0CJ@HAKCLNCA@Industrial?5Technology?5Research?5I@ ; `string'
PUBLIC	??_C@_0BA@JIPMJPAM@ZTE?5Corporation?$AA@	; `string'
PUBLIC	??_C@_06FFDCAGEL@Dexxon?$AA@			; `string'
PUBLIC	??_C@_0CF@CFPPMAFK@Richnex?5Microelectronics?5Corpora@ ; `string'
PUBLIC	??_C@_0BC@JJOAHPPC@Fairchild?5Imaging?$AA@	; `string'
PUBLIC	??_C@_0BI@EPIBIIDM@Nuconn?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@JFCNKMCG@Office?5Depot?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BB@PPNLBENA@BIOS?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0N@PJANIMFN@Ironkey?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_06CHAGPIBB@Lab126?$AA@			; `string'
PUBLIC	??_C@_0BB@PCAKKDFD@Irisguard?5UK?5Ltd?$AA@	; `string'
PUBLIC	??_C@_0CJ@FJMLIAEB@Ningbo?5Broad?5Telecommunication?5C@ ; `string'
PUBLIC	??_C@_0CF@NLNPHLHC@Shenzhen?5Xianhe?5Technology?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_0BJ@CDJNPBB@Avago?5Technologies?0?5Pte?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@FNMFPLIK@Nordic?5Semiconductor?5ASA?$AA@ ; `string'
PUBLIC	??_C@_0BN@LFCPLAAL@Alco?5Digital?5Devices?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0O@HPIJIONJ@FineArch?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0CI@NCCLCDI@Kuang?5Ying?5Computer?5Equipment?5Co@ ; `string'
PUBLIC	??_C@_0CF@DABKNPLD@Fitilink?5Integrated?5Technology?0?5@ ; `string'
PUBLIC	??_C@_0M@INPJKDFM@Google?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BN@LHNKNBIM@Trimax?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@HBKKPCPF@Linkiss?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BI@EGKCPMHF@Summit?5Microelectronics?$AA@ ; `string'
PUBLIC	??_C@_0BO@DPMJHMBK@Gwo?5Jinn?5Industries?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@KAKIFJIN@Dongguan?5YuQiu?5Electronics?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_0L@IGMLMAAK@K?4K?4?5Rocky?$AA@		; `string'
PUBLIC	??_C@_06EOFPOMJG@Lenovo?$AA@			; `string'
PUBLIC	??_C@_0BG@PLILAAEO@DisplayLink?5?$CIUK?$CJ?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_08FCLKDPPD@ORTHOFIX?$AA@			; `string'
PUBLIC	??_C@_0CA@FKGCAAGK@Hip?5Hing?5Cable?5?$CG?5Plug?5Mfy?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0DI@IPLEGMCC@Dongguan?5Yangming?5Precision?5of?5P@ ; `string'
PUBLIC	??_C@_0CE@FMNDGFCO@Advanced?5Connection?5Technology?5I@ ; `string'
PUBLIC	??_C@_0P@PAIKKKPL@Printrex?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0CH@GLPFKNO@ShenZhen?5Litkconn?5Technology?5Co?4@ ; `string'
PUBLIC	??_C@_0BP@PDCKJENN@Spreadtrum?5Communications?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@MGLGHCII@System?5Level?5Solutions?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CC@KBPLCNPO@Shenzhen?5Alex?5Connector?5Co?4?0?5Ltd@ ; `string'
PUBLIC	??_C@_0BE@LLHADAIP@UD?5electronic?5corp?4?$AA@	; `string'
PUBLIC	??_C@_0BL@PGPGIHGN@LucidPort?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@EFCFBFPB@ASMedia?5Technology?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BF@BACBMICM@MQP?5Electronics?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BC@LFEKPOAD@Roche?5Diagnostics?$AA@	; `string'
PUBLIC	??_C@_0BL@MBCLBNK@CANON?5IMAGING?5SYSTEMS?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@EKGKEMKL@silex?5technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CK@GHEMOGNO@Dongguan?5ChingLung?5Wire?5?$CG?5Cable?5@ ; `string'
PUBLIC	??_C@_0CI@LPNLCPKP@Shenzhen?5Zhengerya?5Technology?5Co@ ; `string'
PUBLIC	??_C@_0CD@NDNOFCGN@Maxwise?5Production?5Enterprise?5Lt@ ; `string'
PUBLIC	??_C@_0M@OMFDOLIG@Total?5Phase?$AA@		; `string'
PUBLIC	??_C@_0BH@OFEECAGA@Creatix?5Polymedia?5GmbH?$AA@ ; `string'
PUBLIC	??_C@_0BO@CCKIBDCK@HongLin?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0N@GNFMIBKN@Soft?5DB?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_06DGDFLKMM@Samtec?$AA@			; `string'
PUBLIC	??_C@_0BO@FIJNAGLJ@Seong?5Ji?5Industrial?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@GIDCGAKL@D?9Box?5Technologies?$AA@	; `string'
PUBLIC	??_C@_0CI@HNEJDFII@Hong?5Kong?5Gearway?5Electronics?5Co@ ; `string'
PUBLIC	??_C@_0CL@HBACFJJO@Shen?5Zhen?5Teamspower?5Electronics@ ; `string'
PUBLIC	??_C@_0BO@KPCEMMAE@Freescale?5Semiconductor?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CE@PGJPGLLG@Kunshan?5Guoji?5Electronics?5Co?4?0?5L@ ; `string'
PUBLIC	??_C@_0BN@MGGPMLNL@Palconn?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0L@HBGIDMAB@Ketron?5SRL?$AA@		; `string'
PUBLIC	??_C@_0BM@PJFBNPPK@ALLTOP?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BM@MLLCLJKN@Sunf?5Pu?5Technology?5Co?4?0?5Ltd?$AA@ ; `string'
PUBLIC	??_C@_0BF@KCLHJFIN@D?5?$CG?5M?5Holdings?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CI@PJGLCGBH@Rapid?5Conn?0?5Connect?5County?5Holdi@ ; `string'
PUBLIC	??_C@_0BG@FDFFBPKH@PNY?5Technologies?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@PJAMMHJM@Phihong?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@KFFNHPKK@HLDS?5?$CIHitachi?9LG?5Data?5Storage?0?5I@ ; `string'
PUBLIC	??_C@_0BJ@NNBEAIKI@JMicron?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@NFMNNPJJ@VeriSilicon?5Holdings?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@MEIKBKHJ@Skymedi?5Corporation?$AA@	; `string'
PUBLIC	??_C@_07HKBKGGAL@Ellisys?$AA@			; `string'
PUBLIC	??_C@_0BN@OBOFFJMJ@MOAI?5ELECTRONICS?5CORPORATION?$AA@ ; `string'
PUBLIC	??_C@_0BC@LNFIEHCE@StarTech?4com?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BF@POKLDLPA@ATP?5Electronics?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BA@GIDLPKMM@CTK?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0N@JLOFKNJM@EVATRONIX?5SA?$AA@		; `string'
PUBLIC	??_C@_0BA@EJBEDMD@DSP?5Group?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0P@OCKHDMGO@Formosa21?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BC@OEGADIHN@Altek?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BI@EBFAHIJA@Wind?5River?5Systems?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CL@DCCPGNCP@Vega?5Technologies?5Industrial?5?$CIAu@ ; `string'
PUBLIC	??_C@_0CC@KOGJPFE@Sensor?5Technologies?5America?0?5Inc@ ; `string'
PUBLIC	??_C@_0BN@KECIKNAF@ABILITY?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@BHONNEDH@Novatel?5Wireless?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@EBAJJPHC@Telechips?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BJ@PODMPDKE@Phison?5Electronics?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@MJPGJJIB@Initio?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0O@EADKLFFK@ALEREON?0?5INC?4?$AA@		; `string'
PUBLIC	??_C@_0BN@BNPLLCII@AzureWave?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0M@DPEOBOCF@Wisair?5Ltd?4?$AA@		; `string'
PUBLIC	??_C@_0CG@BGIJPEKA@JyeTai?5Precision?5Industrial?5Co?4?0@ ; `string'
PUBLIC	??_C@_0BK@LJKDAPJK@TomTom?5International?5B?4V?4?$AA@ ; `string'
PUBLIC	??_C@_0BM@DKMEKHIM@Pericom?5Semiconductor?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0M@IPAHGEJP@Swissbit?5AG?$AA@		; `string'
PUBLIC	??_C@_0BP@ODBMNHOP@Katsuragawa?5Electric?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@KIELHJB@Konica?5Minolta?5Holdings?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@DKNOJINI@Better?5Holdings?5?$CIHK?$CJ?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0BP@JPNNFCKE@LINE?5TECH?5INDUSTRIAL?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0CP@OPCIAOPO@Zhejiang?5Xinya?5Electronic?5Techno@ ; `string'
PUBLIC	??_C@_0CI@LMINHIGA@Honey?5Bee?5Electronic?5Internation@ ; `string'
PUBLIC	??_C@_0BC@CDINJBKA@RISO?5KAGAKU?5CORP?4?$AA@	; `string'
PUBLIC	??_C@_0BM@FDHCJPEM@MARVELL?5SEMICONDUCTOR?0?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@EMLGGAIJ@Gean?5Sen?5Electronic?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0M@HPCCHOFJ@Bel?5Stewart?$AA@		; `string'
PUBLIC	??_C@_0BI@BANJHMOB@Aristocrat?5Technologies?$AA@ ; `string'
PUBLIC	??_C@_0BH@CNPFBGCM@MICRO?5VISION?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@FCGNNKPJ@ADATA?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@KKGDFIOD@NYKO?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@DHPBBMCB@SKYCABLE?5ENTERPRISE?4?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BG@MJAIIBOP@HUDSON?5SOFT?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@GJMOHKID@K?4I?4?5Technology?5Co?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@HFAICOFB@ATECH?5FLASH?5TECHNOLOGY?$AA@ ; `string'
PUBLIC	??_C@_0BH@LNLMLHPJ@GlobalMedia?5Group?0?5LLC?$AA@ ; `string'
PUBLIC	??_C@_0CG@JCFADKIE@DONG?5GUAN?5JALINK?5ELECTRONICES?5CO@ ; `string'
PUBLIC	??_C@_0BF@FDIEEFFD@Sierra?5Wireless?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0CB@BGNNABKD@Sheng?5Yih?5Technologies?5Co?4?0?5Ltd?4@ ; `string'
PUBLIC	??_C@_0BL@HCIAKFOP@Salix?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@NKCLDENL@Alpha?5Imaging?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0CB@BPPANFMB@Shimane?5SANYO?5Electric?5Co?4?0?5Ltd?4@ ; `string'
PUBLIC	??_C@_0BG@JFAAFJPO@Tenx?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CO@HLACDLIC@Master?5Hill?5Electric?5Wire?5and?5Ca@ ; `string'
PUBLIC	??_C@_0BK@DEMMBJPB@VSO?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_09JKLIJNKN@Medion?5AG?$AA@		; `string'
PUBLIC	??_C@_0DF@NDHMOMGK@Golden?5Bright?5?$CISichuan?$CJ?5Electron@ ; `string'
PUBLIC	??_C@_0CA@BFJDJKMK@Actions?5Semiconductor?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0L@BEMBIFEP@Kycon?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BD@BNHNDFDJ@TM?5Technology?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BL@GMIJPDAF@Princeton?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0O@DKGHEGPO@USI?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0N@MADBCNBC@Cables?5To?5Go?$AA@		; `string'
PUBLIC	??_C@_0BA@JBGEKCBJ@Lotes?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BC@MMEHCLPH@Robert?5Bosch?5GmbH?$AA@	; `string'
PUBLIC	??_C@_0BP@HEECLKMJ@Grand?9tek?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@JLIOEOBP@PANTECH?5CO?4?0?5LTD?4?$AA@	; `string'
PUBLIC	??_C@_0BH@GGINDOFM@CANON?5ELECTRONICS?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0DF@EJNCJCJN@Freeway?5Electronic?5Wire?5?$CG?5Cable?5@ ; `string'
PUBLIC	??_C@_0BJ@HPGECAIP@Giesecke?5?$CG?5Devrient?5GmbH?$AA@ ; `string'
PUBLIC	??_C@_0CD@OEFJDFLG@Western?5Digital?5Technologies?0?5In@ ; `string'
PUBLIC	??_C@_0BB@MCAPDOMI@ON?5Semiconductor?$AA@	; `string'
PUBLIC	??_C@_0BL@DIDNCHDM@Targus?5Group?5International?$AA@ ; `string'
PUBLIC	??_C@_0BA@PMFKJABH@SteelSeries?5ApS?$AA@	; `string'
PUBLIC	??_C@_0CP@MHAOCCHA@WENZHOU?5YIHUA?5COMMUNICATED?5CONNE@ ; `string'
PUBLIC	??_C@_0BC@KLMPEDJE@Newly?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BE@PPCAGGEP@LG?5Electronics?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BB@FNNKEBO@Speed?5Tech?5Corp?4?$AA@	; `string'
PUBLIC	??_C@_0CJ@MNOHKIGC@CHI?5SHING?5COMPUTER?5ACCESSORIES?5C@ ; `string'
PUBLIC	??_C@_0CH@JMIKCMLI@Sony?5Ericsson?5Mobile?5Communicati@ ; `string'
PUBLIC	??_C@_0CB@KMPGIMLP@SAN?5SHING?5ELECTRONICS?5CO?4?0?5LTD?4?4@ ; `string'
PUBLIC	??_C@_0BE@DKFGOFCL@Wistron?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BD@NPCAKEK@CviLux?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BD@KEDKNNLF@Yazaki?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BD@HLMPAKPJ@DIONEX?5CORPORATION?$AA@	; `string'
PUBLIC	??_C@_0BD@CAOPHLDB@TEPCO?5UQUEST?0?5LTD?4?$AA@	; `string'
PUBLIC	??_C@_0DE@KCDILGEE@GuangZhou?5Chief?5Tech?5Electronic?5@ ; `string'
PUBLIC	??_C@_0CJ@GLJCMOOM@Kawai?5Musical?5Instruments?5Mfg?4?5C@ ; `string'
PUBLIC	??_C@_0CA@JJBCDJBC@Taiyo?5Cable?5?$CIDongguan?$CJ?5Co?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@NDDFJIHH@WING?5KEI?5ELECTRICAL?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@PCHAGLHO@WORLDWIDE?5CABLE?5OPTO?5CORP?4?$AA@ ; `string'
PUBLIC	??_C@_0CA@JKBEBDIB@YFC?9BonEagle?5Electric?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BF@HHKPOBJN@Good?5Man?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0CE@LHKAEIDJ@CSL?5Wire?5?$CG?5Plug?5?$CIShen?5Zhen?$CJ?5Comp@ ; `string'
PUBLIC	??_C@_0BP@OLFMJOLO@Sunrich?5Technology?5?$CIH?4K?4?$CJ?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@FPOIDBI@Lite?9On?5IT?5Corp?4?$AA@	; `string'
PUBLIC	??_C@_0BO@HGLIFDP@InnoVISION?5Multimedia?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0BC@NLMJJEGP@Axell?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BJ@EEJFEJAC@Sweetray?5Industrial?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@FFOINCNP@Y?9S?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BF@LFNPLID@Ours?5Technology?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BC@PLHJNEDE@ADTEC?5CORPORATION?$AA@	; `string'
PUBLIC	??_C@_0O@DBHJNIK@MediaTek?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BP@BAFJGBFA@Well?5Force?5Electronic?5Co?4?0?5Ltd?$AA@ ; `string'
PUBLIC	??_C@_0BP@FIEIALAE@Hsi?9Chin?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@PNJNPPHF@Megawin?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@DKLMDFEK@Neltron?5Industrial?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CN@LHINEDL@Union?5Power?5Information?5Industri@ ; `string'
PUBLIC	??_C@_0BN@MDHILMJA@Neostar?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CB@BNIAIBOP@Smart?5Modular?5Technologies?0?5Inc?4@ ; `string'
PUBLIC	??_C@_0BO@MECAJMAF@Liou?5Yuane?5International?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@JAOPMIJP@Custom?5Engineering?5SPA?$AA@ ; `string'
PUBLIC	??_C@_0CH@HKHHADBM@Power?5Quotient?5International?5Co?4@ ; `string'
PUBLIC	??_C@_0BN@MEJNGPFO@Contek?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0N@BBHIMAGO@SDK?5Co?0?5Ltd?4?$AA@		; `string'
PUBLIC	??_C@_0O@PIGMBEOG@inXtron?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0CD@LDGCJJON@Micro?9Star?5International?5Co?4?0?5Lt@ ; `string'
PUBLIC	??_C@_0N@BBFDLJEL@IOGEAR?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0CB@CBEHKKIA@Sure?9Fire?5Electrical?5Corporation@ ; `string'
PUBLIC	??_C@_0N@ECGNEKML@Pitney?5Bowes?$AA@		; `string'
PUBLIC	??_C@_0BJ@ICKBMN@C?9MEDIA?5ELECTRONICS?5INC?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@BKFMOADO@Dolby?5Laboratories?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@DEKDBPDL@Taiwan?5Line?5Tek?5Electronic?5Co?4?0?5@ ; `string'
PUBLIC	??_C@_0BH@JNDMIFOJ@Hirakawa?5Hewtech?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0CH@DILBGHLF@MEILU?5ELECTRONICS?5?$CISHENZHEN?$CJ?5CO?4@ ; `string'
PUBLIC	??_C@_0BF@GHDJEHFK@Volex?5?$CIAsia?$CJ?5Pte?5Ltd?$AA@ ; `string'
PUBLIC	??_C@_0BD@KEPOILEK@Grape?5Systems?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0P@MAHCGCHE@NF?5Corporation?$AA@		; `string'
PUBLIC	??_C@_0CD@IJEJHEOO@Shanghai?5Hank?5Connection?5Co?4?0?5Lt@ ; `string'
PUBLIC	??_C@_0N@IDKBGBCG@NALTEC?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BH@IIKDMMBP@Qualcomm?5Atheros?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@KPNEJJKA@ENE?5Technology?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BM@OOCFEMN@e?9CONN?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0L@OACAMJJG@Z?9Com?5INC?4?$AA@		; `string'
PUBLIC	??_C@_0BC@ECMAKMHG@Intel?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BE@DLHFEAFK@Shin?5Din?5Cable?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BM@NGPEIKDH@emsys?5Embedded?5Systems?5GmbH?$AA@ ; `string'
PUBLIC	??_C@_0BO@DKFGFGHA@Singatron?5Enterprise?5Co?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@PCKEPBKO@Motorola?5Solutions?$AA@	; `string'
PUBLIC	??_C@_0BN@KPNGPOOH@Honda?5Tsushin?5Kogyo?5Co?4?0?5Ltd?$AA@ ; `string'
PUBLIC	??_C@_0BN@PNHCHLDH@Solid?5State?5System?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@KANEMGNF@Whanam?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@FHGKBINA@Chant?5Sincere?5Co?4?0?5Ltd?$AA@ ; `string'
PUBLIC	??_C@_0CA@KMAKLJKD@Dong?5Guan?5Shinko?5Wire?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@GADMIKAO@Billion?5Bright?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0BL@IIBBHDLP@Sonix?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_08EDJBOCE@Aeroflex?$AA@			; `string'
PUBLIC	??_C@_0BG@BDCJOHPC@Taiyo?5Yuden?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@BJDBAEPG@Dura?5Micro?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0N@BIDPCKE@Hasbro?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BK@EBNIPBJG@LTK?5International?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0BI@GAPKJOJF@Elka?5International?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0M@PBGCMNLB@Ericsson?5AB?$AA@		; `string'
PUBLIC	??_C@_0BM@OODBLDMG@Realtek?5Semiconductor?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@PKPGHPEE@Seagate?5Technology?5LLC?$AA@ ; `string'
PUBLIC	??_C@_0BP@JGDEFBDO@Murata?5Manufacturing?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@BLJMPEH@HTC?5Corporation?$AA@		; `string'
PUBLIC	??_C@_0O@PGGKPFEM@O2Micro?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BN@DBGBIANO@ASIX?5Electronics?5Corporation?$AA@ ; `string'
PUBLIC	??_C@_0BK@DICOBJHO@Maxim?5Integrated?5Products?$AA@ ; `string'
PUBLIC	??_C@_0BN@IGCLCEEO@Sinbon?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@MJIIIHDL@Musical?5Electronics?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0P@GFHEPPBN@Olivetti?5S?4p?4A?$AA@	; `string'
PUBLIC	??_C@_0BP@IGDJFEE@Pan?9Asia?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@KKOFHFLP@Yokogawa?5Electric?5Corporation?$AA@ ; `string'
PUBLIC	??_C@_0CK@PLBMIBK@Electronic?5Warfare?5Associates?0?5I@ ; `string'
PUBLIC	??_C@_0BG@HEOGBEPO@ASUSTek?5Computer?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_09FMCEBPKI@Option?5NV?$AA@		; `string'
PUBLIC	??_C@_0BH@CELKNPMM@Allion?5Test?5Labs?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@HMAJKJ@Vimicro?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0CC@EIBHCLN@SANYO?5Semiconductor?5Company?5Micr@ ; `string'
PUBLIC	??_C@_0BM@KFMMGOHA@Wincor?5Nixdorf?5GmbH?5?$CG?5Co?5KG?$AA@ ; `string'
PUBLIC	??_C@_0BF@BPGMFHBM@Young?5Chang?5Co?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CP@BLIFGEAH@Japan?5Aviation?5Electronics?5Indus@ ; `string'
PUBLIC	??_C@_0BJ@JHAHKIDB@CHESEN?5ELECTRONICS?5CORP?4?$AA@ ; `string'
PUBLIC	??_C@_0O@HDJGGMBN@Intertek?5NSTL?$AA@		; `string'
PUBLIC	??_C@_0BG@IJFMHNNO@Green?5House?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0P@KBOGHGP@Broadcom?5Corp?4?$AA@		; `string'
PUBLIC	??_C@_0BN@FBNECLJJ@Mimaki?5Engineering?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@LHJHCFAG@COMPUTEX?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BB@KGGFOALP@I?1O?5Interconnect?$AA@	; `string'
PUBLIC	??_C@_0BK@IKEGAKKP@Hirose?5Electric?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BF@EKKNDOHK@Physio?9Control?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@HPCCBBBB@HOYA?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BL@MPNFCJBM@Jo?9Dan?5International?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BG@LAHNEDCJ@A?9FOUR?5TECH?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_05KFMIDCBE@Jungo?$AA@			; `string'
PUBLIC	??_C@_0CD@HNEJNPKP@Electronics?5Testing?5Center?0?5Taiw@ ; `string'
PUBLIC	??_C@_0BE@OJFDPOOK@Workbit?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BC@JHLIIJEE@NISCA?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BN@OHPOFJEM@Japan?5Cash?5Machine?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CA@NGELPCKK@Lin?5Shiung?5Enterprise?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@NHOGNCFH@Contech?5Research?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CF@DOLEFDNC@TRIDENT?5MICROSYSTEMS?5?$CIFar?5East?$CJ?5@ ; `string'
PUBLIC	??_C@_0O@LKCCNLNO@Polycom?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BH@DIONPOBP@Medialogic?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BL@KLPBIJLK@Agilent?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_06HLMMPIBG@NVIDIA?$AA@			; `string'
PUBLIC	??_C@_0BM@LKMMOGNE@Kingston?5Technology?5Company?$AA@ ; `string'
PUBLIC	??_C@_0BG@PLHGNMC@J?4S?4T?4?5Mfg?4?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0M@DPPDGGNF@Plextor?5LLC?$AA@		; `string'
PUBLIC	??_C@_0BF@FDMCHING@Pixart?5Imaging?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@JMAMIBAH@Toshiba?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BB@IJHLMKN@Dymo?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BF@OCKCLCDJ@Garmin?5International?$AA@	; `string'
PUBLIC	??_C@_0BO@BNPBHCJB@Silicon?5Motion?0?5Inc?4?5?9?5Taiwan?$AA@ ; `string'
PUBLIC	??_C@_0BF@DGGIOLK@Audio?9Technica?5Corp?4?$AA@	; `string'
PUBLIC	??_C@_0BJ@DEEADHEC@FARADAY?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@ILLLPBKP@AuthenTec?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0L@NMFIDNE@Gemalto?5SA?$AA@		; `string'
PUBLIC	??_C@_0BE@PMKDDGDC@Pioneer?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BO@JNLBBKDI@TAI?5TWUN?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@HFFFIPIB@Texas?5Instruments?5Japan?$AA@ ; `string'
PUBLIC	??_C@_0BH@CFIMBAIC@RadioShack?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BP@PNBHHOAN@Icron?5Technologies?5Corporation?$AA@ ; `string'
PUBLIC	??_C@_0BA@EMBEKEAB@Lauterbach?5GmbH?$AA@	; `string'
PUBLIC	??_C@_0BG@FKPDHKLP@A?9Tec?5Subsystem?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@CEKEIHLM@MEC?5IMEX?5INC?1HPT?$AA@	; `string'
PUBLIC	??_C@_0BF@DELPFPOB@Argosy?5Research?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0CB@POAJBKGF@Action?5Star?5Enterprise?5Co?4?0?5Ltd?4@ ; `string'
PUBLIC	??_C@_0BO@CAINGGKC@Evermuch?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@FDLEJAIK@Dotop?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@OPFGKFFJ@Century?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BH@NBGJMCGE@Circuit?5Assembly?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0CA@BNLONGOH@David?5Electronics?5Company?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@ODMCNPPD@Arasan?5Chip?5Systems?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@JKHOIPCI@Casio?5Computer?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@FNDINGLK@Carry?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BN@EGFACLDP@AVerMedia?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@MGBHEDBN@TIME?5Interconnect?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@NJLEDFOB@OLYMPUS?5CORPORATION?$AA@	; `string'
PUBLIC	??_C@_0O@OCMFCBHB@Plustek?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BL@MPFKAMGD@National?5Technical?5Systems?$AA@ ; `string'
PUBLIC	??_C@_0CB@LGBOFDFN@Copartner?5Technology?5Corporation@ ; `string'
PUBLIC	??_C@_0BE@KACIGGGG@SanDisk?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BI@OBNCJIEM@Fairchild?5Semiconductor?$AA@ ; `string'
PUBLIC	??_C@_0CG@IKDDLBBP@Comda?5Advanced?5Technology?5Corpor@ ; `string'
PUBLIC	??_C@_0BA@FCBANMAL@HID?5Global?5GmbH?$AA@	; `string'
PUBLIC	??_C@_0CD@HFGLNKOO@Jess?9Link?5Products?5Co?4?0?5Ltd?4?5?$CIJP@ ; `string'
PUBLIC	??_C@_0BK@PCICHEDF@Cyber?5Power?5Systems?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@PJBMJABB@Lorom?5Industrial?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@IFGJOCOG@Sunix?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0O@NNOCEOFA@Imation?5Corp?4?$AA@		; `string'
PUBLIC	??_C@_0BP@JCFMJDGG@Magic?5Control?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0CA@HDLCMAHN@Excel?5Cell?5Electronic?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CA@MKILJNBK@Oki?5Electric?5Industry?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BM@MDDCDOBA@Heisei?5Electronics?5Co?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0CA@FPPDHAGC@Mitsubishi?5Electric?5Corporation?$AA@ ; `string'
PUBLIC	??_C@_0L@IGNPDHHH@SIIG?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BJ@IAMJELKE@Bizlink?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@PBNHDNIB@Leoco?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BF@KBMIOCIB@Oki?5Data?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BD@MFHNCDAI@Pixela?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0P@DFEICALO@Testronic?5Labs?$AA@		; `string'
PUBLIC	??_C@_0CC@NHGJCBNO@Greatland?5Electronics?5Taiwan?5Ltd@ ; `string'
PUBLIC	??_C@_0CC@KJLDAPCA@Xiamen?5Doowell?5Electron?5Co?4?0?5Ltd@ ; `string'
PUBLIC	??_C@_0BE@KEFLECEP@MadCatz?5Europe?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BA@EMAGANPI@Tektronix?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BN@HLLIJJKK@Hagiwara?5Solutions?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BM@LFPCEBHN@Golden?5Bridge?5Electech?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_09JOKCKELG@Dell?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BK@PDKHMLGO@Prolific?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@GHMCMJEK@ACARD?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@BPDLABPC@Total?5Technologies?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@PKNBNCAJ@Hamamatsu?5Photonics?5K?4K?4?$AA@ ; `string'
PUBLIC	??_C@_0CA@PAFBBAIH@TSAY?9E?5?$CIBVI?$CJ?5International?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0DD@MJJJJEAM@Good?5Way?5Technology?5Co?4?0?5Ltd?4?5?$CG?5@ ; `string'
PUBLIC	??_C@_0BE@DBNMJIBL@Sigma?5Designs?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BJ@HLMOOHDB@Tekcon?5Electronics?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BL@JPOIGLAH@Glory?5Mark?5Electronic?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@BBNBDGIM@Space?5Shuttle?5Hi?9Tech?5Co?4?0Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@BPHBIEFO@WIBU?9Systems?5AG?$AA@	; `string'
PUBLIC	??_C@_0BC@HBOMJHJG@Suyin?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BL@EBDNAMPI@Ji?9Haw?5Industrial?5Co?4?0?5Ltd?$AA@ ; `string'
PUBLIC	??_C@_0CH@PMGKCBAF@Analog?5Devices?0?5Inc?4?5Development@ ; `string'
PUBLIC	??_C@_0P@GAMNDPPF@Chrontel?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0O@JBKMBCEI@Avision?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0CA@POFLHCFC@MAIN?5SUPER?5ENTERPRISES?5CO?4?0LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@GCAKJIAA@Littelfuse?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BH@OFHNPHHH@Seiko?5Instruments?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CD@BNDJFIFN@TransAct?5Technologies?5Incorporat@ ; `string'
PUBLIC	??_C@_0BK@EHGAEDDA@Totoku?5Electric?5Co?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0CE@IBGJKEKA@Joinsoon?5Electronics?5Mfg?4?5Co?4?0?5L@ ; `string'
PUBLIC	??_C@_0BH@LJAJLGJE@SMK?5Manufacturing?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@HAMNADII@Novatek?5Microelectronics?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@PJDPEADK@LeCroy?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BJ@IOEIJMCL@Datalogic?5Scanning?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@NBAANMIA@Unixtar?5Technology?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@KBGKOOGJ@Fuji?5Electric?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@CKIEML@Genesys?5Logic?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BE@JPKFBBCH@Symbol?5Technologies?$AA@	; `string'
PUBLIC	??_C@_0BC@CNOLCDCN@Lexar?5Media?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BM@OADDMKLB@Microtek?5International?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@DNOMCPDN@Ricoh?5Company?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0CP@IMDHJGED@Foxlink?1Cheng?5Uei?5Precision?5Indu@ ; `string'
PUBLIC	??_C@_0O@JJANANCF@Qualcomm?0?5Inc?$AA@		; `string'
PUBLIC	??_C@_0CA@ILGCAFHO@Kawasaki?5Microelectronics?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@BDKIEMDH@Tyco?5Electronics?$AA@	; `string'
PUBLIC	??_C@_0BF@DJDIGDEG@National?5Instruments?$AA@	; `string'
PUBLIC	??_C@_0BH@BEKADALE@Y?4C?4?5Cable?5U?4S?4A?4?0?5Inc?$AA@ ; `string'
PUBLIC	??_C@_05EBJDGKGA@Apple?$AA@			; `string'
PUBLIC	??_C@_0BO@PALNNPFJ@OmniVision?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_05EENIFCCI@LaCie?$AA@			; `string'
PUBLIC	??_C@_0BD@DLALOKFF@Iomega?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BC@LGOLJEOJ@OMRON?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BD@CKEFINHN@Alcor?5Micro?0?5Corp?4?$AA@	; `string'
PUBLIC	??_C@_0BE@PNCFOBBM@RATOC?5Systems?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BD@CDPILELF@Roland?5Corporation?$AA@	; `string'
PUBLIC	??_C@_08DBEKGGBP@AVM?5GmbH?$AA@			; `string'
PUBLIC	??_C@_0P@DLENFJNK@Y?9E?5Data?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0CC@JDHIHHMP@BAFO?1Quality?5Computer?5Accessorie@ ; `string'
PUBLIC	??_C@_0BC@DJMACOGF@Zoran?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BH@BPNCPPJL@Conexant?5Systems?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@PCAMLHGM@WACOM?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BN@LLCBPJLE@Cadence?5Design?5Systems?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BM@FGPDBDMF@ATEN?5International?5Co?4?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BF@BLKLAKEJ@Fuji?5Xerox?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@FOPBDEC@Sony?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0P@JMAENH@Synopsys?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BH@OKBFFENA@Wacom?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BK@EAHBAECN@Aladdin?5Knowledge?5Systems?$AA@ ; `string'
PUBLIC	??_C@_0BF@OEIMDHJB@PLX?5Technology?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@MPHIFDML@ACON?0?5Advanced?9Connectek?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0CH@IKHGDMKC@Taiwan?5Semiconductor?5Manufacturi@ ; `string'
PUBLIC	??_C@_0BK@CJECLAIC@American?5Power?5Conversion?$AA@ ; `string'
PUBLIC	??_C@_0BI@IEJECICL@Star?5Micronics?5Co?4?0?5LTD?$AA@ ; `string'
PUBLIC	??_C@_0CG@MHMGALMF@Longwell?5Electronics?1Longwell?5Co@ ; `string'
PUBLIC	??_C@_0BA@MNHCACLA@FCI?5Electronics?$AA@	; `string'
PUBLIC	??_C@_0BD@JPLKCFJN@Belkin?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BE@OMIFCFDP@Hosiden?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0N@HPKDLJPE@Fujikura?1DDK?$AA@		; `string'
PUBLIC	??_C@_0M@LAOEDIBA@PFU?5Limited?$AA@		; `string'
PUBLIC	??_C@_0BN@EENPEENP@SUNPLUS?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@ ; `string'
PUBLIC	??_C@_0BJ@LIIOOGBH@Brother?5Industries?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BI@JIJDPPMO@Newnex?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@DEPAFADD@Chicony?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@EFCPDDGG@Tokyo?5Electron?5Device?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0BI@BJLCCIIK@Northstar?5Systems?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BO@CGAOADOO@Samsung?5Electronics?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@LGJOJJNH@SCM?5Microsystems?$AA@	; `string'
PUBLIC	??_C@_0BB@LFOEADKM@Exar?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BC@NGIIFMHF@Sharp?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BG@HPBJICLA@Panasonic?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BL@BJMPMCDF@Holtek?5Semiconductor?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BK@GLLPJAAH@Microchip?5Technology?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0M@CIDIGMJE@ST?9Ericsson?$AA@		; `string'
PUBLIC	??_C@_0BF@DGJHAIHG@FUJIFILM?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BJ@CAOGFALO@Lite?9On?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0N@MFGIPGKK@Fujitsu?5Ltd?4?$AA@		; `string'
PUBLIC	??_C@_0BG@NAOBNEME@I?9O?5Data?5Device?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@LODEJCJJ@Seiko?5Epson?5Corp?4?$AA@	; `string'
PUBLIC	??_C@_0BJ@IBBFBLCL@Compal?5Electronics?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0P@POFNKNIM@ROHM?5Co?4?0?5Ltd?4?$AA@	; `string'
PUBLIC	??_C@_0BG@FGCLJBBL@Cypress?5Semiconductor?$AA@	; `string'
PUBLIC	??_C@_0BC@HJPMHLJH@Pan?5International?$AA@	; `string'
PUBLIC	??_C@_0BC@GNNADKEG@Nikon?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0L@GLDEECEB@Canon?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_09OEADKIBB@Visioneer?$AA@			; `string'
PUBLIC	??_C@_0O@EDCNNFOI@Hitachi?0?5Ltd?4?$AA@		; `string'
PUBLIC	??_C@_0BD@LBNNEMMM@Yamaha?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0O@KONCBIDB@ITE?5Tech?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BC@OEHDDJBP@Foxconn?5?1?5Hon?5Hai?$AA@	; `string'
PUBLIC	??_C@_0BD@KBJBCOHP@STMicroelectronics?$AA@	; `string'
PUBLIC	??_C@_0BE@OKFLBHJF@Kyocera?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0CE@MGJHDLEM@Toshiba?5America?5Info?4?5Systems?0?5I@ ; `string'
PUBLIC	??_C@_0BC@JKCENOI@Plantronics?0?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0BA@JMLOFGEB@LSI?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0O@NMJDEFAN@Logitech?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BE@JEFPHDAK@American?5Megatrends?$AA@	; `string'
PUBLIC	??_C@_0BO@JJGMGNMK@Wieson?5Technologies?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_05CFGIIEPJ@EATON?$AA@			; `string'
PUBLIC	??_C@_0BD@CABKABLN@Primax?5Electronics?$AA@	; `string'
PUBLIC	??_C@_0BG@EOBPLLNH@Microsoft?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BK@EAFCJGLH@Renesas?5Electronics?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@CIDHCDNI@KYE?5Systems?5Corp?4?$AA@	; `string'
PUBLIC	??_C@_0CB@JOFOMFLH@Silicon?5Integrated?5Systems?5Corp?4@ ; `string'
PUBLIC	??_C@_0BC@NEDOGEDE@Texas?5Instruments?$AA@	; `string'
PUBLIC	??_C@_0BI@LOPMEJIG@Alps?5Electric?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@LFBOMFGA@EIZO?5NANAO?5CORPORATION?$AA@ ; `string'
PUBLIC	??_C@_0BL@KCFEHCNK@Lexmark?5International?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@PDGAJDKJ@Advanced?5Micro?5Devices?$AA@ ; `string'
PUBLIC	??_C@_0BK@BGJHIBOH@Fujitsu?5Component?5Limited?$AA@ ; `string'
PUBLIC	??_C@_0L@JMLDMEEO@Molex?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_04JKLOLBDG@SMSC?$AA@			; `string'
PUBLIC	??_C@_0BC@LOIKONEK@Nokia?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0O@CDIDDBG@Creative?5Labs?$AA@		; `string'
PUBLIC	??_C@_0BJ@BBLEBCKI@Nuvoton?5Technology?5Corp?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@EJPGPDCC@Giga?9Byte?5Technology?5Co?4?0?5Ltd?4?$AA@ ; `string'
PUBLIC	??_C@_0N@HBBMPLAJ@BUFFALO?5INC?4?$AA@		; `string'
PUBLIC	??_C@_0BB@DMJKNCDK@MCCI?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BH@LEHBDMGE@VIA?5Technologies?0?5Inc?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@JCNGEJDK@Weltrend?5Semiconductor?$AA@	; `string'
PUBLIC	??_C@_0BG@DEIKAEKL@Eastman?5Kodak?5Company?$AA@	; `string'
PUBLIC	??_C@_0BA@KPLBOCAE@NEC?5Corporation?$AA@	; `string'
PUBLIC	??_C@_0BF@PKMDPELO@Quanta?5Computer?5Inc?4?$AA@	; `string'
PUBLIC	??_C@_0DA@NLEDAFLA@Future?5Technology?5Devices?5Intern@ ; `string'
PUBLIC	??_C@_0BM@MEJFLCNJ@Elitegroup?5Computer?5Systems?$AA@ ; `string'
PUBLIC	??_C@_0O@EJFJAJAK@Diebold?0?5Inc?4?$AA@		; `string'
PUBLIC	??_C@_0BA@GKDJMMLL@Hewlett?5Packard?$AA@	; `string'
PUBLIC	??_C@_0BC@ELLAHEBO@Atmel?5Corporation?$AA@	; `string'
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	?GetVendorString@USB@@SAPADG@Z			; USB::GetVendorString
PUBLIC	?capacity@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ ; std::vector<void *,std::allocator<void *> >::capacity
PUBLIC	??$_Uninit_copy@PAPAXPAPAXV?$allocator@PAX@std@@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<void * *,void * *,std::allocator<void *> >
PUBLIC	??$unchecked_uninitialized_copy@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z ; stdext::unchecked_uninitialized_copy<void * *,void * *,std::allocator<void *> >
PUBLIC	??$_Uninit_move@PAPAXPAPAXV?$allocator@PAX@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<void * *,void * *,std::allocator<void *>,std::_Undefined_move_tag>
PUBLIC	??$_Unchecked_uninitialized_move@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z ; stdext::_Unchecked_uninitialized_move<void * *,void * *,std::allocator<void *> >
PUBLIC	??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove<void * *>
PUBLIC	??$_Fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z		; std::_Fill<void * *,void *>
PUBLIC	??$fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z		; std::fill<void * *,void *>
PUBLIC	??$_Move_cat@PAPAX@std@@YA?AU_Undefined_move_tag@0@ABQAPAX@Z ; std::_Move_cat<void * *>
PUBLIC	??$_Copy_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<void * *,void * *,std::random_access_iterator_tag>
PUBLIC	??$_Move_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<void * *,void * *,std::random_access_iterator_tag,std::_Undefined_move_tag>
PUBLIC	??$_Unchecked_move_backward@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z ; stdext::_Unchecked_move_backward<void * *,void * *>
PUBLIC	?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z ; std::vector<void *,std::allocator<void *> >::_Insert_n
PUBLIC	??G?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator-
PUBLIC	?insert@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@ABQAX@Z ; std::vector<void *,std::allocator<void *> >::insert
PUBLIC	??$_Iter_cat@PAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX@Z ; std::_Iter_cat<void * *>
PUBLIC	??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXU_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<void * *,unsigned int,void *>
PUBLIC	??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<void * *,unsigned int,void *>
PUBLIC	??$unchecked_fill_n@PAPAXIPAX@stdext@@YAXPAPAXIABQAX@Z ; stdext::unchecked_fill_n<void * *,unsigned int,void *>
PUBLIC	??$_Uninit_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@std@@YAXPAPAXIABQAXAAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<void * *,unsigned int,void *,std::allocator<void *> >
PUBLIC	??$unchecked_uninitialized_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@stdext@@YAXPAPAXIABQAXAAV?$allocator@PAX@std@@@Z ; stdext::unchecked_uninitialized_fill_n<void * *,unsigned int,void *,std::allocator<void *> >
PUBLIC	?_Ufill@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAXIABQAX@Z ; std::vector<void *,std::allocator<void *> >::_Ufill
PUBLIC	?push_back@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z ; std::vector<void *,std::allocator<void *> >::push_back
PUBLIC	??0USB@@QAE@XZ					; USB::USB
PUBLIC	??1USB@@QAE@XZ					; USB::~USB
PUBLIC	??_GUSB@@QAEPAXI@Z				; USB::`scalar deleting destructor'
PUBLIC	??0PBuffer@@QAE@XZ				; PBuffer::PBuffer
PUBLIC	?_clear@PBuffer@@QAEXXZ				; PBuffer::_clear
PUBLIC	??1PBuffer@@QAE@XZ				; PBuffer::~PBuffer
PUBLIC	?_allocMem@PBuffer@@QAEPAEH@Z			; PBuffer::_allocMem
PUBLIC	?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
PUBLIC	??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
PUBLIC	??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
PUBLIC	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
PUBLIC	??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
PUBLIC	?GetIPs@MonitorIPs@@QAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; MonitorIPs::GetIPs
PUBLIC	?strstr@@YAPADPADPBD@Z				; strstr
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0MonitorIPs@@QAE@XZ				; MonitorIPs::MonitorIPs
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1MonitorIPs@@QAE@XZ				; MonitorIPs::~MonitorIPs
PUBLIC	?IsChanged@MonitorIPs@@QAE_NXZ			; MonitorIPs::IsChanged
PUBLIC	?size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ ; std::vector<void *,std::allocator<void *> >::size
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ ; std::vector<void *,std::allocator<void *> >::_Xran
PUBLIC	??D?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator*
PUBLIC	??D?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ ; std::_Vector_iterator<void *,std::allocator<void *> >::operator*
PUBLIC	??Y?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator+=
PUBLIC	??Y?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<void *,std::allocator<void *> >::operator+=
PUBLIC	??H?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<void *,std::allocator<void *> >::operator+
PUBLIC	?at@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEAAPAXI@Z ; std::vector<void *,std::allocator<void *> >::at
PUBLIC	?begin@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ ; std::vector<void *,std::allocator<void *> >::begin
PUBLIC	?end@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ ; std::vector<void *,std::allocator<void *> >::end
PUBLIC	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAXHPBQAXABQAXV_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>
PUBLIC	??0?$_Ranit@PAXHPBQAXABQAX@std@@QAE@XZ		; std::_Ranit<void *,int,void * const *,void * const &>::_Ranit<void *,int,void * const *,void * const &>
PUBLIC	??0?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<void *,std::allocator<void *> >::_Vector_const_iterator<void *,std::allocator<void *> >
PUBLIC	??0?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z ; std::_Vector_iterator<void *,std::allocator<void *> >::_Vector_iterator<void *,std::allocator<void *> >
PUBLIC	?_Make_iter@?$vector@PAXV?$allocator@PAX@std@@@std@@QBE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@@Z ; std::vector<void *,std::allocator<void *> >::_Make_iter
PUBLIC	??8?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator==
PUBLIC	??9?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator!=
PUBLIC	??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAXU_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<void * *>
PUBLIC	??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAX@Z	; std::_Checked_base<void * *>
PUBLIC	??$_Iter_random@PAPAXPAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX0@Z ; std::_Iter_random<void * *,void * *>
PUBLIC	??$_Copy_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<void * *,void * *,std::random_access_iterator_tag>
PUBLIC	??$unchecked_copy@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z ; stdext::unchecked_copy<void * *,void * *>
PUBLIC	?erase@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@0@Z ; std::vector<void *,std::allocator<void *> >::erase
PUBLIC	?clear@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ; std::vector<void *,std::allocator<void *> >::clear
PUBLIC	??0?$allocator@PAX@std@@QAE@XZ			; std::allocator<void *>::allocator<void *>
PUBLIC	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
PUBLIC	??0_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::_Container_base_aux
PUBLIC	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
PUBLIC	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
PUBLIC	??$?0PAX@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><void *>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::_Container_base_aux_alloc_real<std::allocator<void *> >
PUBLIC	??0?$allocator@PAX@std@@QAE@ABV01@@Z		; std::allocator<void *>::allocator<void *>
PUBLIC	??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z ; std::_Vector_val<void *,std::allocator<void *> >::_Vector_val<void *,std::allocator<void *> >
PUBLIC	??$_Allocate@PAX@std@@YAPAPAXIPAPAX@Z		; std::_Allocate<void *>
PUBLIC	?allocate@?$allocator@PAX@std@@QAEPAPAXI@Z	; std::allocator<void *>::allocate
PUBLIC	?max_size@?$allocator@PAX@std@@QBEIXZ		; std::allocator<void *>::max_size
PUBLIC	?max_size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ ; std::vector<void *,std::allocator<void *> >::max_size
PUBLIC	?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ ; std::vector<void *,std::allocator<void *> >::_Xlen
PUBLIC	?_Buy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAE_NI@Z ; std::vector<void *,std::allocator<void *> >::_Buy
PUBLIC	??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >
PUBLIC	??1_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::~_Container_base_aux
PUBLIC	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::~_Container_base_aux_alloc_real<std::allocator<void *> >
PUBLIC	??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ; std::_Vector_val<void *,std::allocator<void *> >::~_Vector_val<void *,std::allocator<void *> >
PUBLIC	?deallocate@?$allocator@PAX@std@@QAEXPAPAXI@Z	; std::allocator<void *>::deallocate
PUBLIC	??$_Ptr_cat@PAPAXPAPAX@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAX0@Z ; std::_Ptr_cat<void * *,void * *>
PUBLIC	??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<void *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@@Z ; std::_Destroy_range<std::allocator<void *> >
PUBLIC	?_Destroy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXPAPAX0@Z ; std::vector<void *,std::allocator<void *> >::_Destroy
PUBLIC	?_Tidy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXXZ ; std::vector<void *,std::allocator<void *> >::_Tidy
PUBLIC	??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	??_C@_09BAECPDM@?$DO?$DO?5MonIPs?$AA@		; `string'
PUBLIC	??_C@_09CLAHNHIH@?$DM?$DM?5MonIPs?$AA@		; `string'
PUBLIC	?gbTerminate@@3HA				; gbTerminate
PUBLIC	?gbShutdown@@3HA				; gbShutdown
PUBLIC	?ghWnd@@3PAUHWND__@@A				; ghWnd
PUBLIC	?ghInstance@@3PAUHINSTANCE__@@A			; ghInstance
PUBLIC	?gbForceChecking@@3HA				; gbForceChecking
PUBLIC	?gszLogFilePrefix@@3PADA			; gszLogFilePrefix
PUBLIC	?gTickStart@@3_KA				; gTickStart
PUBLIC	??_C@_02BBAHNLBA@?$CFp?$AA@			; `string'
PUBLIC	??_C@_0BA@GBPLBEEL@SysStatus_Trace?$AA@		; `string'
PUBLIC	??_C@_03LBAKCJJ@dbg?$AA@			; `string'
PUBLIC	??_C@_03GLILPAEP@wnd?$AA@			; `string'
PUBLIC	??_C@_03NMGDDAFL@wmi?$AA@			; `string'
PUBLIC	??_C@_0CP@CLGPPHLF@?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4?$CF?4@ ; `string'
PUBLIC	??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@		; `string'
PUBLIC	??_C@_09BJLKJKJF@?$CFs?4?$CFs_old?$AA@		; `string'
PUBLIC	??_C@_0O@FHDHJHFN@SysStatus_Log?$AA@		; `string'
PUBLIC	??_C@_0EF@BJCOJGPD@?$AN?6?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4@ ; `string'
PUBLIC	??_C@_05OLKONLEL@?7?$CFs?$AN?6?$AA@		; `string'
PUBLIC	??_C@_06BEJGOBHG@?$CFs?4log?$AA@		; `string'
PUBLIC	??_C@_0BG@EELIKDKI@TID?5?$CF?45u?5ID?5?$CF?45u?5?$CFs?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@GIEOINGB@?$DO?$DO?5ChkLogFileSz?0?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0BJ@LGJHGBPF@?9?9?5ChkLogFileSz?0?5Opng?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BK@HOHICOFN@?9?9?5ChkLogFileSz?0?5?$CFs?5Sz?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_07KFBNGPEH@?$CFs?4?$CF?43d?$AA@		; `string'
PUBLIC	??_C@_0CA@MGCLJDML@?9?9?5ChkLogFileSz?0?5Trying?5opng?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CD@DNFINAJK@?9?9?5ChkLogFileSz?0?5Last?5file?5fnd?3?5@ ; `string'
PUBLIC	??_C@_0CL@JDMPMEKE@?9?9?5ChkLogFileSz?0?5Removing?5?$CFs?5?9?5o@ ; `string'
PUBLIC	??_C@_0CD@KIGAJNDH@?9?9?5ChkLogFileSz?0?5Renaming?5?$CFs?5?9?$DO?5@ ; `string'
PUBLIC	??_C@_06HFHPDHC@?$CFs?4000?$AA@			; `string'
PUBLIC	??_C@_0CD@PNMJAMBO@?9?9?5ChkLogFileSz?0?5Remaning?5?$CFs?5?9?$DO?5@ ; `string'
PUBLIC	??_C@_0BA@GCOGCGED@?$DM?$DM?5ChkLogFileSz?$AA@	; `string'
PUBLIC	??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@		; `string'
PUBLIC	??_C@_0BM@GCCDOOIB@?$CFs?5?$FLVID?3?$CFs?5PID?3?$CFs?5SN?3?$CFs?$FN?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BE@ENHKCHAG@New?5DeviceName?5null?$AA@	; `string'
PUBLIC	??_C@_04CFJMJGDJ@?$CF?42X?$AA@			; `string'
PUBLIC	??_C@_09KECABMHK@SysStatus?$AA@			; `string'
PUBLIC	??_C@_0CF@MLLEOGPJ@?$CFs_?$CF?44d?9?$CF?42d?9?$CF?42d_?$CF?42d?9?$CF?42d?9?$CF?42d@ ; `string'
PUBLIC	??_C@_0DE@KOKEPHBJ@CreateMiniDump?0?5Created?5MiniDump@ ; `string'
PUBLIC	??_C@_0ED@NLNOIJDN@CreateMiniDump?0?5Failed?5to?5create@ ; `string'
PUBLIC	??_C@_0GA@GFOAHNCA@AppUnhndldExcptFltr?0?5Attempt?5to?5@ ; `string'
PUBLIC	??_C@_0BJ@PPCHIOMP@?$CFs?0?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@ ; `string'
PUBLIC	??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@ ; `string'
PUBLIC	??_C@_0DA@DAMKDCLP@?9?9?5SetThrdName?0?5Tp?5?$CFp?0?5Name?5?$CFs?0?5@ ; `string'
PUBLIC	??_C@_0DN@OLKMHNED@?$DO?$DO?5StartThrd?0?5Name?5?$CFs?0?5Func?5?$CFp?0?5@ ; `string'
PUBLIC	??_C@_0BP@FDECIAPH@?9?9?5StartThrd?0?5?$CFs?5Id?5?$CFu?0?5Hnd?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_0CB@LFOPNEOO@?9?9?5StartThrd?0?5No?5?$CFs?5thrd?5created@ ; `string'
PUBLIC	??_C@_0BB@POKBMEDO@?$DM?$DM?5StartThrd?0?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_0BH@BDJONOMH@?$DM?$DM?5StartThrd?0?5ret?5True?$AA@ ; `string'
PUBLIC	??_C@_0BI@EBHNNPDK@?$DM?$DM?5StartThrd?0?5ret?5False?$AA@ ; `string'
PUBLIC	??_C@_0BJ@JJOKMIHG@?$DO?$DO?5EndPendgThrd?0?5Hndl?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_0BI@LKAHEPCO@?$DO?$DO?5RlsThrdStck?0?5Hndl?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_1BE@GJOFHIHD@?$AAn?$AAt?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BH@FCCILLCE@RtlFreeUserThreadStack?$AA@	; `string'
PUBLIC	??_C@_0BA@OFOICJDM@?$DM?$DM?5EndPendgThrd?$AA@	; `string'
PUBLIC	??_C@_0GB@KBNPPDGJ@WndProcMsg?0?5Wnd?5?$CFp?0?5Msg?50x?$CF?44X?0?5@ ; `string'
PUBLIC	??_C@_0BK@GJJBBOEE@Session?5Closure?5Requested?$AA@ ; `string'
PUBLIC	??_C@_0M@LLINGCEN@End?5Session?$AA@		; `string'
PUBLIC	??_C@_0CF@OJAKBKAK@User?5Defined?5?$CFs?0?5Size?5?$CFu?0?5DevTyp@ ; `string'
PUBLIC	??_C@_07NHAMMCDJ@Arrived?$AA@			; `string'
PUBLIC	??_C@_07PKIBBDFP@Removed?$AA@			; `string'
PUBLIC	??_C@_0BP@PNOLPDFB@Device?5?$CFs?0?5Size?5?$CFu?0?5DevType?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0BM@HKOFJDPP@Usb?5CHANGE?5Dev?5?$DM?$CFs?5GUID?5?$CFs?$DO?$AA@ ; `string'
PUBLIC	??_C@_0M@FPDKOEDO@USB?5ARRIVAL?$AA@		; `string'
PUBLIC	??_C@_0M@ENJCMGFB@USB?5?5REMOVE?$AA@		; `string'
PUBLIC	??_C@_0CG@OJJDNJOH@Volume?5CHANGE?5?$DMFlags?5?$CFp?0?5UnitMas@ ; `string'
PUBLIC	??_C@_0CA@FNGBCCOE@Oem?5CHANGE?5?$DMId?5?$CFp?0?5SuppFunc?5?$CFp?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BE@FJDGCJID@DevNode?5CHANGE?5?$DM?$CFp?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BB@LPBNHOKC@Port?5CHANGE?5?$DM?$CFs?$DO?$AA@ ; `string'
PUBLIC	??_C@_0CD@BNLENJBO@Net?5CHANGE?5?$DMResource?5?$CFp?0?5Flags?5?$CF@ ; `string'
PUBLIC	??_C@_0EN@GBOFOCLM@Handle?5CHANGE?5?$DMHandle?5?$CFp?0?5NameOf@ ; `string'
PUBLIC	??_C@_0CK@KDAHPGC@Would?5you?5like?5to?5close?5this?5app@ ; `string'
PUBLIC	??_C@_0P@BIPEBJDO@Exit?5Requested?$AA@		; `string'
PUBLIC	??_C@_0DC@MBHJGPCP@Would?5you?5like?5to?5quickly?5close?5@ ; `string'
PUBLIC	??_C@_0BF@CDGGKCEM@Quick?5Exit?5Requested?$AA@	; `string'
PUBLIC	??_C@_0L@EMLHDHFB@?$DO?$DO?5ThrdMsg?$AA@	; `string'
PUBLIC	??_C@_0BA@JDKJFHEL@SysStatusWClass?$AA@		; `string'
PUBLIC	??_C@_0BK@MOCDLCEG@?$DM?$DM?5ThrdMsg?0?5RegCls?5?$CFu?0?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BN@CBADGOHO@?$DM?$DM?5ThrdMsg?0?5CreateWnd?5?$CFu?0?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0L@BACOFOKN@?$DM?$DM?5ThrdMsg?$AA@	; `string'
PUBLIC	??_C@_0L@JKENOCG@?$DO?$DO?5ThrdUSB?$AA@		; `string'
PUBLIC	??_C@_0BP@GBFCDAOJ@?$DM?$DM?5ThrdUSB?0?5New?5USB?5class?5null?$AA@ ; `string'
PUBLIC	??_C@_0L@FFDNLHNK@?$DM?$DM?5ThrdUSB?$AA@	; `string'
PUBLIC	??_C@_0M@DOPFDNB@?$DO?$DO?5ProcInfo?$AA@	; `string'
PUBLIC	??_C@_0CO@LMCBGMGC@Processes?5Informaton?0?5Number?5of?5@ ; `string'
PUBLIC	??_C@_0OJ@BFFOFANH@?$DO?5?5?5?5?5?5Process?5Name?0?5ProcessID?0?5@ ; `string'
PUBLIC	??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@		; `string'
PUBLIC	??_C@_0EH@FOMPOKBN@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CF02d@ ; `string'
PUBLIC	??_C@_0DO@MLNPPNEI@?$DO?5?$CF?43d?0?5?$DMunknown?$DO?0?5?$CFu?0?5?$DP?0?5?$DP?0?5?$DP?0?5@ ; `string'
PUBLIC	??_C@_0CK@JDCGCMFK@ProcessInfo?0?5EnumProcesses?5faile@ ; `string'
PUBLIC	??_C@_0M@LHLIHEIP@?$DM?$DM?5ProcInfo?$AA@	; `string'
PUBLIC	??_C@_0N@LBFHMDOO@?$DO?$DO?5HwProfile?$AA@	; `string'
PUBLIC	??_C@_0DA@OIKPBLGF@Hardware?5Profile?0?5DockInfo?5?$CFp?0?5G@ ; `string'
PUBLIC	??_C@_0CG@MGHJNPJJ@HwProfile?0?5GetCurrentHwProfile?5?$CF@ ; `string'
PUBLIC	??_C@_0N@DNDAOIDK@?$DM?$DM?5HwProfile?$AA@	; `string'
PUBLIC	??_C@_0BK@DFNBACLA@GetCurrentProcessorNumber?$AA@ ; `string'
PUBLIC	??_C@_08PNLNEKOB@kernel32?$AA@			; `string'
PUBLIC	??_C@_0EH@HJFNKFOJ@?9?9?5CurrentProcessorNumber?0?5GetCu@ ; `string'
PUBLIC	??_C@_0L@BFGFHKGB@?$DO?$DO?5SysInfo?$AA@	; `string'
PUBLIC	??_C@_0BD@EBOFFHEB@x64?5?$CIAMD?5or?5Intel?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BE@BAGOKCHN@Intel?5Itanium?9based?$AA@	; `string'
PUBLIC	??_C@_03NDFEINMN@x86?$AA@			; `string'
PUBLIC	??_C@_07NBCGADJA@Unknown?$AA@			; `string'
PUBLIC	??_C@_0FN@KGKHOIOF@Computer?3?5?$CFs?0?5Processor?$CIs?$CJ?5?$CFu?5?$CFf@ ; `string'
PUBLIC	??_C@_0L@EJPMBDJN@?$DM?$DM?5SysInfo?$AA@	; `string'
PUBLIC	??_C@_09GNLGFJCP@?$DO?$DO?5OSInfo?$AA@		; `string'
PUBLIC	??_C@_0BC@LGEIIGCP@Domain?5Controller?$AA@	; `string'
PUBLIC	??_C@_06LGMEBDBC@Server?$AA@			; `string'
PUBLIC	??_C@_0M@CILGCIDH@Workstation?$AA@		; `string'
PUBLIC	??_C@_0EG@OPOFGEHK@OSInfo?0?5Version?5?$CFu?4?$CFu?4?$CFu?0?5Platfo@ ; `string'
PUBLIC	??_C@_09EHLFKBJE@?$DM?$DM?5OSInfo?$AA@		; `string'
PUBLIC	??_C@_09CJJPFOJ@?$DO?$DO?5SysMem?$AA@		; `string'
PUBLIC	??_C@_0O@OAHOAHIO@System?5Memory?$AA@		; `string'
PUBLIC	??_C@_0BB@DIEGGMCF@Usage?3?5?$CFu?$CF?$CF?5used?$AA@ ; `string'
PUBLIC	??_C@_0CC@JHNBDNDC@Physical?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@ ; `string'
PUBLIC	??_C@_0CC@PBKOHCPF@Pagefile?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@ ; `string'
PUBLIC	??_C@_0DB@BKHHAKDB@Virtual?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avail@ ; `string'
PUBLIC	??_C@_09CIJKANFC@?$DM?$DM?5SysMem?$AA@		; `string'
PUBLIC	??_C@_0M@OJEMNBAD@?$DO?$DO?5SysTimes?$AA@	; `string'
PUBLIC	??_C@_0N@HHJCFDFH@System?5Times?$AA@		; `string'
PUBLIC	??_C@_0CE@PJKLEAEE@Kernel?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5@ ; `string'
PUBLIC	??_C@_0CC@JKEHGGOG@User?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ@ ; `string'
PUBLIC	??_C@_0BN@JFNEHINJ@Idle?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ?4?$AA@ ; `string'
PUBLIC	??_C@_0DP@OCMJGDEB@Processor?3?5?$CFI64u?5counts?0?5?$CFI64u?5c@ ; `string'
PUBLIC	??_C@_0M@FNBLPGFN@?$DM?$DM?5SysTimes?$AA@	; `string'
PUBLIC	??_C@_09MOKIPJGJ@NoRootDir?$AA@			; `string'
PUBLIC	??_C@_05OCBIINAK@Fixed?$AA@			; `string'
PUBLIC	??_C@_06MHHFENDB@Remote?$AA@			; `string'
PUBLIC	??_C@_05JIFOIGMJ@CDRom?$AA@			; `string'
PUBLIC	??_C@_07CPJGKNJN@RamDisk?$AA@			; `string'
PUBLIC	??_C@_0L@DELJGCCE@?$DO?$DO?5LogDrvs?$AA@	; `string'
PUBLIC	??_C@_0BM@FAMDJNNB@Logical?5Drivers?5?$CFu?5?$CI0x?$CF?48X?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BJ@BENIJAPK@?$DO?$DO?5?$CF?43d?0?5?$CFs?3?5Type?5?$CFs?$CI?$CFu?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0GE@FHMIJHPP@?5?5?5VolumeInfo?0?5Name?5?$CFs?0?5SerialNu@ ; `string'
PUBLIC	??_C@_0GJ@NOKMBBI@?5?5?5FreeSpace?0?5SectorsPerCluster?5@ ; `string'
PUBLIC	??_C@_0L@GICAALNI@?$DM?$DM?5LogDrvs?$AA@	; `string'
PUBLIC	??_C@_0L@INHKNAJI@?$DO?$DO?5SysDirs?$AA@	; `string'
PUBLIC	??_C@_0BD@OAHOLNHD@System?5Directories?$AA@	; `string'
PUBLIC	??_C@_09LGICPEGI@SysDir?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0M@JFNOOIEA@TempPath?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_09PEBHDCJJ@WinDir?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0N@JJNMAABC@WinSysDir?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0L@NBODLJGE@?$DM?$DM?5SysDirs?$AA@	; `string'
PUBLIC	??_C@_0BC@MLMEFHGM@?$DO?$DO?5SysLogProcInfo?$AA@ ; `string'
PUBLIC	??_C@_0BP@KHGALBC@GetLogicalProcessorInformation?$AA@ ; `string'
PUBLIC	??_C@_0DO@CNICBAHJ@?$DM?$DM?5SysLogProcInfo?0?5Out?0?5Unsupp?5G@ ; `string'
PUBLIC	??_C@_0CG@LHEIAGGO@?9?9?5SysLogProcInfo?0?5Allocation?5fa@ ; `string'
PUBLIC	??_C@_0CF@KLILJGPG@?9?9?5SysLogProcInfo?0?5GLPI?5Error?5?$CFu@ ; `string'
PUBLIC	??_C@_0EC@BGADHKMF@?9?9?5SysLogProcInfo?0?5Unsupp?5LOGICA@ ; `string'
PUBLIC	??_C@_0CB@ECHENMHH@Logical?5Processor?$CIs?$CJ?5Information@ ; `string'
PUBLIC	??_C@_0BJ@CBGNJNLO@Number?5of?5NUMA?5nodes?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0CK@CIFFOGGE@Number?5of?5physical?5processor?5pac@ ; `string'
PUBLIC	??_C@_0BO@JLJNFPPO@Number?5of?5processor?5cores?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0CB@NEBFNBCF@Number?5of?5logical?5processors?3?5?$CFd@ ; `string'
PUBLIC	??_C@_0CO@JLHKKOJE@Number?5of?5processor?5L1?1L2?1L3?5cac@ ; `string'
PUBLIC	??_C@_0BC@BKCMKMCI@?$DM?$DM?5SysLogProcInfo?$AA@ ; `string'
PUBLIC	??_C@_0L@ILKGPHOB@?$DO?$DO?5DevDrvs?$AA@	; `string'
PUBLIC	??_C@_0BO@PHKHDLGJ@Device?5Drivers?0?5Number?5of?3?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0P@OBFOPNMD@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0EB@GKALJOAD@DevDrvs?0?5EnumDeviceDrivers?5faile@ ; `string'
PUBLIC	??_C@_0L@NHDPJOBN@?$DM?$DM?5DevDrvs?$AA@	; `string'
PUBLIC	??_C@_0M@CDFFAHFO@?$DO?$DO?5PerfInfo?$AA@	; `string'
PUBLIC	??_C@_0BI@ECNHKKAA@Performance?5Information?$AA@ ; `string'
PUBLIC	??_C@_0CE@ONMEHFLA@Commit?3?5Total?5?$CFu?0?5Limit?5?$CFu?0?5Peak@ ; `string'
PUBLIC	??_C@_0CB@KFDPCIGB@Physical?3?5Total?5?$CFu?0?5Available?5?$CFu@ ; `string'
PUBLIC	??_C@_0BA@DCNNFMJH@System?5Cache?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0CI@POMBEGEK@Kernel?3?5Total?5?$CFu?0?5Paged?5?$CFu?0?5Nonp@ ; `string'
PUBLIC	??_C@_0N@HEDGONEI@Page?5Size?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0CD@DBCKLHBG@Process?5?$CFu?0?5Handles?5?$CFu?0?5Threads?5@ ; `string'
PUBLIC	??_C@_0CL@PIJNDBHN@PerfInfo?0?5GetPerformanceInfo?5fai@ ; `string'
PUBLIC	??_C@_0M@JHACCAAA@?$DM?$DM?5PerfInfo?$AA@	; `string'
PUBLIC	?gpPrinterInfoList@@3PAU_printer_info_list_@@A	; gpPrinterInfoList
PUBLIC	??_C@_0P@CKNBFJNB@?$DO?$DO?5GetPtrsList?$AA@	; `string'
PUBLIC	??_C@_0BL@CMACENMK@?$DM?$DM?5GetPtrsList?0?5No?5Printer?$AA@ ; `string'
PUBLIC	??_C@_0CB@CEENFMON@?$DM?$DM?5GetPtrsList?0?5new?5PtrInfo?5null@ ; `string'
PUBLIC	??_C@_0CL@CMLCIBBP@?$DM?$DM?5GetPtrsList?0?5EnumPrinters?5Err@ ; `string'
PUBLIC	??_C@_0CF@POBEDBNN@?$DM?$DM?5GetPtrsList?0?5new?5PrtInfoList?5@ ; `string'
PUBLIC	??_C@_0BL@DODNOLI@Printers?5Information?5?$CI?$CFd?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_0FD@LPLLHANM@?$DO?5?5?5?5?5Printer?0?5Port?0?5Driver?0?5Pro@ ; `string'
PUBLIC	??_C@_0P@EABBNIJO@?$DMLocalPrinter?$DO?$AA@	; `string'
PUBLIC	??_C@_0DB@OBDCAEAF@?$DO?5?$CF?42d?3?5?2?2?$CFs?2?$CFs?0?5?5?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFu@ ; `string'
PUBLIC	??_C@_0P@GDDJCMON@?$DM?$DM?5GetPtrsList?$AA@	; `string'
PUBLIC	??_C@_0CA@MEDOMPCD@?$DO?$DO?5GetBinList?0?5Name?5?$CFs?0?5Port?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0DP@ODPFIDLO@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@ ; `string'
PUBLIC	??_C@_0CJ@MFGEJMEH@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINS?5@ ; `string'
PUBLIC	??_C@_0DD@GBLOLICC@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5PTRDATA_@ ; `string'
PUBLIC	??_C@_0DN@NNGIOEEB@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@ ; `string'
PUBLIC	??_C@_0CN@HGGHLGCE@?9?9?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINNA@ ; `string'
PUBLIC	??_C@_0EB@NDHMGLE@?9?9?5GetBinList?0?5DeviceCapabilitie@ ; `string'
PUBLIC	??_C@_0BH@CEPOJCOE@?$DM?$DM?5GetBinList?0?5List?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_0CC@ONAFHJDF@?$DO?$DO?5GetPaperList?0?5Name?5?$CFs?0?5Port?5?$CF@ ; `string'
PUBLIC	??_C@_0ED@BJPJPBDI@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@ ; `string'
PUBLIC	??_C@_0CN@BIOGLDPF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@ ; `string'
PUBLIC	??_C@_0DF@MINJLAHF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5PTRDAT@ ; `string'
PUBLIC	??_C@_0EB@CEGPPGMD@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@ ; `string'
PUBLIC	??_C@_0DA@NJCIHNJI@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@ ; `string'
PUBLIC	??_C@_0EE@PHEGEMLJ@?9?9?5GetPaperList?0?5DeviceCapabilit@ ; `string'
PUBLIC	??_C@_0DB@DLBCIEDL@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@ ; `string'
PUBLIC	??_C@_0EF@EEKEBLFH@?9?9?5GetPaperList?0?5DeviceCapabilit@ ; `string'
PUBLIC	??_C@_0BJ@HGBNGAMD@?$DM?$DM?5GetPaperList?0?5List?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_0CG@PBHDOEPC@?$DO?$DO?5GetMediaTypeList?0?5Name?5?$CFs?0?5Po@ ; `string'
PUBLIC	??_C@_0EL@HJFPMCKK@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@ ; `string'
PUBLIC	??_C@_0DF@EKPICGIC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@ ; `string'
PUBLIC	??_C@_0DJ@IAEPPFOH@?$DM?$DM?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5PT@ ; `string'
PUBLIC	??_C@_0EJ@PFOHCMBM@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@ ; `string'
PUBLIC	??_C@_0DJ@CAKMLHPC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@ ; `string'
PUBLIC	??_C@_0EN@LODPGLOM@?9?9?5GetMediaTypeList?0?5DeviceCapab@ ; `string'
PUBLIC	??_C@_0BN@IBLEBHCE@?$DM?$DM?5GetMediaTypeList?0?5List?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_0L@DBGBMPOH@?$DO?$DO?5PtrInfo?$AA@	; `string'
PUBLIC	??_C@_0BH@ENEDNFCI@?$DM?$DM?5PtrInfo?0?5No?5Printer?$AA@ ; `string'
PUBLIC	??_C@_0BN@HOILGMMA@?$DM?$DM?5PtrInfo?0?5PtrInfoList?5null?$AA@ ; `string'
PUBLIC	??_C@_0CG@GNJLFBNH@Info?5from?5?$CFs?0?5Port?5?$CFs?0?5Driver?5?$CFs@ ; `string'
PUBLIC	??_C@_0EH@EFLGGGFH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0DB@OINKGGOI@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_ENUMRESO@ ; `string'
PUBLIC	??_C@_0EF@GAIMDBJI@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0BJ@PLJPAGFI@DC_ENUMRESOLUTIONS?5?$CI?$CFd?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_0P@OBKMFCDP@?$DO?$CF?42d?3?5?$CFu?5x?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0BL@IBIADDJ@DC_BINS?0?5DC_BINNAMES?5?$CI?$CFd?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_0O@KDMGFAIN@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CP@BNOBPGPC@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@ ; `string'
PUBLIC	??_C@_0CN@GKNAEPGN@DC_PAPERS?0?5DC_PAPERNAMES?0?5DC_PAP@ ; `string'
PUBLIC	??_C@_0BJ@ENBLCNAO@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?0?5?$CF?45d?5?$CF?45d?$AA@ ; `string'
PUBLIC	??_C@_0DB@CMDEFNNK@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@ ; `string'
PUBLIC	??_C@_0BC@NAFPPPIH@DC_ORIENTATION?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@GOBEBGOJ@DC_COPIES?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0O@CECDKEDL@DC_COLLATE?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BC@CPGDDBNJ@DC_COLORDEVICE?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@JAMONLMJ@DC_DUPLEX?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0N@BOEFEHCB@DC_DRIVER?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0O@BHGLDB@DC_VERSION?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0N@FMBEEHK@DC_FIELDS?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0CC@DHNLPIEG@DC_MAXEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@ ; `string'
PUBLIC	??_C@_0CC@BIAELLNL@DC_MINEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@ ; `string'
PUBLIC	??_C@_0L@ICJGKLML@DC_SIZE?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0N@ONNHJAOP@DC_STAPLE?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0P@MLIHNHLK@DC_TRUETYPE?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0DL@BCBOOPNM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0CF@DGNIMKMD@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_NUP?5mem?5@ ; `string'
PUBLIC	??_C@_0DJ@OGEOOIOH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0N@EHIGBDLP@DC_NUP?5?$CI?$CFd?$CJ?3?$AA@	; `string'
PUBLIC	??_C@_09MFCBGNBM@?$DO?$CF?42d?3?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0EI@JLEFIGNJ@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0DC@MCOOCAIH@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_FILEDEPE@ ; `string'
PUBLIC	??_C@_0EG@KMPBJHDP@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0BK@NAHDGPCH@DC_FILEDEPENDENCIES?5?$CI?$CFd?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_09JDHLMKJK@?$DO?$CF?42d?3?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0EC@NHFFPEJM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0CM@KMOLCCC@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_MEDIAREA@ ; `string'
PUBLIC	??_C@_0EA@BCFCBCDG@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0BE@JHLOAEJA@DC_MEDIAREADY?5?$CI?$CFd?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_0CH@OFCLBKDH@DC_MEDIATYPES?0?5DC_MEDIATYPENAMES@ ; `string'
PUBLIC	??_C@_0DF@CIBLFONP@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@ ; `string'
PUBLIC	??_C@_0ED@IFJFLJEL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0CN@FDCGHEM@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_PERSONAL@ ; `string'
PUBLIC	??_C@_0EB@NKGMPEJL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ ; `string'
PUBLIC	??_C@_0BF@JJAELOOF@DC_PERSONALITY?5?$CI?$CFd?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_08JFBLCBEM@DEVMODE?3?$AA@			; `string'
PUBLIC	??_C@_0BA@KDNAKNNN@?$DO?5DeviceName?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0BB@GFIGJBOF@?$DO?5SpecVersion?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BD@FHCKIAEA@?$DO?5DriverVersion?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_09EJHHAJLO@?$DO?5Size?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0BB@NFLJLFB@?$DO?5DriverExtra?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BG@JDMKIO@?$DO?5DriverFields?50x?$CF?48X?$AA@ ; `string'
PUBLIC	??_C@_0M@PJOJJBEC@?$DO?5Orient?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0P@MIJBPCPJ@?$DO?5PaperSize?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BB@ECLINGE@?$DO?5PaperLenght?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@EJLKBGAF@?$DO?5PaperWidth?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0L@CIICACOJ@?$DO?5Scale?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0M@MCOJLIEN@?$DO?5Copies?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BD@PBLNKDE@?$DO?5DefaultSource?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BB@FEEDGEPE@?$DO?5PrintQulity?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0L@OGGOANCL@?$DO?5Color?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0M@DMDDHFGN@?$DO?5Duplex?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BB@ODANIHPJ@?$DO?5YResolution?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0O@ODMOOLLN@?$DO?5TTOption?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@DEPFBBGA@?$DO?5Collate?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@NAFNONHG@?$DO?5FormName?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0P@HBAMONIO@?$DO?5LogPixels?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@IJGBMLDF@?$DO?5BitsPerPel?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0P@GJDEABGN@?$DO?5PelsWidth?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0BA@FJKIIKDN@?$DO?5PelsHeight?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0P@BALKIIFI@?$DO?5ICMMethod?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0P@FBGPJDBI@?$DO?5ICMIntent?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0P@DGLLLDPA@?$DO?5MediaType?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0BA@IBDIEDAP@?$DO?5DitherType?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0P@ODIJDFHK@?$DO?5Reserved1?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0P@KECJEPKK@?$DO?5Reserved2?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0BC@ILEBHAGL@?$DO?5PanningWidth?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0BD@ODPAHJGJ@?$DO?5PanningHeight?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0CG@GNEJHKAM@?9?9?5PtrInfo?0?5OpenPrinter?5Err?5?$CFd?5M@ ; `string'
PUBLIC	??_C@_0M@CPAOAHIM@DeviceCaps?3?$AA@		; `string'
PUBLIC	??_C@_0BD@JDPBNNPN@?$DO?5DRIVERVERSION?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BA@KDKPJOH@?$DO?5TECHNOLOGY?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@HMCMNAPC@?$DO?5HORZSIZE?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@LDGIGNAG@?$DO?5VERTSIZE?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@IFBEPCKP@?$DO?5HORZRES?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@HLDMJPJJ@?$DO?5VERTRES?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0P@CHMKJDGJ@?$DO?5BITSPIXEL?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0M@DABMECAD@?$DO?5PLANES?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@GCBODPHK@?$DO?5NUMBRUSHES?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@HHCKOKCG@?$DO?5NUMPENS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@IJEEOFOD@?$DO?5NUMMARKERS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@HIAAJLOF@?$DO?5NUMFONTS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0P@CDPEOCLN@?$DO?5NUMCOLORS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BB@BIAFAHJC@?$DO?5PDEVICESIZE?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0P@MJKILKAG@?$DO?5CURVECAPS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@NIBLPDAA@?$DO?5LINECAPS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BD@NDEFMMIK@?$DO?5POLYGONALCAPS?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0O@EJBOFNFI@?$DO?5TEXTCAPS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@NPFDNMHE@?$DO?5CLIPCAPS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@OCKGHOJF@?$DO?5RASTERCAPS?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@DGFFNBBI@?$DO?5ASPECTX?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0N@LDFPIKI@?$DO?5ASPECTY?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@KAIPPGFP@?$DO?5ASPECTXY?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@NDEAPPCA@?$DO?5LOGPIXELSX?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BA@OOCANGJA@?$DO?5LOGPIXELSY?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BB@KNEJGJKJ@?$DO?5SIZEPALETTE?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BB@KMMENDMI@?$DO?5NUMRESERVED?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0O@GGNNNIFP@?$DO?5COLORRES?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BD@HDEIPKKB@?$DO?5PHYSICALWIDTH?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BE@BHEFJOBO@?$DO?5PHYSICALHEIGHT?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BF@PADOFFNF@?$DO?5PHYSICALOFFSETX?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BF@MNFOHMGF@?$DO?5PHYSICALOFFSETY?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BE@LLMKMDFO@?$DO?5SCALINGFACTORX?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BE@IGKKOKOO@?$DO?5SCALINGFACTORY?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0O@KHHELDLL@?$DO?5VREFRESH?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BE@COAHGLLD@?$DO?5DESKTOPVERTRES?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BE@NACPAGIF@?$DO?5DESKTOPHORZRES?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BC@JFPGOKHF@?$DO?5BLTALIGNMENT?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BE@BAMFBECL@?$DO?5SHADEBLENDCAPS?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0BD@DKIEMMJN@?$DO?5COLORMGMTCAPS?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_09IGELCPAM@Layout?5?$CFu?$AA@		; `string'
PUBLIC	??_C@_0O@FBFECABI@DEFAULT?5FONT?3?$AA@		; `string'
PUBLIC	??_C@_0M@JCFCFHLH@?$DO?5Height?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0L@KBIDCEMN@?$DO?5Width?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0P@DLDGLOB@?$DO?5Escapment?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0BB@DFLFEINK@?$DO?5Orientation?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0M@EEPHINNC@?$DO?5Weight?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0P@FOGJLDPM@?$DO?5Italic?5?$CF?42Xh?$AA@	; `string'
PUBLIC	??_C@_0BC@IHAMIHEE@?$DO?5Underline?5?$CF?42Xh?$AA@ ; `string'
PUBLIC	??_C@_0BC@MFABLFLO@?$DO?5StrikeOut?5?$CF?42Xh?$AA@ ; `string'
PUBLIC	??_C@_0BA@CJMDNNAL@?$DO?5CharSet?5?$CF?42Xh?$AA@ ; `string'
PUBLIC	??_C@_0BF@IIGPOAFP@?$DO?5OutPrecision?5?$CF?42Xh?$AA@ ; `string'
PUBLIC	??_C@_0BG@FHJOGBNN@?$DO?5ClipPrecision?5?$CF?42Xh?$AA@ ; `string'
PUBLIC	??_C@_0BA@PONLFNLB@?$DO?5Quality?5?$CF?42Xh?$AA@ ; `string'
PUBLIC	??_C@_0BH@FCEMNLND@?$DO?5PitchAndFamily?5?$CF?42Xh?$AA@ ; `string'
PUBLIC	??_C@_0O@PBJPIOLO@?$DO?5FaceName?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0BN@PNGCEDEF@?9?9?5PtrInfo?0?5new?5LOGFONT?5null?$AA@ ; `string'
PUBLIC	??_C@_0CD@PFIFHLGI@?9?9?5PtrInfo?0?5CreateIC?5Err?5?$CFd?5Msg?5@ ; `string'
PUBLIC	??_C@_0L@GNPIKGBL@?$DM?$DM?5PtrInfo?$AA@	; `string'
PUBLIC	??_C@_04HPMIDMKH@True?$AA@			; `string'
PUBLIC	??_C@_05MKDOIIA@False?$AA@			; `string'
PUBLIC	??_C@_0BJ@JNNHNEI@?$DO?$DO?5GetSysIPAddrs?0?5?$CFp?0?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BD@JGGPHJBD@IP?5Addresses?5?$CI?$CFu?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_09BDGNKGNI@?$DO?5?$CF02u?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0BB@CMFNMPNL@?$DM?$DM?5GetSysIPAddrs?$AA@	; `string'
PUBLIC	??_C@_0O@BHNLPBFJ@?$DO?$DO?5GetSysDets?$AA@	; `string'
PUBLIC	??_C@_09NLLCGGEI@HwProfile?$AA@			; `string'
PUBLIC	??_C@_07JFBHEENG@SysInfo?$AA@			; `string'
PUBLIC	??_C@_06HKOPCFLK@OSInfo?$AA@			; `string'
PUBLIC	??_C@_0BA@JCIBBNDO@SysLogPrcsrInfo?$AA@		; `string'
PUBLIC	??_C@_07NAIOOCP@SysDirs?$AA@			; `string'
PUBLIC	??_C@_0O@JGOJIALP@?$DM?$DM?5GetSysDets?$AA@	; `string'
PUBLIC	??_C@_0N@DKCIAKLO@?$DO?$DO?5GetSysSts?$AA@	; `string'
PUBLIC	??_C@_08LMMJIFBC@SysTimes?$AA@			; `string'
PUBLIC	??_C@_06BFMAIJHM@SysMem?$AA@			; `string'
PUBLIC	??_C@_08HGNAFDEP@PerfInfo?$AA@			; `string'
PUBLIC	??_C@_08FGGKAHMA@ProcInfo?$AA@			; `string'
PUBLIC	??_C@_0N@LGEPCBGK@?$DM?$DM?5GetSysSts?$AA@	; `string'
PUBLIC	??_C@_07LEMLFMJD@LogDrvs?$AA@			; `string'
PUBLIC	??_C@_03IONNGCBN@USB?$AA@			; `string'
PUBLIC	??_C@_08IHNDGAAK@DevDrvrs?$AA@			; `string'
PUBLIC	??_C@_07LBBDPBFA@PtrInfo?$AA@			; `string'
PUBLIC	??_C@_0BC@OAHODHDF@?$DO?$DO?5ThrdWMISysPerf?$AA@ ; `string'
PUBLIC	??_C@_0BC@DBJGMMHB@?$DM?$DM?5ThrdWMISysPerf?$AA@ ; `string'
PUBLIC	??_C@_0BB@JJECDJHH@?$DO?$DO?5ThrdWMIHwSnsr?$AA@	; `string'
PUBLIC	??_C@_0BB@MKNOIMND@?$DM?$DM?5ThrdWMIHwSnsr?$AA@	; `string'
PUBLIC	??_C@_0BC@CBIOEKJP@?$DO?$DO?5ThrdWMISysVols?$AA@ ; `string'
PUBLIC	??_C@_0BC@PAGGLBNL@?$DM?$DM?5ThrdWMISysVols?$AA@ ; `string'
PUBLIC	??_C@_0N@LKBNMLDB@?$DO?$DO?5GetWMISts?$AA@	; `string'
PUBLIC	??_C@_0L@KDFOBJKP@WMISysPerf?$AA@		; `string'
PUBLIC	??_C@_09NAIFMJBP@WMIHwSnsr?$AA@			; `string'
PUBLIC	??_C@_0L@GCKOGEAF@WMISysVols?$AA@		; `string'
PUBLIC	??_C@_0N@DGHKOAOF@?$DM?$DM?5GetWMISts?$AA@	; `string'
PUBLIC	??_C@_0L@PGBNDJPK@?$DO?$DO?5WinMain?$AA@	; `string'
PUBLIC	??_C@_0BG@FONLKPFK@SysStatus?0?5CmdLine?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_07GKIGKNOK@runonce?$AA@			; `string'
PUBLIC	??_C@_07KNKAAJIE@sysinfo?$AA@			; `string'
PUBLIC	??_C@_05NAPFDJNG@timer?$AA@			; `string'
PUBLIC	??_C@_07MMMFAJOG@ThrdMsg?$AA@			; `string'
PUBLIC	??_C@_06NNJPAOHJ@ThrWMI?$AA@			; `string'
PUBLIC	??_C@_03CCLAEDDF@Yes?$AA@			; `string'
PUBLIC	??_C@_02JINPPBEP@No?$AA@			; `string'
PUBLIC	??_C@_0BH@ICNNMNOE@Net?5Alive?$DP?5?$CFs?0?5Type?5?$CFu?$AA@ ; `string'
PUBLIC	??_C@_0BA@HGBCLIME@Net?5Chkg?5Err?5?$CFu?$AA@	; `string'
PUBLIC	??_C@_0BI@PLMFNPPL@?9?9?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@ ; `string'
PUBLIC	??_C@_0CC@PCCAGIIF@SysStatus?5?9?5Running?5for?5?$CF02d?3?$CF02@ ; `string'
PUBLIC	??_C@_0BJ@LIJJDDJF@WinMain?0?5Wait?5ThrdMsg?5?$CFX?$AA@ ; `string'
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__vsnprintf:PROC
EXTRN	__imp__GetFileSize@8:PROC
EXTRN	__imp__SetFilePointer@16:PROC
EXTRN	_remove:PROC
EXTRN	_rename:PROC
EXTRN	__imp__FormatMessageA@28:PROC
EXTRN	__imp__LoadLibraryExA@12:PROC
EXTRN	_isdigit:PROC
EXTRN	_strchr:PROC
EXTRN	_sprintf:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__GetLocalTime@4:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	_MiniDumpWriteDump@28:PROC
EXTRN	_exit:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	__imp__RaiseException@16:PROC
EXTRN	__beginthreadex:PROC
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__TerminateThread@8:PROC
EXTRN	__imp__GetExitCodeThread@8:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__RegisterDeviceNotificationA@12:PROC
EXTRN	__imp__UnregisterDeviceNotification@4:PROC
EXTRN	__imp__RegisterClassA@4:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__GetProcessHandleCount@8:PROC
EXTRN	__imp__GetProcessTimes@20:PROC
EXTRN	__imp__OpenProcess@12:PROC
EXTRN	_EnumProcesses@12:PROC
EXTRN	_EnumProcessModules@16:PROC
EXTRN	_GetProcessMemoryInfo@12:PROC
EXTRN	__imp__GetCurrentHwProfileA@4:PROC
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__imp__GetComputerNameA@8:PROC
EXTRN	__imp__GetVersionExA@4:PROC
EXTRN	__imp__GlobalMemoryStatusEx@4:PROC
EXTRN	_GetSystemTimes@12:PROC
EXTRN	__imp__FileTimeToSystemTime@8:PROC
EXTRN	__imp__QueryPerformanceCounter@4:PROC
EXTRN	__imp__QueryPerformanceFrequency@4:PROC
EXTRN	__imp__GetLogicalDrives@0:PROC
EXTRN	__imp__GetLogicalDriveStringsA@8:PROC
EXTRN	__imp__GetDriveTypeA@4:PROC
EXTRN	__imp__GetDiskFreeSpaceA@20:PROC
EXTRN	__imp__GetVolumeInformationA@32:PROC
EXTRN	__imp__GetSystemDirectoryA@8:PROC
EXTRN	__imp__GetTempPathA@8:PROC
EXTRN	__imp__GetWindowsDirectoryA@8:PROC
EXTRN	__imp__GetSystemWindowsDirectoryA@8:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_EnumDeviceDrivers@12:PROC
EXTRN	_GetDeviceDriverBaseNameA@12:PROC
EXTRN	_GetDeviceDriverFileNameA@12:PROC
EXTRN	_GetPerformanceInfo@8:PROC
EXTRN	_EnumPrintersA@28:PROC
EXTRN	_strncpy:PROC
EXTRN	__imp__CreateICA@16:PROC
EXTRN	__imp__DeleteDC@4:PROC
EXTRN	__imp__DeviceCapabilitiesA@20:PROC
EXTRN	__imp__GetCurrentObject@8:PROC
EXTRN	__imp__GetDeviceCaps@8:PROC
EXTRN	__imp__GetLayout@4:PROC
EXTRN	__imp__GetObjectA@12:PROC
EXTRN	_OpenPrinterA@12:PROC
EXTRN	_DocumentPropertiesA@24:PROC
EXTRN	_ClosePrinter@4:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__endthreadex:PROC
EXTRN	__strlwr:PROC
EXTRN	_strstr:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__SetUnhandledExceptionFilter@4:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__SetWindowTextA@8:PROC
EXTRN	_atoi:PROC
EXTRN	_GetModuleBaseNameA@16:PROC
EXTRN	__imp__PathRemoveExtensionA@4:PROC
EXTRN	_IsNetworkAlive@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__UnregisterWaitEx@8:PROC
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
EXTRN	_atexit:PROC
?gbTerminate@@3HA DD 01H DUP (?)			; gbTerminate
?gbShutdown@@3HA DD 01H DUP (?)				; gbShutdown
?ghWnd@@3PAUHWND__@@A DD 01H DUP (?)			; ghWnd
?ghInstance@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; ghInstance
?gbForceChecking@@3HA DD 01H DUP (?)			; gbForceChecking
?gszLogFilePrefix@@3PADA DB 0400H DUP (?)		; gszLogFilePrefix
	ALIGN	8

?gTickStart@@3_KA DQ 01H DUP (?)			; gTickStart
?gpPrinterInfoList@@3PAU_printer_info_list_@@A DD 01H DUP (?) ; gpPrinterInfoList
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LIJJDDJF@WinMain?0?5Wait?5ThrdMsg?5?$CFX?$AA@
CONST	SEGMENT
??_C@_0BJ@LIJJDDJF@WinMain?0?5Wait?5ThrdMsg?5?$CFX?$AA@ DB 'WinMain, Wait'
	DB	' ThrdMsg %X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PCCAGIIF@SysStatus?5?9?5Running?5for?5?$CF02d?3?$CF02@
CONST	SEGMENT
??_C@_0CC@PCCAGIIF@SysStatus?5?9?5Running?5for?5?$CF02d?3?$CF02@ DB 'SysS'
	DB	'tatus - Running for %02d:%02d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLMFNPPL@?9?9?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
CONST	SEGMENT
??_C@_0BI@PLMFNPPL@?9?9?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@ DB '-'
	DB	'- %02d:%02d:%02d, %f s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HGBCLIME@Net?5Chkg?5Err?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BA@HGBCLIME@Net?5Chkg?5Err?5?$CFu?$AA@ DB 'Net Chkg Err %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ICNNMNOE@Net?5Alive?$DP?5?$CFs?0?5Type?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BH@ICNNMNOE@Net?5Alive?$DP?5?$CFs?0?5Type?5?$CFu?$AA@ DB 'Net Aliv'
	DB	'e? %s, Type %u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JINPPBEP@No?$AA@
CONST	SEGMENT
??_C@_02JINPPBEP@No?$AA@ DB 'No', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCLAEDDF@Yes?$AA@
CONST	SEGMENT
??_C@_03CCLAEDDF@Yes?$AA@ DB 'Yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06NNJPAOHJ@ThrWMI?$AA@
CONST	SEGMENT
??_C@_06NNJPAOHJ@ThrWMI?$AA@ DB 'ThrWMI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMMFAJOG@ThrdMsg?$AA@
CONST	SEGMENT
??_C@_07MMMFAJOG@ThrdMsg?$AA@ DB 'ThrdMsg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAPFDJNG@timer?$AA@
CONST	SEGMENT
??_C@_05NAPFDJNG@timer?$AA@ DB 'timer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KNKAAJIE@sysinfo?$AA@
CONST	SEGMENT
??_C@_07KNKAAJIE@sysinfo?$AA@ DB 'sysinfo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GKIGKNOK@runonce?$AA@
CONST	SEGMENT
??_C@_07GKIGKNOK@runonce?$AA@ DB 'runonce', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FONLKPFK@SysStatus?0?5CmdLine?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BG@FONLKPFK@SysStatus?0?5CmdLine?5?$CFs?$AA@ DB 'SysStatus, CmdLin'
	DB	'e %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PGBNDJPK@?$DO?$DO?5WinMain?$AA@
CONST	SEGMENT
??_C@_0L@PGBNDJPK@?$DO?$DO?5WinMain?$AA@ DB '>> WinMain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DGHKOAOF@?$DM?$DM?5GetWMISts?$AA@
CONST	SEGMENT
??_C@_0N@DGHKOAOF@?$DM?$DM?5GetWMISts?$AA@ DB '<< GetWMISts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCKOGEAF@WMISysVols?$AA@
CONST	SEGMENT
??_C@_0L@GCKOGEAF@WMISysVols?$AA@ DB 'WMISysVols', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NAIFMJBP@WMIHwSnsr?$AA@
CONST	SEGMENT
??_C@_09NAIFMJBP@WMIHwSnsr?$AA@ DB 'WMIHwSnsr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KDFOBJKP@WMISysPerf?$AA@
CONST	SEGMENT
??_C@_0L@KDFOBJKP@WMISysPerf?$AA@ DB 'WMISysPerf', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LKBNMLDB@?$DO?$DO?5GetWMISts?$AA@
CONST	SEGMENT
??_C@_0N@LKBNMLDB@?$DO?$DO?5GetWMISts?$AA@ DB '>> GetWMISts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PAGGLBNL@?$DM?$DM?5ThrdWMISysVols?$AA@
CONST	SEGMENT
??_C@_0BC@PAGGLBNL@?$DM?$DM?5ThrdWMISysVols?$AA@ DB '<< ThrdWMISysVols', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CBIOEKJP@?$DO?$DO?5ThrdWMISysVols?$AA@
CONST	SEGMENT
??_C@_0BC@CBIOEKJP@?$DO?$DO?5ThrdWMISysVols?$AA@ DB '>> ThrdWMISysVols', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MKNOIMND@?$DM?$DM?5ThrdWMIHwSnsr?$AA@
CONST	SEGMENT
??_C@_0BB@MKNOIMND@?$DM?$DM?5ThrdWMIHwSnsr?$AA@ DB '<< ThrdWMIHwSnsr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JJECDJHH@?$DO?$DO?5ThrdWMIHwSnsr?$AA@
CONST	SEGMENT
??_C@_0BB@JJECDJHH@?$DO?$DO?5ThrdWMIHwSnsr?$AA@ DB '>> ThrdWMIHwSnsr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DBJGMMHB@?$DM?$DM?5ThrdWMISysPerf?$AA@
CONST	SEGMENT
??_C@_0BC@DBJGMMHB@?$DM?$DM?5ThrdWMISysPerf?$AA@ DB '<< ThrdWMISysPerf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OAHODHDF@?$DO?$DO?5ThrdWMISysPerf?$AA@
CONST	SEGMENT
??_C@_0BC@OAHODHDF@?$DO?$DO?5ThrdWMISysPerf?$AA@ DB '>> ThrdWMISysPerf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LBBDPBFA@PtrInfo?$AA@
CONST	SEGMENT
??_C@_07LBBDPBFA@PtrInfo?$AA@ DB 'PtrInfo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IHNDGAAK@DevDrvrs?$AA@
CONST	SEGMENT
??_C@_08IHNDGAAK@DevDrvrs?$AA@ DB 'DevDrvrs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IONNGCBN@USB?$AA@
CONST	SEGMENT
??_C@_03IONNGCBN@USB?$AA@ DB 'USB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07LEMLFMJD@LogDrvs?$AA@
CONST	SEGMENT
??_C@_07LEMLFMJD@LogDrvs?$AA@ DB 'LogDrvs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGEPCBGK@?$DM?$DM?5GetSysSts?$AA@
CONST	SEGMENT
??_C@_0N@LGEPCBGK@?$DM?$DM?5GetSysSts?$AA@ DB '<< GetSysSts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FGGKAHMA@ProcInfo?$AA@
CONST	SEGMENT
??_C@_08FGGKAHMA@ProcInfo?$AA@ DB 'ProcInfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HGNAFDEP@PerfInfo?$AA@
CONST	SEGMENT
??_C@_08HGNAFDEP@PerfInfo?$AA@ DB 'PerfInfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BFMAIJHM@SysMem?$AA@
CONST	SEGMENT
??_C@_06BFMAIJHM@SysMem?$AA@ DB 'SysMem', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LMMJIFBC@SysTimes?$AA@
CONST	SEGMENT
??_C@_08LMMJIFBC@SysTimes?$AA@ DB 'SysTimes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DKCIAKLO@?$DO?$DO?5GetSysSts?$AA@
CONST	SEGMENT
??_C@_0N@DKCIAKLO@?$DO?$DO?5GetSysSts?$AA@ DB '>> GetSysSts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JGOJIALP@?$DM?$DM?5GetSysDets?$AA@
CONST	SEGMENT
??_C@_0O@JGOJIALP@?$DM?$DM?5GetSysDets?$AA@ DB '<< GetSysDets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NAIOOCP@SysDirs?$AA@
CONST	SEGMENT
??_C@_07NAIOOCP@SysDirs?$AA@ DB 'SysDirs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JCIBBNDO@SysLogPrcsrInfo?$AA@
CONST	SEGMENT
??_C@_0BA@JCIBBNDO@SysLogPrcsrInfo?$AA@ DB 'SysLogPrcsrInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06HKOPCFLK@OSInfo?$AA@
CONST	SEGMENT
??_C@_06HKOPCFLK@OSInfo?$AA@ DB 'OSInfo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JFBHEENG@SysInfo?$AA@
CONST	SEGMENT
??_C@_07JFBHEENG@SysInfo?$AA@ DB 'SysInfo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NLLCGGEI@HwProfile?$AA@
CONST	SEGMENT
??_C@_09NLLCGGEI@HwProfile?$AA@ DB 'HwProfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BHNLPBFJ@?$DO?$DO?5GetSysDets?$AA@
CONST	SEGMENT
??_C@_0O@BHNLPBFJ@?$DO?$DO?5GetSysDets?$AA@ DB '>> GetSysDets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CMFNMPNL@?$DM?$DM?5GetSysIPAddrs?$AA@
CONST	SEGMENT
??_C@_0BB@CMFNMPNL@?$DM?$DM?5GetSysIPAddrs?$AA@ DB '<< GetSysIPAddrs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BDGNKGNI@?$DO?5?$CF02u?5?$CFs?$AA@
CONST	SEGMENT
??_C@_09BDGNKGNI@?$DO?5?$CF02u?5?$CFs?$AA@ DB '> %02u %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JGGPHJBD@IP?5Addresses?5?$CI?$CFu?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BD@JGGPHJBD@IP?5Addresses?5?$CI?$CFu?$CJ?3?$AA@ DB 'IP Addresses ('
	DB	'%u):', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JNNHNEI@?$DO?$DO?5GetSysIPAddrs?0?5?$CFp?0?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BJ@JNNHNEI@?$DO?$DO?5GetSysIPAddrs?0?5?$CFp?0?5?$CFs?$AA@ DB '>> G'
	DB	'etSysIPAddrs, %p, %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MKDOIIA@False?$AA@
CONST	SEGMENT
??_C@_05MKDOIIA@False?$AA@ DB 'False', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPMIDMKH@True?$AA@
CONST	SEGMENT
??_C@_04HPMIDMKH@True?$AA@ DB 'True', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GNPIKGBL@?$DM?$DM?5PtrInfo?$AA@
CONST	SEGMENT
??_C@_0L@GNPIKGBL@?$DM?$DM?5PtrInfo?$AA@ DB '<< PtrInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PFIFHLGI@?9?9?5PtrInfo?0?5CreateIC?5Err?5?$CFd?5Msg?5@
CONST	SEGMENT
??_C@_0CD@PFIFHLGI@?9?9?5PtrInfo?0?5CreateIC?5Err?5?$CFd?5Msg?5@ DB '-- P'
	DB	'trInfo, CreateIC Err %d Msg %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PNGCEDEF@?9?9?5PtrInfo?0?5new?5LOGFONT?5null?$AA@
CONST	SEGMENT
??_C@_0BN@PNGCEDEF@?9?9?5PtrInfo?0?5new?5LOGFONT?5null?$AA@ DB '-- PtrInf'
	DB	'o, new LOGFONT null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBJPIOLO@?$DO?5FaceName?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0O@PBJPIOLO@?$DO?5FaceName?5?$CFs?$AA@ DB '> FaceName %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FCEMNLND@?$DO?5PitchAndFamily?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0BH@FCEMNLND@?$DO?5PitchAndFamily?5?$CF?42Xh?$AA@ DB '> PitchAndFam'
	DB	'ily %.2Xh', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PONLFNLB@?$DO?5Quality?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0BA@PONLFNLB@?$DO?5Quality?5?$CF?42Xh?$AA@ DB '> Quality %.2Xh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FHJOGBNN@?$DO?5ClipPrecision?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0BG@FHJOGBNN@?$DO?5ClipPrecision?5?$CF?42Xh?$AA@ DB '> ClipPrecisio'
	DB	'n %.2Xh', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IIGPOAFP@?$DO?5OutPrecision?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0BF@IIGPOAFP@?$DO?5OutPrecision?5?$CF?42Xh?$AA@ DB '> OutPrecision '
	DB	'%.2Xh', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CJMDNNAL@?$DO?5CharSet?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0BA@CJMDNNAL@?$DO?5CharSet?5?$CF?42Xh?$AA@ DB '> CharSet %.2Xh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MFABLFLO@?$DO?5StrikeOut?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0BC@MFABLFLO@?$DO?5StrikeOut?5?$CF?42Xh?$AA@ DB '> StrikeOut %.2Xh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IHAMIHEE@?$DO?5Underline?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0BC@IHAMIHEE@?$DO?5Underline?5?$CF?42Xh?$AA@ DB '> Underline %.2Xh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FOGJLDPM@?$DO?5Italic?5?$CF?42Xh?$AA@
CONST	SEGMENT
??_C@_0P@FOGJLDPM@?$DO?5Italic?5?$CF?42Xh?$AA@ DB '> Italic %.2Xh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EEPHINNC@?$DO?5Weight?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@EEPHINNC@?$DO?5Weight?5?$CFd?$AA@ DB '> Weight %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DFLFEINK@?$DO?5Orientation?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@DFLFEINK@?$DO?5Orientation?5?$CFd?$AA@ DB '> Orientation %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DLDGLOB@?$DO?5Escapment?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@DLDGLOB@?$DO?5Escapment?5?$CFd?$AA@ DB '> Escapment %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBIDCEMN@?$DO?5Width?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0L@KBIDCEMN@?$DO?5Width?5?$CFd?$AA@ DB '> Width %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JCFCFHLH@?$DO?5Height?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@JCFCFHLH@?$DO?5Height?5?$CFd?$AA@ DB '> Height %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FBFECABI@DEFAULT?5FONT?3?$AA@
CONST	SEGMENT
??_C@_0O@FBFECABI@DEFAULT?5FONT?3?$AA@ DB 'DEFAULT FONT:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IGELCPAM@Layout?5?$CFu?$AA@
CONST	SEGMENT
??_C@_09IGELCPAM@Layout?5?$CFu?$AA@ DB 'Layout %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DKIEMMJN@?$DO?5COLORMGMTCAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@DKIEMMJN@?$DO?5COLORMGMTCAPS?5?$CFd?$AA@ DB '> COLORMGMTCAPS %d'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BAMFBECL@?$DO?5SHADEBLENDCAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@BAMFBECL@?$DO?5SHADEBLENDCAPS?5?$CFd?$AA@ DB '> SHADEBLENDCAPS '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JFPGOKHF@?$DO?5BLTALIGNMENT?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BC@JFPGOKHF@?$DO?5BLTALIGNMENT?5?$CFd?$AA@ DB '> BLTALIGNMENT %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NACPAGIF@?$DO?5DESKTOPHORZRES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@NACPAGIF@?$DO?5DESKTOPHORZRES?5?$CFd?$AA@ DB '> DESKTOPHORZRES '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@COAHGLLD@?$DO?5DESKTOPVERTRES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@COAHGLLD@?$DO?5DESKTOPVERTRES?5?$CFd?$AA@ DB '> DESKTOPVERTRES '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KHHELDLL@?$DO?5VREFRESH?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@KHHELDLL@?$DO?5VREFRESH?5?$CFd?$AA@ DB '> VREFRESH %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IGKKOKOO@?$DO?5SCALINGFACTORY?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@IGKKOKOO@?$DO?5SCALINGFACTORY?5?$CFd?$AA@ DB '> SCALINGFACTORY '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LLMKMDFO@?$DO?5SCALINGFACTORX?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@LLMKMDFO@?$DO?5SCALINGFACTORX?5?$CFd?$AA@ DB '> SCALINGFACTORX '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MNFOHMGF@?$DO?5PHYSICALOFFSETY?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BF@MNFOHMGF@?$DO?5PHYSICALOFFSETY?5?$CFd?$AA@ DB '> PHYSICALOFFSET'
	DB	'Y %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PADOFFNF@?$DO?5PHYSICALOFFSETX?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BF@PADOFFNF@?$DO?5PHYSICALOFFSETX?5?$CFd?$AA@ DB '> PHYSICALOFFSET'
	DB	'X %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BHEFJOBO@?$DO?5PHYSICALHEIGHT?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BE@BHEFJOBO@?$DO?5PHYSICALHEIGHT?5?$CFd?$AA@ DB '> PHYSICALHEIGHT '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HDEIPKKB@?$DO?5PHYSICALWIDTH?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@HDEIPKKB@?$DO?5PHYSICALWIDTH?5?$CFd?$AA@ DB '> PHYSICALWIDTH %d'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GGNNNIFP@?$DO?5COLORRES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@GGNNNIFP@?$DO?5COLORRES?5?$CFd?$AA@ DB '> COLORRES %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KMMENDMI@?$DO?5NUMRESERVED?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@KMMENDMI@?$DO?5NUMRESERVED?5?$CFd?$AA@ DB '> NUMRESERVED %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KNEJGJKJ@?$DO?5SIZEPALETTE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@KNEJGJKJ@?$DO?5SIZEPALETTE?5?$CFd?$AA@ DB '> SIZEPALETTE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OOCANGJA@?$DO?5LOGPIXELSY?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@OOCANGJA@?$DO?5LOGPIXELSY?5?$CFd?$AA@ DB '> LOGPIXELSY %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NDEAPPCA@?$DO?5LOGPIXELSX?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@NDEAPPCA@?$DO?5LOGPIXELSX?5?$CFd?$AA@ DB '> LOGPIXELSX %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KAIPPGFP@?$DO?5ASPECTXY?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@KAIPPGFP@?$DO?5ASPECTXY?5?$CFd?$AA@ DB '> ASPECTXY %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LDFPIKI@?$DO?5ASPECTY?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@LDFPIKI@?$DO?5ASPECTY?5?$CFd?$AA@ DB '> ASPECTY %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DGFFNBBI@?$DO?5ASPECTX?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@DGFFNBBI@?$DO?5ASPECTX?5?$CFd?$AA@ DB '> ASPECTX %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OCKGHOJF@?$DO?5RASTERCAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@OCKGHOJF@?$DO?5RASTERCAPS?5?$CFd?$AA@ DB '> RASTERCAPS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NPFDNMHE@?$DO?5CLIPCAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@NPFDNMHE@?$DO?5CLIPCAPS?5?$CFd?$AA@ DB '> CLIPCAPS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJBOFNFI@?$DO?5TEXTCAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@EJBOFNFI@?$DO?5TEXTCAPS?5?$CFd?$AA@ DB '> TEXTCAPS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NDEFMMIK@?$DO?5POLYGONALCAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@NDEFMMIK@?$DO?5POLYGONALCAPS?5?$CFd?$AA@ DB '> POLYGONALCAPS %d'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NIBLPDAA@?$DO?5LINECAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@NIBLPDAA@?$DO?5LINECAPS?5?$CFd?$AA@ DB '> LINECAPS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MJKILKAG@?$DO?5CURVECAPS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@MJKILKAG@?$DO?5CURVECAPS?5?$CFd?$AA@ DB '> CURVECAPS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BIAFAHJC@?$DO?5PDEVICESIZE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@BIAFAHJC@?$DO?5PDEVICESIZE?5?$CFd?$AA@ DB '> PDEVICESIZE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CDPEOCLN@?$DO?5NUMCOLORS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@CDPEOCLN@?$DO?5NUMCOLORS?5?$CFd?$AA@ DB '> NUMCOLORS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HIAAJLOF@?$DO?5NUMFONTS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@HIAAJLOF@?$DO?5NUMFONTS?5?$CFd?$AA@ DB '> NUMFONTS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJEEOFOD@?$DO?5NUMMARKERS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@IJEEOFOD@?$DO?5NUMMARKERS?5?$CFd?$AA@ DB '> NUMMARKERS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HHCKOKCG@?$DO?5NUMPENS?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@HHCKOKCG@?$DO?5NUMPENS?5?$CFd?$AA@ DB '> NUMPENS %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GCBODPHK@?$DO?5NUMBRUSHES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@GCBODPHK@?$DO?5NUMBRUSHES?5?$CFd?$AA@ DB '> NUMBRUSHES %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DABMECAD@?$DO?5PLANES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@DABMECAD@?$DO?5PLANES?5?$CFd?$AA@ DB '> PLANES %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CHMKJDGJ@?$DO?5BITSPIXEL?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@CHMKJDGJ@?$DO?5BITSPIXEL?5?$CFd?$AA@ DB '> BITSPIXEL %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HLDMJPJJ@?$DO?5VERTRES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@HLDMJPJJ@?$DO?5VERTRES?5?$CFd?$AA@ DB '> VERTRES %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IFBEPCKP@?$DO?5HORZRES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@IFBEPCKP@?$DO?5HORZRES?5?$CFd?$AA@ DB '> HORZRES %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LDGIGNAG@?$DO?5VERTSIZE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@LDGIGNAG@?$DO?5VERTSIZE?5?$CFd?$AA@ DB '> VERTSIZE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HMCMNAPC@?$DO?5HORZSIZE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@HMCMNAPC@?$DO?5HORZSIZE?5?$CFd?$AA@ DB '> HORZSIZE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KDKPJOH@?$DO?5TECHNOLOGY?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@KDKPJOH@?$DO?5TECHNOLOGY?5?$CFd?$AA@ DB '> TECHNOLOGY %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JDPBNNPN@?$DO?5DRIVERVERSION?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@JDPBNNPN@?$DO?5DRIVERVERSION?5?$CFd?$AA@ DB '> DRIVERVERSION %d'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CPAOAHIM@DeviceCaps?3?$AA@
CONST	SEGMENT
??_C@_0M@CPAOAHIM@DeviceCaps?3?$AA@ DB 'DeviceCaps:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GNEJHKAM@?9?9?5PtrInfo?0?5OpenPrinter?5Err?5?$CFd?5M@
CONST	SEGMENT
??_C@_0CG@GNEJHKAM@?9?9?5PtrInfo?0?5OpenPrinter?5Err?5?$CFd?5M@ DB '-- Pt'
	DB	'rInfo, OpenPrinter Err %d Msg %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ODPAHJGJ@?$DO?5PanningHeight?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BD@ODPAHJGJ@?$DO?5PanningHeight?5?$CFu?$AA@ DB '> PanningHeight %u'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ILEBHAGL@?$DO?5PanningWidth?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BC@ILEBHAGL@?$DO?5PanningWidth?5?$CFu?$AA@ DB '> PanningWidth %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KECJEPKK@?$DO?5Reserved2?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0P@KECJEPKK@?$DO?5Reserved2?5?$CFu?$AA@ DB '> Reserved2 %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ODIJDFHK@?$DO?5Reserved1?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0P@ODIJDFHK@?$DO?5Reserved1?5?$CFu?$AA@ DB '> Reserved1 %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IBDIEDAP@?$DO?5DitherType?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BA@IBDIEDAP@?$DO?5DitherType?5?$CFu?$AA@ DB '> DitherType %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DGLLLDPA@?$DO?5MediaType?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0P@DGLLLDPA@?$DO?5MediaType?5?$CFu?$AA@ DB '> MediaType %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FBGPJDBI@?$DO?5ICMIntent?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0P@FBGPJDBI@?$DO?5ICMIntent?5?$CFu?$AA@ DB '> ICMIntent %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BALKIIFI@?$DO?5ICMMethod?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0P@BALKIIFI@?$DO?5ICMMethod?5?$CFu?$AA@ DB '> ICMMethod %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FJKIIKDN@?$DO?5PelsHeight?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@FJKIIKDN@?$DO?5PelsHeight?5?$CFd?$AA@ DB '> PelsHeight %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GJDEABGN@?$DO?5PelsWidth?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0P@GJDEABGN@?$DO?5PelsWidth?5?$CFu?$AA@ DB '> PelsWidth %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJGBMLDF@?$DO?5BitsPerPel?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BA@IJGBMLDF@?$DO?5BitsPerPel?5?$CFu?$AA@ DB '> BitsPerPel %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBAMONIO@?$DO?5LogPixels?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@HBAMONIO@?$DO?5LogPixels?5?$CFd?$AA@ DB '> LogPixels %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NAFNONHG@?$DO?5FormName?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0O@NAFNONHG@?$DO?5FormName?5?$CFs?$AA@ DB '> FormName %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DEPFBBGA@?$DO?5Collate?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@DEPFBBGA@?$DO?5Collate?5?$CFd?$AA@ DB '> Collate %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ODMOOLLN@?$DO?5TTOption?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@ODMOOLLN@?$DO?5TTOption?5?$CFd?$AA@ DB '> TTOption %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ODANIHPJ@?$DO?5YResolution?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@ODANIHPJ@?$DO?5YResolution?5?$CFd?$AA@ DB '> YResolution %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DMDDHFGN@?$DO?5Duplex?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@DMDDHFGN@?$DO?5Duplex?5?$CFd?$AA@ DB '> Duplex %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OGGOANCL@?$DO?5Color?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0L@OGGOANCL@?$DO?5Color?5?$CFd?$AA@ DB '> Color %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FEEDGEPE@?$DO?5PrintQulity?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@FEEDGEPE@?$DO?5PrintQulity?5?$CFd?$AA@ DB '> PrintQulity %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PBLNKDE@?$DO?5DefaultSource?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@PBLNKDE@?$DO?5DefaultSource?5?$CFd?$AA@ DB '> DefaultSource %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MCOJLIEN@?$DO?5Copies?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@MCOJLIEN@?$DO?5Copies?5?$CFd?$AA@ DB '> Copies %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CIICACOJ@?$DO?5Scale?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0L@CIICACOJ@?$DO?5Scale?5?$CFd?$AA@ DB '> Scale %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EJLKBGAF@?$DO?5PaperWidth?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BA@EJLKBGAF@?$DO?5PaperWidth?5?$CFd?$AA@ DB '> PaperWidth %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ECLINGE@?$DO?5PaperLenght?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@ECLINGE@?$DO?5PaperLenght?5?$CFd?$AA@ DB '> PaperLenght %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MIJBPCPJ@?$DO?5PaperSize?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@MIJBPCPJ@?$DO?5PaperSize?5?$CFd?$AA@ DB '> PaperSize %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PJOJJBEC@?$DO?5Orient?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@PJOJJBEC@?$DO?5Orient?5?$CFd?$AA@ DB '> Orient %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JDMKIO@?$DO?5DriverFields?50x?$CF?48X?$AA@
CONST	SEGMENT
??_C@_0BG@JDMKIO@?$DO?5DriverFields?50x?$CF?48X?$AA@ DB '> DriverFields 0'
	DB	'x%.8X', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NFLJLFB@?$DO?5DriverExtra?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@NFLJLFB@?$DO?5DriverExtra?5?$CFd?$AA@ DB '> DriverExtra %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EJHHAJLO@?$DO?5Size?5?$CFd?$AA@
CONST	SEGMENT
??_C@_09EJHHAJLO@?$DO?5Size?5?$CFd?$AA@ DB '> Size %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FHCKIAEA@?$DO?5DriverVersion?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BD@FHCKIAEA@?$DO?5DriverVersion?5?$CFd?$AA@ DB '> DriverVersion %d'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GFIGJBOF@?$DO?5SpecVersion?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BB@GFIGJBOF@?$DO?5SpecVersion?5?$CFd?$AA@ DB '> SpecVersion %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KDNAKNNN@?$DO?5DeviceName?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BA@KDNAKNNN@?$DO?5DeviceName?5?$CFs?$AA@ DB '> DeviceName %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JFBLCBEM@DEVMODE?3?$AA@
CONST	SEGMENT
??_C@_08JFBLCBEM@DEVMODE?3?$AA@ DB 'DEVMODE:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JJAELOOF@DC_PERSONALITY?5?$CI?$CFd?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BF@JJAELOOF@DC_PERSONALITY?5?$CI?$CFd?$CJ?3?$AA@ DB 'DC_PERSONALIT'
	DB	'Y (%d):', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NKGMPEJL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0EB@NKGMPEJL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_PERSONALITY, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@FDCGHEM@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_PERSONAL@
CONST	SEGMENT
??_C@_0CN@FDCGHEM@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_PERSONAL@ DB '-'
	DB	'- PtrInfo, <%s> new DC_PERSONALITY mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@IFJFLJEL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0ED@IFJFLJEL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_PERSONALITY, null) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@CIBLFONP@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@
CONST	SEGMENT
??_C@_0DF@CIBLFONP@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@ DB '-- PtrInf'
	DB	'o, Catch unhndld excpetion on MediaTypeList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OFCLBKDH@DC_MEDIATYPES?0?5DC_MEDIATYPENAMES@
CONST	SEGMENT
??_C@_0CH@OFCLBKDH@DC_MEDIATYPES?0?5DC_MEDIATYPENAMES@ DB 'DC_MEDIATYPES,'
	DB	' DC_MEDIATYPENAMES (%d):', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JHLOAEJA@DC_MEDIAREADY?5?$CI?$CFd?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BE@JHLOAEJA@DC_MEDIAREADY?5?$CI?$CFd?$CJ?3?$AA@ DB 'DC_MEDIAREADY '
	DB	'(%d):', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@BCFCBCDG@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0EA@BCFCBCDG@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_MEDIAREADY, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KMOLCCC@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_MEDIAREA@
CONST	SEGMENT
??_C@_0CM@KMOLCCC@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_MEDIAREA@ DB '-'
	DB	'- PtrInfo, <%s> new DC_MEDIAREADY mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@NHFFPEJM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0EC@NHFFPEJM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_MEDIAREADY, null) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JDHLMKJK@?$DO?$CF?42d?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_09JDHLMKJK@?$DO?$CF?42d?3?5?$CFs?$AA@ DB '>%.2d: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NAHDGPCH@DC_FILEDEPENDENCIES?5?$CI?$CFd?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BK@NAHDGPCH@DC_FILEDEPENDENCIES?5?$CI?$CFd?$CJ?3?$AA@ DB 'DC_FILED'
	DB	'EPENDENCIES (%d):', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@KMPBJHDP@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0EG@KMPBJHDP@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_FILEDEPENDENCIES, %p) Err %d Msg %s'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MCOOCAIH@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_FILEDEPE@
CONST	SEGMENT
??_C@_0DC@MCOOCAIH@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_FILEDEPE@ DB '-'
	DB	'- PtrInfo, <%s> new DC_FILEDEPENDENCIES mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@JLEFIGNJ@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0EI@JLEFIGNJ@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_FILEDEPENDENCIES, null) Err %d Msg '
	DB	'%s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09MFCBGNBM@?$DO?$CF?42d?3?5?$CFu?$AA@
CONST	SEGMENT
??_C@_09MFCBGNBM@?$DO?$CF?42d?3?5?$CFu?$AA@ DB '>%.2d: %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EHIGBDLP@DC_NUP?5?$CI?$CFd?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0N@EHIGBDLP@DC_NUP?5?$CI?$CFd?$CJ?3?$AA@ DB 'DC_NUP (%d):', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OGEOOIOH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0DJ@OGEOOIOH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_NUP, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DGNIMKMD@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_NUP?5mem?5@
CONST	SEGMENT
??_C@_0CF@DGNIMKMD@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_NUP?5mem?5@ DB '-'
	DB	'- PtrInfo, <%s> new DC_NUP mem null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@BCBOOPNM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0DL@BCBOOPNM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_NUP, null) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLIHNHLK@DC_TRUETYPE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@MLIHNHLK@DC_TRUETYPE?5?$CFd?$AA@ DB 'DC_TRUETYPE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ONNHJAOP@DC_STAPLE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@ONNHJAOP@DC_STAPLE?5?$CFd?$AA@ DB 'DC_STAPLE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICJGKLML@DC_SIZE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0L@ICJGKLML@DC_SIZE?5?$CFd?$AA@ DB 'DC_SIZE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BIAELLNL@DC_MINEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@
CONST	SEGMENT
??_C@_0CC@BIAELLNL@DC_MINEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@ DB 'DC_M'
	DB	'INEXTENT: Lenght %u, Width %u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DHNLPIEG@DC_MAXEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@
CONST	SEGMENT
??_C@_0CC@DHNLPIEG@DC_MAXEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@ DB 'DC_M'
	DB	'AXEXTENT: Lenght %u, Width %u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FMBEEHK@DC_FIELDS?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0N@FMBEEHK@DC_FIELDS?5?$CFu?$AA@ DB 'DC_FIELDS %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BHGLDB@DC_VERSION?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@BHGLDB@DC_VERSION?5?$CFd?$AA@ DB 'DC_VERSION %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BOEFEHCB@DC_DRIVER?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@BOEFEHCB@DC_DRIVER?5?$CFd?$AA@ DB 'DC_DRIVER %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JAMONLMJ@DC_DUPLEX?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@JAMONLMJ@DC_DUPLEX?5?$CFd?$AA@ DB 'DC_DUPLEX %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CPGDDBNJ@DC_COLORDEVICE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BC@CPGDDBNJ@DC_COLORDEVICE?5?$CFd?$AA@ DB 'DC_COLORDEVICE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CECDKEDL@DC_COLLATE?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0O@CECDKEDL@DC_COLLATE?5?$CFd?$AA@ DB 'DC_COLLATE %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GOBEBGOJ@DC_COPIES?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@GOBEBGOJ@DC_COPIES?5?$CFd?$AA@ DB 'DC_COPIES %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NAFPPPIH@DC_ORIENTATION?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BC@NAFPPPIH@DC_ORIENTATION?5?$CFd?$AA@ DB 'DC_ORIENTATION %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CMDEFNNK@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@
CONST	SEGMENT
??_C@_0DB@CMDEFNNK@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@ DB '-- PtrInf'
	DB	'o, Catch unhndld excpetion on PaperList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ENBLCNAO@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?0?5?$CF?45d?5?$CF?45d?$AA@
CONST	SEGMENT
??_C@_0BJ@ENBLCNAO@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?0?5?$CF?45d?5?$CF?45d?$AA@ DB '>'
	DB	'%.2d: %u, %s, %.5d %.5d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@GKNAEPGN@DC_PAPERS?0?5DC_PAPERNAMES?0?5DC_PAP@
CONST	SEGMENT
??_C@_0CN@GKNAEPGN@DC_PAPERS?0?5DC_PAPERNAMES?0?5DC_PAP@ DB 'DC_PAPERS, D'
	DB	'C_PAPERNAMES, DC_PAPERSIZE (%d):', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BNOBPGPC@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@
CONST	SEGMENT
??_C@_0CP@BNOBPGPC@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@ DB '-- PtrInf'
	DB	'o, Catch unhndld excpetion on BinList', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KDMGFAIN@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0O@KDMGFAIN@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?$AA@ DB '>%.2d: %u, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IBIADDJ@DC_BINS?0?5DC_BINNAMES?5?$CI?$CFd?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BL@IBIADDJ@DC_BINS?0?5DC_BINNAMES?5?$CI?$CFd?$CJ?3?$AA@ DB 'DC_BIN'
	DB	'S, DC_BINNAMES (%d):', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OBKMFCDP@?$DO?$CF?42d?3?5?$CFu?5x?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0P@OBKMFCDP@?$DO?$CF?42d?3?5?$CFu?5x?5?$CFu?$AA@ DB '>%.2d: %u x %u'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PLJPAGFI@DC_ENUMRESOLUTIONS?5?$CI?$CFd?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BJ@PLJPAGFI@DC_ENUMRESOLUTIONS?5?$CI?$CFd?$CJ?3?$AA@ DB 'DC_ENUMRE'
	DB	'SOLUTIONS (%d):', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@GAIMDBJI@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0EF@GAIMDBJI@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_ENUMRESOLUTIONS, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OINKGGOI@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_ENUMRESO@
CONST	SEGMENT
??_C@_0DB@OINKGGOI@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_ENUMRESO@ DB '-'
	DB	'- PtrInfo, <%s> new DC_ENUMRESOLUTIONS mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@EFLGGGFH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
CONST	SEGMENT
??_C@_0EH@EFLGGGFH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@ DB '-- PtrIn'
	DB	'fo, DeviceCapabilities(DC_ENUMRESOLUTIONS, null) Err %d Msg %'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GNJLFBNH@Info?5from?5?$CFs?0?5Port?5?$CFs?0?5Driver?5?$CFs@
CONST	SEGMENT
??_C@_0CG@GNJLFBNH@Info?5from?5?$CFs?0?5Port?5?$CFs?0?5Driver?5?$CFs@ DB 'I'
	DB	'nfo from %s, Port %s, Driver %s (%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HOILGMMA@?$DM?$DM?5PtrInfo?0?5PtrInfoList?5null?$AA@
CONST	SEGMENT
??_C@_0BN@HOILGMMA@?$DM?$DM?5PtrInfo?0?5PtrInfoList?5null?$AA@ DB '<< Ptr'
	DB	'Info, PtrInfoList null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ENEDNFCI@?$DM?$DM?5PtrInfo?0?5No?5Printer?$AA@
CONST	SEGMENT
??_C@_0BH@ENEDNFCI@?$DM?$DM?5PtrInfo?0?5No?5Printer?$AA@ DB '<< PtrInfo, '
	DB	'No Printer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DBGBMPOH@?$DO?$DO?5PtrInfo?$AA@
CONST	SEGMENT
??_C@_0L@DBGBMPOH@?$DO?$DO?5PtrInfo?$AA@ DB '>> PtrInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IBLEBHCE@?$DM?$DM?5GetMediaTypeList?0?5List?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0BN@IBLEBHCE@?$DM?$DM?5GetMediaTypeList?0?5List?5?$CFp?$AA@ DB '<< '
	DB	'GetMediaTypeList, List %p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@LODPGLOM@?9?9?5GetMediaTypeList?0?5DeviceCapab@
CONST	SEGMENT
??_C@_0EN@LODPGLOM@?9?9?5GetMediaTypeList?0?5DeviceCapab@ DB '-- GetMedia'
	DB	'TypeList, DeviceCapabilities(DC_MEDIATYPENAMES, %p) Err %d Ms'
	DB	'g %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@CAKMLHPC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@
CONST	SEGMENT
??_C@_0DJ@CAKMLHPC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@ DB '-'
	DB	'- GetMediaTypeList, <%s> new DC_MEDIATYPENAMES mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@PFOHCMBM@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@
CONST	SEGMENT
??_C@_0EJ@PFOHCMBM@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@ DB '<< GetM'
	DB	'ediaTypeList, DeviceCapabilities(DC_MEDIATYPES, %p) Err %d Ms'
	DB	'g %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@IAEPPFOH@?$DM?$DM?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5PT@
CONST	SEGMENT
??_C@_0DJ@IAEPPFOH@?$DM?$DM?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5PT@ DB '<'
	DB	'< GetMediaTypeList, <%s> new PTRDATA_INFO_LIST mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EKPICGIC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@
CONST	SEGMENT
??_C@_0DF@EKPICGIC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@ DB '-'
	DB	'- GetMediaTypeList, <%s> new DC_MEDIATYPES mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@HJFPMCKK@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@
CONST	SEGMENT
??_C@_0EL@HJFPMCKK@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@ DB '<< GetM'
	DB	'ediaTypeList, DeviceCapabilities(DC_MEDIATYPES, null) Err %d '
	DB	'Msg %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PBHDOEPC@?$DO?$DO?5GetMediaTypeList?0?5Name?5?$CFs?0?5Po@
CONST	SEGMENT
??_C@_0CG@PBHDOEPC@?$DO?$DO?5GetMediaTypeList?0?5Name?5?$CFs?0?5Po@ DB '>'
	DB	'> GetMediaTypeList, Name %s, Port %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HGBNGAMD@?$DM?$DM?5GetPaperList?0?5List?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0BJ@HGBNGAMD@?$DM?$DM?5GetPaperList?0?5List?5?$CFp?$AA@ DB '<< GetP'
	DB	'aperList, List %p', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@EEKEBLFH@?9?9?5GetPaperList?0?5DeviceCapabilit@
CONST	SEGMENT
??_C@_0EF@EEKEBLFH@?9?9?5GetPaperList?0?5DeviceCapabilit@ DB '-- GetPaper'
	DB	'List, DeviceCapabilities(DC_PAPERNAMES, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DLBCIEDL@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@
CONST	SEGMENT
??_C@_0DB@DLBCIEDL@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@ DB '-'
	DB	'- GetPaperList, <%s> new DC_PAPERNAMES mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@PHEGEMLJ@?9?9?5GetPaperList?0?5DeviceCapabilit@
CONST	SEGMENT
??_C@_0EE@PHEGEMLJ@?9?9?5GetPaperList?0?5DeviceCapabilit@ DB '-- GetPaper'
	DB	'List, DeviceCapabilities(DC_PAPERSIZE, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NJCIHNJI@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@
CONST	SEGMENT
??_C@_0DA@NJCIHNJI@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@ DB '-'
	DB	'- GetPaperList, <%s> new DC_PAPERSIZE mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@CEGPPGMD@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@
CONST	SEGMENT
??_C@_0EB@CEGPPGMD@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@ DB '<< GetP'
	DB	'aperList, DeviceCapabilities(DC_PAPERS, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MINJLAHF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5PTRDAT@
CONST	SEGMENT
??_C@_0DF@MINJLAHF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5PTRDAT@ DB '<'
	DB	'< GetPaperList, <%s> new PTRDATA_INFO_LIST mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BIOGLDPF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@
CONST	SEGMENT
??_C@_0CN@BIOGLDPF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@ DB '<'
	DB	'< GetPaperList, <%s> new DC_PAPERS mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@BJPJPBDI@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@
CONST	SEGMENT
??_C@_0ED@BJPJPBDI@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@ DB '<< GetP'
	DB	'aperList, DeviceCapabilities(DC_PAPERS, null) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ONAFHJDF@?$DO?$DO?5GetPaperList?0?5Name?5?$CFs?0?5Port?5?$CF@
CONST	SEGMENT
??_C@_0CC@ONAFHJDF@?$DO?$DO?5GetPaperList?0?5Name?5?$CFs?0?5Port?5?$CF@ DB '>'
	DB	'> GetPaperList, Name %s, Port %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CEPOJCOE@?$DM?$DM?5GetBinList?0?5List?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0BH@CEPOJCOE@?$DM?$DM?5GetBinList?0?5List?5?$CFp?$AA@ DB '<< GetBin'
	DB	'List, List %p', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NDHMGLE@?9?9?5GetBinList?0?5DeviceCapabilitie@
CONST	SEGMENT
??_C@_0EB@NDHMGLE@?9?9?5GetBinList?0?5DeviceCapabilitie@ DB '-- GetBinLis'
	DB	't, DeviceCapabilities(DC_BINNAMES, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@HGGHLGCE@?9?9?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINNA@
CONST	SEGMENT
??_C@_0CN@HGGHLGCE@?9?9?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINNA@ DB '-'
	DB	'- GetBinList, <%s> new DC_BINNAMES mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@NNGIOEEB@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@
CONST	SEGMENT
??_C@_0DN@NNGIOEEB@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@ DB '<< GetB'
	DB	'inList, DeviceCapabilities(DC_BINS, %p) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBLOLICC@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5PTRDATA_@
CONST	SEGMENT
??_C@_0DD@GBLOLICC@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5PTRDATA_@ DB '<'
	DB	'< GetBinList, <%s> new PTRDATA_INFO_LIST mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MFGEJMEH@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINS?5@
CONST	SEGMENT
??_C@_0CJ@MFGEJMEH@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINS?5@ DB '<'
	DB	'< GetBinList, <%s> new DC_BINS mem null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@ODPFIDLO@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@
CONST	SEGMENT
??_C@_0DP@ODPFIDLO@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@ DB '<< GetB'
	DB	'inList, DeviceCapabilities(DC_BINS, null) Err %d Msg %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MEDOMPCD@?$DO?$DO?5GetBinList?0?5Name?5?$CFs?0?5Port?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0CA@MEDOMPCD@?$DO?$DO?5GetBinList?0?5Name?5?$CFs?0?5Port?5?$CFs?$AA@ DB '>'
	DB	'> GetBinList, Name %s, Port %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GDDJCMON@?$DM?$DM?5GetPtrsList?$AA@
CONST	SEGMENT
??_C@_0P@GDDJCMON@?$DM?$DM?5GetPtrsList?$AA@ DB '<< GetPtrsList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OBDCAEAF@?$DO?5?$CF?42d?3?5?2?2?$CFs?2?$CFs?0?5?5?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFu@
CONST	SEGMENT
??_C@_0DB@OBDCAEAF@?$DO?5?$CF?42d?3?5?2?2?$CFs?2?$CFs?0?5?5?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFu@ DB '>'
	DB	' %.2d: \\%s\%s,  %s, %s, %s, %u, %u, %s, %s, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EABBNIJO@?$DMLocalPrinter?$DO?$AA@
CONST	SEGMENT
??_C@_0P@EABBNIJO@?$DMLocalPrinter?$DO?$AA@ DB '<LocalPrinter>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@LPLLHANM@?$DO?5?5?5?5?5Printer?0?5Port?0?5Driver?0?5Pro@
CONST	SEGMENT
??_C@_0FD@LPLLHANM@?$DO?5?5?5?5?5Printer?0?5Port?0?5Driver?0?5Pro@ DB '> '
	DB	'    Printer, Port, Driver, Processor, Status, Priority, Locat'
	DB	'ion, Share, Comment', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DODNOLI@Printers?5Information?5?$CI?$CFd?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BL@DODNOLI@Printers?5Information?5?$CI?$CFd?$CJ?3?$AA@ DB 'Printer'
	DB	's Information (%d):', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@POBEDBNN@?$DM?$DM?5GetPtrsList?0?5new?5PrtInfoList?5@
CONST	SEGMENT
??_C@_0CF@POBEDBNN@?$DM?$DM?5GetPtrsList?0?5new?5PrtInfoList?5@ DB '<< Ge'
	DB	'tPtrsList, new PrtInfoList null', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@CMLCIBBP@?$DM?$DM?5GetPtrsList?0?5EnumPrinters?5Err@
CONST	SEGMENT
??_C@_0CL@CMLCIBBP@?$DM?$DM?5GetPtrsList?0?5EnumPrinters?5Err@ DB '<< Get'
	DB	'PtrsList, EnumPrinters Err %d Msg %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CEENFMON@?$DM?$DM?5GetPtrsList?0?5new?5PtrInfo?5null@
CONST	SEGMENT
??_C@_0CB@CEENFMON@?$DM?$DM?5GetPtrsList?0?5new?5PtrInfo?5null@ DB '<< Ge'
	DB	'tPtrsList, new PtrInfo null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CMACENMK@?$DM?$DM?5GetPtrsList?0?5No?5Printer?$AA@
CONST	SEGMENT
??_C@_0BL@CMACENMK@?$DM?$DM?5GetPtrsList?0?5No?5Printer?$AA@ DB '<< GetPt'
	DB	'rsList, No Printer', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CKNBFJNB@?$DO?$DO?5GetPtrsList?$AA@
CONST	SEGMENT
??_C@_0P@CKNBFJNB@?$DO?$DO?5GetPtrsList?$AA@ DB '>> GetPtrsList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JHACCAAA@?$DM?$DM?5PerfInfo?$AA@
CONST	SEGMENT
??_C@_0M@JHACCAAA@?$DM?$DM?5PerfInfo?$AA@ DB '<< PerfInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@PIJNDBHN@PerfInfo?0?5GetPerformanceInfo?5fai@
CONST	SEGMENT
??_C@_0CL@PIJNDBHN@PerfInfo?0?5GetPerformanceInfo?5fai@ DB 'PerfInfo, Get'
	DB	'PerformanceInfo failed %u, %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DBCKLHBG@Process?5?$CFu?0?5Handles?5?$CFu?0?5Threads?5@
CONST	SEGMENT
??_C@_0CD@DBCKLHBG@Process?5?$CFu?0?5Handles?5?$CFu?0?5Threads?5@ DB 'Pro'
	DB	'cess %u, Handles %u, Threads %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HEDGONEI@Page?5Size?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0N@HEDGONEI@Page?5Size?5?$CFu?$AA@ DB 'Page Size %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@POMBEGEK@Kernel?3?5Total?5?$CFu?0?5Paged?5?$CFu?0?5Nonp@
CONST	SEGMENT
??_C@_0CI@POMBEGEK@Kernel?3?5Total?5?$CFu?0?5Paged?5?$CFu?0?5Nonp@ DB 'Ke'
	DB	'rnel: Total %u, Paged %u, Nonpaged %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DCNNFMJH@System?5Cache?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BA@DCNNFMJH@System?5Cache?5?$CFu?$AA@ DB 'System Cache %u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KFDPCIGB@Physical?3?5Total?5?$CFu?0?5Available?5?$CFu@
CONST	SEGMENT
??_C@_0CB@KFDPCIGB@Physical?3?5Total?5?$CFu?0?5Available?5?$CFu@ DB 'Phys'
	DB	'ical: Total %u, Available %u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@ONMEHFLA@Commit?3?5Total?5?$CFu?0?5Limit?5?$CFu?0?5Peak@
CONST	SEGMENT
??_C@_0CE@ONMEHFLA@Commit?3?5Total?5?$CFu?0?5Limit?5?$CFu?0?5Peak@ DB 'Co'
	DB	'mmit: Total %u, Limit %u, Peak %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ECNHKKAA@Performance?5Information?$AA@
CONST	SEGMENT
??_C@_0BI@ECNHKKAA@Performance?5Information?$AA@ DB 'Performance Informat'
	DB	'ion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CDFFAHFO@?$DO?$DO?5PerfInfo?$AA@
CONST	SEGMENT
??_C@_0M@CDFFAHFO@?$DO?$DO?5PerfInfo?$AA@ DB '>> PerfInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NHDPJOBN@?$DM?$DM?5DevDrvs?$AA@
CONST	SEGMENT
??_C@_0L@NHDPJOBN@?$DM?$DM?5DevDrvs?$AA@ DB '<< DevDrvs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@GKALJOAD@DevDrvs?0?5EnumDeviceDrivers?5faile@
CONST	SEGMENT
??_C@_0EB@GKALJOAD@DevDrvs?0?5EnumDeviceDrivers?5faile@ DB 'DevDrvs, Enum'
	DB	'DeviceDrivers failed: %u, %s (array size needed %u)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OBFOPNMD@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0P@OBFOPNMD@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFs?$AA@ DB '> %.3d, %s, %'
	DB	's', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PHKHDLGJ@Device?5Drivers?0?5Number?5of?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BO@PHKHDLGJ@Device?5Drivers?0?5Number?5of?3?5?$CFd?$AA@ DB 'Device'
	DB	' Drivers, Number of: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ILKGPHOB@?$DO?$DO?5DevDrvs?$AA@
CONST	SEGMENT
??_C@_0L@ILKGPHOB@?$DO?$DO?5DevDrvs?$AA@ DB '>> DevDrvs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BKCMKMCI@?$DM?$DM?5SysLogProcInfo?$AA@
CONST	SEGMENT
??_C@_0BC@BKCMKMCI@?$DM?$DM?5SysLogProcInfo?$AA@ DB '<< SysLogProcInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JLHKKOJE@Number?5of?5processor?5L1?1L2?1L3?5cac@
CONST	SEGMENT
??_C@_0CO@JLHKKOJE@Number?5of?5processor?5L1?1L2?1L3?5cac@ DB 'Number of '
	DB	'processor L1/L2/L3 caches: %d/%d/%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NEBFNBCF@Number?5of?5logical?5processors?3?5?$CFd@
CONST	SEGMENT
??_C@_0CB@NEBFNBCF@Number?5of?5logical?5processors?3?5?$CFd@ DB 'Number o'
	DB	'f logical processors: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JLJNFPPO@Number?5of?5processor?5cores?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BO@JLJNFPPO@Number?5of?5processor?5cores?3?5?$CFd?$AA@ DB 'Number '
	DB	'of processor cores: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CIFFOGGE@Number?5of?5physical?5processor?5pac@
CONST	SEGMENT
??_C@_0CK@CIFFOGGE@Number?5of?5physical?5processor?5pac@ DB 'Number of ph'
	DB	'ysical processor packages: %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CBGNJNLO@Number?5of?5NUMA?5nodes?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BJ@CBGNJNLO@Number?5of?5NUMA?5nodes?3?5?$CFd?$AA@ DB 'Number of NU'
	DB	'MA nodes: %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@ECHENMHH@Logical?5Processor?$CIs?$CJ?5Information@
CONST	SEGMENT
??_C@_0CB@ECHENMHH@Logical?5Processor?$CIs?$CJ?5Information@ DB 'Logical '
	DB	'Processor(s) Information', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@BGADHKMF@?9?9?5SysLogProcInfo?0?5Unsupp?5LOGICA@
CONST	SEGMENT
??_C@_0EC@BGADHKMF@?9?9?5SysLogProcInfo?0?5Unsupp?5LOGICA@ DB '-- SysLogP'
	DB	'rocInfo, Unsupp LOGICAL_PROCESSOR_RELATIONSHIP value %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KLILJGPG@?9?9?5SysLogProcInfo?0?5GLPI?5Error?5?$CFu@
CONST	SEGMENT
??_C@_0CF@KLILJGPG@?9?9?5SysLogProcInfo?0?5GLPI?5Error?5?$CFu@ DB '-- Sys'
	DB	'LogProcInfo, GLPI Error %u, %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LHEIAGGO@?9?9?5SysLogProcInfo?0?5Allocation?5fa@
CONST	SEGMENT
??_C@_0CG@LHEIAGGO@?9?9?5SysLogProcInfo?0?5Allocation?5fa@ DB '-- SysLogP'
	DB	'rocInfo, Allocation failure', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@CNICBAHJ@?$DM?$DM?5SysLogProcInfo?0?5Out?0?5Unsupp?5G@
CONST	SEGMENT
??_C@_0DO@CNICBAHJ@?$DM?$DM?5SysLogProcInfo?0?5Out?0?5Unsupp?5G@ DB '<< S'
	DB	'ysLogProcInfo, Out, Unsupp GetLogicalProcessorInformation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KHGALBC@GetLogicalProcessorInformation?$AA@
CONST	SEGMENT
??_C@_0BP@KHGALBC@GetLogicalProcessorInformation?$AA@ DB 'GetLogicalProce'
	DB	'ssorInformation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MLMEFHGM@?$DO?$DO?5SysLogProcInfo?$AA@
CONST	SEGMENT
??_C@_0BC@MLMEFHGM@?$DO?$DO?5SysLogProcInfo?$AA@ DB '>> SysLogProcInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NBODLJGE@?$DM?$DM?5SysDirs?$AA@
CONST	SEGMENT
??_C@_0L@NBODLJGE@?$DM?$DM?5SysDirs?$AA@ DB '<< SysDirs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JJNMAABC@WinSysDir?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0N@JJNMAABC@WinSysDir?5?$CFs?$AA@ DB 'WinSysDir %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PEBHDCJJ@WinDir?5?$CFs?$AA@
CONST	SEGMENT
??_C@_09PEBHDCJJ@WinDir?5?$CFs?$AA@ DB 'WinDir %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JFNOOIEA@TempPath?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0M@JFNOOIEA@TempPath?5?$CFs?$AA@ DB 'TempPath %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LGICPEGI@SysDir?5?$CFs?$AA@
CONST	SEGMENT
??_C@_09LGICPEGI@SysDir?5?$CFs?$AA@ DB 'SysDir %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OAHOLNHD@System?5Directories?$AA@
CONST	SEGMENT
??_C@_0BD@OAHOLNHD@System?5Directories?$AA@ DB 'System Directories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@INHKNAJI@?$DO?$DO?5SysDirs?$AA@
CONST	SEGMENT
??_C@_0L@INHKNAJI@?$DO?$DO?5SysDirs?$AA@ DB '>> SysDirs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GICAALNI@?$DM?$DM?5LogDrvs?$AA@
CONST	SEGMENT
??_C@_0L@GICAALNI@?$DM?$DM?5LogDrvs?$AA@ DB '<< LogDrvs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@NOKMBBI@?5?5?5FreeSpace?0?5SectorsPerCluster?5@
CONST	SEGMENT
??_C@_0GJ@NOKMBBI@?5?5?5FreeSpace?0?5SectorsPerCluster?5@ DB '   FreeSpac'
	DB	'e, SectorsPerCluster %u, BytesPerSector %u, NumberOfFreeClust'
	DB	'ers %u, TotalNumberOfClusters %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GE@FHMIJHPP@?5?5?5VolumeInfo?0?5Name?5?$CFs?0?5SerialNu@
CONST	SEGMENT
??_C@_0GE@FHMIJHPP@?5?5?5VolumeInfo?0?5Name?5?$CFs?0?5SerialNu@ DB '   Vo'
	DB	'lumeInfo, Name %s, SerialNumber %u, MaxComponentLenght %u, Fi'
	DB	'leSysflags 0x%08X, FileSysName %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BENIJAPK@?$DO?$DO?5?$CF?43d?0?5?$CFs?3?5Type?5?$CFs?$CI?$CFu?$CJ?$AA@
CONST	SEGMENT
??_C@_0BJ@BENIJAPK@?$DO?$DO?5?$CF?43d?0?5?$CFs?3?5Type?5?$CFs?$CI?$CFu?$CJ?$AA@ DB '>'
	DB	'> %.3d, %s: Type %s(%u)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FAMDJNNB@Logical?5Drivers?5?$CFu?5?$CI0x?$CF?48X?$CJ?$AA@
CONST	SEGMENT
??_C@_0BM@FAMDJNNB@Logical?5Drivers?5?$CFu?5?$CI0x?$CF?48X?$CJ?$AA@ DB 'L'
	DB	'ogical Drivers %u (0x%.8X)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DELJGCCE@?$DO?$DO?5LogDrvs?$AA@
CONST	SEGMENT
??_C@_0L@DELJGCCE@?$DO?$DO?5LogDrvs?$AA@ DB '>> LogDrvs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPJGKNJN@RamDisk?$AA@
CONST	SEGMENT
??_C@_07CPJGKNJN@RamDisk?$AA@ DB 'RamDisk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JIFOIGMJ@CDRom?$AA@
CONST	SEGMENT
??_C@_05JIFOIGMJ@CDRom?$AA@ DB 'CDRom', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MHHFENDB@Remote?$AA@
CONST	SEGMENT
??_C@_06MHHFENDB@Remote?$AA@ DB 'Remote', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OCBIINAK@Fixed?$AA@
CONST	SEGMENT
??_C@_05OCBIINAK@Fixed?$AA@ DB 'Fixed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MOKIPJGJ@NoRootDir?$AA@
CONST	SEGMENT
??_C@_09MOKIPJGJ@NoRootDir?$AA@ DB 'NoRootDir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNBLPGFN@?$DM?$DM?5SysTimes?$AA@
CONST	SEGMENT
??_C@_0M@FNBLPGFN@?$DM?$DM?5SysTimes?$AA@ DB '<< SysTimes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@OCMJGDEB@Processor?3?5?$CFI64u?5counts?0?5?$CFI64u?5c@
CONST	SEGMENT
??_C@_0DP@OCMJGDEB@Processor?3?5?$CFI64u?5counts?0?5?$CFI64u?5c@ DB 'Proc'
	DB	'essor: %I64u counts, %I64u counts/sec, %02d:%02d:%02d %f s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JFNEHINJ@Idle?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ?4?$AA@
CONST	SEGMENT
??_C@_0BN@JFNEHINJ@Idle?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ?4?$AA@ DB 'I'
	DB	'dle: %02d:%02d:%02d (%u s).', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JKEHGGOG@User?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ@
CONST	SEGMENT
??_C@_0CC@JKEHGGOG@User?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ@ DB 'U'
	DB	'ser time: %02d:%02d:%02d (%u s).', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PJKLEAEE@Kernel?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5@
CONST	SEGMENT
??_C@_0CE@PJKLEAEE@Kernel?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5@ DB 'K'
	DB	'ernel time: %02d:%02d:%02d (%u s).', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HHJCFDFH@System?5Times?$AA@
CONST	SEGMENT
??_C@_0N@HHJCFDFH@System?5Times?$AA@ DB 'System Times', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OJEMNBAD@?$DO?$DO?5SysTimes?$AA@
CONST	SEGMENT
??_C@_0M@OJEMNBAD@?$DO?$DO?5SysTimes?$AA@ DB '>> SysTimes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CIJKANFC@?$DM?$DM?5SysMem?$AA@
CONST	SEGMENT
??_C@_09CIJKANFC@?$DM?$DM?5SysMem?$AA@ DB '<< SysMem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@BKHHAKDB@Virtual?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avail@
CONST	SEGMENT
??_C@_0DB@BKHHAKDB@Virtual?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avail@ DB 'Vi'
	DB	'rtual: %u MB used, %u MB avail, %u MB extended', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PBKOHCPF@Pagefile?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@
CONST	SEGMENT
??_C@_0CC@PBKOHCPF@Pagefile?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@ DB 'Pa'
	DB	'gefile: %u MB used, %u MB avail', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JHNBDNDC@Physical?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@
CONST	SEGMENT
??_C@_0CC@JHNBDNDC@Physical?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@ DB 'Ph'
	DB	'ysical: %u MB used, %u MB avail', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DIEGGMCF@Usage?3?5?$CFu?$CF?$CF?5used?$AA@
CONST	SEGMENT
??_C@_0BB@DIEGGMCF@Usage?3?5?$CFu?$CF?$CF?5used?$AA@ DB 'Usage: %u%% used'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OAHOAHIO@System?5Memory?$AA@
CONST	SEGMENT
??_C@_0O@OAHOAHIO@System?5Memory?$AA@ DB 'System Memory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CJJPFOJ@?$DO?$DO?5SysMem?$AA@
CONST	SEGMENT
??_C@_09CJJPFOJ@?$DO?$DO?5SysMem?$AA@ DB '>> SysMem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EHLFKBJE@?$DM?$DM?5OSInfo?$AA@
CONST	SEGMENT
??_C@_09EHLFKBJE@?$DM?$DM?5OSInfo?$AA@ DB '<< OSInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@OPOFGEHK@OSInfo?0?5Version?5?$CFu?4?$CFu?4?$CFu?0?5Platfo@
CONST	SEGMENT
??_C@_0EG@OPOFGEHK@OSInfo?0?5Version?5?$CFu?4?$CFu?4?$CFu?0?5Platfo@ DB 'O'
	DB	'SInfo, Version %u.%u.%u, Platform %u, SP %s(%u.%u), Suite 0x%'
	DB	'08X, %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CILGCIDH@Workstation?$AA@
CONST	SEGMENT
??_C@_0M@CILGCIDH@Workstation?$AA@ DB 'Workstation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LGMEBDBC@Server?$AA@
CONST	SEGMENT
??_C@_06LGMEBDBC@Server?$AA@ DB 'Server', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LGEIIGCP@Domain?5Controller?$AA@
CONST	SEGMENT
??_C@_0BC@LGEIIGCP@Domain?5Controller?$AA@ DB 'Domain Controller', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GNLGFJCP@?$DO?$DO?5OSInfo?$AA@
CONST	SEGMENT
??_C@_09GNLGFJCP@?$DO?$DO?5OSInfo?$AA@ DB '>> OSInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EJPMBDJN@?$DM?$DM?5SysInfo?$AA@
CONST	SEGMENT
??_C@_0L@EJPMBDJN@?$DM?$DM?5SysInfo?$AA@ DB '<< SysInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FN@KGKHOIOF@Computer?3?5?$CFs?0?5Processor?$CIs?$CJ?5?$CFu?5?$CFf@
CONST	SEGMENT
??_C@_0FN@KGKHOIOF@Computer?3?5?$CFs?0?5Processor?$CIs?$CJ?5?$CFu?5?$CFf@ DB 'C'
	DB	'omputer: %s, Processor(s) %u %f Mhz Current %u, %s, Level %u,'
	DB	' Rev %u, Type %u; Page Size %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NBCGADJA@Unknown?$AA@
CONST	SEGMENT
??_C@_07NBCGADJA@Unknown?$AA@ DB 'Unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDFEINMN@x86?$AA@
CONST	SEGMENT
??_C@_03NDFEINMN@x86?$AA@ DB 'x86', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BAGOKCHN@Intel?5Itanium?9based?$AA@
CONST	SEGMENT
??_C@_0BE@BAGOKCHN@Intel?5Itanium?9based?$AA@ DB 'Intel Itanium-based', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EBOFFHEB@x64?5?$CIAMD?5or?5Intel?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@EBOFFHEB@x64?5?$CIAMD?5or?5Intel?$CJ?$AA@ DB 'x64 (AMD or Intel'
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BFGFHKGB@?$DO?$DO?5SysInfo?$AA@
CONST	SEGMENT
??_C@_0L@BFGFHKGB@?$DO?$DO?5SysInfo?$AA@ DB '>> SysInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@HJFNKFOJ@?9?9?5CurrentProcessorNumber?0?5GetCu@
CONST	SEGMENT
??_C@_0EH@HJFNKFOJ@?9?9?5CurrentProcessorNumber?0?5GetCu@ DB '-- CurrentP'
	DB	'rocessorNumber, GetCurrentProcessorNumber is not supported.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PNLNEKOB@kernel32?$AA@
CONST	SEGMENT
??_C@_08PNLNEKOB@kernel32?$AA@ DB 'kernel32', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DFNBACLA@GetCurrentProcessorNumber?$AA@
CONST	SEGMENT
??_C@_0BK@DFNBACLA@GetCurrentProcessorNumber?$AA@ DB 'GetCurrentProcessor'
	DB	'Number', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DNDAOIDK@?$DM?$DM?5HwProfile?$AA@
CONST	SEGMENT
??_C@_0N@DNDAOIDK@?$DM?$DM?5HwProfile?$AA@ DB '<< HwProfile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MGHJNPJJ@HwProfile?0?5GetCurrentHwProfile?5?$CF@
CONST	SEGMENT
??_C@_0CG@MGHJNPJJ@HwProfile?0?5GetCurrentHwProfile?5?$CF@ DB 'HwProfile,'
	DB	' GetCurrentHwProfile %u, %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OIKPBLGF@Hardware?5Profile?0?5DockInfo?5?$CFp?0?5G@
CONST	SEGMENT
??_C@_0DA@OIKPBLGF@Hardware?5Profile?0?5DockInfo?5?$CFp?0?5G@ DB 'Hardwar'
	DB	'e Profile, DockInfo %p, GUID %s, Name %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBFHMDOO@?$DO?$DO?5HwProfile?$AA@
CONST	SEGMENT
??_C@_0N@LBFHMDOO@?$DO?$DO?5HwProfile?$AA@ DB '>> HwProfile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LHLIHEIP@?$DM?$DM?5ProcInfo?$AA@
CONST	SEGMENT
??_C@_0M@LHLIHEIP@?$DM?$DM?5ProcInfo?$AA@ DB '<< ProcInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JDCGCMFK@ProcessInfo?0?5EnumProcesses?5faile@
CONST	SEGMENT
??_C@_0CK@JDCGCMFK@ProcessInfo?0?5EnumProcesses?5faile@ DB 'ProcessInfo, '
	DB	'EnumProcesses failed: %u, %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@MLNPPNEI@?$DO?5?$CF?43d?0?5?$DMunknown?$DO?0?5?$CFu?0?5?$DP?0?5?$DP?0?5?$DP?0?5@
CONST	SEGMENT
??_C@_0DO@MLNPPNEI@?$DO?5?$CF?43d?0?5?$DMunknown?$DO?0?5?$CFu?0?5?$DP?0?5?$DP?0?5?$DP?0?5@ DB '>'
	DB	' %.3d, <unknown>, %u, ?, ?, ?, ??:??:??, ?, ?, ?, ?, ?, ?, ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@FOMPOKBN@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CF02d@
CONST	SEGMENT
??_C@_0EH@FOMPOKBN@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CF02d@ DB '>'
	DB	' %.3d, %s, %u, %u, %u, %u, %02d:%02d:%02d, %u, %u, %u, %u, %u'
	DB	', %u, %u', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@
CONST	SEGMENT
??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@ DB '<unknown>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0OJ@BFFOFANH@?$DO?5?5?5?5?5?5Process?5Name?0?5ProcessID?0?5@
CONST	SEGMENT
??_C@_0OJ@BFFOFANH@?$DO?5?5?5?5?5?5Process?5Name?0?5ProcessID?0?5@ DB '> '
	DB	'     Process Name, ProcessID, Handles, PagefileUsage, PeakPag'
	DB	'efileUsage, CPUTime, PageFaultCount, PeakWorkingSetSize, Work'
	DB	'ingSetSize, QuotaPeakPagedPoolUsage, QuotaPagedPoolUsage, Quo'
	DB	'taPeakNonPagedPoolUsage, QuotaNonPagedPoolUsage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LMCBGMGC@Processes?5Informaton?0?5Number?5of?5@
CONST	SEGMENT
??_C@_0CO@LMCBGMGC@Processes?5Informaton?0?5Number?5of?5@ DB 'Processes I'
	DB	'nformaton, Number of processes: %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DOPFDNB@?$DO?$DO?5ProcInfo?$AA@
CONST	SEGMENT
??_C@_0M@DOPFDNB@?$DO?$DO?5ProcInfo?$AA@ DB '>> ProcInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FFDNLHNK@?$DM?$DM?5ThrdUSB?$AA@
CONST	SEGMENT
??_C@_0L@FFDNLHNK@?$DM?$DM?5ThrdUSB?$AA@ DB '<< ThrdUSB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GBFCDAOJ@?$DM?$DM?5ThrdUSB?0?5New?5USB?5class?5null?$AA@
CONST	SEGMENT
??_C@_0BP@GBFCDAOJ@?$DM?$DM?5ThrdUSB?0?5New?5USB?5class?5null?$AA@ DB '<<'
	DB	' ThrdUSB, New USB class null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JKENOCG@?$DO?$DO?5ThrdUSB?$AA@
CONST	SEGMENT
??_C@_0L@JKENOCG@?$DO?$DO?5ThrdUSB?$AA@ DB '>> ThrdUSB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BACOFOKN@?$DM?$DM?5ThrdMsg?$AA@
CONST	SEGMENT
??_C@_0L@BACOFOKN@?$DM?$DM?5ThrdMsg?$AA@ DB '<< ThrdMsg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CBADGOHO@?$DM?$DM?5ThrdMsg?0?5CreateWnd?5?$CFu?0?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BN@CBADGOHO@?$DM?$DM?5ThrdMsg?0?5CreateWnd?5?$CFu?0?5?$CFs?$AA@ DB '<'
	DB	'< ThrdMsg, CreateWnd %u, %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MOCDLCEG@?$DM?$DM?5ThrdMsg?0?5RegCls?5?$CFu?0?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BK@MOCDLCEG@?$DM?$DM?5ThrdMsg?0?5RegCls?5?$CFu?0?5?$CFs?$AA@ DB '<'
	DB	'< ThrdMsg, RegCls %u, %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JDKJFHEL@SysStatusWClass?$AA@
CONST	SEGMENT
??_C@_0BA@JDKJFHEL@SysStatusWClass?$AA@ DB 'SysStatusWClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMLHDHFB@?$DO?$DO?5ThrdMsg?$AA@
CONST	SEGMENT
??_C@_0L@EMLHDHFB@?$DO?$DO?5ThrdMsg?$AA@ DB '>> ThrdMsg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CDGGKCEM@Quick?5Exit?5Requested?$AA@
CONST	SEGMENT
??_C@_0BF@CDGGKCEM@Quick?5Exit?5Requested?$AA@ DB 'Quick Exit Requested', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MBHJGPCP@Would?5you?5like?5to?5quickly?5close?5@
CONST	SEGMENT
??_C@_0DC@MBHJGPCP@Would?5you?5like?5to?5quickly?5close?5@ DB 'Would you '
	DB	'like to quickly close this application?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BIPEBJDO@Exit?5Requested?$AA@
CONST	SEGMENT
??_C@_0P@BIPEBJDO@Exit?5Requested?$AA@ DB 'Exit Requested', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KDAHPGC@Would?5you?5like?5to?5close?5this?5app@
CONST	SEGMENT
??_C@_0CK@KDAHPGC@Would?5you?5like?5to?5close?5this?5app@ DB 'Would you l'
	DB	'ike to close this application?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@GBOFOCLM@Handle?5CHANGE?5?$DMHandle?5?$CFp?0?5NameOf@
CONST	SEGMENT
??_C@_0EN@GBOFOCLM@Handle?5CHANGE?5?$DMHandle?5?$CFp?0?5NameOf@ DB 'Handl'
	DB	'e CHANGE <Handle %p, NameOffset %d, Name %s, DevNotify %p, Ev'
	DB	'ntGUID %s>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BNLENJBO@Net?5CHANGE?5?$DMResource?5?$CFp?0?5Flags?5?$CF@
CONST	SEGMENT
??_C@_0CD@BNLENJBO@Net?5CHANGE?5?$DMResource?5?$CFp?0?5Flags?5?$CF@ DB 'N'
	DB	'et CHANGE <Resource %p, Flags %p>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LPBNHOKC@Port?5CHANGE?5?$DM?$CFs?$DO?$AA@
CONST	SEGMENT
??_C@_0BB@LPBNHOKC@Port?5CHANGE?5?$DM?$CFs?$DO?$AA@ DB 'Port CHANGE <%s>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FJDGCJID@DevNode?5CHANGE?5?$DM?$CFp?$DO?$AA@
CONST	SEGMENT
??_C@_0BE@FJDGCJID@DevNode?5CHANGE?5?$DM?$CFp?$DO?$AA@ DB 'DevNode CHANGE'
	DB	' <%p>', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FNGBCCOE@Oem?5CHANGE?5?$DMId?5?$CFp?0?5SuppFunc?5?$CFp?$DO?$AA@
CONST	SEGMENT
??_C@_0CA@FNGBCCOE@Oem?5CHANGE?5?$DMId?5?$CFp?0?5SuppFunc?5?$CFp?$DO?$AA@ DB 'O'
	DB	'em CHANGE <Id %p, SuppFunc %p>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OJJDNJOH@Volume?5CHANGE?5?$DMFlags?5?$CFp?0?5UnitMas@
CONST	SEGMENT
??_C@_0CG@OJJDNJOH@Volume?5CHANGE?5?$DMFlags?5?$CFp?0?5UnitMas@ DB 'Volum'
	DB	'e CHANGE <Flags %p, UnitMask %p>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ENJCMGFB@USB?5?5REMOVE?$AA@
CONST	SEGMENT
??_C@_0M@ENJCMGFB@USB?5?5REMOVE?$AA@ DB 'USB  REMOVE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FPDKOEDO@USB?5ARRIVAL?$AA@
CONST	SEGMENT
??_C@_0M@FPDKOEDO@USB?5ARRIVAL?$AA@ DB 'USB ARRIVAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HKOFJDPP@Usb?5CHANGE?5Dev?5?$DM?$CFs?5GUID?5?$CFs?$DO?$AA@
CONST	SEGMENT
??_C@_0BM@HKOFJDPP@Usb?5CHANGE?5Dev?5?$DM?$CFs?5GUID?5?$CFs?$DO?$AA@ DB 'U'
	DB	'sb CHANGE Dev <%s GUID %s>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PNOLPDFB@Device?5?$CFs?0?5Size?5?$CFu?0?5DevType?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BP@PNOLPDFB@Device?5?$CFs?0?5Size?5?$CFu?0?5DevType?5?$CFu?$AA@ DB 'D'
	DB	'evice %s, Size %u, DevType %u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PKIBBDFP@Removed?$AA@
CONST	SEGMENT
??_C@_07PKIBBDFP@Removed?$AA@ DB 'Removed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHAMMCDJ@Arrived?$AA@
CONST	SEGMENT
??_C@_07NHAMMCDJ@Arrived?$AA@ DB 'Arrived', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@OJAKBKAK@User?5Defined?5?$CFs?0?5Size?5?$CFu?0?5DevTyp@
CONST	SEGMENT
??_C@_0CF@OJAKBKAK@User?5Defined?5?$CFs?0?5Size?5?$CFu?0?5DevTyp@ DB 'Use'
	DB	'r Defined %s, Size %u, DevType %u', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLINGCEN@End?5Session?$AA@
CONST	SEGMENT
??_C@_0M@LLINGCEN@End?5Session?$AA@ DB 'End Session', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GJJBBOEE@Session?5Closure?5Requested?$AA@
CONST	SEGMENT
??_C@_0BK@GJJBBOEE@Session?5Closure?5Requested?$AA@ DB 'Session Closure R'
	DB	'equested', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@KBNPPDGJ@WndProcMsg?0?5Wnd?5?$CFp?0?5Msg?50x?$CF?44X?0?5@
CONST	SEGMENT
??_C@_0GB@KBNPPDGJ@WndProcMsg?0?5Wnd?5?$CFp?0?5Msg?50x?$CF?44X?0?5@ DB 'W'
	DB	'ndProcMsg, Wnd %p, Msg 0x%.4X, WPrm 0x%.8X HI 0x%.4X LO 0x%.4'
	DB	'X, LPrm 0x%.8X HI 0x%.4X LO 0x%.4X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OFOICJDM@?$DM?$DM?5EndPendgThrd?$AA@
CONST	SEGMENT
??_C@_0BA@OFOICJDM@?$DM?$DM?5EndPendgThrd?$AA@ DB '<< EndPendgThrd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FCCILLCE@RtlFreeUserThreadStack?$AA@
CONST	SEGMENT
??_C@_0BH@FCCILLCE@RtlFreeUserThreadStack?$AA@ DB 'RtlFreeUserThreadStack'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@GJOFHIHD@?$AAn?$AAt?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@GJOFHIHD@?$AAn?$AAt?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@ DB 'n'
	DB	00H, 't', 00H, 'd', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'd', 00H
	DB	'l', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LKAHEPCO@?$DO?$DO?5RlsThrdStck?0?5Hndl?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0BI@LKAHEPCO@?$DO?$DO?5RlsThrdStck?0?5Hndl?5?$CFp?$AA@ DB '>> RlsTh'
	DB	'rdStck, Hndl %p', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JJOKMIHG@?$DO?$DO?5EndPendgThrd?0?5Hndl?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0BJ@JJOKMIHG@?$DO?$DO?5EndPendgThrd?0?5Hndl?5?$CFp?$AA@ DB '>> EndP'
	DB	'endgThrd, Hndl %p', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EBHNNPDK@?$DM?$DM?5StartThrd?0?5ret?5False?$AA@
CONST	SEGMENT
??_C@_0BI@EBHNNPDK@?$DM?$DM?5StartThrd?0?5ret?5False?$AA@ DB '<< StartThr'
	DB	'd, ret False', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BDJONOMH@?$DM?$DM?5StartThrd?0?5ret?5True?$AA@
CONST	SEGMENT
??_C@_0BH@BDJONOMH@?$DM?$DM?5StartThrd?0?5ret?5True?$AA@ DB '<< StartThrd'
	DB	', ret True', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POKBMEDO@?$DM?$DM?5StartThrd?0?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0BB@POKBMEDO@?$DM?$DM?5StartThrd?0?5?$CFp?$AA@ DB '<< StartThrd, %p'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LFOPNEOO@?9?9?5StartThrd?0?5No?5?$CFs?5thrd?5created@
CONST	SEGMENT
??_C@_0CB@LFOPNEOO@?9?9?5StartThrd?0?5No?5?$CFs?5thrd?5created@ DB '-- St'
	DB	'artThrd, No %s thrd created', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FDECIAPH@?9?9?5StartThrd?0?5?$CFs?5Id?5?$CFu?0?5Hnd?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0BP@FDECIAPH@?9?9?5StartThrd?0?5?$CFs?5Id?5?$CFu?0?5Hnd?5?$CFp?$AA@ DB '-'
	DB	'- StartThrd, %s Id %u, Hnd %p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@OLKMHNED@?$DO?$DO?5StartThrd?0?5Name?5?$CFs?0?5Func?5?$CFp?0?5@
CONST	SEGMENT
??_C@_0DN@OLKMHNED@?$DO?$DO?5StartThrd?0?5Name?5?$CFs?0?5Func?5?$CFp?0?5@ DB '>'
	DB	'> StartThrd, Name %s, Func %p, Dat %p, Timeout %u, pHndl %p', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DAMKDCLP@?9?9?5SetThrdName?0?5Tp?5?$CFp?0?5Name?5?$CFs?0?5@
CONST	SEGMENT
??_C@_0DA@DAMKDCLP@?9?9?5SetThrdName?0?5Tp?5?$CFp?0?5Name?5?$CFs?0?5@ DB '-'
	DB	'- SetThrdName, Tp %p, Name %s, Id %u, Flags %p', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
CONST	SEGMENT
??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@ DB '%02d:%0'
	DB	'2d:%02d, %f s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PPCHIOMP@?$CFs?0?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
CONST	SEGMENT
??_C@_0BJ@PPCHIOMP@?$CFs?0?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@ DB '%'
	DB	's, %02d:%02d:%02d, %f s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@GFOAHNCA@AppUnhndldExcptFltr?0?5Attempt?5to?5@
CONST	SEGMENT
??_C@_0GA@GFOAHNCA@AppUnhndldExcptFltr?0?5Attempt?5to?5@ DB 'AppUnhndldEx'
	DB	'cptFltr, Attempt to create MiniDump file before exit proc due'
	DB	' to unhndld exception.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@NLNOIJDN@CreateMiniDump?0?5Failed?5to?5create@
CONST	SEGMENT
??_C@_0ED@NLNOIJDN@CreateMiniDump?0?5Failed?5to?5create@ DB 'CreateMiniDu'
	DB	'mp, Failed to create MiniDump file. Last Error: %d, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@KOKEPHBJ@CreateMiniDump?0?5Created?5MiniDump@
CONST	SEGMENT
??_C@_0DE@KOKEPHBJ@CreateMiniDump?0?5Created?5MiniDump@ DB 'CreateMiniDum'
	DB	'p, Created MiniDump file located at %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MLLEOGPJ@?$CFs_?$CF?44d?9?$CF?42d?9?$CF?42d_?$CF?42d?9?$CF?42d?9?$CF?42d@
CONST	SEGMENT
??_C@_0CF@MLLEOGPJ@?$CFs_?$CF?44d?9?$CF?42d?9?$CF?42d_?$CF?42d?9?$CF?42d?9?$CF?42d@ DB '%'
	DB	's_%.4d-%.2d-%.2d_%.2d-%.2d-%.2d.dmp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KECABMHK@SysStatus?$AA@
CONST	SEGMENT
??_C@_09KECABMHK@SysStatus?$AA@ DB 'SysStatus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
CONST	SEGMENT
??_C@_04CFJMJGDJ@?$CF?42X?$AA@ DB '%.2X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ENHKCHAG@New?5DeviceName?5null?$AA@
CONST	SEGMENT
??_C@_0BE@ENHKCHAG@New?5DeviceName?5null?$AA@ DB 'New DeviceName null', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GCCDOOIB@?$CFs?5?$FLVID?3?$CFs?5PID?3?$CFs?5SN?3?$CFs?$FN?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BM@GCCDOOIB@?$CFs?5?$FLVID?3?$CFs?5PID?3?$CFs?5SN?3?$CFs?$FN?5?$CFs?$AA@ DB '%'
	DB	's [VID:%s PID:%s SN:%s] %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
CONST	SEGMENT
??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@ DB 'netmsg.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GCOGCGED@?$DM?$DM?5ChkLogFileSz?$AA@
CONST	SEGMENT
??_C@_0BA@GCOGCGED@?$DM?$DM?5ChkLogFileSz?$AA@ DB '<< ChkLogFileSz', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PNMJAMBO@?9?9?5ChkLogFileSz?0?5Remaning?5?$CFs?5?9?$DO?5@
CONST	SEGMENT
??_C@_0CD@PNMJAMBO@?9?9?5ChkLogFileSz?0?5Remaning?5?$CFs?5?9?$DO?5@ DB '-'
	DB	'- ChkLogFileSz, Remaning %s -> %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HFHPDHC@?$CFs?4000?$AA@
CONST	SEGMENT
??_C@_06HFHPDHC@?$CFs?4000?$AA@ DB '%s.000', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KIGAJNDH@?9?9?5ChkLogFileSz?0?5Renaming?5?$CFs?5?9?$DO?5@
CONST	SEGMENT
??_C@_0CD@KIGAJNDH@?9?9?5ChkLogFileSz?0?5Renaming?5?$CFs?5?9?$DO?5@ DB '-'
	DB	'- ChkLogFileSz, Renaming %s -> %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@JDMPMEKE@?9?9?5ChkLogFileSz?0?5Removing?5?$CFs?5?9?5o@
CONST	SEGMENT
??_C@_0CL@JDMPMEKE@?9?9?5ChkLogFileSz?0?5Removing?5?$CFs?5?9?5o@ DB '-- C'
	DB	'hkLogFileSz, Removing %s - oldest file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DNFINAJK@?9?9?5ChkLogFileSz?0?5Last?5file?5fnd?3?5@
CONST	SEGMENT
??_C@_0CD@DNFINAJK@?9?9?5ChkLogFileSz?0?5Last?5file?5fnd?3?5@ DB '-- ChkL'
	DB	'ogFileSz, Last file fnd: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MGCLJDML@?9?9?5ChkLogFileSz?0?5Trying?5opng?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0CA@MGCLJDML@?9?9?5ChkLogFileSz?0?5Trying?5opng?5?$CFs?$AA@ DB '-- '
	DB	'ChkLogFileSz, Trying opng %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KFBNGPEH@?$CFs?4?$CF?43d?$AA@
CONST	SEGMENT
??_C@_07KFBNGPEH@?$CFs?4?$CF?43d?$AA@ DB '%s.%.3d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HOHICOFN@?9?9?5ChkLogFileSz?0?5?$CFs?5Sz?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BK@HOHICOFN@?9?9?5ChkLogFileSz?0?5?$CFs?5Sz?5?$CFu?$AA@ DB '-- Chk'
	DB	'LogFileSz, %s Sz %u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LGJHGBPF@?9?9?5ChkLogFileSz?0?5Opng?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BJ@LGJHGBPF@?9?9?5ChkLogFileSz?0?5Opng?5?$CFs?$AA@ DB '-- ChkLogFi'
	DB	'leSz, Opng %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GIEOINGB@?$DO?$DO?5ChkLogFileSz?0?5?$CFu?$AA@
CONST	SEGMENT
??_C@_0BE@GIEOINGB@?$DO?$DO?5ChkLogFileSz?0?5?$CFu?$AA@ DB '>> ChkLogFile'
	DB	'Sz, %u', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EELIKDKI@TID?5?$CF?45u?5ID?5?$CF?45u?5?$CFs?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BG@EELIKDKI@TID?5?$CF?45u?5ID?5?$CF?45u?5?$CFs?$AN?6?$AA@ DB 'TID '
	DB	'%.5u ID %.5u %s', 0dH, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BEJGOBHG@?$CFs?4log?$AA@
CONST	SEGMENT
??_C@_06BEJGOBHG@?$CFs?4log?$AA@ DB '%s.log', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OLKONLEL@?7?$CFs?$AN?6?$AA@
CONST	SEGMENT
??_C@_05OLKONLEL@?7?$CFs?$AN?6?$AA@ DB 09H, '%s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BJCOJGPD@?$AN?6?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4@
CONST	SEGMENT
??_C@_0EF@BJCOJGPD@?$AN?6?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4@ DB 0dH
	DB	0aH, '%.4d-%.2d-%.2d %.2d:%.2d:%.2d.%.3d PID %.5u TID %.5u ID '
	DB	'%.5u', 0dH, 0aH, '%s', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FHDHJHFN@SysStatus_Log?$AA@
CONST	SEGMENT
??_C@_0O@FHDHJHFN@SysStatus_Log?$AA@ DB 'SysStatus_Log', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJLKJKJF@?$CFs?4?$CFs_old?$AA@
CONST	SEGMENT
??_C@_09BJLKJKJF@?$CFs?4?$CFs_old?$AA@ DB '%s.%s_old', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
CONST	SEGMENT
??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@ DB '%s.%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CLGPPHLF@?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4?$CF?4@
CONST	SEGMENT
??_C@_0CP@CLGPPHLF@?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4?$CF?4@ DB '%'
	DB	'.4d-%.2d-%.2d %.2d:%.2d:%.2d.%.3d PID %.5u %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMGDDAFL@wmi?$AA@
CONST	SEGMENT
??_C@_03NMGDDAFL@wmi?$AA@ DB 'wmi', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GLILPAEP@wnd?$AA@
CONST	SEGMENT
??_C@_03GLILPAEP@wnd?$AA@ DB 'wnd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LBAKCJJ@dbg?$AA@
CONST	SEGMENT
??_C@_03LBAKCJJ@dbg?$AA@ DB 'dbg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GBPLBEEL@SysStatus_Trace?$AA@
CONST	SEGMENT
??_C@_0BA@GBPLBEEL@SysStatus_Trace?$AA@ DB 'SysStatus_Trace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02BBAHNLBA@?$CFp?$AA@
CONST	SEGMENT
??_C@_02BBAHNLBA@?$CFp?$AA@ DB '%p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CLAHNHIH@?$DM?$DM?5MonIPs?$AA@
CONST	SEGMENT
??_C@_09CLAHNHIH@?$DM?$DM?5MonIPs?$AA@ DB '<< MonIPs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BAECPDM@?$DO?$DO?5MonIPs?$AA@
CONST	SEGMENT
??_C@_09BAECPDM@?$DO?$DO?5MonIPs?$AA@ DB '>> MonIPs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
CONST	SEGMENT
??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@ DB 'Win32_VoltageProbe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
CONST	SEGMENT
??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@ DB 'Win32_TemperatureProbe'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MPHEPFAH@SystemName?$AA@
CONST	SEGMENT
??_C@_0L@MPHEPFAH@SystemName?$AA@ DB 'SystemName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LFKNNEKA@SystemCreationClassName?$AA@
CONST	SEGMENT
??_C@_0BI@LFKNNEKA@SystemCreationClassName?$AA@ DB 'SystemCreationClassNa'
	DB	'me', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LLOCDJF@MaxBatteryError?$AA@
CONST	SEGMENT
??_C@_0BA@LLOCDJF@MaxBatteryError?$AA@ DB 'MaxBatteryError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EBMPMBCC@CapacityMultiplier?$AA@
CONST	SEGMENT
??_C@_0BD@EBMPMBCC@CapacityMultiplier?$AA@ DB 'CapacityMultiplier', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EMGHNHBI@ManufactureDate?$AA@
CONST	SEGMENT
??_C@_0BA@EMGHNHBI@ManufactureDate?$AA@ DB 'ManufactureDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
CONST	SEGMENT
??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@ DB 'Win32_PortableBattery', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLKOPNJP@IsLinear?$AA@
CONST	SEGMENT
??_C@_08JLKOPNJP@IsLinear?$AA@ DB 'IsLinear', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NIGABCBB@MinReadable?$AA@
CONST	SEGMENT
??_C@_0M@NIGABCBB@MinReadable?$AA@ DB 'MinReadable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EIBDACPL@MaxReadable?$AA@
CONST	SEGMENT
??_C@_0M@EIBDACPL@MaxReadable?$AA@ DB 'MaxReadable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CCJKGBMI@UpperThresholdNonCritical?$AA@
CONST	SEGMENT
??_C@_0BK@CCJKGBMI@UpperThresholdNonCritical?$AA@ DB 'UpperThresholdNonCr'
	DB	'itical', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HGEJIDLL@UpperThresholdFatal?$AA@
CONST	SEGMENT
??_C@_0BE@HGEJIDLL@UpperThresholdFatal?$AA@ DB 'UpperThresholdFatal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FKDKGMLL@UpperThresholdCritical?$AA@
CONST	SEGMENT
??_C@_0BH@FKDKGMLL@UpperThresholdCritical?$AA@ DB 'UpperThresholdCritical'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LBKIMOJN@LowerThresholdNonCritical?$AA@
CONST	SEGMENT
??_C@_0BK@LBKIMOJN@LowerThresholdNonCritical?$AA@ DB 'LowerThresholdNonCr'
	DB	'itical', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NPMAGCMK@LowerThresholdFatal?$AA@
CONST	SEGMENT
??_C@_0BE@NPMAGCMK@LowerThresholdFatal?$AA@ DB 'LowerThresholdFatal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NMAIJHFM@LowerThresholdCritical?$AA@
CONST	SEGMENT
??_C@_0BH@NMAIJHFM@LowerThresholdCritical?$AA@ DB 'LowerThresholdCritical'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBKECFPC@NormalMin?$AA@
CONST	SEGMENT
??_C@_09FBKECFPC@NormalMin?$AA@ DB 'NormalMin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EDCPMBJN@NormalMax?$AA@
CONST	SEGMENT
??_C@_09EDCPMBJN@NormalMax?$AA@ DB 'NormalMax', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OAFFNBPO@NominalReading?$AA@
CONST	SEGMENT
??_C@_0P@OAFFNBPO@NominalReading?$AA@ DB 'NominalReading', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BKMALBOE@Tolerance?$AA@
CONST	SEGMENT
??_C@_09BKMALBOE@Tolerance?$AA@ DB 'Tolerance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLCOAFEI@Accuracy?$AA@
CONST	SEGMENT
??_C@_08NLCOAFEI@Accuracy?$AA@ DB 'Accuracy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IDBBEDLI@CurrentReading?$AA@
CONST	SEGMENT
??_C@_0P@IDBBEDLI@CurrentReading?$AA@ DB 'CurrentReading', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
CONST	SEGMENT
??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@ DB 'Win32_CurrentProbe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JBKHOEPE@SystemUpTime?$AA@
CONST	SEGMENT
??_C@_0N@JBKHOEPE@SystemUpTime?$AA@ DB 'SystemUpTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HMBPBBJB@SystemCallsPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@HMBPBBJB@SystemCallsPerSec?$AA@ DB 'SystemCallsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NPGOAGED@ProcessorQueueLength?$AA@
CONST	SEGMENT
??_C@_0BF@NPGOAGED@ProcessorQueueLength?$AA@ DB 'ProcessorQueueLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NGGOKLMO@PercentRegistryQuotaInUse?$AA@
CONST	SEGMENT
??_C@_0BK@NGGOKLMO@PercentRegistryQuotaInUse?$AA@ DB 'PercentRegistryQuot'
	DB	'aInUse', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PHDBHNCO@FloatingEmulationsPerSec?$AA@
CONST	SEGMENT
??_C@_0BJ@PHDBHNCO@FloatingEmulationsPerSec?$AA@ DB 'FloatingEmulationsPe'
	DB	'rSec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LGMPDKBA@FileWriteBytesPerSec?$AA@
CONST	SEGMENT
??_C@_0BF@LGMPDKBA@FileWriteBytesPerSec?$AA@ DB 'FileWriteBytesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NKKLPLAB@FileReadBytesPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@NKKLPLAB@FileReadBytesPerSec?$AA@ DB 'FileReadBytesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PIKKJCOI@FileControlOperationsPerSec?$AA@
CONST	SEGMENT
??_C@_0BM@PIKKJCOI@FileControlOperationsPerSec?$AA@ DB 'FileControlOperat'
	DB	'ionsPerSec', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EMNLAEFK@FileControlBytesPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@EMNLAEFK@FileControlBytesPerSec?$AA@ DB 'FileControlBytesPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DHKAACDP@ExceptionDispatchesPerSec?$AA@
CONST	SEGMENT
??_C@_0BK@DHKAACDP@ExceptionDispatchesPerSec?$AA@ DB 'ExceptionDispatches'
	DB	'PerSec', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GIPKJDB@ContextSwitchesPerSec?$AA@
CONST	SEGMENT
??_C@_0BG@GIPKJDB@ContextSwitchesPerSec?$AA@ DB 'ContextSwitchesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KHFHJKMP@AlignmentFixupsPerSec?$AA@
CONST	SEGMENT
??_C@_0BG@KHFHJKMP@AlignmentFixupsPerSec?$AA@ DB 'AlignmentFixupsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
CONST	SEGMENT
??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@ DB 'Win32_PerfRaw'
	DB	'Data_PerfOS_System', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FPNGHOGK@PercentPrivilegedTime?$AA@
CONST	SEGMENT
??_C@_0BG@FPNGHOGK@PercentPrivilegedTime?$AA@ DB 'PercentPrivilegedTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GMGAHOLM@PercentInterruptTime?$AA@
CONST	SEGMENT
??_C@_0BF@GMGAHOLM@PercentInterruptTime?$AA@ DB 'PercentInterruptTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LMLLFJEI@PercentDPCTime?$AA@
CONST	SEGMENT
??_C@_0P@LMLLFJEI@PercentDPCTime?$AA@ DB 'PercentDPCTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LEJEMNCG@PercentC3Time?$AA@
CONST	SEGMENT
??_C@_0O@LEJEMNCG@PercentC3Time?$AA@ DB 'PercentC3Time', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HPMIBOID@PercentC2Time?$AA@
CONST	SEGMENT
??_C@_0O@HPMIBOID@PercentC2Time?$AA@ DB 'PercentC2Time', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PJFMGMCN@PercentC1Time?$AA@
CONST	SEGMENT
??_C@_0O@PJFMGMCN@PercentC1Time?$AA@ DB 'PercentC1Time', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCICDGPJ@InterruptsPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@FCICDGPJ@InterruptsPerSec?$AA@ DB 'InterruptsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KHEGFAIJ@DPCsQueuedPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@KHEGFAIJ@DPCsQueuedPerSec?$AA@ DB 'DPCsQueuedPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BHCICOFH@DPCRate?$AA@
CONST	SEGMENT
??_C@_07BHCICOFH@DPCRate?$AA@ DB 'DPCRate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EPCEDEOH@C3TransitionsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@EPCEDEOH@C3TransitionsPerSec?$AA@ DB 'C3TransitionsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JIMGLELP@C2TransitionsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@JIMGLELP@C2TransitionsPerSec?$AA@ DB 'C2TransitionsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DLJADCBG@C1TransitionsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@DLJADCBG@C1TransitionsPerSec?$AA@ DB 'C1TransitionsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JCLIOML@PercentUserTime?$AA@
CONST	SEGMENT
??_C@_0BA@JCLIOML@PercentUserTime?$AA@ DB 'PercentUserTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EMKPKJGP@PercentProcessorTime?$AA@
CONST	SEGMENT
??_C@_0BF@EMKPKJGP@PercentProcessorTime?$AA@ DB 'PercentProcessorTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
CONST	SEGMENT
??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@ DB 'Win32_PerfRawDat'
	DB	'a_PerfOS_Processor', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JKLALBIF@PercentUsagePeak?$AA@
CONST	SEGMENT
??_C@_0BB@JKLALBIF@PercentUsagePeak?$AA@ DB 'PercentUsagePeak', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKGFJCHF@PercentUsage?$AA@
CONST	SEGMENT
??_C@_0N@CKGFJCHF@PercentUsage?$AA@ DB 'PercentUsage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
CONST	SEGMENT
??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@ DB 'Win32_PerfRawDat'
	DB	'a_PerfOS_PagingFile', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBPDBPOE@Sections?$AA@
CONST	SEGMENT
??_C@_08FBPDBPOE@Sections?$AA@ DB 'Sections', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GLBCAKLN@Semaphores?$AA@
CONST	SEGMENT
??_C@_0L@GLBCAKLN@Semaphores?$AA@ DB 'Semaphores', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HEBKAGDH@Events?$AA@
CONST	SEGMENT
??_C@_06HEBKAGDH@Events?$AA@ DB 'Events', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDPBBEEB@Mutexes?$AA@
CONST	SEGMENT
??_C@_07LDPBBEEB@Mutexes?$AA@ DB 'Mutexes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CMIGFCHA@Threads?$AA@
CONST	SEGMENT
??_C@_07CMIGFCHA@Threads?$AA@ DB 'Threads', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BNGODGIH@Processes?$AA@
CONST	SEGMENT
??_C@_09BNGODGIH@Processes?$AA@ DB 'Processes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
CONST	SEGMENT
??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@ DB 'Win32_PerfRawDat'
	DB	'a_PerfOS_Objects', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBPIOBBH@WriteCopiesPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@KBPIOBBH@WriteCopiesPerSec?$AA@ DB 'WriteCopiesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KEMPGDKK@TransitionFaultsPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@KEMPGDKK@TransitionFaultsPerSec?$AA@ DB 'TransitionFaultsPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KPIDEMMH@SystemDriverTotalBytes?$AA@
CONST	SEGMENT
??_C@_0BH@KPIDEMMH@SystemDriverTotalBytes?$AA@ DB 'SystemDriverTotalBytes'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MNCINJBF@SystemDriverResidentBytes?$AA@
CONST	SEGMENT
??_C@_0BK@MNCINJBF@SystemDriverResidentBytes?$AA@ DB 'SystemDriverResiden'
	DB	'tBytes', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JBGABIBK@SystemCodeTotalBytes?$AA@
CONST	SEGMENT
??_C@_0BF@JBGABIBK@SystemCodeTotalBytes?$AA@ DB 'SystemCodeTotalBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KPKNFENK@SystemCodeResidentBytes?$AA@
CONST	SEGMENT
??_C@_0BI@KPKNFENK@SystemCodeResidentBytes?$AA@ DB 'SystemCodeResidentByt'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NPNGHFJN@SystemCacheResidentBytes?$AA@
CONST	SEGMENT
??_C@_0BJ@NPNGHFJN@SystemCacheResidentBytes?$AA@ DB 'SystemCacheResidentB'
	DB	'ytes', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OMBHLDMN@PoolPagedResidentBytes?$AA@
CONST	SEGMENT
??_C@_0BH@OMBHLDMN@PoolPagedResidentBytes?$AA@ DB 'PoolPagedResidentBytes'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PJENKINF@PoolPagedBytes?$AA@
CONST	SEGMENT
??_C@_0P@PJENKINF@PoolPagedBytes?$AA@ DB 'PoolPagedBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LDKKFHCE@PoolPagedAllocs?$AA@
CONST	SEGMENT
??_C@_0BA@LDKKFHCE@PoolPagedAllocs?$AA@ DB 'PoolPagedAllocs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMPJEGLC@PoolNonpagedBytes?$AA@
CONST	SEGMENT
??_C@_0BC@GMPJEGLC@PoolNonpagedBytes?$AA@ DB 'PoolNonpagedBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GAOJBHDB@PoolNonpagedAllocs?$AA@
CONST	SEGMENT
??_C@_0BD@GAOJBHDB@PoolNonpagedAllocs?$AA@ DB 'PoolNonpagedAllocs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DKFDEGAA@PercentCommittedBytesInUse_Base?$AA@
CONST	SEGMENT
??_C@_0CA@DKFDEGAA@PercentCommittedBytesInUse_Base?$AA@ DB 'PercentCommit'
	DB	'tedBytesInUse_Base', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EHMKCOHH@PercentCommittedBytesInUse?$AA@
CONST	SEGMENT
??_C@_0BL@EHMKCOHH@PercentCommittedBytesInUse?$AA@ DB 'PercentCommittedBy'
	DB	'tesInUse', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EHHNOBPH@PageWritesPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@EHHNOBPH@PageWritesPerSec?$AA@ DB 'PageWritesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PJBDCOH@PagesPerSec?$AA@
CONST	SEGMENT
??_C@_0M@PJBDCOH@PagesPerSec?$AA@ DB 'PagesPerSec', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGIEMCPC@PagesOutputPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@PGIEMCPC@PagesOutputPerSec?$AA@ DB 'PagesOutputPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NHNEKMAP@PagesInputPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@NHNEKMAP@PagesInputPerSec?$AA@ DB 'PagesInputPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BHCICMAP@PageReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BA@BHCICMAP@PageReadsPerSec?$AA@ DB 'PageReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HOEEGAIG@PageFaultsPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@HOEEGAIG@PageFaultsPerSec?$AA@ DB 'PageFaultsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MIKHIOLC@FreeSystemPageTableEntries?$AA@
CONST	SEGMENT
??_C@_0BL@MIKHIOLC@FreeSystemPageTableEntries?$AA@ DB 'FreeSystemPageTabl'
	DB	'eEntries', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BIADJNEE@DemandZeroFaultsPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@BIADJNEE@DemandZeroFaultsPerSec?$AA@ DB 'DemandZeroFaultsPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FAEGOFEG@CommittedBytes?$AA@
CONST	SEGMENT
??_C@_0P@FAEGOFEG@CommittedBytes?$AA@ DB 'CommittedBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HHOMCEFN@CommitLimit?$AA@
CONST	SEGMENT
??_C@_0M@HHOMCEFN@CommitLimit?$AA@ DB 'CommitLimit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ONMHHFEO@CacheFaultsPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@ONMHHFEO@CacheFaultsPerSec?$AA@ DB 'CacheFaultsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BPAGOPIK@CacheBytesPeak?$AA@
CONST	SEGMENT
??_C@_0P@BPAGOPIK@CacheBytesPeak?$AA@ DB 'CacheBytesPeak', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ECJIAGHC@CacheBytes?$AA@
CONST	SEGMENT
??_C@_0L@ECJIAGHC@CacheBytes?$AA@ DB 'CacheBytes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FJNBCKHA@AvailableMBytes?$AA@
CONST	SEGMENT
??_C@_0BA@FJNBCKHA@AvailableMBytes?$AA@ DB 'AvailableMBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKABBPEK@AvailableKBytes?$AA@
CONST	SEGMENT
??_C@_0BA@DKABBPEK@AvailableKBytes?$AA@ DB 'AvailableKBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HPKKNIPF@AvailableBytes?$AA@
CONST	SEGMENT
??_C@_0P@HPKKNIPF@AvailableBytes?$AA@ DB 'AvailableBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
CONST	SEGMENT
??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@ DB 'Win32_PerfRaw'
	DB	'Data_PerfOS_Memory', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FOPDLNII@SyncPinReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BD@FOPDLNII@SyncPinReadsPerSec?$AA@ DB 'SyncPinReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EPCDKGPG@SyncMDLReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BD@EPCDKGPG@SyncMDLReadsPerSec?$AA@ DB 'SyncMDLReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FFPMMLME@SyncFastReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@FFPMMLME@SyncFastReadsPerSec?$AA@ DB 'SyncFastReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IDCIAAHF@SyncDataMapsPerSec?$AA@
CONST	SEGMENT
??_C@_0BD@IDCIAAHF@SyncDataMapsPerSec?$AA@ DB 'SyncDataMapsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJJLELAC@SyncCopyReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@PJJLELAC@SyncCopyReadsPerSec?$AA@ DB 'SyncCopyReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NGKOLIIB@ReadAheadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@NGKOLIIB@ReadAheadsPerSec?$AA@ DB 'ReadAheadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LNBHDMMD@PinReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0P@LNBHDMMD@PinReadsPerSec?$AA@ DB 'PinReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KGBEKIEP@PinReadHitsPercent_Base?$AA@
CONST	SEGMENT
??_C@_0BI@KGBEKIEP@PinReadHitsPercent_Base?$AA@ DB 'PinReadHitsPercent_Ba'
	DB	'se', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@INCEIJBE@PinReadHitsPercent?$AA@
CONST	SEGMENT
??_C@_0BD@INCEIJBE@PinReadHitsPercent?$AA@ DB 'PinReadHitsPercent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KMMHCHLN@MDLReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0P@KMMHCHLN@MDLReadsPerSec?$AA@ DB 'MDLReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NMONEPAO@MDLReadHitsPercent_Base?$AA@
CONST	SEGMENT
??_C@_0BI@NMONEPAO@MDLReadHitsPercent_Base?$AA@ DB 'MDLReadHitsPercent_Ba'
	DB	'se', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PNDPPHMH@MDLReadHitsPercent?$AA@
CONST	SEGMENT
??_C@_0BD@PNDPPHMH@MDLReadHitsPercent?$AA@ DB 'MDLReadHitsPercent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GOGJJNKE@LazyWritePagesPerSec?$AA@
CONST	SEGMENT
??_C@_0BF@GOGJJNKE@LazyWritePagesPerSec?$AA@ DB 'LazyWritePagesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCPDBLIF@LazyWriteFlushesPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@JCPDBLIF@LazyWriteFlushesPerSec?$AA@ DB 'LazyWriteFlushesPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LEBBLHFN@FastReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BA@LEBBLHFN@FastReadsPerSec?$AA@ DB 'FastReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JGPDPBED@FastReadResourceMissesPerSec?$AA@
CONST	SEGMENT
??_C@_0BN@JGPDPBED@FastReadResourceMissesPerSec?$AA@ DB 'FastReadResource'
	DB	'MissesPerSec', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HBAEFMGM@FastReadNotPossiblesPerSec?$AA@
CONST	SEGMENT
??_C@_0BL@HBAEFMGM@FastReadNotPossiblesPerSec?$AA@ DB 'FastReadNotPossibl'
	DB	'esPerSec', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GAMMIBDO@DataMapsPerSec?$AA@
CONST	SEGMENT
??_C@_0P@GAMMIBDO@DataMapsPerSec?$AA@ DB 'DataMapsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JDIGEHGG@DataMapPinsPerSec_Base?$AA@
CONST	SEGMENT
??_C@_0BH@JDIGEHGG@DataMapPinsPerSec_Base?$AA@ DB 'DataMapPinsPerSec_Base'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OOMEAEEA@DataMapPinsPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@OOMEAEEA@DataMapPinsPerSec?$AA@ DB 'DataMapPinsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ILDKBHLK@DataMapHitsPercent_Base?$AA@
CONST	SEGMENT
??_C@_0BI@ILDKBHLK@DataMapHitsPercent_Base?$AA@ DB 'DataMapHitsPercent_Ba'
	DB	'se', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOAAJIJA@DataMapHitsPercent?$AA@
CONST	SEGMENT
??_C@_0BD@KOAAJIJA@DataMapHitsPercent?$AA@ DB 'DataMapHitsPercent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDDABGEO@DataFlushPagesPerSec?$AA@
CONST	SEGMENT
??_C@_0BF@JDDABGEO@DataFlushPagesPerSec?$AA@ DB 'DataFlushPagesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MJKDEPG@DataFlushesPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@MJKDEPG@DataFlushesPerSec?$AA@ DB 'DataFlushesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BIHGDHJL@CopyReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BA@BIHGDHJL@CopyReadsPerSec?$AA@ DB 'CopyReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FGOEJAHL@CopyReadHitsPercent_Base?$AA@
CONST	SEGMENT
??_C@_0BJ@FGOEJAHL@CopyReadHitsPercent_Base?$AA@ DB 'CopyReadHitsPercent_'
	DB	'Base', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FFJCEMDJ@CopyReadHitsPercent?$AA@
CONST	SEGMENT
??_C@_0BE@FFJCEMDJ@CopyReadHitsPercent?$AA@ DB 'CopyReadHitsPercent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PNDFACCO@AsyncPinReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@PNDFACCO@AsyncPinReadsPerSec?$AA@ DB 'AsyncPinReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OMOFBJFA@AsyncMDLReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@OMOFBJFA@AsyncMDLReadsPerSec?$AA@ DB 'AsyncMDLReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GKOKALKG@AsyncFastReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BF@GKOKALKG@AsyncFastReadsPerSec?$AA@ DB 'AsyncFastReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CAOOLPND@AsyncDataMapsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@CAOOLPND@AsyncDataMapsPerSec?$AA@ DB 'AsyncDataMapsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MGINILGA@AsyncCopyReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BF@MGINILGA@AsyncCopyReadsPerSec?$AA@ DB 'AsyncCopyReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
CONST	SEGMENT
??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@ DB 'Win32_PerfRawD'
	DB	'ata_PerfOS_Cache', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HAMOOOJ@WriteLargePerSec?$AA@
CONST	SEGMENT
??_C@_0BB@HAMOOOJ@WriteLargePerSec?$AA@ DB 'WriteLargePerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LMECNINB@WriteDeniedPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@LMECNINB@WriteDeniedPerSec?$AA@ DB 'WriteDeniedPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GPDBBABB@WritePacketsSmallPerSec?$AA@
CONST	SEGMENT
??_C@_0BI@GPDBBABB@WritePacketsSmallPerSec?$AA@ DB 'WritePacketsSmallPerS'
	DB	'ec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NEABLLFJ@WritePacketsPerSec?$AA@
CONST	SEGMENT
??_C@_0BD@NEABLLFJ@WritePacketsPerSec?$AA@ DB 'WritePacketsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IJPFNDGO@WriteOperationsRandomPerSec?$AA@
CONST	SEGMENT
??_C@_0BM@IJPFNDGO@WriteOperationsRandomPerSec?$AA@ DB 'WriteOperationsRa'
	DB	'ndomPerSec', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OANOHFDO@WriteBytesPagingPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@OANOHFDO@WriteBytesPagingPerSec?$AA@ DB 'WriteBytesPagingPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PNNKNAIA@WriteBytesNonPagingPerSec?$AA@
CONST	SEGMENT
??_C@_0BK@PNNKNAIA@WriteBytesNonPagingPerSec?$AA@ DB 'WriteBytesNonPaging'
	DB	'PerSec', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HNBBGOIH@WriteBytesNetworkPerSec?$AA@
CONST	SEGMENT
??_C@_0BI@HNBBGOIH@WriteBytesNetworkPerSec?$AA@ DB 'WriteBytesNetworkPerS'
	DB	'ec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GCNKDHCE@WriteBytesCachePerSec?$AA@
CONST	SEGMENT
??_C@_0BG@GCNKDHCE@WriteBytesCachePerSec?$AA@ DB 'WriteBytesCachePerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BALBBJPI@ServerSessionsHung?$AA@
CONST	SEGMENT
??_C@_0BD@BALBBJPI@ServerSessionsHung?$AA@ DB 'ServerSessionsHung', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EPIIEJNA@ServerSessions?$AA@
CONST	SEGMENT
??_C@_0P@EPIIEJNA@ServerSessions?$AA@ DB 'ServerSessions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LGLKKLGK@ServerReconnects?$AA@
CONST	SEGMENT
??_C@_0BB@LGLKKLGK@ServerReconnects?$AA@ DB 'ServerReconnects', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GAMKMMKB@ServerDisconnects?$AA@
CONST	SEGMENT
??_C@_0BC@GAMKMMKB@ServerDisconnects?$AA@ DB 'ServerDisconnects', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FFKFENGC@ReadsLargePerSec?$AA@
CONST	SEGMENT
??_C@_0BB@FFKFENGC@ReadsLargePerSec?$AA@ DB 'ReadsLargePerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MGHKCLNK@ReadsDeniedPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@MGHKCLNK@ReadsDeniedPerSec?$AA@ DB 'ReadsDeniedPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCFIFLJN@ReadPacketsSmallPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@JCFIFLJN@ReadPacketsSmallPerSec?$AA@ DB 'ReadPacketsSmallPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JALNAJBD@ReadPacketsPerSec?$AA@
CONST	SEGMENT
??_C@_0BC@JALNAJBD@ReadPacketsPerSec?$AA@ DB 'ReadPacketsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CFIGOGID@ReadOperationsRandomPerSec?$AA@
CONST	SEGMENT
??_C@_0BL@CFIGOGID@ReadOperationsRandomPerSec?$AA@ DB 'ReadOperationsRand'
	DB	'omPerSec', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OLGMIDCE@ReadBytesPagingPerSec?$AA@
CONST	SEGMENT
??_C@_0BG@OLGMIDCE@ReadBytesPagingPerSec?$AA@ DB 'ReadBytesPagingPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ILOCGCLG@ReadBytesNonPagingPerSec?$AA@
CONST	SEGMENT
??_C@_0BJ@ILOCGCLG@ReadBytesNonPagingPerSec?$AA@ DB 'ReadBytesNonPagingPe'
	DB	'rSec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IAHICFAL@ReadBytesNetworkPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@IAHICFAL@ReadBytesNetworkPerSec?$AA@ DB 'ReadBytesNetworkPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LPDAMOL@ReadBytesCachePerSec?$AA@
CONST	SEGMENT
??_C@_0BF@LPDAMOL@ReadBytesCachePerSec?$AA@ DB 'ReadBytesCachePerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGCPPNJJ@NetworkErrorsPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@OGCPPNJJ@NetworkErrorsPerSec?$AA@ DB 'NetworkErrorsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PGBFPAJ@FileWriteOperationsPerSec?$AA@
CONST	SEGMENT
??_C@_0BK@PGBFPAJ@FileWriteOperationsPerSec?$AA@ DB 'FileWriteOperationsP'
	DB	'erSec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BKIGCPAP@FileReadOperationsPerSec?$AA@
CONST	SEGMENT
??_C@_0BJ@BKIGCPAP@FileReadOperationsPerSec?$AA@ DB 'FileReadOperationsPe'
	DB	'rSec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CAIAAECL@FileDataOperationsPerSec?$AA@
CONST	SEGMENT
??_C@_0BJ@CAIAAECL@FileDataOperationsPerSec?$AA@ DB 'FileDataOperationsPe'
	DB	'rSec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DJMJIEBG@CurrentCommands?$AA@
CONST	SEGMENT
??_C@_0BA@DJMJIEBG@CurrentCommands?$AA@ DB 'CurrentCommands', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOFEMAHF@ConnectsWindowsNT?$AA@
CONST	SEGMENT
??_C@_0BC@EOFEMAHF@ConnectsWindowsNT?$AA@ DB 'ConnectsWindowsNT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NEFNEICN@ConnectsLanManager21?$AA@
CONST	SEGMENT
??_C@_0BF@NEFNEICN@ConnectsLanManager21?$AA@ DB 'ConnectsLanManager21', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MNEGHJGM@ConnectsLanManager20?$AA@
CONST	SEGMENT
??_C@_0BF@MNEGHJGM@ConnectsLanManager20?$AA@ DB 'ConnectsLanManager20', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IJGODAGI@ConnectsCore?$AA@
CONST	SEGMENT
??_C@_0N@IJGODAGI@ConnectsCore?$AA@ DB 'ConnectsCore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EHOOHGK@PacketsTransmittedPerSec?$AA@
CONST	SEGMENT
??_C@_0BJ@EHOOHGK@PacketsTransmittedPerSec?$AA@ DB 'PacketsTransmittedPer'
	DB	'Sec', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PFNBEMLM@PacketsReceivedPerSec?$AA@
CONST	SEGMENT
??_C@_0BG@PFNBEMLM@PacketsReceivedPerSec?$AA@ DB 'PacketsReceivedPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GPMHHPHG@PacketsPerSec?$AA@
CONST	SEGMENT
??_C@_0O@GPMHHPHG@PacketsPerSec?$AA@ DB 'PacketsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NADCFLBJ@BytesTotalPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@NADCFLBJ@BytesTotalPerSec?$AA@ DB 'BytesTotalPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKKKHEEC@BytesTransmittedPerSec?$AA@
CONST	SEGMENT
??_C@_0BH@GKKKHEEC@BytesTransmittedPerSec?$AA@ DB 'BytesTransmittedPerSec'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IEAMAKJB@BytesReceivedPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@IEAMAKJB@BytesReceivedPerSec?$AA@ DB 'BytesReceivedPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
CONST	SEGMENT
??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@ DB 'Win32_PerfRawDat'
	DB	'a_PerfNet_Redirector', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KEJCKNPB@PercentFreeSpace_Base?$AA@
CONST	SEGMENT
??_C@_0BG@KEJCKNPB@PercentFreeSpace_Base?$AA@ DB 'PercentFreeSpace_Base', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FDAACFPN@PercentFreeSpace?$AA@
CONST	SEGMENT
??_C@_0BB@FDAACFPN@PercentFreeSpace?$AA@ DB 'PercentFreeSpace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IJGACNJB@AvgDiskSecPerRead?$AA@
CONST	SEGMENT
??_C@_0BC@IJGACNJB@AvgDiskSecPerRead?$AA@ DB 'AvgDiskSecPerRead', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJBHEMAA@FreeMegabytes?$AA@
CONST	SEGMENT
??_C@_0O@EJBHEMAA@FreeMegabytes?$AA@ DB 'FreeMegabytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
CONST	SEGMENT
??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@ DB 'Win32_PerfRawDat'
	DB	'a_PerfDisk_LogicalDisk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
CONST	SEGMENT
??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@ DB 'Timestamp_Sys100NS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
CONST	SEGMENT
??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@ DB 'Timestamp_PerfTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
CONST	SEGMENT
??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@ DB 'Timestamp_Object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JFLPIICD@SplitIOPerSec?$AA@
CONST	SEGMENT
??_C@_0O@JFLPIICD@SplitIOPerSec?$AA@ DB 'SplitIOPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PLICIEBG@PercentIdleTime_Base?$AA@
CONST	SEGMENT
??_C@_0BF@PLICIEBG@PercentIdleTime_Base?$AA@ DB 'PercentIdleTime_Base', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LOOKHAGM@PercentIdleTime?$AA@
CONST	SEGMENT
??_C@_0BA@LOOKHAGM@PercentIdleTime?$AA@ DB 'PercentIdleTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OCJABKEM@PercentDiskWriteTime_Base?$AA@
CONST	SEGMENT
??_C@_0BK@OCJABKEM@PercentDiskWriteTime_Base?$AA@ DB 'PercentDiskWriteTim'
	DB	'e_Base', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DOKCNDOL@PercentDiskWriteTime?$AA@
CONST	SEGMENT
??_C@_0BF@DOKCNDOL@PercentDiskWriteTime?$AA@ DB 'PercentDiskWriteTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CHKOMNLI@PercentDiskTime_Base?$AA@
CONST	SEGMENT
??_C@_0BF@CHKOMNLI@PercentDiskTime_Base?$AA@ DB 'PercentDiskTime_Base', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HPDMAPLN@PercentDiskTime?$AA@
CONST	SEGMENT
??_C@_0BA@HPDMAPLN@PercentDiskTime?$AA@ DB 'PercentDiskTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JDFDIKDL@PercentDiskReadTime_Base?$AA@
CONST	SEGMENT
??_C@_0BJ@JDFDIKDL@PercentDiskReadTime_Base?$AA@ DB 'PercentDiskReadTime_'
	DB	'Base', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KMHMAHCP@PercentDiskReadTime?$AA@
CONST	SEGMENT
??_C@_0BE@KMHMAHCP@PercentDiskReadTime?$AA@ DB 'PercentDiskReadTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
CONST	SEGMENT
??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@ DB 'Frequency_Sys100NS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
CONST	SEGMENT
??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@ DB 'Frequency_PerfTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
CONST	SEGMENT
??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@ DB 'Frequency_Object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FFLCGPKG@DiskWritesPerSec?$AA@
CONST	SEGMENT
??_C@_0BB@FFLCGPKG@DiskWritesPerSec?$AA@ DB 'DiskWritesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BLPLIECA@DiskWriteBytesPerSec?$AA@
CONST	SEGMENT
??_C@_0BF@BLPLIECA@DiskWriteBytesPerSec?$AA@ DB 'DiskWriteBytesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@INHPJNPE@DiskTransfersPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@INHPJNPE@DiskTransfersPerSec?$AA@ DB 'DiskTransfersPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GPEPCNFG@DiskReadsPerSec?$AA@
CONST	SEGMENT
??_C@_0BA@GPEPCNFG@DiskReadsPerSec?$AA@ DB 'DiskReadsPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IJJNINGL@DiskReadBytesPerSec?$AA@
CONST	SEGMENT
??_C@_0BE@IJJNINGL@DiskReadBytesPerSec?$AA@ DB 'DiskReadBytesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BBEHMIEJ@DiskBytesPerSec?$AA@
CONST	SEGMENT
??_C@_0BA@BBEHMIEJ@DiskBytesPerSec?$AA@ DB 'DiskBytesPerSec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CFGDHLM@CurrentDiskQueueLength?$AA@
CONST	SEGMENT
??_C@_0BH@CFGDHLM@CurrentDiskQueueLength?$AA@ DB 'CurrentDiskQueueLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LJILLEEA@AvgDiskWriteQueueLength?$AA@
CONST	SEGMENT
??_C@_0BI@LJILLEEA@AvgDiskWriteQueueLength?$AA@ DB 'AvgDiskWriteQueueLeng'
	DB	'th', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ICCNFHHL@AvgDiskSecPerWrite_Base?$AA@
CONST	SEGMENT
??_C@_0BI@ICCNFHHL@AvgDiskSecPerWrite_Base?$AA@ DB 'AvgDiskSecPerWrite_Ba'
	DB	'se', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MEJEANKD@AvgDiskSecPerWrite?$AA@
CONST	SEGMENT
??_C@_0BD@MEJEANKD@AvgDiskSecPerWrite?$AA@ DB 'AvgDiskSecPerWrite', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BNDKFKFB@AvgDiskSecPerTransfer_Base?$AA@
CONST	SEGMENT
??_C@_0BL@BNDKFKFB@AvgDiskSecPerTransfer_Base?$AA@ DB 'AvgDiskSecPerTrans'
	DB	'fer_Base', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JDCFEBPA@AvgDiskSecPerTransfer?$AA@
CONST	SEGMENT
??_C@_0BG@JDCFEBPA@AvgDiskSecPerTransfer?$AA@ DB 'AvgDiskSecPerTransfer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OOEPJOH@AvgDiskSecPerRead_Base?$AA@
CONST	SEGMENT
??_C@_0BH@OOEPJOH@AvgDiskSecPerRead_Base?$AA@ DB 'AvgDiskSecPerRead_Base', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LLDDCMMH@AvgDiskSecPerRead?$DL?$AA@
CONST	SEGMENT
??_C@_0BD@LLDDCMMH@AvgDiskSecPerRead?$DL?$AA@ DB 'AvgDiskSecPerRead;', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NCJLEAHB@AvgDiskReadQueueLength?$AA@
CONST	SEGMENT
??_C@_0BH@NCJLEAHB@AvgDiskReadQueueLength?$AA@ DB 'AvgDiskReadQueueLength'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CKOOLAI@AvgDiskQueueLength?$AA@
CONST	SEGMENT
??_C@_0BD@CKOOLAI@AvgDiskQueueLength?$AA@ DB 'AvgDiskQueueLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CFFBJGE@AvgDiskBytesPerWrite_Base?$AA@
CONST	SEGMENT
??_C@_0BK@CFFBJGE@AvgDiskBytesPerWrite_Base?$AA@ DB 'AvgDiskBytesPerWrite'
	DB	'_Base', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@POONAKDE@AvgDiskBytesPerWrite?$AA@
CONST	SEGMENT
??_C@_0BF@POONAKDE@AvgDiskBytesPerWrite?$AA@ DB 'AvgDiskBytesPerWrite', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DKGECFBJ@AvgDiskBytesPerTransfer_Base?$AA@
CONST	SEGMENT
??_C@_0BN@DKGECFBJ@AvgDiskBytesPerTransfer_Base?$AA@ DB 'AvgDiskBytesPerT'
	DB	'ransfer_Base', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NOBLAOA@AvgDiskBytesPerTransfer?$AA@
CONST	SEGMENT
??_C@_0BI@NOBLAOA@AvgDiskBytesPerTransfer?$AA@ DB 'AvgDiskBytesPerTransfe'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BDMNCNHC@AvgDiskBytesPerRead_Base?$AA@
CONST	SEGMENT
??_C@_0BJ@BDMNCNHC@AvgDiskBytesPerRead_Base?$AA@ DB 'AvgDiskBytesPerRead_'
	DB	'Base', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EFDGHEPA@AvgDiskBytesPerRead?$AA@
CONST	SEGMENT
??_C@_0BE@EFDGHEPA@AvgDiskBytesPerRead?$AA@ DB 'AvgDiskBytesPerRead', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
CONST	SEGMENT
??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@ DB 'Win32_PerfRawDat'
	DB	'a_PerfDisk_PhysicalDisk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DMMADKEM@SupportsFileBasedCompression?$AA@
CONST	SEGMENT
??_C@_0BN@DMMADKEM@SupportsFileBasedCompression?$AA@ DB 'SupportsFileBase'
	DB	'dCompression', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BJDMHPHA@SupportsDiskQuotas?$AA@
CONST	SEGMENT
??_C@_0BD@BJDMHPHA@SupportsDiskQuotas?$AA@ DB 'SupportsDiskQuotas', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JJBCJECG@QuotasRebuilding?$AA@
CONST	SEGMENT
??_C@_0BB@JJBCJECG@QuotasRebuilding?$AA@ DB 'QuotasRebuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MPFPEDFA@QuotasIncomplete?$AA@
CONST	SEGMENT
??_C@_0BB@MPFPEDFA@QuotasIncomplete?$AA@ DB 'QuotasIncomplete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HEHOMNCC@QuotasEnabled?$AA@
CONST	SEGMENT
??_C@_0O@HEHOMNCC@QuotasEnabled?$AA@ DB 'QuotasEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ELFKDNP@MaximumFileNameLength?$AA@
CONST	SEGMENT
??_C@_0BG@ELFKDNP@MaximumFileNameLength?$AA@ DB 'MaximumFileNameLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JDIBBDEO@IndexingEnabled?$AA@
CONST	SEGMENT
??_C@_0BA@JDIBBDEO@IndexingEnabled?$AA@ DB 'IndexingEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FMPADJNN@DirtyBitSet?$AA@
CONST	SEGMENT
??_C@_0M@FMPADJNN@DirtyBitSet?$AA@ DB 'DirtyBitSet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HICOCIIF@Automount?$AA@
CONST	SEGMENT
??_C@_09HICOCIIF@Automount?$AA@ DB 'Automount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FPFLHALM@FileSystem?$AA@
CONST	SEGMENT
??_C@_0L@FPFLHALM@FileSystem?$AA@ DB 'FileSystem', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NKILGKMH@DriveType?$AA@
CONST	SEGMENT
??_C@_09NKILGKMH@DriveType?$AA@ DB 'DriveType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EHMJIHII@DriveLetter?$AA@
CONST	SEGMENT
??_C@_0M@EHMJIHII@DriveLetter?$AA@ DB 'DriveLetter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IEIONIFO@Label?$AA@
CONST	SEGMENT
??_C@_05IEIONIFO@Label?$AA@ DB 'Label', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
CONST	SEGMENT
??_C@_0N@NNCPDPIH@Win32_Volume?$AA@ DB 'Win32_Volume', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPHJOCBJ@ResourceType?$AA@
CONST	SEGMENT
??_C@_0N@EPHJOCBJ@ResourceType?$AA@ DB 'ResourceType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ONCOBKP@ProviderName?$AA@
CONST	SEGMENT
??_C@_0N@ONCOBKP@ProviderName?$AA@ DB 'ProviderName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LNKKEMJM@Persistent?$AA@
CONST	SEGMENT
??_C@_0L@LNKKEMJM@Persistent?$AA@ DB 'Persistent', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FLEBOKCI@RemoteName?$AA@
CONST	SEGMENT
??_C@_0L@FLEBOKCI@RemoteName?$AA@ DB 'RemoteName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CLGGKACF@LocalName?$AA@
CONST	SEGMENT
??_C@_09CLGGKACF@LocalName?$AA@ DB 'LocalName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CCMICFHJ@RemotePath?$AA@
CONST	SEGMENT
??_C@_0L@CCMICFHJ@RemotePath?$AA@ DB 'RemotePath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LNPCDAPC@ConnectionType?$AA@
CONST	SEGMENT
??_C@_0P@LNPCDAPC@ConnectionType?$AA@ DB 'ConnectionType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FLFAPDFG@ConnectionState?$AA@
CONST	SEGMENT
??_C@_0BA@FLFAPDFG@ConnectionState?$AA@ DB 'ConnectionState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
CONST	SEGMENT
??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@ DB 'Win32_NetworkConnecti'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NOBDNJPM@MofSelfInstallDirectory?$AA@
CONST	SEGMENT
??_C@_0BI@NOBDNJPM@MofSelfInstallDirectory?$AA@ DB 'MofSelfInstallDirecto'
	DB	'ry', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NHHFPHIJ@MaxWaitOnEvents?$AA@
CONST	SEGMENT
??_C@_0BA@NHHFPHIJ@MaxWaitOnEvents?$AA@ DB 'MaxWaitOnEvents', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PBKELOKA@MaxWaitOnClientObjects?$AA@
CONST	SEGMENT
??_C@_0BH@PBKELOKA@MaxWaitOnClientObjects?$AA@ DB 'MaxWaitOnClientObjects'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CEPALFMK@MaxLogFileSize?$AA@
CONST	SEGMENT
??_C@_0P@CEPALFMK@MaxLogFileSize?$AA@ DB 'MaxLogFileSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHEPMKDN@LowThresholdOnEvents?$AA@
CONST	SEGMENT
??_C@_0BF@PHEPMKDN@LowThresholdOnEvents?$AA@ DB 'LowThresholdOnEvents', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NGNJMOHJ@LowThresholdOnClientObjects?$AA@
CONST	SEGMENT
??_C@_0BM@NGNJMOHJ@LowThresholdOnClientObjects?$AA@ DB 'LowThresholdOnCli'
	DB	'entObjects', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FMFGOJPB@LoggingLevel?$AA@
CONST	SEGMENT
??_C@_0N@FMFGOJPB@LoggingLevel?$AA@ DB 'LoggingLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FALFKNPE@LoggingDirectory?$AA@
CONST	SEGMENT
??_C@_0BB@FALFKNPE@LoggingDirectory?$AA@ DB 'LoggingDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GKEEMEKI@LastStartupHeapPreallocation?$AA@
CONST	SEGMENT
??_C@_0BN@GKEEMEKI@LastStartupHeapPreallocation?$AA@ DB 'LastStartupHeapP'
	DB	'reallocation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MDEOBFAH@InstallationDirectory?$AA@
CONST	SEGMENT
??_C@_0BG@MDEOBFAH@InstallationDirectory?$AA@ DB 'InstallationDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LKICGCBK@HighThresholdOnEvents?$AA@
CONST	SEGMENT
??_C@_0BG@LKICGCBK@HighThresholdOnEvents?$AA@ DB 'HighThresholdOnEvents', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FBHHPGGC@HighThresholdOnClientObjects?$AA@
CONST	SEGMENT
??_C@_0BN@FBHHPGGC@HighThresholdOnClientObjects?$AA@ DB 'HighThresholdOnC'
	DB	'lientObjects', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DHLDKHJI@EnableStartupHeapPreallocation?$AA@
CONST	SEGMENT
??_C@_0BP@DHLDKHJI@EnableStartupHeapPreallocation?$AA@ DB 'EnableStartupH'
	DB	'eapPreallocation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OBNHEDLP@EnableEvents?$AA@
CONST	SEGMENT
??_C@_0N@OBNHEDLP@EnableEvents?$AA@ DB 'EnableEvents', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FLALGEND@EnableAnonWin9xConnections?$AA@
CONST	SEGMENT
??_C@_0BL@FLALGEND@EnableAnonWin9xConnections?$AA@ DB 'EnableAnonWin9xCon'
	DB	'nections', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GMIIIOHB@DatabaseMaxSize?$AA@
CONST	SEGMENT
??_C@_0BA@GMIIIOHB@DatabaseMaxSize?$AA@ DB 'DatabaseMaxSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PJAEIMII@DatabaseDirectory?$AA@
CONST	SEGMENT
??_C@_0BC@PJAEIMII@DatabaseDirectory?$AA@ DB 'DatabaseDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DMPKCKPJ@BuildVersion?$AA@
CONST	SEGMENT
??_C@_0N@DMPKCKPJ@BuildVersion?$AA@ DB 'BuildVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HCKKJOFA@BackupLastTime?$AA@
CONST	SEGMENT
??_C@_0P@HCKKJOFA@BackupLastTime?$AA@ DB 'BackupLastTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HCBDPJED@BackupInterval?$AA@
CONST	SEGMENT
??_C@_0P@HCBDPJED@BackupInterval?$AA@ DB 'BackupInterval', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LBFHKJDL@AutoStartWin9X?$AA@
CONST	SEGMENT
??_C@_0P@LBFHKJDL@AutoStartWin9X?$AA@ DB 'AutoStartWin9X', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FCAEOBFB@AutorecoverMofs?$AA@
CONST	SEGMENT
??_C@_0BA@FCAEOBFB@AutorecoverMofs?$AA@ DB 'AutorecoverMofs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HHJGCMCA@ASPScriptEnabled?$AA@
CONST	SEGMENT
??_C@_0BB@HHJGCMCA@ASPScriptEnabled?$AA@ DB 'ASPScriptEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HACJICBD@ASPScriptDefaultNamespace?$AA@
CONST	SEGMENT
??_C@_0BK@HACJICBD@ASPScriptDefaultNamespace?$AA@ DB 'ASPScriptDefaultNam'
	DB	'espace', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
CONST	SEGMENT
??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@ DB 'Win32_WMISetting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GDCPFLAD@RemainingGracePeriod?$AA@
CONST	SEGMENT
??_C@_0BF@GDCPFLAD@RemainingGracePeriod?$AA@ DB 'RemainingGracePeriod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MHMKFBPN@RemainingEvaluationPeriod?$AA@
CONST	SEGMENT
??_C@_0BK@MHMKFBPN@RemainingEvaluationPeriod?$AA@ DB 'RemainingEvaluation'
	DB	'Period', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FFPKNIIL@IsNotificationOn?$AA@
CONST	SEGMENT
??_C@_0BB@FFPKNIIL@IsNotificationOn?$AA@ DB 'IsNotificationOn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HINAAJAB@ActivationRequired?$AA@
CONST	SEGMENT
??_C@_0BD@HINAAJAB@ActivationRequired?$AA@ DB 'ActivationRequired', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
CONST	SEGMENT
??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@ DB 'Win32_WindowsP'
	DB	'roductActivation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PEAHLPLG@AllowMaximum?$AA@
CONST	SEGMENT
??_C@_0N@PEAHLPLG@AllowMaximum?$AA@ DB 'AllowMaximum', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IBLGFEE@MaximumAllowed?$AA@
CONST	SEGMENT
??_C@_0P@IBLGFEE@MaximumAllowed?$AA@ DB 'MaximumAllowed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HMIIHGGM@Path?$AA@
CONST	SEGMENT
??_C@_04HMIIHGGM@Path?$AA@ DB 'Path', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MCIKNCEL@Win32_Share?$AA@
CONST	SEGMENT
??_C@_0M@MCIKNCEL@Win32_Share?$AA@ DB 'Win32_Share', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FFDIDHBB@ServerName?$AA@
CONST	SEGMENT
??_C@_0L@FFDIDHBB@ServerName?$AA@ DB 'ServerName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BCMAAPLG@ProxyServer?$AA@
CONST	SEGMENT
??_C@_0M@BCMAAPLG@ProxyServer?$AA@ DB 'ProxyServer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LEMEMCNN@ProxyPortNumber?$AA@
CONST	SEGMENT
??_C@_0BA@LEMEMCNN@ProxyPortNumber?$AA@ DB 'ProxyPortNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@
CONST	SEGMENT
??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@ DB 'Win32_Proxy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LICOLOBE@DMASupport?$AA@
CONST	SEGMENT
??_C@_0L@LICOLOBE@DMASupport?$AA@ DB 'DMASupport', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
CONST	SEGMENT
??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@ DB 'Win32_ParallelPort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EONNPILK@InitialSize?$AA@
CONST	SEGMENT
??_C@_0M@EONNPILK@InitialSize?$AA@ DB 'InitialSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LCEICGML@FreeSpace?$AA@
CONST	SEGMENT
??_C@_09LCEICGML@FreeSpace?$AA@ DB 'FreeSpace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GFMPEM@Win32_PageFile?$AA@
CONST	SEGMENT
??_C@_0P@GFMPEM@Win32_PageFile?$AA@ DB 'Win32_PageFile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EOFEPLNL@TotalVisibleMemorySize?$AA@
CONST	SEGMENT
??_C@_0BH@EOFEPLNL@TotalVisibleMemorySize?$AA@ DB 'TotalVisibleMemorySize'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IBKKELEK@TotalVirtualMemorySize?$AA@
CONST	SEGMENT
??_C@_0BH@IBKKELEK@TotalVirtualMemorySize?$AA@ DB 'TotalVirtualMemorySize'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PBNAJGBH@TotalSwapSpaceSize?$AA@
CONST	SEGMENT
??_C@_0BD@PBNAJGBH@TotalSwapSpaceSize?$AA@ DB 'TotalSwapSpaceSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IIJPJFOC@SuiteMask?$AA@
CONST	SEGMENT
??_C@_09IIJPJFOC@SuiteMask?$AA@ DB 'SuiteMask', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BKJHEEOL@SizeStoredInPagingFiles?$AA@
CONST	SEGMENT
??_C@_0BI@BKJHEEOL@SizeStoredInPagingFiles?$AA@ DB 'SizeStoredInPagingFil'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07NAEHBBNL@Primary?$AA@
CONST	SEGMENT
??_C@_07NAEHBBNL@Primary?$AA@ DB 'Primary', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LMIHOAGL@PlusVersionNumber?$AA@
CONST	SEGMENT
??_C@_0BC@LMIHOAGL@PlusVersionNumber?$AA@ DB 'PlusVersionNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NNCCMBIG@PlusProductID?$AA@
CONST	SEGMENT
??_C@_0O@NNCCMBIG@PlusProductID?$AA@ DB 'PlusProductID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KNGIFFNB@PAEEnabled?$AA@
CONST	SEGMENT
??_C@_0L@KNGIFFNB@PAEEnabled?$AA@ DB 'PAEEnabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KAMHDIPP@OtherTypeDescription?$AA@
CONST	SEGMENT
??_C@_0BF@KAMHDIPP@OtherTypeDescription?$AA@ DB 'OtherTypeDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GLJCNHGP@OperatingSystemSKU?$AA@
CONST	SEGMENT
??_C@_0BD@GLJCNHGP@OperatingSystemSKU?$AA@ DB 'OperatingSystemSKU', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBBGLGFJ@NumberOfUsers?$AA@
CONST	SEGMENT
??_C@_0O@PBBGLGFJ@NumberOfUsers?$AA@ DB 'NumberOfUsers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FILGLGHH@NumberOfProcesses?$AA@
CONST	SEGMENT
??_C@_0BC@FILGLGHH@NumberOfProcesses?$AA@ DB 'NumberOfProcesses', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MGHJNMGE@NumberOfLicensedUsers?$AA@
CONST	SEGMENT
??_C@_0BG@MGHJNMGE@NumberOfLicensedUsers?$AA@ DB 'NumberOfLicensedUsers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEFLNODO@MUILanguages?$AA@
CONST	SEGMENT
??_C@_0N@FEFLNODO@MUILanguages?$AA@ DB 'MUILanguages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OEEDDGBK@MaxProcessMemorySize?$AA@
CONST	SEGMENT
??_C@_0BF@OEEDDGBK@MaxProcessMemorySize?$AA@ DB 'MaxProcessMemorySize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BJJFAIPL@MaxNumberOfProcesses?$AA@
CONST	SEGMENT
??_C@_0BF@BJJFAIPL@MaxNumberOfProcesses?$AA@ DB 'MaxNumberOfProcesses', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BMNFLCFO@Locale?$AA@
CONST	SEGMENT
??_C@_06BMNFLCFO@Locale?$AA@ DB 'Locale', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GFNPHCJN@LocalDateTime?$AA@
CONST	SEGMENT
??_C@_0O@GFNPHCJN@LocalDateTime?$AA@ DB 'LocalDateTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DKHNBJBB@LastBootUpTime?$AA@
CONST	SEGMENT
??_C@_0P@DKHNBJBB@LastBootUpTime?$AA@ DB 'LastBootUpTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GLODIIPC@LargeSystemCache?$AA@
CONST	SEGMENT
??_C@_0BB@GLODIIPC@LargeSystemCache?$AA@ DB 'LargeSystemCache', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HEKPKJCK@FreeVirtualMemory?$AA@
CONST	SEGMENT
??_C@_0BC@HEKPKJCK@FreeVirtualMemory?$AA@ DB 'FreeVirtualMemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDCHGEBO@FreeSpaceInPagingFiles?$AA@
CONST	SEGMENT
??_C@_0BH@GDCHGEBO@FreeSpaceInPagingFiles?$AA@ DB 'FreeSpaceInPagingFiles'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KJPLACJD@FreePhysicalMemory?$AA@
CONST	SEGMENT
??_C@_0BD@KJPLACJD@FreePhysicalMemory?$AA@ DB 'FreePhysicalMemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LKLGBOHP@ForegroundApplicationBoost?$AA@
CONST	SEGMENT
??_C@_0BL@LKLGBOHP@ForegroundApplicationBoost?$AA@ DB 'ForegroundApplicat'
	DB	'ionBoost', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LIJDDPMD@EncryptionLevel?$AA@
CONST	SEGMENT
??_C@_0BA@LIJDDPMD@EncryptionLevel?$AA@ DB 'EncryptionLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGCHPHG@Distributed?$AA@
CONST	SEGMENT
??_C@_0M@DGCHPHG@Distributed?$AA@ DB 'Distributed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GCIPIGEI@Debug?$AA@
CONST	SEGMENT
??_C@_05GCIPIGEI@Debug?$AA@ DB 'Debug', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FOLHLACL@DataExecutionPrevention_SupportP@
CONST	SEGMENT
??_C@_0CG@FOLHLACL@DataExecutionPrevention_SupportP@ DB 'DataExecutionPre'
	DB	'vention_SupportPolicy', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KCIFHCEN@DataExecutionPrevention_Drivers?$AA@
CONST	SEGMENT
??_C@_0CA@KCIFHCEN@DataExecutionPrevention_Drivers?$AA@ DB 'DataExecution'
	DB	'Prevention_Drivers', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PHHDEHCB@DataExecutionPrevention_32BitApp@
CONST	SEGMENT
??_C@_0CK@PHHDEHCB@DataExecutionPrevention_32BitApp@ DB 'DataExecutionPre'
	DB	'vention_32BitApplications', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LDMHMPMB@DataExecutionPrevention_Availabl@
CONST	SEGMENT
??_C@_0CC@LDMHMPMB@DataExecutionPrevention_Availabl@ DB 'DataExecutionPre'
	DB	'vention_Available', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IOMOHLID@OSLanguage?$AA@
CONST	SEGMENT
??_C@_0L@IOMOHLID@OSLanguage?$AA@ DB 'OSLanguage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IEJHMEDK@WindowsDirectory?$AA@
CONST	SEGMENT
??_C@_0BB@IEJHMEDK@WindowsDirectory?$AA@ DB 'WindowsDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FNJMICPB@SystemDirectory?$AA@
CONST	SEGMENT
??_C@_0BA@FNJMICPB@SystemDirectory?$AA@ DB 'SystemDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JBPIDKPO@SystemDrive?$AA@
CONST	SEGMENT
??_C@_0M@JBPIDKPO@SystemDrive?$AA@ DB 'SystemDrive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LCIKLBMI@SystemDevice?$AA@
CONST	SEGMENT
??_C@_0N@LCIKLBMI@SystemDevice?$AA@ DB 'SystemDevice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BLKKOICB@BootDevice?$AA@
CONST	SEGMENT
??_C@_0L@BLKKOICB@BootDevice?$AA@ DB 'BootDevice', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GGPOPAAP@ProductType?$AA@
CONST	SEGMENT
??_C@_0M@GGPOPAAP@ProductType?$AA@ DB 'ProductType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DAFCPCAO@RegisteredUser?$AA@
CONST	SEGMENT
??_C@_0P@DAFCPCAO@RegisteredUser?$AA@ DB 'RegisteredUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MHPBIIPD@Organization?$AA@
CONST	SEGMENT
??_C@_0N@MHPBIIPD@Organization?$AA@ DB 'Organization', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MNBFCOOH@OSType?$AA@
CONST	SEGMENT
??_C@_06MNBFCOOH@OSType?$AA@ DB 'OSType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HNONGDKL@OSProductSuite?$AA@
CONST	SEGMENT
??_C@_0P@HNONGDKL@OSProductSuite?$AA@ DB 'OSProductSuite', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HEBPKKOL@ServicePackMinorVersion?$AA@
CONST	SEGMENT
??_C@_0BI@HEBPKKOL@ServicePackMinorVersion?$AA@ DB 'ServicePackMinorVersi'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MCMKKPJH@ServicePackMajorVersion?$AA@
CONST	SEGMENT
??_C@_0BI@MCMKKPJH@ServicePackMajorVersion?$AA@ DB 'ServicePackMajorVersi'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EGALIDNG@CSDVersion?$AA@
CONST	SEGMENT
??_C@_0L@EGALIDNG@CSDVersion?$AA@ DB 'CSDVersion', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LLAGGHGM@BuildType?$AA@
CONST	SEGMENT
??_C@_09LLAGGHGM@BuildType?$AA@ DB 'BuildType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NOCBMKBI@OSArchitecture?$AA@
CONST	SEGMENT
??_C@_0P@NOCBMKBI@OSArchitecture?$AA@ DB 'OSArchitecture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
CONST	SEGMENT
??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@ DB 'Win32_OperatingSystem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ODMHJIAL@VariableSpeed?$AA@
CONST	SEGMENT
??_C@_0O@ODMHJIAL@VariableSpeed?$AA@ DB 'VariableSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HOGGFFKF@DesiredSpeed?$AA@
CONST	SEGMENT
??_C@_0N@HOGGFFKF@DesiredSpeed?$AA@ DB 'DesiredSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BEHCCOGC@Win32_Fan?$AA@
CONST	SEGMENT
??_C@_09BEHCCOGC@Win32_Fan?$AA@ DB 'Win32_Fan', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GAHMDPOP@DisplayType?$AA@
CONST	SEGMENT
??_C@_0M@GAHMDPOP@DisplayType?$AA@ DB 'DisplayType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LPCHGGLO@Bandwidth?$AA@
CONST	SEGMENT
??_C@_09LPCHGGLO@Bandwidth?$AA@ DB 'Bandwidth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FCPFJAEP@MonitorType?$AA@
CONST	SEGMENT
??_C@_0M@FCPFJAEP@MonitorType?$AA@ DB 'MonitorType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EAJFLPNK@MonitorManufacturer?$AA@
CONST	SEGMENT
??_C@_0BE@EAJFLPNK@MonitorManufacturer?$AA@ DB 'MonitorManufacturer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EKBBLDAL@PixelsPerYLogicalInch?$AA@
CONST	SEGMENT
??_C@_0BG@EKBBLDAL@PixelsPerYLogicalInch?$AA@ DB 'PixelsPerYLogicalInch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JHIHGKIO@PixelsPerXLogicalInch?$AA@
CONST	SEGMENT
??_C@_0BG@JHIHGKIO@PixelsPerXLogicalInch?$AA@ DB 'PixelsPerXLogicalInch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GOACCFHI@ScreenWidth?$AA@
CONST	SEGMENT
??_C@_0M@GOACCFHI@ScreenWidth?$AA@ DB 'ScreenWidth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EJILFHEF@ScreenHeight?$AA@
CONST	SEGMENT
??_C@_0N@EJILFHEF@ScreenHeight?$AA@ DB 'ScreenHeight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
CONST	SEGMENT
??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@ DB 'Win32_DesktopMonitor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HLGPBKPI@WallpaperTiled?$AA@
CONST	SEGMENT
??_C@_0P@HLGPBKPI@WallpaperTiled?$AA@ DB 'WallpaperTiled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MNOICNPG@WallpaperStretched?$AA@
CONST	SEGMENT
??_C@_0BD@MNOICNPG@WallpaperStretched?$AA@ DB 'WallpaperStretched', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FAKNONCF@Wallpaper?$AA@
CONST	SEGMENT
??_C@_09FAKNONCF@Wallpaper?$AA@ DB 'Wallpaper', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LIKEHLGN@ScreenSaverTimeout?$AA@
CONST	SEGMENT
??_C@_0BD@LIKEHLGN@ScreenSaverTimeout?$AA@ DB 'ScreenSaverTimeout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ENMGOCGL@ScreenSaverSecure?$AA@
CONST	SEGMENT
??_C@_0BC@ENMGOCGL@ScreenSaverSecure?$AA@ DB 'ScreenSaverSecure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OPEGFPLM@ScreenSaverExecutable?$AA@
CONST	SEGMENT
??_C@_0BG@OPEGFPLM@ScreenSaverExecutable?$AA@ DB 'ScreenSaverExecutable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KENIIHPI@ScreenSaverActive?$AA@
CONST	SEGMENT
??_C@_0BC@KENIIHPI@ScreenSaverActive?$AA@ DB 'ScreenSaverActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NOCIGAPP@Pattern?$AA@
CONST	SEGMENT
??_C@_07NOCIGAPP@Pattern?$AA@ DB 'Pattern', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HLNDODKM@IconTitleWrap?$AA@
CONST	SEGMENT
??_C@_0O@HLNDODKM@IconTitleWrap?$AA@ DB 'IconTitleWrap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@COINDPHH@IconTitleSize?$AA@
CONST	SEGMENT
??_C@_0O@COINDPHH@IconTitleSize?$AA@ DB 'IconTitleSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HAAMKFAI@IconTitleFaceName?$AA@
CONST	SEGMENT
??_C@_0BC@HAAMKFAI@IconTitleFaceName?$AA@ DB 'IconTitleFaceName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FALLBHKM@IconSpacing?$AA@
CONST	SEGMENT
??_C@_0M@FALLBHKM@IconSpacing?$AA@ DB 'IconSpacing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MJNOPNAD@GridGranularity?$AA@
CONST	SEGMENT
??_C@_0BA@MJNOPNAD@GridGranularity?$AA@ DB 'GridGranularity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CNEMFCKH@DragFullWindows?$AA@
CONST	SEGMENT
??_C@_0BA@CNEMFCKH@DragFullWindows?$AA@ DB 'DragFullWindows', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NKDGIFD@CursorBlinkRate?$AA@
CONST	SEGMENT
??_C@_0BA@NKDGIFD@CursorBlinkRate?$AA@ DB 'CursorBlinkRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GMHAONPD@CoolSwitch?$AA@
CONST	SEGMENT
??_C@_0L@GMHAONPD@CoolSwitch?$AA@ DB 'CoolSwitch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EEKAPENF@BorderWidth?$AA@
CONST	SEGMENT
??_C@_0M@EEKAPENF@BorderWidth?$AA@ DB 'BorderWidth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
CONST	SEGMENT
??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@ DB 'Win32_Desktop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FDHFFDED@TempDirectory?$AA@
CONST	SEGMENT
??_C@_0O@FDHFFDED@TempDirectory?$AA@ DB 'TempDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FHBPINGK@ScratchDirectory?$AA@
CONST	SEGMENT
??_C@_0BB@FHBPINGK@ScratchDirectory?$AA@ DB 'ScratchDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PABAEPFH@LastDrive?$AA@
CONST	SEGMENT
??_C@_09PABAEPFH@LastDrive?$AA@ DB 'LastDrive', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BJLIMIEA@ConfigurationPath?$AA@
CONST	SEGMENT
??_C@_0BC@BJLIMIEA@ConfigurationPath?$AA@ DB 'ConfigurationPath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KLLIKPKC@BootDirectory?$AA@
CONST	SEGMENT
??_C@_0O@KLLIKPKC@BootDirectory?$AA@ DB 'BootDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
CONST	SEGMENT
??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@ DB 'Win32_BootConfigurati'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
CONST	SEGMENT
??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@ DB 'Win32_BaseService', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PKCEDPHO@LastUse?$AA@
CONST	SEGMENT
??_C@_07PKCEDPHO@LastUse?$AA@ DB 'LastUse', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PLFFHFAH@Attributes?$AA@
CONST	SEGMENT
??_C@_0L@PLFFHFAH@Attributes?$AA@ DB 'Attributes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OBOKCFEP@Accesses?$AA@
CONST	SEGMENT
??_C@_08OBOKCFEP@Accesses?$AA@ DB 'Accesses', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
CONST	SEGMENT
??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@ DB 'Win32_SoftwareFeature', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HKGIPMHJ@Writeable?$AA@
CONST	SEGMENT
??_C@_09HKGIPMHJ@Writeable?$AA@ DB 'Writeable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JIODDOFH@System?$AA@
CONST	SEGMENT
??_C@_06JIODDOFH@System?$AA@ DB 'System', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PMHOKLA@Readable?$AA@
CONST	SEGMENT
??_C@_08PMHOKLA@Readable?$AA@ DB 'Readable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFOMFNHF@LastModified?$AA@
CONST	SEGMENT
??_C@_0N@JFOMFNHF@LastModified?$AA@ DB 'LastModified', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BLGOKNC@LastAccessed?$AA@
CONST	SEGMENT
??_C@_0N@BLGOKNC@LastAccessed?$AA@ DB 'LastAccessed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PCJCDOJK@InUseCount?$AA@
CONST	SEGMENT
??_C@_0L@PCJCDOJK@InUseCount?$AA@ DB 'InUseCount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHBILLDG@Hidden?$AA@
CONST	SEGMENT
??_C@_06FHBILLDG@Hidden?$AA@ DB 'Hidden', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MBDCODDP@Group?$AA@
CONST	SEGMENT
??_C@_05MBDCODDP@Group?$AA@ DB 'Group', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PDIOKLEE@FSName?$AA@
CONST	SEGMENT
??_C@_06PDIOKLEE@FSName?$AA@ DB 'FSName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CPNPJAMG@EncryptionMethod?$AA@
CONST	SEGMENT
??_C@_0BB@CPNPJAMG@EncryptionMethod?$AA@ DB 'EncryptionMethod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KLPLELGE@Encrypted?$AA@
CONST	SEGMENT
??_C@_09KLPLELGE@Encrypted?$AA@ DB 'Encrypted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GPGLEEKJ@CreationDate?$AA@
CONST	SEGMENT
??_C@_0N@GPGLEEKJ@CreationDate?$AA@ DB 'CreationDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBPJPEIN@Compressed?$AA@
CONST	SEGMENT
??_C@_0L@FBPJPEIN@Compressed?$AA@ DB 'Compressed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CNOHFBBG@Archive?$AA@
CONST	SEGMENT
??_C@_07CNOHFBBG@Archive?$AA@ DB 'Archive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OHPKPJND@AccessMask?$AA@
CONST	SEGMENT
??_C@_0L@OHPKPJND@AccessMask?$AA@ DB 'AccessMask', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BHIEONMC@FileSize?$AA@
CONST	SEGMENT
??_C@_08BHIEONMC@FileSize?$AA@ DB 'FileSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
CONST	SEGMENT
??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@ DB 'Win32_CodecFile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MNHPDIFA@SupportsQualityofService?$AA@
CONST	SEGMENT
??_C@_0BJ@MNHPDIFA@SupportsQualityofService?$AA@ DB 'SupportsQualityofSer'
	DB	'vice', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BHPPOJFK@SupportsMulticasting?$AA@
CONST	SEGMENT
??_C@_0BF@BHPPOJFK@SupportsMulticasting?$AA@ DB 'SupportsMulticasting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MDHHIPIM@SupportsGuaranteedBandwidth?$AA@
CONST	SEGMENT
??_C@_0BM@MDHHIPIM@SupportsGuaranteedBandwidth?$AA@ DB 'SupportsGuarantee'
	DB	'dBandwidth', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FGBPBAKA@SupportsGracefulClosing?$AA@
CONST	SEGMENT
??_C@_0BI@FGBPBAKA@SupportsGracefulClosing?$AA@ DB 'SupportsGracefulClosi'
	DB	'ng', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PFGLDBHN@SupportsFragmentation?$DL?$AA@
CONST	SEGMENT
??_C@_0BH@PFGLDBHN@SupportsFragmentation?$DL?$AA@ DB 'SupportsFragmentati'
	DB	'on;', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MJFBKLBP@SupportsExpeditedData?$AA@
CONST	SEGMENT
??_C@_0BG@MJFBKLBP@SupportsExpeditedData?$AA@ DB 'SupportsExpeditedData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BJHEFNDH@SupportsEncryption?$AA@
CONST	SEGMENT
??_C@_0BD@BJHEFNDH@SupportsEncryption?$AA@ DB 'SupportsEncryption', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KMFDMCNH@SupportsDisconnectData?$AA@
CONST	SEGMENT
??_C@_0BH@KMFDMCNH@SupportsDisconnectData?$AA@ DB 'SupportsDisconnectData'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OAOGNDFG@SupportsConnectData?$AA@
CONST	SEGMENT
??_C@_0BE@OAOGNDFG@SupportsConnectData?$AA@ DB 'SupportsConnectData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ONDNBOBK@SupportsBroadcasting?$AA@
CONST	SEGMENT
??_C@_0BF@ONDNBOBK@SupportsBroadcasting?$AA@ DB 'SupportsBroadcasting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DJOBDJFP@PseudoStreamOriented?$AA@
CONST	SEGMENT
??_C@_0BF@DJOBDJFP@PseudoStreamOriented?$AA@ DB 'PseudoStreamOriented', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PCBKNDJA@MinimumAddressSize?$AA@
CONST	SEGMENT
??_C@_0BD@PCBKNDJA@MinimumAddressSize?$AA@ DB 'MinimumAddressSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NLEIFDG@MessageOriented?$AA@
CONST	SEGMENT
??_C@_0BA@NLEIFDG@MessageOriented?$AA@ DB 'MessageOriented', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IBPHBINL@MaximumMessageSize?$AA@
CONST	SEGMENT
??_C@_0BD@IBPHBINL@MaximumMessageSize?$AA@ DB 'MaximumMessageSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FFCOFDOJ@MaximumAddressSize?$AA@
CONST	SEGMENT
??_C@_0BD@FFCOFDOJ@MaximumAddressSize?$AA@ DB 'MaximumAddressSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FAHCIDLD@GuaranteesSequencing?$AA@
CONST	SEGMENT
??_C@_0BF@FAHCIDLD@GuaranteesSequencing?$AA@ DB 'GuaranteesSequencing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ECGOALCK@GuaranteesDelivery?$AA@
CONST	SEGMENT
??_C@_0BD@ECGOALCK@GuaranteesDelivery?$AA@ DB 'GuaranteesDelivery', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IODJFDPJ@ConnectionlessService?$AA@
CONST	SEGMENT
??_C@_0BG@IODJFDPJ@ConnectionlessService?$AA@ DB 'ConnectionlessService', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
CONST	SEGMENT
??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@ DB 'Win32_NetworkProtocol', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMIHDJBC@Workstations?$AA@
CONST	SEGMENT
??_C@_0N@LMIHDJBC@Workstations?$AA@ DB 'Workstations', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMMEGDEF@UnitsPerWeek?$AA@
CONST	SEGMENT
??_C@_0N@LMMEGDEF@UnitsPerWeek?$AA@ DB 'UnitsPerWeek', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GHILPLPE@ScriptPath?$AA@
CONST	SEGMENT
??_C@_0L@GHILPLPE@ScriptPath?$AA@ DB 'ScriptPath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EELFDIBP@Profile?$AA@
CONST	SEGMENT
??_C@_07EELFDIBP@Profile?$AA@ DB 'Profile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FILALLBE@Privileges?$AA@
CONST	SEGMENT
??_C@_0L@FILALLBE@Privileges?$AA@ DB 'Privileges', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CIBDNLPH@PrimaryGroupId?$AA@
CONST	SEGMENT
??_C@_0P@CIBDNLPH@PrimaryGroupId?$AA@ DB 'PrimaryGroupId', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLOHOKEI@PasswordExpires?$AA@
CONST	SEGMENT
??_C@_0BA@HLOHOKEI@PasswordExpires?$AA@ DB 'PasswordExpires', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKNCEPDC@PasswordAge?$AA@
CONST	SEGMENT
??_C@_0M@HKNCEPDC@PasswordAge?$AA@ DB 'PasswordAge', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PBGCNDPG@Parameters?$AA@
CONST	SEGMENT
??_C@_0L@PBGCNDPG@Parameters?$AA@ DB 'Parameters', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FMELCCCP@NumberOfLogons?$AA@
CONST	SEGMENT
??_C@_0P@FMELCCCP@NumberOfLogons?$AA@ DB 'NumberOfLogons', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDLNENEK@MaximumStorage?$AA@
CONST	SEGMENT
??_C@_0P@BDLNENEK@MaximumStorage?$AA@ DB 'MaximumStorage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HFGJFNDM@LogonHours?$AA@
CONST	SEGMENT
??_C@_0L@HFGJFNDM@LogonHours?$AA@ DB 'LogonHours', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JEOPKIAO@LastLogon?$AA@
CONST	SEGMENT
??_C@_09JEOPKIAO@LastLogon?$AA@ DB 'LastLogon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NKJIFPDG@LastLogoff?$AA@
CONST	SEGMENT
??_C@_0L@NKJIFPDG@LastLogoff?$AA@ DB 'LastLogoff', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BOOEKJH@Flags?$AA@
CONST	SEGMENT
??_C@_05BOOEKJH@Flags?$AA@ DB 'Flags', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NALIBBDH@CountryCode?$AA@
CONST	SEGMENT
??_C@_0M@NALIBBDH@CountryCode?$AA@ DB 'CountryCode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JABLCLAF@Comment?$AA@
CONST	SEGMENT
??_C@_07JABLCLAF@Comment?$AA@ DB 'Comment', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DOHJINHB@CodePage?$AA@
CONST	SEGMENT
??_C@_08DOHJINHB@CodePage?$AA@ DB 'CodePage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BHOPBADB@Caption?$DL?$AA@
CONST	SEGMENT
??_C@_08BHOPBADB@Caption?$DL?$AA@ DB 'Caption;', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OBONNEPA@BadPasswordCount?$AA@
CONST	SEGMENT
??_C@_0BB@OBONNEPA@BadPasswordCount?$AA@ DB 'BadPasswordCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JGGENGAP@AuthorizationFlags?$AA@
CONST	SEGMENT
??_C@_0BD@JGGENGAP@AuthorizationFlags?$AA@ DB 'AuthorizationFlags', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FLJOKOM@AccountExpires?$AA@
CONST	SEGMENT
??_C@_0P@FLJOKOM@AccountExpires?$AA@ DB 'AccountExpires', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KEGPAPIK@UserComment?$AA@
CONST	SEGMENT
??_C@_0M@KEGPAPIK@UserComment?$AA@ DB 'UserComment', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LFHMHDM@UserType?$AA@
CONST	SEGMENT
??_C@_08LFHMHDM@UserType?$AA@ DB 'UserType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HAPGBBDI@UserId?$AA@
CONST	SEGMENT
??_C@_06HAPGBBDI@UserId?$AA@ DB 'UserId', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NDLIHBHJ@LogonServer?$AA@
CONST	SEGMENT
??_C@_0M@NDLIHBHJ@LogonServer?$AA@ DB 'LogonServer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBDEODMP@HomeDirectoryDrive?$AA@
CONST	SEGMENT
??_C@_0BD@GBDEODMP@HomeDirectoryDrive?$AA@ DB 'HomeDirectoryDrive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PKMMPAKN@HomeDirectory?$AA@
CONST	SEGMENT
??_C@_0O@PKMMPAKN@HomeDirectory?$AA@ DB 'HomeDirectory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPDCFGEH@FullName?$AA@
CONST	SEGMENT
??_C@_08FPDCFGEH@FullName?$AA@ DB 'FullName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
CONST	SEGMENT
??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@ DB 'Win32_NetworkLoginP'
	DB	'rofile', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CHHDIDN@WINSSecondaryServer?$AA@
CONST	SEGMENT
??_C@_0BE@CHHDIDN@WINSSecondaryServer?$AA@ DB 'WINSSecondaryServer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CMEBCDLL@WINSScopeID?$AA@
CONST	SEGMENT
??_C@_0M@CMEBCDLL@WINSScopeID?$AA@ DB 'WINSScopeID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BECMMLFM@WINSPrimaryServer?$AA@
CONST	SEGMENT
??_C@_0BC@BECMMLFM@WINSPrimaryServer?$AA@ DB 'WINSPrimaryServer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@POPKKJKC@WINSHostLookupFile?$AA@
CONST	SEGMENT
??_C@_0BD@POPKKJKC@WINSHostLookupFile?$AA@ DB 'WINSHostLookupFile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MIGGLKDO@WINSEnableLMHostsLookup?$AA@
CONST	SEGMENT
??_C@_0BI@MIGGLKDO@WINSEnableLMHostsLookup?$AA@ DB 'WINSEnableLMHostsLook'
	DB	'up', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CIEPJIDD@TcpWindowSize?$AA@
CONST	SEGMENT
??_C@_0O@CIEPJIDD@TcpWindowSize?$AA@ DB 'TcpWindowSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JOFENPLC@TcpUseRFC1122UrgentPointer?$AA@
CONST	SEGMENT
??_C@_0BL@JOFENPLC@TcpUseRFC1122UrgentPointer?$AA@ DB 'TcpUseRFC1122Urgen'
	DB	'tPointer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CEGEJAFC@TcpNumConnections?$AA@
CONST	SEGMENT
??_C@_0BC@CEGEJAFC@TcpNumConnections?$AA@ DB 'TcpNumConnections', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ICGANMDC@TcpMaxDataRetransmissions?$AA@
CONST	SEGMENT
??_C@_0BK@ICGANMDC@TcpMaxDataRetransmissions?$AA@ DB 'TcpMaxDataRetransmi'
	DB	'ssions', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@NBAJINBE@TcpMaxConnectRetransmissions?$AA@
CONST	SEGMENT
??_C@_0BN@NBAJINBE@TcpMaxConnectRetransmissions?$AA@ DB 'TcpMaxConnectRet'
	DB	'ransmissions', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJKNHDFN@TcpipNetbiosOptions?$AA@
CONST	SEGMENT
??_C@_0BE@MJKNHDFN@TcpipNetbiosOptions?$AA@ DB 'TcpipNetbiosOptions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBFAFCNG@PMTUDiscoveryEnabled?$AA@
CONST	SEGMENT
??_C@_0BF@KBFAFCNG@PMTUDiscoveryEnabled?$AA@ DB 'PMTUDiscoveryEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DPKIODPI@PMTUBHDetectEnabled?$DL?$AA@
CONST	SEGMENT
??_C@_0BF@DPKIODPI@PMTUBHDetectEnabled?$DL?$AA@ DB 'PMTUBHDetectEnabled;', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CHJCENM@NumForwardPackets?$AA@
CONST	SEGMENT
??_C@_0BC@CHJCENM@NumForwardPackets?$AA@ DB 'NumForwardPackets', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03BLLMIPHO@MTU?$AA@
CONST	SEGMENT
??_C@_03BLLMIPHO@MTU?$AA@ DB 'MTU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HNPIKCNH@KeepAliveTime?$AA@
CONST	SEGMENT
??_C@_0O@HNPIKCNH@KeepAliveTime?$AA@ DB 'KeepAliveTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HLLJNCGL@KeepAliveInterval?$AA@
CONST	SEGMENT
??_C@_0BC@HLLJNCGL@KeepAliveInterval?$AA@ DB 'KeepAliveInterval', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KIGHGIHN@IPXVirtualNetNumber?$AA@
CONST	SEGMENT
??_C@_0BE@KIGHGIHN@IPXVirtualNetNumber?$AA@ DB 'IPXVirtualNetNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HFHJDNKD@IPXNetworkNumber?$AA@
CONST	SEGMENT
??_C@_0BB@HFHJDNKD@IPXNetworkNumber?$AA@ DB 'IPXNetworkNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHNNAGIP@IPXMediaType?$AA@
CONST	SEGMENT
??_C@_0N@FHNNAGIP@IPXMediaType?$AA@ DB 'IPXMediaType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EAKCLKKB@IPXFrameType?$AA@
CONST	SEGMENT
??_C@_0N@EAKCLKKB@IPXFrameType?$AA@ DB 'IPXFrameType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ONDAOAGP@IPXEnabled?$AA@
CONST	SEGMENT
??_C@_0L@ONDAOAGP@IPXEnabled?$AA@ DB 'IPXEnabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JNAHKDDE@IPXAddress?$AA@
CONST	SEGMENT
??_C@_0L@JNAHKDDE@IPXAddress?$AA@ DB 'IPXAddress', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EFBIPBIB@IPUseZeroBroadcast?$AA@
CONST	SEGMENT
??_C@_0BD@EFBIPBIB@IPUseZeroBroadcast?$AA@ DB 'IPUseZeroBroadcast', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IDDAOKAD@IPSecPermitUDPPorts?$AA@
CONST	SEGMENT
??_C@_0BE@IDDAOKAD@IPSecPermitUDPPorts?$AA@ DB 'IPSecPermitUDPPorts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JOIOPHFJ@IPSecPermitTCPPorts?$AA@
CONST	SEGMENT
??_C@_0BE@JOIOPHFJ@IPSecPermitTCPPorts?$AA@ DB 'IPSecPermitTCPPorts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HHIPIHMF@IPSecPermitIPProtocols?$AA@
CONST	SEGMENT
??_C@_0BH@HHIPIHMF@IPSecPermitIPProtocols?$AA@ DB 'IPSecPermitIPProtocols'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IJANIIKC@IPPortSecurityEnabled?$AA@
CONST	SEGMENT
??_C@_0BG@IJANIIKC@IPPortSecurityEnabled?$AA@ DB 'IPPortSecurityEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LBDHONDJ@IPFilterSecurityEnabled?$AA@
CONST	SEGMENT
??_C@_0BI@LBDHONDJ@IPFilterSecurityEnabled?$AA@ DB 'IPFilterSecurityEnabl'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09KIFLBGKF@IPEnabled?$AA@
CONST	SEGMENT
??_C@_09KIFLBGKF@IPEnabled?$AA@ DB 'IPEnabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KDBLHBOO@IPConnectionMetric?$AA@
CONST	SEGMENT
??_C@_0BD@KDBLHBOO@IPConnectionMetric?$AA@ DB 'IPConnectionMetric', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LFCMALKM@IGMPLevel?$AA@
CONST	SEGMENT
??_C@_09LFCMALKM@IGMPLevel?$AA@ DB 'IGMPLevel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JPOLFPNM@GatewayCostMetric?$AA@
CONST	SEGMENT
??_C@_0BC@JPOLFPNM@GatewayCostMetric?$AA@ DB 'GatewayCostMetric', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EIIPDLGE@FullDNSRegistrationEnabled?$AA@
CONST	SEGMENT
??_C@_0BL@EIIPDLGE@FullDNSRegistrationEnabled?$AA@ DB 'FullDNSRegistratio'
	DB	'nEnabled', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GGFBGHJP@ForwardBufferMemory?$AA@
CONST	SEGMENT
??_C@_0BE@GGFBGHJP@ForwardBufferMemory?$AA@ DB 'ForwardBufferMemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OACMHJBD@DomainDNSRegistrationEnabled?$AA@
CONST	SEGMENT
??_C@_0BN@OACMHJBD@DomainDNSRegistrationEnabled?$AA@ DB 'DomainDNSRegistr'
	DB	'ationEnabled', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CIMMNJEP@DNSServerSearchOrder?$AA@
CONST	SEGMENT
??_C@_0BF@CIMMNJEP@DNSServerSearchOrder?$AA@ DB 'DNSServerSearchOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LEBEBEIJ@DNSEnabledForWINSResolution?$AA@
CONST	SEGMENT
??_C@_0BM@LEBEBEIJ@DNSEnabledForWINSResolution?$AA@ DB 'DNSEnabledForWINS'
	DB	'Resolution', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NEHFNDKH@DNSDomainSuffixSearchOrder?$AA@
CONST	SEGMENT
??_C@_0BL@NEHFNDKH@DNSDomainSuffixSearchOrder?$AA@ DB 'DNSDomainSuffixSea'
	DB	'rchOrder', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MIONLOAH@DHCPLeaseObtained?$AA@
CONST	SEGMENT
??_C@_0BC@MIONLOAH@DHCPLeaseObtained?$AA@ DB 'DHCPLeaseObtained', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BOGKHOEE@DHCPLeaseExpires?$AA@
CONST	SEGMENT
??_C@_0BB@BOGKHOEE@DHCPLeaseExpires?$AA@ DB 'DHCPLeaseExpires', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HIMIFMFA@DHCPEnabled?$AA@
CONST	SEGMENT
??_C@_0M@HIMIFMFA@DHCPEnabled?$AA@ DB 'DHCPEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIDNNLHD@DefaultTTL?$AA@
CONST	SEGMENT
??_C@_0L@EIDNNLHD@DefaultTTL?$AA@ DB 'DefaultTTL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JFBEJJHM@DefaultTOS?$AA@
CONST	SEGMENT
??_C@_0L@JFBEJJHM@DefaultTOS?$AA@ DB 'DefaultTOS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GOBIIDKA@DeadGWDetectEnabled?$AA@
CONST	SEGMENT
??_C@_0BE@GOBIIDKA@DeadGWDetectEnabled?$AA@ DB 'DeadGWDetectEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAKOAPMO@DatabasePath?$AA@
CONST	SEGMENT
??_C@_0N@OAKOAPMO@DatabasePath?$AA@ DB 'DatabasePath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DHDIOMKI@ArpUseEtherSNAP?$AA@
CONST	SEGMENT
??_C@_0BA@DHDIOMKI@ArpUseEtherSNAP?$AA@ DB 'ArpUseEtherSNAP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NNMMFFI@ArpAlwaysSourceRoute?$AA@
CONST	SEGMENT
??_C@_0BF@NNMMFFI@ArpAlwaysSourceRoute?$AA@ DB 'ArpAlwaysSourceRoute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKHHNDLH@IPSubnet?$AA@
CONST	SEGMENT
??_C@_08EKHHNDLH@IPSubnet?$AA@ DB 'IPSubnet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBHLGFBK@DNSDomain?$AA@
CONST	SEGMENT
??_C@_09FBHLGFBK@DNSDomain?$AA@ DB 'DNSDomain', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HACNIBBH@DefaultIPGateway?$AA@
CONST	SEGMENT
??_C@_0BB@HACNIBBH@DefaultIPGateway?$AA@ DB 'DefaultIPGateway', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BJOKJMLN@DHCPServer?$AA@
CONST	SEGMENT
??_C@_0L@BJOKJMLN@DHCPServer?$AA@ DB 'DHCPServer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NIGMFFPO@IPAddress?$AA@
CONST	SEGMENT
??_C@_09NIGMFFPO@IPAddress?$AA@ DB 'IPAddress', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
CONST	SEGMENT
??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@ DB 'Win32_NetworkAda'
	DB	'pterConfiguration', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COBEMNCH@NetEnabled?$AA@
CONST	SEGMENT
??_C@_0L@COBEMNCH@NetEnabled?$AA@ DB 'NetEnabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LMPBIBLI@InterfaceIndex?$AA@
CONST	SEGMENT
??_C@_0P@LMPBIBLI@InterfaceIndex?$AA@ DB 'InterfaceIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HBJECKPO@Installed?$AA@
CONST	SEGMENT
??_C@_09HBJECKPO@Installed?$AA@ DB 'Installed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MMNBJFFE@AutoSense?$AA@
CONST	SEGMENT
??_C@_09MMNBJFFE@AutoSense?$AA@ DB 'AutoSense', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JDINGPBK@AdapterTypeID?$AA@
CONST	SEGMENT
??_C@_0O@JDINGPBK@AdapterTypeID?$AA@ DB 'AdapterTypeID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CBMGKKGD@AdapterType?$AA@
CONST	SEGMENT
??_C@_0M@CBMGKKGD@AdapterType?$AA@ DB 'AdapterType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CPOCLJND@PermanentAddress?$AA@
CONST	SEGMENT
??_C@_0BB@CPOCLJND@PermanentAddress?$AA@ DB 'PermanentAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HCIBJPII@NetworkAddresses?$AA@
CONST	SEGMENT
??_C@_0BB@HCIBJPII@NetworkAddresses?$AA@ DB 'NetworkAddresses', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEIDEPGF@GUID?$AA@
CONST	SEGMENT
??_C@_04MEIDEPGF@GUID?$AA@ DB 'GUID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MFFAALKH@MaxSpeed?$AA@
CONST	SEGMENT
??_C@_08MFFAALKH@MaxSpeed?$AA@ DB 'MaxSpeed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OHJLPIPO@NetConnectionStatus?$AA@
CONST	SEGMENT
??_C@_0BE@OHJLPIPO@NetConnectionStatus?$AA@ DB 'NetConnectionStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FMEGGBNH@NetConnectionID?$AA@
CONST	SEGMENT
??_C@_0BA@FMEGGBNH@NetConnectionID?$AA@ DB 'NetConnectionID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOFGKGDC@ServiceName?$AA@
CONST	SEGMENT
??_C@_0M@IOFGKGDC@ServiceName?$AA@ DB 'ServiceName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PKOOKBHK@PhysicalAdapter?$AA@
CONST	SEGMENT
??_C@_0BA@PKOOKBHK@PhysicalAdapter?$AA@ DB 'PhysicalAdapter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MLCHOGMM@MACAddress?$AA@
CONST	SEGMENT
??_C@_0L@MLCHOGMM@MACAddress?$AA@ DB 'MACAddress', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
CONST	SEGMENT
??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@ DB 'Win32_NetworkAdapter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LMHCBHLE@VppMixedVoltageSupport?$AA@
CONST	SEGMENT
??_C@_0BH@LMHCBHLE@VppMixedVoltageSupport?$AA@ DB 'VppMixedVoltageSupport'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BMAHGALK@VccMixedVoltageSupport?$AA@
CONST	SEGMENT
??_C@_0BH@BMAHGALK@VccMixedVoltageSupport?$AA@ DB 'VccMixedVoltageSupport'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPICFFNJ@ThermalRating?$AA@
CONST	SEGMENT
??_C@_0O@OPICFFNJ@ThermalRating?$AA@ DB 'ThermalRating', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLMBNLEL@SupportsHotPlug?$AA@
CONST	SEGMENT
??_C@_0BA@HLMBNLEL@SupportsHotPlug?$AA@ DB 'SupportsHotPlug', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MHGKENBB@SpecialPurpose?$AA@
CONST	SEGMENT
??_C@_0P@MHGKENBB@SpecialPurpose?$AA@ DB 'SpecialPurpose', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LOOAMPBO@Shared?$AA@
CONST	SEGMENT
??_C@_06LOOAMPBO@Shared?$AA@ DB 'Shared', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJCDBDLK@PurposeDescription?$AA@
CONST	SEGMENT
??_C@_0BD@MJCDBDLK@PurposeDescription?$AA@ DB 'PurposeDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KGLBDKHB@PMESignal?$AA@
CONST	SEGMENT
??_C@_09KGLBDKHB@PMESignal?$AA@ DB 'PMESignal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ICFBEHEI@LengthAllowed?$AA@
CONST	SEGMENT
??_C@_0O@ICFBEHEI@LengthAllowed?$AA@ DB 'LengthAllowed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JIADPBNP@HeightAllowed?$AA@
CONST	SEGMENT
??_C@_0O@JIADPBNP@HeightAllowed?$AA@ DB 'HeightAllowed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OHNMFPEL@CurrentUsage?$AA@
CONST	SEGMENT
??_C@_0N@OHNMFPEL@CurrentUsage?$AA@ DB 'CurrentUsage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JKMEMADA@SlotDesignation?$AA@
CONST	SEGMENT
??_C@_0BA@JKMEMADA@SlotDesignation?$AA@ DB 'SlotDesignation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
CONST	SEGMENT
??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@ DB 'Win32_SystemSlot', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BGAIBJKD@VisibleAlarm?$AA@
CONST	SEGMENT
??_C@_0N@BGAIBJKD@VisibleAlarm?$AA@ DB 'VisibleAlarm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPPDMJMG@TypeDescriptions?$AA@
CONST	SEGMENT
??_C@_0BB@EPPDMJMG@TypeDescriptions?$AA@ DB 'TypeDescriptions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GDBINLPP@SMBIOSAssetTag?$AA@
CONST	SEGMENT
??_C@_0P@GDBINLPP@SMBIOSAssetTag?$AA@ DB 'SMBIOSAssetTag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MJACHPAA@ServicePhilosophy?$AA@
CONST	SEGMENT
??_C@_0BC@MJACHPAA@ServicePhilosophy?$AA@ DB 'ServicePhilosophy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CDEDGENH@ServiceDescriptions?$AA@
CONST	SEGMENT
??_C@_0BE@CDEDGENH@ServiceDescriptions?$AA@ DB 'ServiceDescriptions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LBCDFKMM@SecurityStatus?$AA@
CONST	SEGMENT
??_C@_0P@LBCDFKMM@SecurityStatus?$AA@ DB 'SecurityStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IFAJDLJO@SecurityBreach?$AA@
CONST	SEGMENT
??_C@_0P@IFAJDLJO@SecurityBreach?$AA@ DB 'SecurityBreach', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOLIJOBH@NumberOfPowerCords?$AA@
CONST	SEGMENT
??_C@_0BD@BOLIJOBH@NumberOfPowerCords?$AA@ DB 'NumberOfPowerCords', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FLPBGKMO@LockPresent?$AA@
CONST	SEGMENT
??_C@_0M@FLPBGKMO@LockPresent?$AA@ DB 'LockPresent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FPMIANAI@HeatGeneration?$AA@
CONST	SEGMENT
??_C@_0P@FPMIANAI@HeatGeneration?$AA@ DB 'HeatGeneration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DMAHAAAM@CurrentRequiredOrProduced?$AA@
CONST	SEGMENT
??_C@_0BK@DMAHAAAM@CurrentRequiredOrProduced?$AA@ DB 'CurrentRequiredOrPr'
	DB	'oduced', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OIOFCGCN@CableManagementStrategy?$AA@
CONST	SEGMENT
??_C@_0BI@OIOFCGCN@CableManagementStrategy?$AA@ DB 'CableManagementStrate'
	DB	'gy', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OICCILBJ@BreachDescription?$AA@
CONST	SEGMENT
??_C@_0BC@OICCILBJ@BreachDescription?$AA@ DB 'BreachDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FBKDMIBE@AudibleAlarm?$AA@
CONST	SEGMENT
??_C@_0N@FBKDMIBE@AudibleAlarm?$AA@ DB 'AudibleAlarm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MLFAOMIG@ChassisTypes?$AA@
CONST	SEGMENT
??_C@_0N@MLFAOMIG@ChassisTypes?$AA@ DB 'ChassisTypes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
CONST	SEGMENT
??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@ DB 'Win32_SystemEnclosure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KFFLJNBG@TagId?$AA@
CONST	SEGMENT
??_C@_05KFFLJNBG@TagId?$AA@ DB 'TagId', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JNKNAC@State?$AA@
CONST	SEGMENT
??_C@_05JNKNAC@State?$AA@ DB 'State', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CIMAKHDE@StartName?$AA@
CONST	SEGMENT
??_C@_09CIMAKHDE@StartName?$AA@ DB 'StartName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFFFGGEC@ServiceType?$AA@
CONST	SEGMENT
??_C@_0M@CFFFGGEC@ServiceType?$AA@ DB 'ServiceType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JAIDFKNN@ServiceSpecificExitCode?$AA@
CONST	SEGMENT
??_C@_0BI@JAIDFKNN@ServiceSpecificExitCode?$AA@ DB 'ServiceSpecificExitCo'
	DB	'de', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08FHJJFIAP@ExitCode?$AA@
CONST	SEGMENT
??_C@_08FHJJFIAP@ExitCode?$AA@ DB 'ExitCode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GPBKMKLE@ErrorControl?$AA@
CONST	SEGMENT
??_C@_0N@GPBKMKLE@ErrorControl?$AA@ DB 'ErrorControl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DKLNMHH@DesktopInteract?$AA@
CONST	SEGMENT
??_C@_0BA@DKLNMHH@DesktopInteract?$AA@ DB 'DesktopInteract', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MPAKMMDG@AcceptStop?$AA@
CONST	SEGMENT
??_C@_0L@MPAKMMDG@AcceptStop?$AA@ DB 'AcceptStop', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MEIJGDEJ@AcceptPause?$AA@
CONST	SEGMENT
??_C@_0M@MEIJGDEJ@AcceptPause?$AA@ DB 'AcceptPause', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LHLJMCNC@PathName?$AA@
CONST	SEGMENT
??_C@_08LHLJMCNC@PathName?$AA@ DB 'PathName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLHPPPJP@DisplayName?$AA@
CONST	SEGMENT
??_C@_0M@MLHPPPJP@DisplayName?$AA@ DB 'DisplayName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
CONST	SEGMENT
??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@ DB 'Win32_SystemDriver', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JDPBNNMM@SIDType?$AA@
CONST	SEGMENT
??_C@_07JDPBNNMM@SIDType?$AA@ DB 'SIDType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FPKOIMIG@LocalAccount?$AA@
CONST	SEGMENT
??_C@_0N@FPKOIMIG@LocalAccount?$AA@ DB 'LocalAccount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OMFNLMOB@SID?$AA@
CONST	SEGMENT
??_C@_03OMFNLMOB@SID?$AA@ DB 'SID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
CONST	SEGMENT
??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@ DB 'Win32_SystemAccount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JHIKPPPP@ProposedSize?$AA@
CONST	SEGMENT
??_C@_0N@JHIKPPPP@ProposedSize?$AA@ DB 'ProposedSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JHEHBNHB@MaximumSize?$AA@
CONST	SEGMENT
??_C@_0M@JHEHBNHB@MaximumSize?$AA@ DB 'MaximumSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLALLFJB@CurrentSize?$AA@
CONST	SEGMENT
??_C@_0M@MLALLFJB@CurrentSize?$AA@ DB 'CurrentSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OGGGECNI@Win32_Registry?$AA@
CONST	SEGMENT
??_C@_0P@OGGGECNI@Win32_Registry?$AA@ DB 'Win32_Registry', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
CONST	SEGMENT
??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@ DB 'Win32_Refrigeration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FBEKBLIJ@ServicePackInEffect?$AA@
CONST	SEGMENT
??_C@_0BE@FBEKBLIJ@ServicePackInEffect?$AA@ DB 'ServicePackInEffect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PIGNGIJB@FixComments?$AA@
CONST	SEGMENT
??_C@_0M@PIGNGIJB@FixComments?$AA@ DB 'FixComments', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBDMPIKF@InstalledOn?$AA@
CONST	SEGMENT
??_C@_0M@NBDMPIKF@InstalledOn?$AA@ DB 'InstalledOn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NMGHOPGA@InstalledBy?$AA@
CONST	SEGMENT
??_C@_0M@NMGHOPGA@InstalledBy?$AA@ DB 'InstalledBy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GFKGEEBB@HotFixID?$AA@
CONST	SEGMENT
??_C@_08GFKGEEBB@HotFixID?$AA@ DB 'HotFixID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
CONST	SEGMENT
??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@ DB 'Win32_QuickFixEngin'
	DB	'eering', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09JCLOCIPO@WordCount?$AA@
CONST	SEGMENT
??_C@_09JCLOCIPO@WordCount?$AA@ DB 'WordCount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FDAGMPND@URLUpdateInfo?$AA@
CONST	SEGMENT
??_C@_0O@FDAGMPND@URLUpdateInfo?$AA@ DB 'URLUpdateInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CIJCJNDA@URLInfoAbout?$AA@
CONST	SEGMENT
??_C@_0N@CIJCJNDA@URLInfoAbout?$AA@ DB 'URLInfoAbout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LNLOEOEC@Transforms?$AA@
CONST	SEGMENT
??_C@_0L@LNLOEOEC@Transforms?$AA@ DB 'Transforms', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BDBMLIBF@RegCompany?$AA@
CONST	SEGMENT
??_C@_0L@BDBMLIBF@RegCompany?$AA@ DB 'RegCompany', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KOFIEIPM@RegOwner?$AA@
CONST	SEGMENT
??_C@_08KOFIEIPM@RegOwner?$AA@ DB 'RegOwner', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PLFIHHBG@PackageName?$AA@
CONST	SEGMENT
??_C@_0M@PLFIHHBG@PackageName?$AA@ DB 'PackageName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OMMGPPBL@PackageCode?$AA@
CONST	SEGMENT
??_C@_0M@OMMGPPBL@PackageCode?$AA@ DB 'PackageCode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LIDMIFHK@PackageCache?$AA@
CONST	SEGMENT
??_C@_0N@LIDMIFHK@PackageCache?$AA@ DB 'PackageCache', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ONDNCIN@LocalPackage?$AA@
CONST	SEGMENT
??_C@_0N@ONDNCIN@LocalPackage?$AA@ DB 'LocalPackage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BENDAOKD@Language?$AA@
CONST	SEGMENT
??_C@_08BENDAOKD@Language?$AA@ DB 'Language', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GCCHCBIO@InstallSource?$AA@
CONST	SEGMENT
??_C@_0O@GCCHCBIO@InstallSource?$AA@ DB 'InstallSource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PPCFOOHH@HelpTelephone?$AA@
CONST	SEGMENT
??_C@_0O@PPCFOOHH@HelpTelephone?$AA@ DB 'HelpTelephone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LMOOJGEG@HelpLink?$AA@
CONST	SEGMENT
??_C@_08LMOOJGEG@HelpLink?$AA@ DB 'HelpLink', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNHIHJOE@InstallState?$AA@
CONST	SEGMENT
??_C@_0N@FNHIHJOE@InstallState?$AA@ DB 'InstallState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DLLPKNMD@InstallLocation?$AA@
CONST	SEGMENT
??_C@_0BA@DLLPKNMD@InstallLocation?$AA@ DB 'InstallLocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CAOEPKFE@AssignmentType?$AA@
CONST	SEGMENT
??_C@_0P@CAOEPKFE@AssignmentType?$AA@ DB 'AssignmentType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IHHILKBJ@ProductID?$AA@
CONST	SEGMENT
??_C@_09IHHILKBJ@ProductID?$AA@ DB 'ProductID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LCAALOJJ@Win32_Product?$AA@
CONST	SEGMENT
??_C@_0O@LCAALOJJ@Win32_Product?$AA@ DB 'Win32_Product', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ODBEMGCH@SKUNumber?$AA@
CONST	SEGMENT
??_C@_09ODBEMGCH@SKUNumber?$AA@ DB 'SKUNumber', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IBEJLMDM@IdentifyingNumber?$AA@
CONST	SEGMENT
??_C@_0BC@IBEJLMDM@IdentifyingNumber?$AA@ DB 'IdentifyingNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NOKDILIH@UUID?$AA@
CONST	SEGMENT
??_C@_04NOKDILIH@UUID?$AA@ DB 'UUID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LGGLFMPE@Vendor?$AA@
CONST	SEGMENT
??_C@_06LGGLFMPE@Vendor?$AA@ DB 'Vendor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@
CONST	SEGMENT
??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@ DB 'Win32_ComputerSys'
	DB	'temProduct', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09CLAAHCGK@Workgroup?$AA@
CONST	SEGMENT
??_C@_09CLAAHCGK@Workgroup?$AA@ DB 'Workgroup', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FAPFOCCC@WakeUpType?$AA@
CONST	SEGMENT
??_C@_0L@FAPFOCCC@WakeUpType?$AA@ DB 'WakeUpType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LPDNMOEG@TotalPhysicalMemory?$AA@
CONST	SEGMENT
??_C@_0BE@LPDNMOEG@TotalPhysicalMemory?$AA@ DB 'TotalPhysicalMemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HHACICKK@ThermalState?$AA@
CONST	SEGMENT
??_C@_0N@HHACICKK@ThermalState?$AA@ DB 'ThermalState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IKJAHOGK@SystemStartupSetting?$AA@
CONST	SEGMENT
??_C@_0BF@IKJAHOGK@SystemStartupSetting?$AA@ DB 'SystemStartupSetting', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HNHDCNN@SystemStartupOptions?$AA@
CONST	SEGMENT
??_C@_0BF@HNHDCNN@SystemStartupOptions?$AA@ DB 'SystemStartupOptions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJBJDOPG@SystemStartupDelay?$AA@
CONST	SEGMENT
??_C@_0BD@MJBJDOPG@SystemStartupDelay?$AA@ DB 'SystemStartupDelay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GHHBNFKI@SupportContactDescription?$AA@
CONST	SEGMENT
??_C@_0BK@GHHBNFKI@SupportContactDescription?$AA@ DB 'SupportContactDescr'
	DB	'iption', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05CPOHHMHJ@Roles?$AA@
CONST	SEGMENT
??_C@_05CPOHHMHJ@Roles?$AA@ DB 'Roles', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ODMHPMJN@ResetLimit?$AA@
CONST	SEGMENT
??_C@_0L@ODMHPMJN@ResetLimit?$AA@ DB 'ResetLimit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NDDNCBN@ResetCount?$AA@
CONST	SEGMENT
??_C@_0L@NDDNCBN@ResetCount?$AA@ DB 'ResetCount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JGMMLHGF@ResetCapability?$AA@
CONST	SEGMENT
??_C@_0BA@JGMMLHGF@ResetCapability?$AA@ DB 'ResetCapability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CIHLIHGG@PrimaryOwnerName?$AA@
CONST	SEGMENT
??_C@_0BB@CIHLIHGG@PrimaryOwnerName?$AA@ DB 'PrimaryOwnerName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GNDJOKHP@PrimaryOwnerContact?$AA@
CONST	SEGMENT
??_C@_0BE@GNDJOKHP@PrimaryOwnerContact?$AA@ DB 'PrimaryOwnerContact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PGEJAGBJ@PowerSupplyState?$AA@
CONST	SEGMENT
??_C@_0BB@PGEJAGBJ@PowerSupplyState?$AA@ DB 'PowerSupplyState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PFLEPOFF@PowerState?$AA@
CONST	SEGMENT
??_C@_0L@PFLEPOFF@PowerState?$AA@ DB 'PowerState', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MGBDJIM@PowerOnPasswordStatus?$AA@
CONST	SEGMENT
??_C@_0BG@MGBDJIM@PowerOnPasswordStatus?$AA@ DB 'PowerOnPasswordStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EOPDJAGI@PCSystemType?$AA@
CONST	SEGMENT
??_C@_0N@EOPDJAGI@PCSystemType?$AA@ DB 'PCSystemType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BAAGJACJ@PauseAfterReset?$AA@
CONST	SEGMENT
??_C@_0BA@BAAGJACJ@PauseAfterReset?$AA@ DB 'PauseAfterReset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BDBDHMKI@PartOfDomain?$AA@
CONST	SEGMENT
??_C@_0N@BDBDHMKI@PartOfDomain?$AA@ DB 'PartOfDomain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DEDOEGFN@OEMStringArray?$AA@
CONST	SEGMENT
??_C@_0P@DEDOEGFN@OEMStringArray?$AA@ DB 'OEMStringArray', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KFCLFAME@OEMLogoBitmap?$AA@
CONST	SEGMENT
??_C@_0O@KFCLFAME@OEMLogoBitmap?$AA@ DB 'OEMLogoBitmap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OJMPPEPI@NetworkServerModeEnabled?$AA@
CONST	SEGMENT
??_C@_0BJ@OJMPPEPI@NetworkServerModeEnabled?$AA@ DB 'NetworkServerModeEna'
	DB	'bled', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@INCFKHMA@NameFormat?$AA@
CONST	SEGMENT
??_C@_0L@INCFKHMA@NameFormat?$AA@ DB 'NameFormat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FDMFJCLB@LastLoadInfo?$AA@
CONST	SEGMENT
??_C@_0N@FDMFJCLB@LastLoadInfo?$AA@ DB 'LastLoadInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NPMFKEOG@KeyboardPasswordStatus?$AA@
CONST	SEGMENT
??_C@_0BH@NPMFKEOG@KeyboardPasswordStatus?$AA@ DB 'KeyboardPasswordStatus'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FHFMLOBH@InitialLoadInfo?$AA@
CONST	SEGMENT
??_C@_0BA@FHFMLOBH@InitialLoadInfo?$AA@ DB 'InitialLoadInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MOGIEFCC@InfraredSupported?$AA@
CONST	SEGMENT
??_C@_0BC@MOGIEFCC@InfraredSupported?$AA@ DB 'InfraredSupported', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OFHEPCGG@FrontPanelResetStatus?$AA@
CONST	SEGMENT
??_C@_0BG@OFHEPCGG@FrontPanelResetStatus?$AA@ DB 'FrontPanelResetStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DMLHGPE@EnableDaylightSavingsTime?$AA@
CONST	SEGMENT
??_C@_0BK@DMLHGPE@EnableDaylightSavingsTime?$AA@ DB 'EnableDaylightSaving'
	DB	'sTime', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DHGJAMBB@DomainRole?$AA@
CONST	SEGMENT
??_C@_0L@DHGJAMBB@DomainRole?$AA@ DB 'DomainRole', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HFDFFJHI@Domain?$AA@
CONST	SEGMENT
??_C@_06HFDFFJHI@Domain?$AA@ DB 'Domain', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HMDMJNAL@DNSHostName?$AA@
CONST	SEGMENT
??_C@_0M@HMDMJNAL@DNSHostName?$AA@ DB 'DNSHostName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PNOOHJBN@DaylightInEffect?$AA@
CONST	SEGMENT
??_C@_0BB@PNOOHJBN@DaylightInEffect?$AA@ DB 'DaylightInEffect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KEBGPOLH@CurrentTimeZone?$AA@
CONST	SEGMENT
??_C@_0BA@KEBGPOLH@CurrentTimeZone?$AA@ DB 'CurrentTimeZone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPOFELCJ@ChassisBootupState?$AA@
CONST	SEGMENT
??_C@_0BD@NPOFELCJ@ChassisBootupState?$AA@ DB 'ChassisBootupState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FAIFADKE@BootupState?$AA@
CONST	SEGMENT
??_C@_0M@FAIFADKE@BootupState?$AA@ DB 'BootupState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KCAGDBFG@BootROMSupported?$AA@
CONST	SEGMENT
??_C@_0BB@KCAGDBFG@BootROMSupported?$AA@ DB 'BootROMSupported', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NHNHHNLM@BootOptionOnWatchDog?$AA@
CONST	SEGMENT
??_C@_0BF@NHNHHNLM@BootOptionOnWatchDog?$AA@ DB 'BootOptionOnWatchDog', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LOIFGJNH@BootOptionOnLimit?$AA@
CONST	SEGMENT
??_C@_0BC@LOIFGJNH@BootOptionOnLimit?$AA@ DB 'BootOptionOnLimit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFJMLPDD@AutomaticResetCapability?$AA@
CONST	SEGMENT
??_C@_0BJ@HFJMLPDD@AutomaticResetCapability?$AA@ DB 'AutomaticResetCapabi'
	DB	'lity', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CCCKPNOE@AutomaticResetBootOption?$AA@
CONST	SEGMENT
??_C@_0BJ@CCCKPNOE@AutomaticResetBootOption?$AA@ DB 'AutomaticResetBootOp'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GMKDMOMC@AutomaticManagedPagefile?$AA@
CONST	SEGMENT
??_C@_0BJ@GMKDMOMC@AutomaticManagedPagefile?$AA@ DB 'AutomaticManagedPage'
	DB	'file', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BPKIAGEB@AdminPasswordStatus?$AA@
CONST	SEGMENT
??_C@_0BE@BPKIAGEB@AdminPasswordStatus?$AA@ DB 'AdminPasswordStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KAFEAHEM@UserName?$AA@
CONST	SEGMENT
??_C@_08KAFEAHEM@UserName?$AA@ DB 'UserName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KEFEPCEP@NumberOfProcessors?$AA@
CONST	SEGMENT
??_C@_0BD@KEFEPCEP@NumberOfProcessors?$AA@ DB 'NumberOfProcessors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GEHHDFHH@SystemType?$AA@
CONST	SEGMENT
??_C@_0L@GEHHDFHH@SystemType?$AA@ DB 'SystemType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
CONST	SEGMENT
??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@ DB 'Win32_ComputerSystem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GIIBFPAF@Win32_SystemMemoryResource?$AA@
CONST	SEGMENT
??_C@_0BL@GIIBFPAF@Win32_SystemMemoryResource?$AA@ DB 'Win32_SystemMemory'
	DB	'Resource', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
CONST	SEGMENT
??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@ DB 'Win32_SMBIOSMemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GMFFJGJI@Use?$AA@
CONST	SEGMENT
??_C@_03GMFFJGJI@Use?$AA@ DB 'Use', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BDKPEMKD@MemoryErrorCorrection?$AA@
CONST	SEGMENT
??_C@_0BG@BDKPEMKD@MemoryErrorCorrection?$AA@ DB 'MemoryErrorCorrection', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPAFCHAO@MaxCapacity?$AA@
CONST	SEGMENT
??_C@_0M@LPAFCHAO@MaxCapacity?$AA@ DB 'MaxCapacity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EOCLGIEK@MemoryDevices?$AA@
CONST	SEGMENT
??_C@_0O@EOCLGIEK@MemoryDevices?$AA@ DB 'MemoryDevices', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
CONST	SEGMENT
??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@ DB 'Win32_PhysicalMemor'
	DB	'yArray', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NHBAOOAD@TypeDetail?$AA@
CONST	SEGMENT
??_C@_0L@NHBAOOAD@TypeDetail?$AA@ DB 'TypeDetail', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EONKMHCB@TotalWidth?$AA@
CONST	SEGMENT
??_C@_0L@EONKMHCB@TotalWidth?$AA@ DB 'TotalWidth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HOIAGEJD@Speed?$AA@
CONST	SEGMENT
??_C@_05HOIAGEJD@Speed?$AA@ DB 'Speed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MJAFBIEI@PositionInRow?$AA@
CONST	SEGMENT
??_C@_0O@MJAFBIEI@PositionInRow?$AA@ DB 'PositionInRow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OOBFBMPB@InterleavePosition?$AA@
CONST	SEGMENT
??_C@_0BD@OOBFBMPB@InterleavePosition?$AA@ DB 'InterleavePosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GAJMAAIE@InterleaveDataDepth?$AA@
CONST	SEGMENT
??_C@_0BE@GAJMAAIE@InterleaveDataDepth?$AA@ DB 'InterleaveDataDepth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JPOMKNPI@FormFactor?$AA@
CONST	SEGMENT
??_C@_0L@JPOMKNPI@FormFactor?$AA@ DB 'FormFactor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DKGGAIKL@DeviceLocator?$AA@
CONST	SEGMENT
??_C@_0O@DKGGAIKL@DeviceLocator?$AA@ DB 'DeviceLocator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ELEBPJGH@BankLabel?$AA@
CONST	SEGMENT
??_C@_09ELEBPJGH@BankLabel?$AA@ DB 'BankLabel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
CONST	SEGMENT
??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@ DB 'Win32_PhysicalMemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
CONST	SEGMENT
??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@ DB 'Win32_MemoryDevice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CCADGENH@ErrorGranularity?$AA@
CONST	SEGMENT
??_C@_0BB@CCADGENH@ErrorGranularity?$AA@ DB 'ErrorGranularity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
CONST	SEGMENT
??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@ DB 'Win32_MemoryArray', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NKIIONIP@MemoryType?$AA@
CONST	SEGMENT
??_C@_0L@NKIIONIP@MemoryType?$AA@ DB 'MemoryType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CHMJMDKA@Win32_DeviceMemoryAddress?$AA@
CONST	SEGMENT
??_C@_0BK@CHMJMDKA@Win32_DeviceMemoryAddress?$AA@ DB 'Win32_DeviceMemoryA'
	DB	'ddress', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GMGLDKG@WritePolicy?$AA@
CONST	SEGMENT
??_C@_0M@GMGLDKG@WritePolicy?$AA@ DB 'WritePolicy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EHELDMNK@SystemLevelAddress?$AA@
CONST	SEGMENT
??_C@_0BD@EHELDMNK@SystemLevelAddress?$AA@ DB 'SystemLevelAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LOONNFKJ@SupportedSRAM?$AA@
CONST	SEGMENT
??_C@_0O@LOONNFKJ@SupportedSRAM?$AA@ DB 'SupportedSRAM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JKJCLFJA@StartingAddress?$AA@
CONST	SEGMENT
??_C@_0BA@JKJCLFJA@StartingAddress?$AA@ DB 'StartingAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CACAEAGO@ReplacementPolicy?$AA@
CONST	SEGMENT
??_C@_0BC@CACAEAGO@ReplacementPolicy?$AA@ DB 'ReplacementPolicy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OICKBPFP@ReadPolicy?$AA@
CONST	SEGMENT
??_C@_0L@OICKBPFP@ReadPolicy?$AA@ DB 'ReadPolicy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GMMANAIM@OtherErrorDescription?$AA@
CONST	SEGMENT
??_C@_0BG@GMMANAIM@OtherErrorDescription?$AA@ DB 'OtherErrorDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KDOEBHGA@Location?$AA@
CONST	SEGMENT
??_C@_08KDOEBHGA@Location?$AA@ DB 'Location', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BFDFHGHF@LineSize?$AA@
CONST	SEGMENT
??_C@_08BFDFHGHF@LineSize?$AA@ DB 'LineSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BJDNNDOA@InstalledSize?$AA@
CONST	SEGMENT
??_C@_0O@BJDNNDOA@InstalledSize?$AA@ DB 'InstalledSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NIIIAJJG@FlushTimer?$AA@
CONST	SEGMENT
??_C@_0L@NIIIAJJG@FlushTimer?$AA@ DB 'FlushTimer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FEODMBII@ErrorTransferSize?$AA@
CONST	SEGMENT
??_C@_0BC@FEODMBII@ErrorTransferSize?$AA@ DB 'ErrorTransferSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LMOKKAAG@ErrorTime?$AA@
CONST	SEGMENT
??_C@_09LMOKKAAG@ErrorTime?$AA@ DB 'ErrorTime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DBMDPLBE@ErrorResolution?$AA@
CONST	SEGMENT
??_C@_0BA@DBMDPLBE@ErrorResolution?$AA@ DB 'ErrorResolution', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EPPHMMOH@ErrorInfo?$AA@
CONST	SEGMENT
??_C@_09EPPHMMOH@ErrorInfo?$AA@ DB 'ErrorInfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LPKOAMHJ@ErrorDataOrder?$AA@
CONST	SEGMENT
??_C@_0P@LPKOAMHJ@ErrorDataOrder?$AA@ DB 'ErrorDataOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GOCFECJA@ErrorData?$AA@
CONST	SEGMENT
??_C@_09GOCFECJA@ErrorData?$AA@ DB 'ErrorData', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OEAEPHLK@ErrorCorrectType?$AA@
CONST	SEGMENT
??_C@_0BB@OEAEPHLK@ErrorCorrectType?$AA@ DB 'ErrorCorrectType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BEELHEFJ@ErrorAddress?$AA@
CONST	SEGMENT
??_C@_0N@BEELHEFJ@ErrorAddress?$AA@ DB 'ErrorAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PJGEGKNG@ErrorAccess?$AA@
CONST	SEGMENT
??_C@_0M@PJGEGKNG@ErrorAccess?$AA@ DB 'ErrorAccess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DMEOEBEF@EndingAddress?$AA@
CONST	SEGMENT
??_C@_0O@DMEOEBEF@EndingAddress?$AA@ DB 'EndingAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JJECGOOK@CurrentSRAM?$AA@
CONST	SEGMENT
??_C@_0M@JJECGOOK@CurrentSRAM?$AA@ DB 'CurrentSRAM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HJBOPHEK@CorrectableError?$AA@
CONST	SEGMENT
??_C@_0BB@HJBOPHEK@CorrectableError?$AA@ DB 'CorrectableError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNMLGPI@MaxCacheSize?$AA@
CONST	SEGMENT
??_C@_0N@FNMLGPI@MaxCacheSize?$AA@ DB 'MaxCacheSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LDLPEFB@CacheType?$AA@
CONST	SEGMENT
??_C@_09LDLPEFB@CacheType?$AA@ DB 'CacheType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKCEABFB@CacheSpeed?$AA@
CONST	SEGMENT
??_C@_0L@GKCEABFB@CacheSpeed?$AA@ DB 'CacheSpeed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BJAAJMNJ@Associativity?$AA@
CONST	SEGMENT
??_C@_0O@BJAAJMNJ@Associativity?$AA@ DB 'Associativity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FGEPBFNL@AdditionalErrorData?$AA@
CONST	SEGMENT
??_C@_0BE@FGEPBFNL@AdditionalErrorData?$AA@ DB 'AdditionalErrorData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
CONST	SEGMENT
??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@ DB 'Win32_CacheMemory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OCFCAPCK@ReportSetMarks?$AA@
CONST	SEGMENT
??_C@_0P@OCFCAPCK@ReportSetMarks?$AA@ DB 'ReportSetMarks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DDDGKLAD@Padding?$AA@
CONST	SEGMENT
??_C@_07DDDGKLAD@Padding?$AA@ DB 'Padding', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NKLHGLCM@MaxPartitionCount?$AA@
CONST	SEGMENT
??_C@_0BC@NKLHGLCM@MaxPartitionCount?$AA@ DB 'MaxPartitionCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCKGDCME@FeaturesLow?$AA@
CONST	SEGMENT
??_C@_0M@GCKGDCME@FeaturesLow?$AA@ DB 'FeaturesLow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNICBLFI@FeaturesHigh?$AA@
CONST	SEGMENT
??_C@_0N@PNICBLFI@FeaturesHigh?$AA@ DB 'FeaturesHigh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IDPNAMKG@EOTWarningZoneSize?$AA@
CONST	SEGMENT
??_C@_0BD@IDPNAMKG@EOTWarningZoneSize?$AA@ DB 'EOTWarningZoneSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NLPJKHLD@ECC?$AA@
CONST	SEGMENT
??_C@_03NLPJKHLD@ECC?$AA@ DB 'ECC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@COKFBABJ@Compression?$AA@
CONST	SEGMENT
??_C@_0M@COKFBABJ@Compression?$AA@ DB 'Compression', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HOGEDOAB@Id?$AA@
CONST	SEGMENT
??_C@_02HOGEDOAB@Id?$AA@ DB 'Id', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
CONST	SEGMENT
??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@ DB 'Win32_TapeDrive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NINPCONM@CleanerMedia?$AA@
CONST	SEGMENT
??_C@_0N@NINPCONM@CleanerMedia?$AA@ DB 'CleanerMedia', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CNPPDDMA@WriteProtectOn?$AA@
CONST	SEGMENT
??_C@_0P@CNPPDDMA@WriteProtectOn?$AA@ DB 'WriteProtectOn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PINBMPEF@Capacity?$AA@
CONST	SEGMENT
??_C@_08PINBMPEF@Capacity?$AA@ DB 'Capacity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FNAKMFAB@CreationClassName?$AA@
CONST	SEGMENT
??_C@_0BC@FNAKMFAB@CreationClassName?$AA@ DB 'CreationClassName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GANKFIKA@MediaDescription?$AA@
CONST	SEGMENT
??_C@_0BB@GANKFIKA@MediaDescription?$AA@ DB 'MediaDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
CONST	SEGMENT
??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@ DB 'Win32_PhysicalMedia', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HEMAHOJD@StartingOffset?$AA@
CONST	SEGMENT
??_C@_0P@HEMAHOJD@StartingOffset?$AA@ DB 'StartingOffset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CLPKNLNO@RewritePartition?$AA@
CONST	SEGMENT
??_C@_0BB@CLPKNLNO@RewritePartition?$AA@ DB 'RewritePartition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ODOLMOGH@Purpose?$AA@
CONST	SEGMENT
??_C@_07ODOLMOGH@Purpose?$AA@ DB 'Purpose', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMDEFEE@HiddenSectors?$AA@
CONST	SEGMENT
??_C@_0O@NMDEFEE@HiddenSectors?$AA@ DB 'HiddenSectors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@
CONST	SEGMENT
??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@ DB 'NumberOfBlocks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JFLKFGKE@BlockSize?$AA@
CONST	SEGMENT
??_C@_09JFLKFGKE@BlockSize?$AA@ DB 'BlockSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IOEANFCI@Access?$AA@
CONST	SEGMENT
??_C@_06IOEANFCI@Access?$AA@ DB 'Access', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GMPNKCND@PrimaryPartition?$AA@
CONST	SEGMENT
??_C@_0BB@GMPNKCND@PrimaryPartition?$AA@ DB 'PrimaryPartition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GKABHDFN@BootPartition?$AA@
CONST	SEGMENT
??_C@_0O@GKABHDFN@BootPartition?$AA@ DB 'BootPartition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GBCOMNMP@Bootable?$AA@
CONST	SEGMENT
??_C@_08GBCOMNMP@Bootable?$AA@ DB 'Bootable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KOACHJEN@Type?$AA@
CONST	SEGMENT
??_C@_04KOACHJEN@Type?$AA@ DB 'Type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
CONST	SEGMENT
??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@ DB 'Win32_DiskPartition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOKBEBBE@TracksPerCylinder?$AA@
CONST	SEGMENT
??_C@_0BC@KOKBEBBE@TracksPerCylinder?$AA@ DB 'TracksPerCylinder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BHKEFGGG@TotalTracks?$AA@
CONST	SEGMENT
??_C@_0M@BHKEFGGG@TotalTracks?$AA@ DB 'TotalTracks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BJMAPGKO@TotalSectors?$AA@
CONST	SEGMENT
??_C@_0N@BJMAPGKO@TotalSectors?$AA@ DB 'TotalSectors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PLGEACLG@TotalHeads?$AA@
CONST	SEGMENT
??_C@_0L@PLGEACLG@TotalHeads?$AA@ DB 'TotalHeads', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NEMACPGO@TotalCylinders?$AA@
CONST	SEGMENT
??_C@_0P@NEMACPGO@TotalCylinders?$AA@ DB 'TotalCylinders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CCMKCJPC@SectorsPerTrack?$AA@
CONST	SEGMENT
??_C@_0BA@CCMKCJPC@SectorsPerTrack?$AA@ DB 'SectorsPerTrack', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IHENGMAG@InterfaceType?$AA@
CONST	SEGMENT
??_C@_0O@IHENGMAG@InterfaceType?$AA@ DB 'InterfaceType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HMBACBBL@FirmwareRevision?$AA@
CONST	SEGMENT
??_C@_0BB@HMBACBBL@FirmwareRevision?$AA@ DB 'FirmwareRevision', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MMMIFHLL@BytesPerSector?$AA@
CONST	SEGMENT
??_C@_0P@MMMIFHLL@BytesPerSector?$AA@ DB 'BytesPerSector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GDNFOKKF@Signature?$AA@
CONST	SEGMENT
??_C@_09GDNFOKKF@Signature?$AA@ DB 'Signature', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BLANPANH@Partitions?$AA@
CONST	SEGMENT
??_C@_0L@BLANPANH@Partitions?$AA@ DB 'Partitions', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
CONST	SEGMENT
??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@ DB 'Win32_DiskDrive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HGGDLIIF@SpecificationVersion?$AA@
CONST	SEGMENT
??_C@_0BF@HGGDLIIF@SpecificationVersion?$AA@ DB 'SpecificationVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FJFLBOEO@ReservedSystemPaletteEntries?$AA@
CONST	SEGMENT
??_C@_0BN@FJFLBOEO@ReservedSystemPaletteEntries?$AA@ DB 'ReservedSystemPa'
	DB	'letteEntries', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NCAJOFAD@Monochrome?$AA@
CONST	SEGMENT
??_C@_0L@NCAJOFAD@Monochrome?$AA@ DB 'Monochrome', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BADPIIJO@MinRefreshRate?$AA@
CONST	SEGMENT
??_C@_0P@BADPIIJO@MinRefreshRate?$AA@ DB 'MinRefreshRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DHIEOPKP@MaxRefreshRate?$AA@
CONST	SEGMENT
??_C@_0P@DHIEOPKP@MaxRefreshRate?$AA@ DB 'MaxRefreshRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KFJBBNPN@MaxMemorySupported?$AA@
CONST	SEGMENT
??_C@_0BD@KFJBBNPN@MaxMemorySupported?$AA@ DB 'MaxMemorySupported', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NCJGCGIA@InstalledDisplayDrivers?$AA@
CONST	SEGMENT
??_C@_0BI@NCJGCGIA@InstalledDisplayDrivers?$AA@ DB 'InstalledDisplayDrive'
	DB	'rs', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09OGGCGCBA@ICMMethod?$AA@
CONST	SEGMENT
??_C@_09OGGCGCBA@ICMMethod?$AA@ DB 'ICMMethod', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MBIABGHL@ICMIntent?$AA@
CONST	SEGMENT
??_C@_09MBIABGHL@ICMIntent?$AA@ DB 'ICMIntent', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GAFFCADK@DriverDate?$AA@
CONST	SEGMENT
??_C@_0L@GAFFCADK@DriverDate?$AA@ DB 'DriverDate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HJOBJMDE@DitherType?$AA@
CONST	SEGMENT
??_C@_0L@HJOBJMDE@DitherType?$AA@ DB 'DitherType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HBMCPLLH@DeviceSpecificPens?$AA@
CONST	SEGMENT
??_C@_0BD@HBMCPLLH@DeviceSpecificPens?$AA@ DB 'DeviceSpecificPens', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KKIKAADI@DriverVersion?$AA@
CONST	SEGMENT
??_C@_0O@KKIKAADI@DriverVersion?$AA@ DB 'DriverVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HMKFJKEG@InfFilename?$AA@
CONST	SEGMENT
??_C@_0M@HMKFJKEG@InfFilename?$AA@ DB 'InfFilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKHNOAKJ@AdapterRAM?$AA@
CONST	SEGMENT
??_C@_0L@CKHNOAKJ@AdapterRAM?$AA@ DB 'AdapterRAM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MPKKGADB@AdapterDACType?$AA@
CONST	SEGMENT
??_C@_0P@MPKKGADB@AdapterDACType?$AA@ DB 'AdapterDACType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LPCADEJI@AdapterCompatibility?$AA@
CONST	SEGMENT
??_C@_0BF@LPCADEJI@AdapterCompatibility?$AA@ DB 'AdapterCompatibility', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DFJMJFBI@AcceleratorCapabilities?$AA@
CONST	SEGMENT
??_C@_0BI@DFJMJFBI@AcceleratorCapabilities?$AA@ DB 'AcceleratorCapabiliti'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FKKNOPFN@SystemPaletteEntries?$AA@
CONST	SEGMENT
??_C@_0BF@FKKNOPFN@SystemPaletteEntries?$AA@ DB 'SystemPaletteEntries', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DECAKEGH@NumberOfVideoPages?$AA@
CONST	SEGMENT
??_C@_0BD@DECAKEGH@NumberOfVideoPages?$AA@ DB 'NumberOfVideoPages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JCFFEIIM@NumberOfColorPlanes?$DL?$AA@
CONST	SEGMENT
??_C@_0BF@JCFFEIIM@NumberOfColorPlanes?$DL?$AA@ DB 'NumberOfColorPlanes;', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PEHKLIOA@ColorTableEntries?$AA@
CONST	SEGMENT
??_C@_0BC@PEHKLIOA@ColorTableEntries?$AA@ DB 'ColorTableEntries', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OMEGAAG@VideoProcessor?$AA@
CONST	SEGMENT
??_C@_0P@OMEGAAG@VideoProcessor?$AA@ DB 'VideoProcessor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MAGAOPPB@VideoModeDescription?$AA@
CONST	SEGMENT
??_C@_0BF@MAGAOPPB@VideoModeDescription?$AA@ DB 'VideoModeDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LIEAKBEG@VideoMode?$AA@
CONST	SEGMENT
??_C@_09LIEAKBEG@VideoMode?$AA@ DB 'VideoMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@COFLHODM@VideoMemoryType?$AA@
CONST	SEGMENT
??_C@_0BA@COFLHODM@VideoMemoryType?$AA@ DB 'VideoMemoryType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GFHBBCIN@VideoArchitecture?$AA@
CONST	SEGMENT
??_C@_0BC@GFHBBCIN@VideoArchitecture?$AA@ DB 'VideoArchitecture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BKBIMFEG@CurrentNumberOfRows?$AA@
CONST	SEGMENT
??_C@_0BE@BKBIMFEG@CurrentNumberOfRows?$AA@ DB 'CurrentNumberOfRows', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IKBJPLJ@CurrentNumberOfColumns?$AA@
CONST	SEGMENT
??_C@_0BH@IKBJPLJ@CurrentNumberOfColumns?$AA@ DB 'CurrentNumberOfColumns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CDIHNLEF@CurrentScanMode?$AA@
CONST	SEGMENT
??_C@_0BA@CDIHNLEF@CurrentScanMode?$AA@ DB 'CurrentScanMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JKLPINND@CurrentRefreshRate?$AA@
CONST	SEGMENT
??_C@_0BD@JKLPINND@CurrentRefreshRate?$AA@ DB 'CurrentRefreshRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NCBMILGB@CurrentNumberOfColors?$AA@
CONST	SEGMENT
??_C@_0BG@NCBMILGB@CurrentNumberOfColors?$AA@ DB 'CurrentNumberOfColors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LFIAOAGD@CurrentVerticalResolution?$AA@
CONST	SEGMENT
??_C@_0BK@LFIAOAGD@CurrentVerticalResolution?$AA@ DB 'CurrentVerticalReso'
	DB	'lution', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OFHJCNEB@CurrentHorizontalResolution?$AA@
CONST	SEGMENT
??_C@_0BM@OFHJCNEB@CurrentHorizontalResolution?$AA@ DB 'CurrentHorizontal'
	DB	'Resolution', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FEOPMOOE@CurrentBitsPerPixel?$AA@
CONST	SEGMENT
??_C@_0BE@FEOPMOOE@CurrentBitsPerPixel?$AA@ DB 'CurrentBitsPerPixel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
CONST	SEGMENT
??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@ DB 'Win32_VideoController', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
CONST	SEGMENT
??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@ DB 'Win32_USBController', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GHJKPLAG@DMABufferSize?$AA@
CONST	SEGMENT
??_C@_0O@GHJKPLAG@DMABufferSize?$AA@ DB 'DMABufferSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GILLNKKD@MPU401Address?$AA@
CONST	SEGMENT
??_C@_0O@GILLNKKD@MPU401Address?$AA@ DB 'MPU401Address', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MNPNDAHP@ProductName?$AA@
CONST	SEGMENT
??_C@_0M@MNPNDAHP@ProductName?$AA@ DB 'ProductName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
CONST	SEGMENT
??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@ DB 'Win32_SoundDevice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LCMFOHKE@XOnXOffOutFlowControl?$AA@
CONST	SEGMENT
??_C@_0BG@LCMFOHKE@XOnXOffOutFlowControl?$AA@ DB 'XOnXOffOutFlowControl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FMELJHC@XOnXOffInFlowControl?$AA@
CONST	SEGMENT
??_C@_0BF@FMELJHC@XOnXOffInFlowControl?$AA@ DB 'XOnXOffInFlowControl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OHGPOKOF@XOnXMitThreshold?$AA@
CONST	SEGMENT
??_C@_0BB@OHGPOKOF@XOnXMitThreshold?$AA@ DB 'XOnXMitThreshold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMKFMCPA@XOnCharacter?$AA@
CONST	SEGMENT
??_C@_0N@LMKFMCPA@XOnCharacter?$AA@ DB 'XOnCharacter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PIOKAKHD@XOffXMitThreshold?$AA@
CONST	SEGMENT
??_C@_0BC@PIOKAKHD@XOffXMitThreshold?$AA@ DB 'XOffXMitThreshold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IABHIILA@XOffCharacter?$AA@
CONST	SEGMENT
??_C@_0O@IABHIILA@XOffCharacter?$AA@ DB 'XOffCharacter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMMJGBDB@SettingID?$AA@
CONST	SEGMENT
??_C@_09CMMJGBDB@SettingID?$AA@ DB 'SettingID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HDDKDMKB@RTSFlowControlType?$AA@
CONST	SEGMENT
??_C@_0BD@HDDKDMKB@RTSFlowControlType?$AA@ DB 'RTSFlowControlType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KACACAPH@ParityCheckEnabled?$AA@
CONST	SEGMENT
??_C@_0BD@KACACAPH@ParityCheckEnabled?$AA@ DB 'ParityCheckEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ELDMBJ@EventCharacter?$AA@
CONST	SEGMENT
??_C@_0P@ELDMBJ@EventCharacter?$AA@ DB 'EventCharacter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MDNCEDD@ErrorReplacementEnabled?$AA@
CONST	SEGMENT
??_C@_0BI@MDNCEDD@ErrorReplacementEnabled?$AA@ DB 'ErrorReplacementEnable'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HECEEKCN@ErrorReplaceCharacter?$AA@
CONST	SEGMENT
??_C@_0BG@HECEEKCN@ErrorReplaceCharacter?$AA@ DB 'ErrorReplaceCharacter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HDNBGKMG@EOFCharacter?$AA@
CONST	SEGMENT
??_C@_0N@HDNBGKMG@EOFCharacter?$AA@ DB 'EOFCharacter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKACMHPL@DTRFlowControlType?$AA@
CONST	SEGMENT
??_C@_0BD@HKACMHPL@DTRFlowControlType?$AA@ DB 'DTRFlowControlType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FDLAEJMA@DSRSensitivity?$AA@
CONST	SEGMENT
??_C@_0P@FDLAEJMA@DSRSensitivity?$AA@ DB 'DSRSensitivity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HDHNIDHE@DSROutflowControl?$AA@
CONST	SEGMENT
??_C@_0BC@HDHNIDHE@DSROutflowControl?$AA@ DB 'DSROutflowControl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LNMOOKGE@DiscardNULLBytes?$AA@
CONST	SEGMENT
??_C@_0BB@LNMOOKGE@DiscardNULLBytes?$AA@ DB 'DiscardNULLBytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BMKJGEMK@CTSOutflowControl?$AA@
CONST	SEGMENT
??_C@_0BC@BMKJGEMK@CTSOutflowControl?$AA@ DB 'CTSOutflowControl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MCBMPIAJ@ContinueXMitOnXOff?$AA@
CONST	SEGMENT
??_C@_0BD@MCBMPIAJ@ContinueXMitOnXOff?$AA@ DB 'ContinueXMitOnXOff', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OGEDEEBA@BinaryModeEnabled?$AA@
CONST	SEGMENT
??_C@_0BC@OGEDEEBA@BinaryModeEnabled?$AA@ DB 'BinaryModeEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DFLLPBBO@AbortReadWriteOnError?$AA@
CONST	SEGMENT
??_C@_0BG@DFLLPBBO@AbortReadWriteOnError?$AA@ DB 'AbortReadWriteOnError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OICOCAHF@IsBusy?$AA@
CONST	SEGMENT
??_C@_06OICOCAHF@IsBusy?$AA@ DB 'IsBusy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DPBIGBFM@StopBits?$AA@
CONST	SEGMENT
??_C@_08DPBIGBFM@StopBits?$AA@ DB 'StopBits', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OKNHBMNM@Parity?$AA@
CONST	SEGMENT
??_C@_06OKNHBMNM@Parity?$AA@ DB 'Parity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PAFDOFKP@BitsPerByte?$AA@
CONST	SEGMENT
??_C@_0M@PAFDOFKP@BitsPerByte?$AA@ DB 'BitsPerByte', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCNNIBJG@BaudRate?$AA@
CONST	SEGMENT
??_C@_08FCNNIBJG@BaudRate?$AA@ DB 'BaudRate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
CONST	SEGMENT
??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@ DB 'Win32_SerialPor'
	DB	'tConfiguration', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GDEAPHBI@SupportsXOnXOffSet?$AA@
CONST	SEGMENT
??_C@_0BD@GDEAPHBI@SupportsXOnXOffSet?$AA@ DB 'SupportsXOnXOffSet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OPAGJFHI@SupportsXOnXOff?$AA@
CONST	SEGMENT
??_C@_0BA@OPAGJFHI@SupportsXOnXOff?$AA@ DB 'SupportsXOnXOff', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GGENNCGN@SupportsSpecialCharacters?$AA@
CONST	SEGMENT
??_C@_0BK@GGENNCGN@SupportsSpecialCharacters?$AA@ DB 'SupportsSpecialChar'
	DB	'acters', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NGNOBJLG@SupportsRTSCTS?$AA@
CONST	SEGMENT
??_C@_0P@NGNOBJLG@SupportsRTSCTS?$AA@ DB 'SupportsRTSCTS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBIJPBEE@SupportsRLSD?$AA@
CONST	SEGMENT
??_C@_0N@GBIJPBEE@SupportsRLSD?$AA@ DB 'SupportsRLSD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JCPAAGPO@SupportsParityCheck?$AA@
CONST	SEGMENT
??_C@_0BE@JCPAAGPO@SupportsParityCheck?$AA@ DB 'SupportsParityCheck', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JOEIKOLI@SupportsIntTimeouts?$AA@
CONST	SEGMENT
??_C@_0BE@JOEIKOLI@SupportsIntTimeouts?$AA@ DB 'SupportsIntTimeouts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LJLLOLPH@SupportsElapsedTimeouts?$AA@
CONST	SEGMENT
??_C@_0BI@LJLLOLPH@SupportsElapsedTimeouts?$AA@ DB 'SupportsElapsedTimeou'
	DB	'ts', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GODDIGIP@SupportsDTRDSR?$AA@
CONST	SEGMENT
??_C@_0P@GODDIGIP@SupportsDTRDSR?$AA@ DB 'SupportsDTRDSR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EEEMKCBH@Supports16BitMode?$AA@
CONST	SEGMENT
??_C@_0BC@EEEMKCBH@Supports16BitMode?$AA@ DB 'Supports16BitMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPIEMKMF@SettableStopBits?$AA@
CONST	SEGMENT
??_C@_0BB@EPIEMKMF@SettableStopBits?$AA@ DB 'SettableStopBits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OBGEBGNG@SettableRLSD?$AA@
CONST	SEGMENT
??_C@_0N@OBGEBGNG@SettableRLSD?$AA@ DB 'SettableRLSD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NMPLPPIE@SettableParityCheck?$AA@
CONST	SEGMENT
??_C@_0BE@NMPLPPIE@SettableParityCheck?$AA@ DB 'SettableParityCheck', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MOHECAJ@SettableParity?$AA@
CONST	SEGMENT
??_C@_0P@MOHECAJ@SettableParity?$AA@ DB 'SettableParity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FMKJPGFK@SettableFlowControl?$AA@
CONST	SEGMENT
??_C@_0BE@FMKJPGFK@SettableFlowControl?$AA@ DB 'SettableFlowControl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BOCNMDDI@SettableDataBits?$AA@
CONST	SEGMENT
??_C@_0BB@BOCNMDDI@SettableDataBits?$AA@ DB 'SettableDataBits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CCEBCKAP@SettableBaudRate?$AA@
CONST	SEGMENT
??_C@_0BB@CCEBCKAP@SettableBaudRate?$AA@ DB 'SettableBaudRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NCMHEECO@OSAutoDiscovered?$AA@
CONST	SEGMENT
??_C@_0BB@NCMHEECO@OSAutoDiscovered?$AA@ DB 'OSAutoDiscovered', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EAKFLPF@MaximumOutputBufferSize?$AA@
CONST	SEGMENT
??_C@_0BI@EAKFLPF@MaximumOutputBufferSize?$AA@ DB 'MaximumOutputBufferSiz'
	DB	'e', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PKAPBGLB@MaximumInputBufferSize?$AA@
CONST	SEGMENT
??_C@_0BH@PKAPBGLB@MaximumInputBufferSize?$AA@ DB 'MaximumInputBufferSize'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06JCOMDNII@Binary?$AA@
CONST	SEGMENT
??_C@_06JCOMDNII@Binary?$AA@ DB 'Binary', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KFNBCBNP@ProviderType?$AA@
CONST	SEGMENT
??_C@_0N@KFNBCBNP@ProviderType?$AA@ DB 'ProviderType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BFAJGJNN@MaxBaudRate?$AA@
CONST	SEGMENT
??_C@_0M@BFAJGJNN@MaxBaudRate?$AA@ DB 'MaxBaudRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
CONST	SEGMENT
??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@ DB 'Win32_SerialPort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OGNJDJGP@ProtectionManagement?$AA@
CONST	SEGMENT
??_C@_0BF@OGNJDJGP@ProtectionManagement?$AA@ DB 'ProtectionManagement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IDEAMGMB@MaxTransferRate?$AA@
CONST	SEGMENT
??_C@_0BA@IDEAMGMB@MaxTransferRate?$AA@ DB 'MaxTransferRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OLJPFNHL@MaxDataWidth?$AA@
CONST	SEGMENT
??_C@_0N@OLJPFNHL@MaxDataWidth?$AA@ DB 'MaxDataWidth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05FNNGFGLF@Index?$AA@
CONST	SEGMENT
??_C@_05FNNGFGLF@Index?$AA@ DB 'Index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DJCHLIFB@DeviceMap?$AA@
CONST	SEGMENT
??_C@_09DJCHLIFB@DeviceMap?$AA@ DB 'DeviceMap', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LPBNFPJD@ControllerTimeouts?$AA@
CONST	SEGMENT
??_C@_0BD@LPBNFPJD@ControllerTimeouts?$AA@ DB 'ControllerTimeouts', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJODOJJC@HardwareVersion?$AA@
CONST	SEGMENT
??_C@_0BA@BJODOJJC@HardwareVersion?$AA@ DB 'HardwareVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJBCKAGE@DriverName?$AA@
CONST	SEGMENT
??_C@_0L@DJBCKAGE@DriverName?$AA@ DB 'DriverName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
CONST	SEGMENT
??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@ DB 'Win32_SCSIController', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DEJHGOJI@VoltageCaps?$AA@
CONST	SEGMENT
??_C@_0M@DEJHGOJI@VoltageCaps?$AA@ DB 'VoltageCaps', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KHACBBMN@UpgradeMethod?$AA@
CONST	SEGMENT
??_C@_0O@KHACBBMN@UpgradeMethod?$AA@ DB 'UpgradeMethod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HJBCPKNB@UniqueId?$AA@
CONST	SEGMENT
??_C@_08HJBCPKNB@UniqueId?$AA@ DB 'UniqueId', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HPJGCEAH@Stepping?$AA@
CONST	SEGMENT
??_C@_08HPJGCEAH@Stepping?$AA@ DB 'Stepping', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GCIFEBIL@SocketDesignation?$AA@
CONST	SEGMENT
??_C@_0BC@GCIFEBIL@SocketDesignation?$AA@ DB 'SocketDesignation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBAMNOLK@Role?$AA@
CONST	SEGMENT
??_C@_04EBAMNOLK@Role?$AA@ DB 'Role', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DNLDHPFP@Revision?$AA@
CONST	SEGMENT
??_C@_08DNLDHPFP@Revision?$AA@ DB 'Revision', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DAODMABE@ProcessorType?$AA@
CONST	SEGMENT
??_C@_0O@DAODMABE@ProcessorType?$AA@ DB 'ProcessorType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHKOOBFD@ProcessorId?$AA@
CONST	SEGMENT
??_C@_0M@DHKOOBFD@ProcessorId?$AA@ DB 'ProcessorId', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LLAHKBOJ@OtherFamilyDescription?$AA@
CONST	SEGMENT
??_C@_0BH@LLAHKBOJ@OtherFamilyDescription?$AA@ DB 'OtherFamilyDescription'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HLLBIGKP@LoadPercentage?$AA@
CONST	SEGMENT
??_C@_0P@HLLBIGKP@LoadPercentage?$AA@ DB 'LoadPercentage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KOHFLOFG@Level?$AA@
CONST	SEGMENT
??_C@_05KOHFLOFG@Level?$AA@ DB 'Level', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JALCBBMK@ExtClock?$AA@
CONST	SEGMENT
??_C@_08JALCBBMK@ExtClock?$AA@ DB 'ExtClock', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KNGBBIL@DataWidth?$AA@
CONST	SEGMENT
??_C@_09KNGBBIL@DataWidth?$AA@ DB 'DataWidth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IHAGOHLC@CurrentVoltage?$AA@
CONST	SEGMENT
??_C@_0P@IHAGOHLC@CurrentVoltage?$AA@ DB 'CurrentVoltage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JFANJPME@CurrentClockSpeed?$AA@
CONST	SEGMENT
??_C@_0BC@JFANJPME@CurrentClockSpeed?$AA@ DB 'CurrentClockSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OJECCCEO@CpuStatus?$AA@
CONST	SEGMENT
??_C@_09OJECCCEO@CpuStatus?$AA@ DB 'CpuStatus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IPOPOCBB@AddressWidth?$AA@
CONST	SEGMENT
??_C@_0N@IPOPOCBB@AddressWidth?$AA@ DB 'AddressWidth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EKFHDKJL@L3CacheSpeed?$AA@
CONST	SEGMENT
??_C@_0N@EKFHDKJL@L3CacheSpeed?$AA@ DB 'L3CacheSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PICLIDHN@L3CacheSize?$AA@
CONST	SEGMENT
??_C@_0M@PICLIDHN@L3CacheSize?$AA@ DB 'L3CacheSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBPCHGPE@L2CacheSpeed?$AA@
CONST	SEGMENT
??_C@_0N@NBPCHGPE@L2CacheSpeed?$AA@ DB 'L2CacheSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DJKFFMLN@L2CacheSize?$AA@
CONST	SEGMENT
??_C@_0M@DJKFFMLN@L2CacheSize?$AA@ DB 'L2CacheSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BOFMEHLD@Family?$AA@
CONST	SEGMENT
??_C@_06BOFMEHLD@Family?$AA@ DB 'Family', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OBFFNDNO@NumberOfLogicalProcessors?$AA@
CONST	SEGMENT
??_C@_0BK@OBFFNDNO@NumberOfLogicalProcessors?$AA@ DB 'NumberOfLogicalProc'
	DB	'essors', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MJOHKFKO@MaxClockSpeed?$AA@
CONST	SEGMENT
??_C@_0O@MJOHKFKO@MaxClockSpeed?$AA@ DB 'MaxClockSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FFCOPHIP@NumberOfCores?$AA@
CONST	SEGMENT
??_C@_0O@FFCOPHIP@NumberOfCores?$AA@ DB 'NumberOfCores', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDJPNJNL@Architecture?$AA@
CONST	SEGMENT
??_C@_0N@MDJPNJNL@Architecture?$AA@ DB 'Architecture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
CONST	SEGMENT
??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@ DB 'Win32_Processor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IAGOJBFI@StartMode?$AA@
CONST	SEGMENT
??_C@_09IAGOJBFI@StartMode?$AA@ DB 'StartMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LCDJNPHI@Started?$AA@
CONST	SEGMENT
??_C@_07LCDJNPHI@Started?$AA@ DB 'Started', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ENMIEFDD@OEMUrl?$AA@
CONST	SEGMENT
??_C@_06ENMIEFDD@OEMUrl?$AA@ DB 'OEMUrl', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NBBGILI@DependentFiles?$AA@
CONST	SEGMENT
??_C@_0P@NBBGILI@DependentFiles?$AA@ DB 'DependentFiles', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GLFJHHAH@HelpFile?$AA@
CONST	SEGMENT
??_C@_08GLFJHHAH@HelpFile?$AA@ DB 'HelpFile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JFPHJDHA@InfName?$AA@
CONST	SEGMENT
??_C@_07JFPHJDHA@InfName?$AA@ DB 'InfName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MLDLGMGB@SupportedPlatform?$AA@
CONST	SEGMENT
??_C@_0BC@MLDLGMGB@SupportedPlatform?$AA@ DB 'SupportedPlatform', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PJPGFADP@MonitorName?$AA@
CONST	SEGMENT
??_C@_0M@PJPGFADP@MonitorName?$AA@ DB 'MonitorName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JFJMIJHO@DataFile?$AA@
CONST	SEGMENT
??_C@_08JFJMIJHO@DataFile?$AA@ DB 'DataFile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LKBOBDBI@ConfigFile?$AA@
CONST	SEGMENT
??_C@_0L@LKBOBDBI@ConfigFile?$AA@ DB 'ConfigFile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CKKAOMLK@FilePath?$AA@
CONST	SEGMENT
??_C@_08CKKAOMLK@FilePath?$AA@ DB 'FilePath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EAJLGPDF@DriverPath?$AA@
CONST	SEGMENT
??_C@_0L@EAJLGPDF@DriverPath?$AA@ DB 'DriverPath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PFCCEOEE@DefaultDataType?$AA@
CONST	SEGMENT
??_C@_0BA@PFCCEOEE@DefaultDataType?$AA@ DB 'DefaultDataType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
CONST	SEGMENT
??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@ DB 'Win32_PrinterDriver', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NNNCCOHC@Alias?$AA@
CONST	SEGMENT
??_C@_05NNNCCOHC@Alias?$AA@ DB 'Alias', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JJNGNMBL@Win32_PortResource?$AA@
CONST	SEGMENT
??_C@_0BD@JJNGNMBL@Win32_PortResource?$AA@ DB 'Win32_PortResource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KNNOFNF@ConnectorPinout?$AA@
CONST	SEGMENT
??_C@_0BA@KNNOFNF@ConnectorPinout?$AA@ DB 'ConnectorPinout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CPCPFFAH@ConnectorType?$AA@
CONST	SEGMENT
??_C@_0O@CPCPFFAH@ConnectorType?$AA@ DB 'ConnectorType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BOPEOHEK@PortType?$AA@
CONST	SEGMENT
??_C@_08BOPEOHEK@PortType?$AA@ DB 'PortType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JBGCGAG@InternalReferenceDesignator?$AA@
CONST	SEGMENT
??_C@_0BM@JBGCGAG@InternalReferenceDesignator?$AA@ DB 'InternalReferenceD'
	DB	'esignator', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OAEDMMAI@ExternalReferenceDesignator?$AA@
CONST	SEGMENT
??_C@_0BM@OAEDMMAI@ExternalReferenceDesignator?$AA@ DB 'ExternalReference'
	DB	'Designator', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
CONST	SEGMENT
??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@ DB 'Win32_PortConnector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MKJLCFN@Synch?$AA@
CONST	SEGMENT
??_C@_05MKJLCFN@Synch?$AA@ DB 'Synch', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NEGJIGMA@SampleRate?$AA@
CONST	SEGMENT
??_C@_0L@NEGJIGMA@SampleRate?$AA@ DB 'SampleRate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KGPBCGJE@Resolution?$AA@
CONST	SEGMENT
??_C@_0L@KGPBCGJE@Resolution?$AA@ DB 'Resolution', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJAHKLJJ@QuadSpeedThreshold?$AA@
CONST	SEGMENT
??_C@_0BD@MJAHKLJJ@QuadSpeedThreshold?$AA@ DB 'QuadSpeedThreshold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KHOEHLLF@InfSection?$AA@
CONST	SEGMENT
??_C@_0L@KHOEHLLF@InfSection?$AA@ DB 'InfSection', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LNGELFEC@InfFileName?$AA@
CONST	SEGMENT
??_C@_0M@LNGELFEC@InfFileName?$AA@ DB 'InfFileName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FLDPHBAC@DoubleSpeedThreshold?$AA@
CONST	SEGMENT
??_C@_0BF@FLDPHBAC@DoubleSpeedThreshold?$AA@ DB 'DoubleSpeedThreshold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DEGCDBKP@Handedness?$AA@
CONST	SEGMENT
??_C@_0L@DEGCDBKP@Handedness?$AA@ DB 'Handedness', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGCCLEJJ@HardwareType?$AA@
CONST	SEGMENT
??_C@_0N@OGCCLEJJ@HardwareType?$AA@ DB 'HardwareType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PLLFIHNG@DeviceInterface?$AA@
CONST	SEGMENT
??_C@_0BA@PLLFIHNG@DeviceInterface?$AA@ DB 'DeviceInterface', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHILAMBM@NumberOfButtons?$AA@
CONST	SEGMENT
??_C@_0BA@EHILAMBM@NumberOfButtons?$AA@ DB 'NumberOfButtons', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HMDMLBLH@PointingType?$AA@
CONST	SEGMENT
??_C@_0N@HMDMLBLH@PointingType?$AA@ DB 'PointingType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
CONST	SEGMENT
??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@ DB 'Win32_PointingDevice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MCPBCGGP@HardwareID?$AA@
CONST	SEGMENT
??_C@_0L@MCPBCGGP@HardwareID?$AA@ DB 'HardwareID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EEHHOFBP@CompatibleID?$AA@
CONST	SEGMENT
??_C@_0N@EEHHOFBP@CompatibleID?$AA@ DB 'CompatibleID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GPHNMGJN@ClassGuid?$AA@
CONST	SEGMENT
??_C@_09GPHNMGJN@ClassGuid?$AA@ DB 'ClassGuid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LMLHFMEG@Service?$AA@
CONST	SEGMENT
??_C@_07LMLHFMEG@Service?$AA@ DB 'Service', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
CONST	SEGMENT
??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@ DB 'Win32_PnPEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
CONST	SEGMENT
??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@ DB 'Win32_PCMCIAController'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07DOAOMMKG@Enabled?$AA@
CONST	SEGMENT
??_C@_07DOAOMMKG@Enabled?$AA@ DB 'Enabled', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PMICFDLL@DeviceType?$AA@
CONST	SEGMENT
??_C@_0L@PMICFDLL@DeviceType?$AA@ DB 'DeviceType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
CONST	SEGMENT
??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@ DB 'Win32_OnBoardDevice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MKKJDBAN@SecondaryBusType?$AA@
CONST	SEGMENT
??_C@_0BB@MKKJDBAN@SecondaryBusType?$AA@ DB 'SecondaryBusType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EJGNFGBG@RevisionNumber?$AA@
CONST	SEGMENT
??_C@_0P@EJGNFGBG@RevisionNumber?$AA@ DB 'RevisionNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GCEIIPJN@PrimaryBusType?$AA@
CONST	SEGMENT
??_C@_0P@GCEIIPJN@PrimaryBusType?$AA@ DB 'PrimaryBusType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
CONST	SEGMENT
??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@ DB 'Win32_MotherboardDevi'
	DB	'ce', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08FJIAHGMM@Password?$AA@
CONST	SEGMENT
??_C@_08FJIAHGMM@Password?$AA@ DB 'Password', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EOCJLAAL@IsLocked?$AA@
CONST	SEGMENT
??_C@_08EOCJLAAL@IsLocked?$AA@ DB 'IsLocked', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DODFNOHG@NumberOfFunctionKeys?$AA@
CONST	SEGMENT
??_C@_0BF@DODFNOHG@NumberOfFunctionKeys?$AA@ DB 'NumberOfFunctionKeys', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KMHOJANB@Layout?$AA@
CONST	SEGMENT
??_C@_06KMHOJANB@Layout?$AA@ DB 'Layout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
CONST	SEGMENT
??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@ DB 'Win32_Keyboard', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BOOCMPNK@Vector?$AA@
CONST	SEGMENT
??_C@_06BOOCMPNK@Vector?$AA@ DB 'Vector', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NKHMGHID@TriggerType?$AA@
CONST	SEGMENT
??_C@_0M@NKHMGHID@TriggerType?$AA@ DB 'TriggerType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NCNNCPPP@TriggerLevel?$AA@
CONST	SEGMENT
??_C@_0N@NCNNCPPP@TriggerLevel?$AA@ DB 'TriggerLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PKFILKGD@Shareable?$AA@
CONST	SEGMENT
??_C@_09PKFILKGD@Shareable?$AA@ DB 'Shareable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
CONST	SEGMENT
??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@ DB 'Win32_IRQResource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
CONST	SEGMENT
??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@ DB 'Win32_InfraredDevice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
CONST	SEGMENT
??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@ DB 'Win32_IDEController', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBOKHICP@ActiveCooling?$AA@
CONST	SEGMENT
??_C@_0O@PBOKHICP@ActiveCooling?$AA@ DB 'ActiveCooling', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
CONST	SEGMENT
??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@ DB 'Win32_HeatPipe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
CONST	SEGMENT
??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@ DB 'Win32_FloppyDrive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
CONST	SEGMENT
??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@ DB 'Win32_FloppyController'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07JENHGIOM@V86_API?$AA@
CONST	SEGMENT
??_C@_07JENHGIOM@V86_API?$AA@ DB 'V86_API', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LEBBIDOP@TargetOperatingSystem?$AA@
CONST	SEGMENT
??_C@_0BG@LEBBIDOP@TargetOperatingSystem?$AA@ DB 'TargetOperatingSystem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CCKMONLJ@ServiceTableSize?$AA@
CONST	SEGMENT
??_C@_0BB@CCKMONLJ@ServiceTableSize?$AA@ DB 'ServiceTableSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CGGMGNDK@PM_API?$AA@
CONST	SEGMENT
??_C@_06CGGMGNDK@PM_API?$AA@ DB 'PM_API', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JOJBKDJN@LanguageEdition?$AA@
CONST	SEGMENT
??_C@_0BA@JOJBKDJN@LanguageEdition?$AA@ DB 'LanguageEdition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IOIHNNJK@DeviceDescriptorBlock?$AA@
CONST	SEGMENT
??_C@_0BG@IOIHNNJK@DeviceDescriptorBlock?$AA@ DB 'DeviceDescriptorBlock', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DFGIDBBA@Control?$AA@
CONST	SEGMENT
??_C@_07DFGIDBBA@Control?$AA@ DB 'Control', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
CONST	SEGMENT
??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@ DB 'Win32_DriverVXD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKOOHOAE@WordMode?$AA@
CONST	SEGMENT
??_C@_08HKOOHOAE@WordMode?$AA@ DB 'WordMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MOIPDDOB@TypeCTiming?$AA@
CONST	SEGMENT
??_C@_0M@MOIPDDOB@TypeCTiming?$AA@ DB 'TypeCTiming', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HFMGHLOP@TransferWidths?$AA@
CONST	SEGMENT
??_C@_0P@HFMGHLOP@TransferWidths?$AA@ DB 'TransferWidths', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HBAKOKJE@MaxTransferSize?$AA@
CONST	SEGMENT
??_C@_0BA@HBAKOKJE@MaxTransferSize?$AA@ DB 'MaxTransferSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BPLPAGKN@ChannelTiming?$AA@
CONST	SEGMENT
??_C@_0O@BPLPAGKN@ChannelTiming?$AA@ DB 'ChannelTiming', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IOOBKHAJ@ByteMode?$AA@
CONST	SEGMENT
??_C@_08IOOBKHAJ@ByteMode?$AA@ DB 'ByteMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LDKFCLB@BurstMode?$AA@
CONST	SEGMENT
??_C@_09LDKFCLB@BurstMode?$AA@ DB 'BurstMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HJPEAMBM@AddressSize?$AA@
CONST	SEGMENT
??_C@_0M@HJPEAMBM@AddressSize?$AA@ DB 'AddressSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PGAIMACF@DMAChannel?$AA@
CONST	SEGMENT
??_C@_0L@PGAIMACF@DMAChannel?$AA@ DB 'DMAChannel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HOKNCALA@Port?$AA@
CONST	SEGMENT
??_C@_04HOKNCALA@Port?$AA@ DB 'Port', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
CONST	SEGMENT
??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@ DB 'Win32_DMAChannel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GFEIEMMN@TransferRate?$AA@
CONST	SEGMENT
??_C@_0N@GFEIEMMN@TransferRate?$AA@ DB 'TransferRate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBKMHHBE@Size?$AA@
CONST	SEGMENT
??_C@_04EBKMHHBE@Size?$AA@ DB 'Size', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BGGJIJCI@SCSITargetId?$AA@
CONST	SEGMENT
??_C@_0N@BGGJIJCI@SCSITargetId?$AA@ DB 'SCSITargetId', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IICBNDDA@SCSIPort?$AA@
CONST	SEGMENT
??_C@_08IICBNDDA@SCSIPort?$AA@ DB 'SCSIPort', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FGFDLPLK@SCSILogicalUnit?$AA@
CONST	SEGMENT
??_C@_0BA@FGFDLPLK@SCSILogicalUnit?$AA@ DB 'SCSILogicalUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07IMFLOLAO@SCSIBus?$AA@
CONST	SEGMENT
??_C@_07IMFLOLAO@SCSIBus?$AA@ DB 'SCSIBus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MEKHAACN@RevisionLevel?$AA@
CONST	SEGMENT
??_C@_0O@MEKHAACN@RevisionLevel?$AA@ DB 'RevisionLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@COPKOGMD@NumberOfMediaSupported?$AA@
CONST	SEGMENT
??_C@_0BH@COPKOGMD@NumberOfMediaSupported?$AA@ DB 'NumberOfMediaSupported'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IIJMNCFJ@NeedsCleaning?$AA@
CONST	SEGMENT
??_C@_0O@IIJMNCFJ@NeedsCleaning?$AA@ DB 'NeedsCleaning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DELMGCCC@MinBlockSize?$AA@
CONST	SEGMENT
??_C@_0N@DELMGCCC@MinBlockSize?$AA@ DB 'MinBlockSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FCFAAAMD@MfrAssignedRevisionLevel?$AA@
CONST	SEGMENT
??_C@_0BJ@FCFAAAMD@MfrAssignedRevisionLevel?$AA@ DB 'MfrAssignedRevisionL'
	DB	'evel', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPDNNFFF@MediaType?$AA@
CONST	SEGMENT
??_C@_09HPDNNFFF@MediaType?$AA@ DB 'MediaType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BKHKLNGH@MediaLoaded?$AA@
CONST	SEGMENT
??_C@_0M@BKHKLNGH@MediaLoaded?$AA@ DB 'MediaLoaded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HBNKJHPM@MaxMediaSize?$AA@
CONST	SEGMENT
??_C@_0N@HBNKJHPM@MaxMediaSize?$AA@ DB 'MaxMediaSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKGMNPDK@MaximumComponentLength?$AA@
CONST	SEGMENT
??_C@_0BH@GKGMNPDK@MaximumComponentLength?$AA@ DB 'MaximumComponentLength'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HEPDBKFE@MaxBlockSize?$AA@
CONST	SEGMENT
??_C@_0N@HEPDBKFE@MaxBlockSize?$AA@ DB 'MaxBlockSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JDDJOAMF@FileSystemFlagsEx?$AA@
CONST	SEGMENT
??_C@_0BC@JDDJOAMF@FileSystemFlagsEx?$AA@ DB 'FileSystemFlagsEx', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KMBBNBII@FileSystemFlags?$AA@
CONST	SEGMENT
??_C@_0BA@KMBBNBII@FileSystemFlags?$AA@ DB 'FileSystemFlags', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
CONST	SEGMENT
??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@ DB 'ErrorMethodology', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKGKOHLF@DriveIntegrity?$AA@
CONST	SEGMENT
??_C@_0P@HKGKOHLF@DriveIntegrity?$AA@ DB 'DriveIntegrity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GHOHONOE@DefaultBlockSize?$AA@
CONST	SEGMENT
??_C@_0BB@GHOHONOE@DefaultBlockSize?$AA@ DB 'DefaultBlockSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@
CONST	SEGMENT
??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@ DB 'CompressionMethod', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
CONST	SEGMENT
??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@ DB 'CapabilityDescriptions'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNJCOOAL@Capabilities?$AA@
CONST	SEGMENT
??_C@_0N@FNJCOOAL@Capabilities?$AA@ DB 'Capabilities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KNELKJMD@VolumeSerialNumber?$AA@
CONST	SEGMENT
??_C@_0BD@KNELKJMD@VolumeSerialNumber?$AA@ DB 'VolumeSerialNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PEPMOJNO@VolumeName?$AA@
CONST	SEGMENT
??_C@_0L@PEPMOJNO@VolumeName?$AA@ DB 'VolumeName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FHDOJGAA@Drive?$AA@
CONST	SEGMENT
??_C@_05FHDOJGAA@Drive?$AA@ DB 'Drive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
CONST	SEGMENT
??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@ DB 'Win32_CDROMDrive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FFFMBEEK@BusType?$AA@
CONST	SEGMENT
??_C@_07FFFMBEEK@BusType?$AA@ DB 'BusType', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KNDINCOD@BusNum?$AA@
CONST	SEGMENT
??_C@_06KNDINCOD@BusNum?$AA@ DB 'BusNum', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPFDNOIF@Win32_Bus?$AA@
CONST	SEGMENT
??_C@_09HPFDNOIF@Win32_Bus?$AA@ DB 'Win32_Bus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GFDCFGAP@SoftwareElementState?$AA@
CONST	SEGMENT
??_C@_0BF@GFDCFGAP@SoftwareElementState?$AA@ DB 'SoftwareElementState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MBHIKAHO@SoftwareElementID?$AA@
CONST	SEGMENT
??_C@_0BC@MBHIKAHO@SoftwareElementID?$AA@ DB 'SoftwareElementID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BHMENNOL@SMBIOSPresent?$AA@
CONST	SEGMENT
??_C@_0O@BHMENNOL@SMBIOSPresent?$AA@ DB 'SMBIOSPresent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NBGOPAJG@SMBIOSMinorVersion?$AA@
CONST	SEGMENT
??_C@_0BD@NBGOPAJG@SMBIOSMinorVersion?$AA@ DB 'SMBIOSMinorVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GHLLPFOK@SMBIOSMajorVersion?$AA@
CONST	SEGMENT
??_C@_0BD@GHLLPFOK@SMBIOSMajorVersion?$AA@ DB 'SMBIOSMajorVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GDJFCIN@SMBIOSBIOSVersion?$AA@
CONST	SEGMENT
??_C@_0BC@GDJFCIN@SMBIOSBIOSVersion?$AA@ DB 'SMBIOSBIOSVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FEKFCCJH@ReleaseDate?$AA@
CONST	SEGMENT
??_C@_0M@FEKFCCJH@ReleaseDate?$AA@ DB 'ReleaseDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PLCFCEDN@PrimaryBIOS?$AA@
CONST	SEGMENT
??_C@_0M@PLCFCEDN@PrimaryBIOS?$AA@ DB 'PrimaryBIOS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LMGDODCH@OtherTargetOS?$AA@
CONST	SEGMENT
??_C@_0O@LMGDODCH@OtherTargetOS?$AA@ DB 'OtherTargetOS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OPCNKLIC@ListOfLanguages?$AA@
CONST	SEGMENT
??_C@_0BA@OPCNKLIC@ListOfLanguages?$AA@ DB 'ListOfLanguages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JGHHIKJK@InstallableLanguages?$AA@
CONST	SEGMENT
??_C@_0BF@JGHHIKJK@InstallableLanguages?$AA@ DB 'InstallableLanguages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IAKLNJOL@IdentificationCode?$AA@
CONST	SEGMENT
??_C@_0BD@IAKLNJOL@IdentificationCode?$AA@ DB 'IdentificationCode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAFEEKJE@CurrentLanguage?$AA@
CONST	SEGMENT
??_C@_0BA@LAFEEKJE@CurrentLanguage?$AA@ DB 'CurrentLanguage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FOHBHJJA@CodeSet?$AA@
CONST	SEGMENT
??_C@_07FOHBHJJA@CodeSet?$AA@ DB 'CodeSet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PIEABBJI@BuildNumber?$AA@
CONST	SEGMENT
??_C@_0M@PIEABBJI@BuildNumber?$AA@ DB 'BuildNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JNJNMLGA@BIOSVersion?$AA@
CONST	SEGMENT
??_C@_0M@JNJNMLGA@BIOSVersion?$AA@ DB 'BIOSVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DHLHFABD@BiosCharacteristics?$AA@
CONST	SEGMENT
??_C@_0BE@DHLHFABD@BiosCharacteristics?$AA@ DB 'BiosCharacteristics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
CONST	SEGMENT
??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@ DB 'Win32_BIOS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IIEJDIAD@SmartBatteryVersion?$AA@
CONST	SEGMENT
??_C@_0BE@IIEJDIAD@SmartBatteryVersion?$AA@ DB 'SmartBatteryVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KENPOHHF@MaxRechargeTime?$AA@
CONST	SEGMENT
??_C@_0BA@KENPOHHF@MaxRechargeTime?$AA@ DB 'MaxRechargeTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HADPLBCE@FullChargeCapacity?$AA@
CONST	SEGMENT
??_C@_0BD@HADPLBCE@FullChargeCapacity?$AA@ DB 'FullChargeCapacity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDGBNILM@ExpectedLife?$AA@
CONST	SEGMENT
??_C@_0N@DDGBNILM@ExpectedLife?$AA@ DB 'ExpectedLife', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NEEKJBPN@ExpectedBatteryLife?$AA@
CONST	SEGMENT
??_C@_0BE@NEEKJBPN@ExpectedBatteryLife?$AA@ DB 'ExpectedBatteryLife', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NPKJIND@EstimatedRunTime?$AA@
CONST	SEGMENT
??_C@_0BB@NPKJIND@EstimatedRunTime?$AA@ DB 'EstimatedRunTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CDCEHMEP@EstimatedChargeRemaining?$AA@
CONST	SEGMENT
??_C@_0BJ@CDCEHMEP@EstimatedChargeRemaining?$AA@ DB 'EstimatedChargeRemai'
	DB	'ning', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBABLEFL@DesignVoltage?$AA@
CONST	SEGMENT
??_C@_0O@PBABLEFL@DesignVoltage?$AA@ DB 'DesignVoltage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IFPGNGPN@DesignCapacity?$AA@
CONST	SEGMENT
??_C@_0P@IFPGNGPN@DesignCapacity?$AA@ DB 'DesignCapacity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CAHFAGKL@Chemistry?$AA@
CONST	SEGMENT
??_C@_09CAHFAGKL@Chemistry?$AA@ DB 'Chemistry', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HNKJKBND@BatteryRechargeTime?$AA@
CONST	SEGMENT
??_C@_0BE@HNKJKBND@BatteryRechargeTime?$AA@ DB 'BatteryRechargeTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HMDCOCCC@TimeToFullCharge?$AA@
CONST	SEGMENT
??_C@_0BB@HMDCOCCC@TimeToFullCharge?$AA@ DB 'TimeToFullCharge', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IKADLBCG@TimeOnBattery?$AA@
CONST	SEGMENT
??_C@_0O@IKADLBCG@TimeOnBattery?$AA@ DB 'TimeOnBattery', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PKGMNGNM@BatteryStatus?$AA@
CONST	SEGMENT
??_C@_0O@PKGMNGNM@BatteryStatus?$AA@ DB 'BatteryStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CLAKILND@Win32_Battery?$AA@
CONST	SEGMENT
??_C@_0O@CLAKILND@Win32_Battery?$AA@ DB 'Win32_Battery', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DAJBDDHL@SpecialRequirements?$AA@
CONST	SEGMENT
??_C@_0BE@DAJBDDHL@SpecialRequirements?$AA@ DB 'SpecialRequirements', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NLNCHAIH@SlotLayout?$AA@
CONST	SEGMENT
??_C@_0L@NLNCHAIH@SlotLayout?$AA@ DB 'SlotLayout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03LMAAELJP@SKU?$AA@
CONST	SEGMENT
??_C@_03LMAAELJP@SKU?$AA@ DB 'SKU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FPJJBBNM@SerialNumber?$AA@
CONST	SEGMENT
??_C@_0N@FPJJBBNM@SerialNumber?$AA@ DB 'SerialNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KNNEFNEE@RequiresDaughterBoard?$AA@
CONST	SEGMENT
??_C@_0BG@KNNEFNEE@RequiresDaughterBoard?$AA@ DB 'RequiresDaughterBoard', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NLNEBFOD@RequirementsDescription?$AA@
CONST	SEGMENT
??_C@_0BI@NLNEBFOD@RequirementsDescription?$AA@ DB 'RequirementsDescripti'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KLOLJEDG@Replaceable?$AA@
CONST	SEGMENT
??_C@_0M@KLOLJEDG@Replaceable?$AA@ DB 'Replaceable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DADBKOHO@Removable?$AA@
CONST	SEGMENT
??_C@_09DADBKOHO@Removable?$AA@ DB 'Removable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HKGEBMAI@PoweredOn?$AA@
CONST	SEGMENT
??_C@_09HKGEBMAI@PoweredOn?$AA@ DB 'PoweredOn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MIOPIENN@PartNumber?$AA@
CONST	SEGMENT
??_C@_0L@MIOPIENN@PartNumber?$AA@ DB 'PartNumber', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
CONST	SEGMENT
??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@ DB 'OtherIdentifyingInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FCOIALPI@HotSwappable?$AA@
CONST	SEGMENT
??_C@_0N@FCOIALPI@HotSwappable?$AA@ DB 'HotSwappable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCJNCHMP@HostingBoard?$AA@
CONST	SEGMENT
??_C@_0N@CCJNCHMP@HostingBoard?$AA@ DB 'HostingBoard', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IBAMDCFI@Width?$AA@
CONST	SEGMENT
??_C@_05IBAMDCFI@Width?$AA@ DB 'Width', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ODJMJFLN@Weight?$AA@
CONST	SEGMENT
??_C@_06ODJMJFLN@Weight?$AA@ DB 'Weight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HCAKHJJK@Height?$AA@
CONST	SEGMENT
??_C@_06HCAKHJJK@Height?$AA@ DB 'Height', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BOMFGPKE@Depth?$AA@
CONST	SEGMENT
??_C@_05BOMFGPKE@Depth?$AA@ DB 'Depth', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLLHAKAI@ConfigOptions?$AA@
CONST	SEGMENT
??_C@_0O@GLLHAKAI@ConfigOptions?$AA@ DB 'ConfigOptions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGFJPNPN@Version?$AA@
CONST	SEGMENT
??_C@_07NGFJPNPN@Version?$AA@ DB 'Version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NFIJOKEG@Model?$AA@
CONST	SEGMENT
??_C@_05NFIJOKEG@Model?$AA@ DB 'Model', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HMDPOHHF@Product?$AA@
CONST	SEGMENT
??_C@_07HMDPOHHF@Product?$AA@ DB 'Product', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PJHNOEGB@Tag?$AA@
CONST	SEGMENT
??_C@_03PJHNOEGB@Tag?$AA@ DB 'Tag', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
CONST	SEGMENT
??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@ DB 'Win32_BaseBoard', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
CONST	SEGMENT
??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@ DB 'TimeOfLastReset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PKEHCAEI@StatusInfo?$AA@
CONST	SEGMENT
??_C@_0L@PKEHCAEI@StatusInfo?$AA@ DB 'StatusInfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PGDKHFME@Status?$AA@
CONST	SEGMENT
??_C@_06PGDKHFME@Status?$AA@ DB 'Status', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
CONST	SEGMENT
??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@ DB 'ProtocolSupported', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
CONST	SEGMENT
??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@ DB 'PowerManagementSuppo'
	DB	'rted', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
CONST	SEGMENT
??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@ DB 'PowerManagementCa'
	DB	'pabilities', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
CONST	SEGMENT
??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@ DB 'MaxNumberControlled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
CONST	SEGMENT
??_C@_0O@NDKHIJAE@LastErrorCode?$AA@ DB 'LastErrorCode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBIJNNJJ@InstallDate?$AA@
CONST	SEGMENT
??_C@_0M@NBIJNNJJ@InstallDate?$AA@ DB 'InstallDate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
CONST	SEGMENT
??_C@_0BB@KIDBLMK@ErrorDescription?$AA@ DB 'ErrorDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
CONST	SEGMENT
??_C@_0N@FJHLDHMG@ErrorCleared?$AA@ DB 'ErrorCleared', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OHKMKKDH@Description?$AA@
CONST	SEGMENT
??_C@_0M@OHKMKKDH@Description?$AA@ DB 'Description', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
CONST	SEGMENT
??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@ DB 'ConfigManagerUserConf'
	DB	'ig', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
CONST	SEGMENT
??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@ DB 'ConfigManagerErrorCode'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07OJKFJLLK@Caption?$AA@
CONST	SEGMENT
??_C@_07OJKFJLLK@Caption?$AA@ DB 'Caption', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MFGCECDI@Availability?$AA@
CONST	SEGMENT
??_C@_0N@MFGCECDI@Availability?$AA@ DB 'Availability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BBNLMPJO@Manufacturer?$AA@
CONST	SEGMENT
??_C@_0N@BBNLMPJO@Manufacturer?$AA@ DB 'Manufacturer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLPEJKOE@DeviceID?$AA@
CONST	SEGMENT
??_C@_08JLPEJKOE@DeviceID?$AA@ DB 'DeviceID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HHJKGII@PNPDeviceID?$AA@
CONST	SEGMENT
??_C@_0M@HHJKGII@PNPDeviceID?$AA@ DB 'PNPDeviceID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT
??_C@_04FABLJDN@Name?$AA@ DB 'Name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
CONST	SEGMENT
??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@ DB 'Win32_1394Controller', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NFANNNEC@UNKNOWN?$AA@
CONST	SEGMENT
??_C@_07NFANNNEC@UNKNOWN?$AA@ DB 'UNKNOWN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HHHILLLH@VIVOtech?$AA@
CONST	SEGMENT
??_C@_08HHHILLLH@VIVOtech?$AA@ DB 'VIVOtech', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCDIFCFP@Vendor?5x1427?$AA@
CONST	SEGMENT
??_C@_0N@CCDIFCFP@Vendor?5x1427?$AA@ DB 'Vendor x1427', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GAEDCENO@Star?5Microsystems?$AA@
CONST	SEGMENT
??_C@_0BC@GAEDCENO@Star?5Microsystems?$AA@ DB 'Star Microsystems', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GGOFANFE@SAGEM?5Denmark?5A?1S?$AA@
CONST	SEGMENT
??_C@_0BC@GGOFANFE@SAGEM?5Denmark?5A?1S?$AA@ DB 'SAGEM Denmark A/S', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EKANAEP@Vendor?5x0BED?$AA@
CONST	SEGMENT
??_C@_0N@EKANAEP@Vendor?5x0BED?$AA@ DB 'Vendor x0BED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OEOECLEK@TMD?5Security?$AA@
CONST	SEGMENT
??_C@_0N@OEOECLEK@TMD?5Security?$AA@ DB 'TMD Security', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LKDAPJIF@Toshiba?5TEC?$AA@
CONST	SEGMENT
??_C@_0M@LKDAPJIF@Toshiba?5TEC?$AA@ DB 'Toshiba TEC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LMLGHGF@Vendor?5x07D1?$AA@
CONST	SEGMENT
??_C@_0N@LMLGHGF@Vendor?5x07D1?$AA@ DB 'Vendor x07D1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BHJPEAKB@Vendor?5x07C0?$AA@
CONST	SEGMENT
??_C@_0N@BHJPEAKB@Vendor?5x07C0?$AA@ DB 'Vendor x07C0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06NMEADBLN@Sankio?$AA@
CONST	SEGMENT
??_C@_06NMEADBLN@Sankio?$AA@ DB 'Sankio', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGJAAGP@Vendor?5x0707?$AA@
CONST	SEGMENT
??_C@_0N@OGJAAGP@Vendor?5x0707?$AA@ DB 'Vendor x0707', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FNFDMCAN@JXT?5Precision?5Electronics?5Techni@
CONST	SEGMENT
??_C@_0CO@FNFDMCAN@JXT?5Precision?5Electronics?5Techni@ DB 'JXT Precision'
	DB	' Electronics Technical Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KCHFFECA@EISST?5Limited?$AA@
CONST	SEGMENT
??_C@_0O@KCHFFECA@EISST?5Limited?$AA@ DB 'EISST Limited', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FPNGMFON@INTELLIGENT?5ENERGY?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BJ@FPNGMFON@INTELLIGENT?5ENERGY?0?5LTD?4?$AA@ DB 'INTELLIGENT ENER'
	DB	'GY, LTD.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@JFHBCIAC@Shandong?5Synthesis?5Electronic?5Te@
CONST	SEGMENT
??_C@_0DD@JFHBCIAC@Shandong?5Synthesis?5Electronic?5Te@ DB 'Shandong Synt'
	DB	'hesis Electronic Technology Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MKIOGMIA@VMC?5Consulting?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BL@MKIOGMIA@VMC?5Consulting?5Corporation?$AA@ DB 'VMC Consulting C'
	DB	'orporation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GLDMKJH@DongGuan?5HYX?5Industrial?5Co?4?0?5Ltd@
CONST	SEGMENT
??_C@_0CC@GLDMKJH@DongGuan?5HYX?5Industrial?5Co?4?0?5Ltd@ DB 'DongGuan HY'
	DB	'X Industrial Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NCIPEGB@RWA?5?$CIHong?5Kong?$CJ?5Limited?$AA@
CONST	SEGMENT
??_C@_0BI@NCIPEGB@RWA?5?$CIHong?5Kong?$CJ?5Limited?$AA@ DB 'RWA (Hong Kon'
	DB	'g) Limited', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JGKEGNMJ@PENTAX?5RICOH?5IMAGING?5COMPANY?0?5LT@
CONST	SEGMENT
??_C@_0CD@JGKEGNMJ@PENTAX?5RICOH?5IMAGING?5COMPANY?0?5LT@ DB 'PENTAX RICO'
	DB	'H IMAGING COMPANY, LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OAMKINAC@Dongguan?5Jinyue?5Electronics?5Co?4?0@
CONST	SEGMENT
??_C@_0CG@OAMKINAC@Dongguan?5Jinyue?5Electronics?5Co?4?0@ DB 'Dongguan Ji'
	DB	'nyue Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IOINFDHJ@Daimler?5AG?$AA@
CONST	SEGMENT
??_C@_0L@IOINFDHJ@Daimler?5AG?$AA@ DB 'Daimler AG', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@EJBKCNKI@Zhe?5Jiang?5Huasheng?5Technology?5Co@
CONST	SEGMENT
??_C@_0CI@EJBKCNKI@Zhe?5Jiang?5Huasheng?5Technology?5Co@ DB 'Zhe Jiang Hu'
	DB	'asheng Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PKAIGMCM@MEGATRON?5Elektronik?5AG?5?$CG?5Co?4?$AA@
CONST	SEGMENT
??_C@_0BN@PKAIGMCM@MEGATRON?5Elektronik?5AG?5?$CG?5Co?4?$AA@ DB 'MEGATRON'
	DB	' Elektronik AG & Co.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06CJJNEMAE@Phorus?$AA@
CONST	SEGMENT
??_C@_06CJJNEMAE@Phorus?$AA@ DB 'Phorus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LHOCOHOF@DongGuan?5Elinke?5Industrial?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@LHOCOHOF@DongGuan?5Elinke?5Industrial?5Co?4?0?5@ DB 'DongGuan E'
	DB	'linke Industrial Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OEFFHHLL@DRS?9RSTA?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0P@OEFFHHLL@DRS?9RSTA?0?5Inc?4?$AA@ DB 'DRS-RSTA, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KJGACBOE@Carmanah?5Signs?$AA@
CONST	SEGMENT
??_C@_0P@KJGACBOE@Carmanah?5Signs?$AA@ DB 'Carmanah Signs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GGHEMJJH@ALGOLTEK?0?5INC?4?$AA@
CONST	SEGMENT
??_C@_0P@GGHEMJJH@ALGOLTEK?0?5INC?4?$AA@ DB 'ALGOLTEK, INC.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GEOEIPEL@RCA?5DA?5AMAZONIA?5LTDA?$AA@
CONST	SEGMENT
??_C@_0BF@GEOEIPEL@RCA?5DA?5AMAZONIA?5LTDA?$AA@ DB 'RCA DA AMAZONIA LTDA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PDKHOHKG@Immedia?5Semiconductor?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@PDKHOHKG@Immedia?5Semiconductor?5Inc?4?$AA@ DB 'Immedia Semicon'
	DB	'ductor Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06JAGNIOHH@INUVIO?$AA@
CONST	SEGMENT
??_C@_06JAGNIOHH@INUVIO?$AA@ DB 'INUVIO', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GPGPDPPI@Optimus?5Semiconductor?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@GPGPDPPI@Optimus?5Semiconductor?5Inc?4?$AA@ DB 'Optimus Semicon'
	DB	'ductor Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPMKAPFK@Infinitegra?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BC@EPMKAPFK@Infinitegra?0?5Inc?4?$AA@ DB 'Infinitegra, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MEBHAOHC@Ningbo?5Jiatang?5Electronic?5Co?4?0?5L@
CONST	SEGMENT
??_C@_0CE@MEBHAOHC@Ningbo?5Jiatang?5Electronic?5Co?4?0?5L@ DB 'Ningbo Jia'
	DB	'tang Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JLNODIAF@Dongguan?5Kowell?5Electronic?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@JLNODIAF@Dongguan?5Kowell?5Electronic?5Co?4?0?5@ DB 'Dongguan K'
	DB	'owell Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MHBLLANG@Weida?5Hi?9Tech?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BI@MHBLLANG@Weida?5Hi?9Tech?5Co?4?0?5Ltd?4?$AA@ DB 'Weida Hi-Tech '
	DB	'Co., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OBILOFPF@AVer?5Information?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BG@OBILOFPF@AVer?5Information?5Inc?4?$AA@ DB 'AVer Information Inc'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DMEHNIKM@DongGuan?5City?5MingJi?5Electronics@
CONST	SEGMENT
??_C@_0CL@DMEHNIKM@DongGuan?5City?5MingJi?5Electronics@ DB 'DongGuan City'
	DB	' MingJi Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CFAALAJE@ALL?5LINK?5CONN?4?5TECHNOLOGY?5CORP?4?$AA@
CONST	SEGMENT
??_C@_0CA@CFAALAJE@ALL?5LINK?5CONN?4?5TECHNOLOGY?5CORP?4?$AA@ DB 'ALL LIN'
	DB	'K CONN. TECHNOLOGY CORP.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NMMKCBIB@DongGuan?5LongTao?5Electronic?5Co?4?0@
CONST	SEGMENT
??_C@_0CG@NMMKCBIB@DongGuan?5LongTao?5Electronic?5Co?4?0@ DB 'DongGuan Lo'
	DB	'ngTao Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KIEOKLMB@INTECH?5ELECTRONICS?5CORP?4?$AA@
CONST	SEGMENT
??_C@_0BJ@KIEOKLMB@INTECH?5ELECTRONICS?5CORP?4?$AA@ DB 'INTECH ELECTRONIC'
	DB	'S CORP.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PLHJJNHE@Norel?5Systems?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BD@PLHJJNHE@Norel?5Systems?5Ltd?4?$AA@ DB 'Norel Systems Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PDILJJBJ@Ubisys?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BM@PDILJJBJ@Ubisys?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Ubisys Tech'
	DB	'nology Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CFLDKGBD@Shenzhen?5Hong?5Junde?5Precision?5Te@
CONST	SEGMENT
??_C@_0DD@CFLDKGBD@Shenzhen?5Hong?5Junde?5Precision?5Te@ DB 'Shenzhen Hon'
	DB	'g Junde Precision Technology Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BNJPCKEF@TOP?5Exactitude?5Industry?5?$CIShenZhe@
CONST	SEGMENT
??_C@_0CN@BNJPCKEF@TOP?5Exactitude?5Industry?5?$CIShenZhe@ DB 'TOP Exacti'
	DB	'tude Industry (ShenZhen) Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JCAFCPHA@SUZHOU?5XINYA?5ELECTRIC?5COMMUNICAT@
CONST	SEGMENT
??_C@_0CO@JCAFCPHA@SUZHOU?5XINYA?5ELECTRIC?5COMMUNICAT@ DB 'SUZHOU XINYA '
	DB	'ELECTRIC COMMUNICATION CO., LTD.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KGBBCJH@Chain?9In?5Electronic?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@KGBBCJH@Chain?9In?5Electronic?5Co?4?0?5Ltd?4?$AA@ DB 'Chain-In '
	DB	'Electronic Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HBLEADPM@GTECH?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@HBLEADPM@GTECH?5Corporation?$AA@ DB 'GTECH Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GHCMHPKC@Seneye?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0M@GHCMHPKC@Seneye?5Ltd?4?$AA@ DB 'Seneye Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@ONHDIMLP@ZEN?5FACTORY?5GROUP?5?$CIASIA?$CJ?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BO@ONHDIMLP@ZEN?5FACTORY?5GROUP?5?$CIASIA?$CJ?5LTD?4?$AA@ DB 'ZEN '
	DB	'FACTORY GROUP (ASIA) LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PGAFDCCK@DDUSB?5Technology?$AA@
CONST	SEGMENT
??_C@_0BB@PGAFDCCK@DDUSB?5Technology?$AA@ DB 'DDUSB Technology', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HAAHPMIC@KYOCERA?5ELCO?5Korea?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@HAAHPMIC@KYOCERA?5ELCO?5Korea?5Co?4?0?5Ltd?4?$AA@ DB 'KYOCERA E'
	DB	'LCO Korea Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DEJKGIMK@Smith?5Micro?5Software?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@DEJKGIMK@Smith?5Micro?5Software?0?5Inc?4?$AA@ DB 'Smith Micro S'
	DB	'oftware, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NMCNEDLC@Lytro?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0M@NMCNEDLC@Lytro?0?5Inc?4?$AA@ DB 'Lytro, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JOMBCIJH@Shenzhen?5Deren?5Electronic?5Co?4?0?5L@
CONST	SEGMENT
??_C@_0CE@JOMBCIJH@Shenzhen?5Deren?5Electronic?5Co?4?0?5L@ DB 'Shenzhen D'
	DB	'eren Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CLEDKDEL@Shenzhen?5New?9Conn?5International?5@
CONST	SEGMENT
??_C@_0CK@CLEDKDEL@Shenzhen?5New?9Conn?5International?5@ DB 'Shenzhen New'
	DB	'-Conn International Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EBDJACPJ@3C?5TEK?5CORP?4?$AA@
CONST	SEGMENT
??_C@_0N@EBDJACPJ@3C?5TEK?5CORP?4?$AA@ DB '3C TEK CORP.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EAHJMINJ@Shenzhen?5Rapoo?5Technology?5Co?4?0?5L@
CONST	SEGMENT
??_C@_0CE@EAHJMINJ@Shenzhen?5Rapoo?5Technology?5Co?4?0?5L@ DB 'Shenzhen R'
	DB	'apoo Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IDDOGDKP@Shenzhen?5Pangngai?5Industrial?5Co?4@
CONST	SEGMENT
??_C@_0CH@IDDOGDKP@Shenzhen?5Pangngai?5Industrial?5Co?4@ DB 'Shenzhen Pan'
	DB	'gngai Industrial Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GKPDCPNP@HyunWoo?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@GKPDCPNP@HyunWoo?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'HyunWoo E'
	DB	'lectronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CGBDOBCP@Dongguan?5DaTang?5Industrial?5Inves@
CONST	SEGMENT
??_C@_0DA@CGBDOBCP@Dongguan?5DaTang?5Industrial?5Inves@ DB 'Dongguan DaTa'
	DB	'ng Industrial Investment Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MAPFGIK@Summit?5Semiconductor?5LLC?$AA@
CONST	SEGMENT
??_C@_0BJ@MAPFGIK@Summit?5Semiconductor?5LLC?$AA@ DB 'Summit Semiconducto'
	DB	'r LLC', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CFHJHDDG@SYNCONN?5INTERCONNECT?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BK@CFHJHDDG@SYNCONN?5INTERCONNECT?5INC?4?$AA@ DB 'SYNCONN INTERCON'
	DB	'NECT INC.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KHHEAIMH@TeLink?5Semiconductor?5?$CIShanghai?$CJ?5@
CONST	SEGMENT
??_C@_0CK@KHHEAIMH@TeLink?5Semiconductor?5?$CIShanghai?$CJ?5@ DB 'TeLink '
	DB	'Semiconductor (Shanghai) Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MHJFMACI@Irvine?5Sensors?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BL@MHJFMACI@Irvine?5Sensors?5Corporation?$AA@ DB 'Irvine Sensors C'
	DB	'orporation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDEMAKAA@SuperD?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BB@MDEMAKAA@SuperD?5Co?4?0?5Ltd?4?$AA@ DB 'SuperD Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BCJJHJDJ@JARGY?5CO?4?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0P@BCJJHJDJ@JARGY?5CO?4?5LTD?4?$AA@ DB 'JARGY CO. LTD.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EHAGJFEE@Fullconn?5Industry?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@EHAGJFEE@Fullconn?5Industry?5Inc?4?$AA@ DB 'Fullconn Industry I'
	DB	'nc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@POEOBKIH@Digibras?5Industria?5do?5Brasil?5S?4A@
CONST	SEGMENT
??_C@_0CB@POEOBKIH@Digibras?5Industria?5do?5Brasil?5S?4A@ DB 'Digibras In'
	DB	'dustria do Brasil S.A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PDELGFBH@UbiVelox?$AA@
CONST	SEGMENT
??_C@_08PDELGFBH@UbiVelox?$AA@ DB 'UbiVelox', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DKAFDFAC@Perfect?5Fortune?5Electric?5Wire?5?$CG?5@
CONST	SEGMENT
??_C@_0DI@DKAFDFAC@Perfect?5Fortune?5Electric?5Wire?5?$CG?5@ DB 'Perfect '
	DB	'Fortune Electric Wire & Cable (ShenZhen) Co Ltd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OBJDCDKL@UNH?5Interoperability?5Laboratory?$AA@
CONST	SEGMENT
??_C@_0CA@OBJDCDKL@UNH?5Interoperability?5Laboratory?$AA@ DB 'UNH Interop'
	DB	'erability Laboratory', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FEINIIOM@Anton?1Bauer?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BC@FEINIIOM@Anton?1Bauer?0?5Inc?4?$AA@ DB 'Anton/Bauer, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LPJGBHEM@Velosti?5Technology?5Limited?$AA@
CONST	SEGMENT
??_C@_0BL@LPJGBHEM@Velosti?5Technology?5Limited?$AA@ DB 'Velosti Technolo'
	DB	'gy Limited', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06HHAPBGEJ@BAANTO?$AA@
CONST	SEGMENT
??_C@_06HHAPBGEJ@BAANTO?$AA@ DB 'BAANTO', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OPKCBFPL@Speeder?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@OPKCBFPL@Speeder?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Speeder E'
	DB	'lectronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MIHCGNOI@Minebea?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BC@MIHCGNOI@Minebea?5Co?4?0?5Ltd?4?$AA@ DB 'Minebea Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GILKPBEO@Innopower?5Technology?5Corporation@
CONST	SEGMENT
??_C@_0CB@GILKPBEO@Innopower?5Technology?5Corporation@ DB 'Innopower Tech'
	DB	'nology Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PEDMBLOK@Dongguan?5City?5Qirui?5Electronics?5@
CONST	SEGMENT
??_C@_0CK@PEDMBLOK@Dongguan?5City?5Qirui?5Electronics?5@ DB 'Dongguan Cit'
	DB	'y Qirui Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GMFHMCEF@The?5Silanna?5Group?5Pty?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BM@GMFHMCEF@The?5Silanna?5Group?5Pty?4?5Ltd?4?$AA@ DB 'The Silanna'
	DB	' Group Pty. Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GNFPHMGK@Trantek?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@GNFPHMGK@Trantek?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Trantek E'
	DB	'lectronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KJMMFBKI@Incasolution?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BH@KJMMFBKI@Incasolution?5Co?4?0?5Ltd?4?$AA@ DB 'Incasolution Co.,'
	DB	' Ltd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNIKCMOM@INSIDE?5Secure?$AA@
CONST	SEGMENT
??_C@_0O@BNIKCMOM@INSIDE?5Secure?$AA@ DB 'INSIDE Secure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@EJBOGONI@ChuangYi?5Hardware?5Precision?5Moul@
CONST	SEGMENT
??_C@_0CN@EJBOGONI@ChuangYi?5Hardware?5Precision?5Moul@ DB 'ChuangYi Hard'
	DB	'ware Precision Mould Com., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CNAOMOBO@Express?5Way?5Limited?$AA@
CONST	SEGMENT
??_C@_0BE@CNAOMOBO@Express?5Way?5Limited?$AA@ DB 'Express Way Limited', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGCPLAOJ@AWare?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0M@MGCPLAOJ@AWare?0?5Inc?4?$AA@ DB 'AWare, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BMBKAED@SpeedConn?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BE@BMBKAED@SpeedConn?5Co?4?0?5Ltd?4?$AA@ DB 'SpeedConn Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CEDODHPO@NXT?5Plc?$AA@
CONST	SEGMENT
??_C@_07CEDODHPO@NXT?5Plc?$AA@ DB 'NXT Plc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CFJNEAJP@BitifEye?5Digital?5Test?5Solutions?5@
CONST	SEGMENT
??_C@_0CF@CFJNEAJP@BitifEye?5Digital?5Test?5Solutions?5@ DB 'BitifEye Dig'
	DB	'ital Test Solutions GmbH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NDCLAIIH@Phonic?5Ear?0?5Inc?4?5Frontrow?5Divisi@
CONST	SEGMENT
??_C@_0CD@NDCLAIIH@Phonic?5Ear?0?5Inc?4?5Frontrow?5Divisi@ DB 'Phonic Ear'
	DB	', Inc. Frontrow Division', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OHNJGPJN@Marunix?5Electron?5Limited?$AA@
CONST	SEGMENT
??_C@_0BJ@OHNJGPJN@Marunix?5Electron?5Limited?$AA@ DB 'Marunix Electron L'
	DB	'imited', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GJOKBILK@KangXiang?5Electronic?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@GJOKBILK@KangXiang?5Electronic?5Co?4?0?5Ltd?4?$AA@ DB 'KangXian'
	DB	'g Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MLMJGOMM@Shenzhen?5Autone?9Tronic?5Technolog@
CONST	SEGMENT
??_C@_0CM@MLMJGOMM@Shenzhen?5Autone?9Tronic?5Technolog@ DB 'Shenzhen Auto'
	DB	'ne-Tronic Technology Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JCFEOFFG@Greenconn?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BG@JCFEOFFG@Greenconn?5Corporation?$AA@ DB 'Greenconn Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GCGEMCFF@Tensorcom?$AA@
CONST	SEGMENT
??_C@_09GCGEMCFF@Tensorcom?$AA@ DB 'Tensorcom', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MFDKEFFA@CKM?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BK@MFDKEFFA@CKM?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'CKM Electroni'
	DB	'cs Co., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LPLOPAA@Huawei?5Device?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BI@LPLOPAA@Huawei?5Device?5Co?4?0?5Ltd?4?$AA@ DB 'Huawei Device Co'
	DB	'., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CONNOJEO@Avery?5Design?5Systems?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@CONNOJEO@Avery?5Design?5Systems?0?5Inc?4?$AA@ DB 'Avery Design '
	DB	'Systems, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DNEMFNPO@Kunshan?5Jiahua?5Electronics?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@DNEMFNPO@Kunshan?5Jiahua?5Electronics?5Co?4?0?5@ DB 'Kunshan Ji'
	DB	'ahua Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCBNKHPD@Avnet?$AA@
CONST	SEGMENT
??_C@_05CCBNKHPD@Avnet?$AA@ DB 'Avnet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LJFFELIC@Miltope?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0O@LJFFELIC@Miltope?5Corp?4?$AA@ DB 'Miltope Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PFEHLJC@Phase?5One?5A?1S?$AA@
CONST	SEGMENT
??_C@_0O@PFEHLJC@Phase?5One?5A?1S?$AA@ DB 'Phase One A/S', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCNJIDNH@Motorola?5Mobility?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@JCNJIDNH@Motorola?5Mobility?5Inc?4?$AA@ DB 'Motorola Mobility I'
	DB	'nc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LAOLKJDB@Trigence?5Semiconductor?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BN@LAOLKJDB@Trigence?5Semiconductor?0?5Inc?4?$AA@ DB 'Trigence Sem'
	DB	'iconductor, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OFJMDPCF@Valor?5Communication?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BK@OFJMDPCF@Valor?5Communication?0?5Inc?4?$AA@ DB 'Valor Communica'
	DB	'tion, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FPBFIKDM@Grain?5Media?5Technology?5Corporati@
CONST	SEGMENT
??_C@_0CD@FPBFIKDM@Grain?5Media?5Technology?5Corporati@ DB 'Grain Media T'
	DB	'echnology Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EAFKPNFN@Shenzhen?5DLK?5Electronics?5Technol@
CONST	SEGMENT
??_C@_0CO@EAFKPNFN@Shenzhen?5DLK?5Electronics?5Technol@ DB 'Shenzhen DLK '
	DB	'Electronics Technology Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JIBHMNOD@Hotron?5Precision?5Electronic?5Ind?4@
CONST	SEGMENT
??_C@_0CH@JIBHMNOD@Hotron?5Precision?5Electronic?5Ind?4@ DB 'Hotron Preci'
	DB	'sion Electronic Ind. Corp.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GPGEJOEG@Sun?5Fair?5Electric?5Wire?5?$CG?5Cable?5?$CI@
CONST	SEGMENT
??_C@_0CO@GPGEJOEG@Sun?5Fair?5Electric?5Wire?5?$CG?5Cable?5?$CI@ DB 'Sun '
	DB	'Fair Electric Wire & Cable (HK) Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PEIOBOIA@Granite?5River?5Labs?$AA@
CONST	SEGMENT
??_C@_0BD@PEIOBOIA@Granite?5River?5Labs?$AA@ DB 'Granite River Labs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BNMEADNA@XiaMen?5GaoLuChang?5Electronics?5Co@
CONST	SEGMENT
??_C@_0CH@BNMEADNA@XiaMen?5GaoLuChang?5Electronics?5Co@ DB 'XiaMen GaoLuC'
	DB	'hang Electronics Co. Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OIDAFMJB@Evernew?5Wire?5?$CG?5Cable?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@OIDAFMJB@Evernew?5Wire?5?$CG?5Cable?5Co?4?0?5Ltd?4?$AA@ DB 'Eve'
	DB	'rnew Wire & Cable Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NEPAELKJ@Wiretek?5International?5Investment@
CONST	SEGMENT
??_C@_0CG@NEPAELKJ@Wiretek?5International?5Investment@ DB 'Wiretek Intern'
	DB	'ational Investment Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CHMCCAAM@3eYamaichi?5Electronics?5Co?4?0?5Ltd?4@
CONST	SEGMENT
??_C@_0CB@CHMCCAAM@3eYamaichi?5Electronics?5Co?4?0?5Ltd?4@ DB '3eYamaichi'
	DB	' Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OHNMOHEM@Wuerth?9Elektronik?5eiSos?5GmbH?5?$CG?5C@
CONST	SEGMENT
??_C@_0CG@OHNMOHEM@Wuerth?9Elektronik?5eiSos?5GmbH?5?$CG?5C@ DB 'Wuerth-E'
	DB	'lektronik eiSos GmbH & Co. KG', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MMCEPGGG@Jiafuh?5Metal?5?$CG?5Plastic?5?$CIShenZhen@
CONST	SEGMENT
??_C@_0CM@MMCEPGGG@Jiafuh?5Metal?5?$CG?5Plastic?5?$CIShenZhen@ DB 'Jiafuh'
	DB	' Metal & Plastic (ShenZhen) Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FAJGPKNC@Compupack?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@FAJGPKNC@Compupack?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Compupac'
	DB	'k Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PBMDMJMJ@Netcom?5Technology?5?$CIHK?$CJ?5Limited?$AA@
CONST	SEGMENT
??_C@_0BP@PBMDMJMJ@Netcom?5Technology?5?$CIHK?$CJ?5Limited?$AA@ DB 'Netco'
	DB	'm Technology (HK) Limited', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DANJAKAE@SHENZHEN?5JASON?5ELECTRONICS?5CO?4?0?5@
CONST	SEGMENT
??_C@_0CF@DANJAKAE@SHENZHEN?5JASON?5ELECTRONICS?5CO?4?0?5@ DB 'SHENZHEN J'
	DB	'ASON ELECTRONICS CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EPBIMIG@CalDigit?$AA@
CONST	SEGMENT
??_C@_08EPBIMIG@CalDigit?$AA@ DB 'CalDigit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BAPBHHHN@TMC?1Allion?5Test?5Labs?$AA@
CONST	SEGMENT
??_C@_0BF@BAPBHHHN@TMC?1Allion?5Test?5Labs?$AA@ DB 'TMC/Allion Test Labs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BKHGEKPK@Transcend?5Information?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BM@BKHGEKPK@Transcend?5Information?0?5Inc?4?$AA@ DB 'Transcend Inf'
	DB	'ormation, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EJJEPBOI@HUIZHOU?5HUANGJI?5PRECISIONS?5FLEX?5@
CONST	SEGMENT
??_C@_0DH@EJJEPBOI@HUIZHOU?5HUANGJI?5PRECISIONS?5FLEX?5@ DB 'HUIZHOU HUAN'
	DB	'GJI PRECISIONS FLEX ELECTRONICAL CO., LTD.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FBCKNBLM@JVC?5KENWOOD?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BI@FBCKNBLM@JVC?5KENWOOD?5Corporation?$AA@ DB 'JVC KENWOOD Corpora'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LDDEGFID@Y?5Soft?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@LDDEGFID@Y?5Soft?5Corporation?$AA@ DB 'Y Soft Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KDAPKLEA@Visteon?5Sistemas?5Automotives?5Ltd@
CONST	SEGMENT
??_C@_0CD@KDAPKLEA@Visteon?5Sistemas?5Automotives?5Ltd@ DB 'Visteon Siste'
	DB	'mas Automotives Ltda.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JOALJALB@Chin?9Ban?5Electronics?5?$CIHong?5Kong?$CJ@
CONST	SEGMENT
??_C@_0CF@JOALJALB@Chin?9Ban?5Electronics?5?$CIHong?5Kong?$CJ@ DB 'Chin-B'
	DB	'an Electronics (Hong Kong) Co.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CNOJBLBI@Amphenol?5AssembleTech?5?$CIXiamen?$CJ?5C@
CONST	SEGMENT
??_C@_0CJ@CNOJBLBI@Amphenol?5AssembleTech?5?$CIXiamen?$CJ?5C@ DB 'Ampheno'
	DB	'l AssembleTech (Xiamen) Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GAGJPPB@Shenzhen?5Linoya?5Electronic?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@GAGJPPB@Shenzhen?5Linoya?5Electronic?5Co?4?0?5@ DB 'Shenzhen Li'
	DB	'noya Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JLDIPNLJ@KT?5Tech?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0N@JLDIPNLJ@KT?5Tech?5Inc?4?$AA@ DB 'KT Tech Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GBIKBMAL@VIA?5Labs?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0P@GBIKBMAL@VIA?5Labs?0?5Inc?4?$AA@ DB 'VIA Labs, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PMOEHKIK@SOFTHARD?5Technology?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@PMOEHKIK@SOFTHARD?5Technology?5Ltd?4?$AA@ DB 'SOFTHARD Technolo'
	DB	'gy Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EMOPPBDG@Sumitomo?5Electric?5Ind?4?0?5Ltd?4?0?5Op@
CONST	SEGMENT
??_C@_0DE@EMOPPBDG@Sumitomo?5Electric?5Ind?4?0?5Ltd?4?0?5Op@ DB 'Sumitomo'
	DB	' Electric Ind., Ltd., Optical Comm. R&D Lab', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EIBNNPGD@FENGHUA?5KINGSUN?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BK@EIBNNPGD@FENGHUA?5KINGSUN?5CO?4?0?5LTD?4?$AA@ DB 'FENGHUA KINGS'
	DB	'UN CO., LTD.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MCDKIGNK@Shenzhen?5CARVE?5Electronics?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@MCDKIGNK@Shenzhen?5CARVE?5Electronics?5Co?4?0?5@ DB 'Shenzhen C'
	DB	'ARVE Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FNHFFJPK@Microconn?5Electronic?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@FNHFFJPK@Microconn?5Electronic?5Co?4?0?5Ltd?4?$AA@ DB 'Microcon'
	DB	'n Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CFCNDLPN@CE?5LINK?5LIMITED?$AA@
CONST	SEGMENT
??_C@_0BA@CFCNDLPN@CE?5LINK?5LIMITED?$AA@ DB 'CE LINK LIMITED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JJLIGBFN@Luxshare?9ICT?$AA@
CONST	SEGMENT
??_C@_0N@JJLIGBFN@Luxshare?9ICT?$AA@ DB 'Luxshare-ICT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DJALMDKA@CESI?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BK@DJALMDKA@CESI?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'CESI Technolo'
	DB	'gy Co., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OEPJLPBL@Unicorn?5Electronics?5Components?5C@
CONST	SEGMENT
??_C@_0CJ@OEPJLPBL@Unicorn?5Electronics?5Components?5C@ DB 'Unicorn Elect'
	DB	'ronics Components Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FBHBCILE@Shenzhen?5Tronixin?5Electronics?5Co@
CONST	SEGMENT
??_C@_0CI@FBHBCILE@Shenzhen?5Tronixin?5Electronics?5Co@ DB 'Shenzhen Tron'
	DB	'ixin Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PIIFGLBL@DETAS?5TECHNOLOGY?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BG@PIIFGLBL@DETAS?5TECHNOLOGY?5LTD?4?$AA@ DB 'DETAS TECHNOLOGY LTD'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DHGBCKNB@Freeport?5Resources?5Enterprises?5C@
CONST	SEGMENT
??_C@_0CF@DHGBCKNB@Freeport?5Resources?5Enterprises?5C@ DB 'Freeport Reso'
	DB	'urces Enterprises Corp.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KHNMKBEO@DAIICHI?5PARTS?5?$CIHK?$CJ?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BN@KHNMKBEO@DAIICHI?5PARTS?5?$CIHK?$CJ?5CO?4?0?5LTD?4?$AA@ DB 'DAI'
	DB	'ICHI PARTS (HK) CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GOBPPKNF@Belkin?5Electronic?5?$CIChangzhou?$CJ?5Co@
CONST	SEGMENT
??_C@_0CI@GOBPPKNF@Belkin?5Electronic?5?$CIChangzhou?$CJ?5Co@ DB 'Belkin '
	DB	'Electronic (Changzhou) Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BJBLIGAM@D?9Link?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@BJBLIGAM@D?9Link?5Corporation?$AA@ DB 'D-Link Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@KONADFN@Changzhou?5Wujin?5BEST?5Electronic?5@
CONST	SEGMENT
??_C@_0DB@KONADFN@Changzhou?5Wujin?5BEST?5Electronic?5@ DB 'Changzhou Wuj'
	DB	'in BEST Electronic Cables Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CAPPIABK@NIAN?5YEONG?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0CA@CAPPIABK@NIAN?5YEONG?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@ DB 'NIAN Y'
	DB	'EONG ENTERPRISE CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMPBKEIC@NXP?5Semiconductors?$AA@
CONST	SEGMENT
??_C@_0BD@GMPBKEIC@NXP?5Semiconductors?$AA@ DB 'NXP Semiconductors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LDONKOKE@Siemens?5Enterprise?5Communication@
CONST	SEGMENT
??_C@_0DA@LDONKOKE@Siemens?5Enterprise?5Communication@ DB 'Siemens Enterp'
	DB	'rise Communications GmbH & Co. KG', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EHEKJNGP@Owl?5Computing?5Technologies?0?5Inc?4@
CONST	SEGMENT
??_C@_0CB@EHEKJNGP@Owl?5Computing?5Technologies?0?5Inc?4@ DB 'Owl Computi'
	DB	'ng Technologies, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OKNGIEAK@Cresta?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@OKNGIEAK@Cresta?5Technology?5Inc?4?$AA@ DB 'Cresta Technology I'
	DB	'nc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OBPDBGLK@Franklin?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BJ@OBPDBGLK@Franklin?5Technology?5Inc?4?$AA@ DB 'Franklin Technolo'
	DB	'gy Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LPIGCLDE@Morning?5Star?5Industrial?5Co?4?0?5Ltd@
CONST	SEGMENT
??_C@_0CC@LPIGCLDE@Morning?5Star?5Industrial?5Co?4?0?5Ltd@ DB 'Morning St'
	DB	'ar Industrial Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NHHBKKBH@Dongguan?5Goldconn?5Electronics?5Co@
CONST	SEGMENT
??_C@_0CI@NHHBKKBH@Dongguan?5Goldconn?5Electronics?5Co@ DB 'Dongguan Gold'
	DB	'conn Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GGCBPHPK@Innostor?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BD@GGCBPHPK@Innostor?5Co?4?0?5Ltd?4?$AA@ DB 'Innostor Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MEDMJIF@Chang?5Yang?5Electronics?5Company?5L@
CONST	SEGMENT
??_C@_0CE@MEDMJIF@Chang?5Yang?5Electronics?5Company?5L@ DB 'Chang Yang El'
	DB	'ectronics Company Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DOFDLEGP@SASKEN?5COMMUNICATION?5TECH?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BP@DOFDLEGP@SASKEN?5COMMUNICATION?5TECH?5LTD?4?$AA@ DB 'SASKEN COM'
	DB	'MUNICATION TECH LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@COMGKDHO@Analogix?5Semiconductor?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BN@COMGKDHO@Analogix?5Semiconductor?0?5Inc?4?$AA@ DB 'Analogix Sem'
	DB	'iconductor, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LKIHKKAD@Cal?9Comp?5Electronics?5?$CG?5Communica@
CONST	SEGMENT
??_C@_0CG@LKIHKKAD@Cal?9Comp?5Electronics?5?$CG?5Communica@ DB 'Cal-Comp '
	DB	'Electronics & Communications', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BIKNKPGD@Shenzhen?5Tenwei?5Electronics?5Co?4?0@
CONST	SEGMENT
??_C@_0CG@BIKNKPGD@Shenzhen?5Tenwei?5Electronics?5Co?4?0@ DB 'Shenzhen Te'
	DB	'nwei Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MLCJGJKA@How?5Weih?5Precision?5Technology?5?$CIS@
CONST	SEGMENT
??_C@_0DC@MLCJGJKA@How?5Weih?5Precision?5Technology?5?$CIS@ DB 'How Weih '
	DB	'Precision Technology (Shenzhen)Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HDEECJAH@Transwitch?5?$CIIsrael?$CJ?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@HDEECJAH@Transwitch?5?$CIIsrael?$CJ?5Ltd?4?$AA@ DB 'Transwitch '
	DB	'(Israel) Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IADLJBAM@MOSER?5BAER?5INDIA?5LIMITED?$AA@
CONST	SEGMENT
??_C@_0BJ@IADLJBAM@MOSER?5BAER?5INDIA?5LIMITED?$AA@ DB 'MOSER BAER INDIA '
	DB	'LIMITED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IFPLLPOK@WIN?5WIN?5PRECISION?5INDUSTRIAL?5CO?4@
CONST	SEGMENT
??_C@_0CH@IFPLLPOK@WIN?5WIN?5PRECISION?5INDUSTRIAL?5CO?4@ DB 'WIN WIN PRE'
	DB	'CISION INDUSTRIAL CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BINCEHIC@Concraft?5Holding?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@BINCEHIC@Concraft?5Holding?5Co?4?0?5Ltd?4?$AA@ DB 'Concraft Hol'
	DB	'ding Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@GFKEDMJF@Vtion?5Information?5Technology?5?$CIFu@
CONST	SEGMENT
??_C@_0DA@GFKEDMJF@Vtion?5Information?5Technology?5?$CIFu@ DB 'Vtion Info'
	DB	'rmation Technology (Fujian) Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OPAJPFGF@COMLINK?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BO@OPAJPFGF@COMLINK?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@ DB 'COMLINK E'
	DB	'LECTRONICS CO., LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GIBECCII@WAN?5SHIH?5ELECTRONIC?5?$CIH?4K?4?$CJ?5CO?4?0?5@
CONST	SEGMENT
??_C@_0CF@GIBECCII@WAN?5SHIH?5ELECTRONIC?5?$CIH?4K?4?$CJ?5CO?4?0?5@ DB 'W'
	DB	'AN SHIH ELECTRONIC (H.K.) CO., LTD.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAAJJDAF@Etron?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@JAAJJDAF@Etron?5Technology?0?5Inc?4?$AA@ DB 'Etron Technology, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BKOLJNN@HUNG?5TA?5H?4T?4ENTERPRISE?5CO?4?0?5LTD?4@
CONST	SEGMENT
??_C@_0CB@BKOLJNN@HUNG?5TA?5H?4T?4ENTERPRISE?5CO?4?0?5LTD?4@ DB 'HUNG TA '
	DB	'H.T.ENTERPRISE CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BIOHJJL@Continental?5Automotive?5Systems?5I@
CONST	SEGMENT
??_C@_0CE@BIOHJJL@Continental?5Automotive?5Systems?5I@ DB 'Continental Au'
	DB	'tomotive Systems Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LIIMMKIN@KOBIAN?5CANADA?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BD@LIIMMKIN@KOBIAN?5CANADA?5INC?4?$AA@ DB 'KOBIAN CANADA INC.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FEMBFAJG@Point?5Grey?5Research?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BJ@FEMBFAJG@Point?5Grey?5Research?5Inc?4?$AA@ DB 'Point Grey Resea'
	DB	'rch Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FHOGIFBC@Inventure?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BA@FHOGIFBC@Inventure?0?5Inc?4?$AA@ DB 'Inventure, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@INFLCDIC@Telecommunication?5Metrology?5Cent@
CONST	SEGMENT
??_C@_0CK@INFLCDIC@Telecommunication?5Metrology?5Cent@ DB 'Telecommunicat'
	DB	'ion Metrology Center of MII', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NMLKIBDM@GDA?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@NMLKIBDM@GDA?5Technologies?0?5Inc?4?$AA@ DB 'GDA Technologies, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NACGMHGM@BUFFALO?5KOKUYO?5SUPPLY?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BL@NACGMHGM@BUFFALO?5KOKUYO?5SUPPLY?5INC?4?$AA@ DB 'BUFFALO KOKUYO'
	DB	' SUPPLY INC.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EGHGGAJG@Document?5Capture?5Technologies?0?5I@
CONST	SEGMENT
??_C@_0CE@EGHGGAJG@Document?5Capture?5Technologies?0?5I@ DB 'Document Cap'
	DB	'ture Technologies, Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GCMMCDEJ@S?4R?4N?4?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@GCMMCDEJ@S?4R?4N?4?5Corporation?$AA@ DB 'S.R.N. Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FNCNBIIF@Parade?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BK@FNCNBIIF@Parade?5Technologies?0?5Inc?4?$AA@ DB 'Parade Technolo'
	DB	'gies, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04EOPNHLPE@PLDA?$AA@
CONST	SEGMENT
??_C@_04EOPNHLPE@PLDA?$AA@ DB 'PLDA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EKHHMHEC@Shenzhen?5My?9Power?5Technology?5Co?4@
CONST	SEGMENT
??_C@_0CH@EKHHMHEC@Shenzhen?5My?9Power?5Technology?5Co?4@ DB 'Shenzhen My'
	DB	'-Power Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@IMGLKMI@Yueqing?5Changling?5Electronic?5Ins@
CONST	SEGMENT
??_C@_0DE@IMGLKMI@Yueqing?5Changling?5Electronic?5Ins@ DB 'Yueqing Changl'
	DB	'ing Electronic Instrument Corp., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDCHKKGB@The?5Linux?5Foundation?$AA@
CONST	SEGMENT
??_C@_0BF@JDCHKKGB@The?5Linux?5Foundation?$AA@ DB 'The Linux Foundation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NKBOOFNF@Walta?5Electronic?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@NKBOOFNF@Walta?5Electronic?5Co?4?0?5Ltd?4?$AA@ DB 'Walta Electr'
	DB	'onic Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EBGBPGPI@ASAP?5International?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@EBGBPGPI@ASAP?5International?5Co?4?0?5Ltd?4?$AA@ DB 'ASAP Inter'
	DB	'national Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MMCBELAO@QIXING?5INDUSTRIAL?5?$CIHK?$CJ?5CO?4?$AA@
CONST	SEGMENT
??_C@_0BL@MMCBELAO@QIXING?5INDUSTRIAL?5?$CIHK?$CJ?5CO?4?$AA@ DB 'QIXING I'
	DB	'NDUSTRIAL (HK) CO.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HAMMCKPN@Fresco?5Logic?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BC@HAMMCKPN@Fresco?5Logic?5Inc?4?$AA@ DB 'Fresco Logic Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EEHMEIJP@Pegatron?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BF@EEHMEIJP@Pegatron?5Corporation?$AA@ DB 'Pegatron Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PCPBKJFB@SHENZHEN?5LINKCONN?5ELECTRONICS?5CO@
CONST	SEGMENT
??_C@_0CI@PCPBKJFB@SHENZHEN?5LINKCONN?5ELECTRONICS?5CO@ DB 'SHENZHEN LINK'
	DB	'CONN ELECTRONICS CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KIFIHBOP@Qisda?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@KIFIHBOP@Qisda?5Corporation?$AA@ DB 'Qisda Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IKAGMPGB@Montage?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BJ@IKAGMPGB@Montage?5Technology?0?5Inc?4?$AA@ DB 'Montage Technolo'
	DB	'gy, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JJOGFDJ@DRAGON?5JOY?5LIMITED?$AA@
CONST	SEGMENT
??_C@_0BD@JJOGFDJ@DRAGON?5JOY?5LIMITED?$AA@ DB 'DRAGON JOY LIMITED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GDMPIAIK@Horng?5Tong?5Enterprise?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@GDMPIAIK@Horng?5Tong?5Enterprise?5Co?4?0?5Ltd?4?$AA@ DB 'Horng '
	DB	'Tong Enterprise Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GIIFDIFG@Johnson?5Controls?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@GIIFDIFG@Johnson?5Controls?0?5Inc?4?$AA@ DB 'Johnson Controls, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@OJLMBANN@NINGBO?5HENTEK?5DRAGON?5ELECTRONICS@
CONST	SEGMENT
??_C@_0CL@OJLMBANN@NINGBO?5HENTEK?5DRAGON?5ELECTRONICS@ DB 'NINGBO HENTEK'
	DB	' DRAGON ELECTRONICS CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LKKAKDAC@Amphenol?5KAE?$AA@
CONST	SEGMENT
??_C@_0N@LKKAKDAC@Amphenol?5KAE?$AA@ DB 'Amphenol KAE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BKKOBFJG@Telecommunications?5Technology?5As@
CONST	SEGMENT
??_C@_0DA@BKKOBFJG@Telecommunications?5Technology?5As@ DB 'Telecommunicat'
	DB	'ions Technology Association (TTA)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JLIFAMG@Texas?5Instruments?5?9?5Stellaris?$AA@
CONST	SEGMENT
??_C@_0BO@JLIFAMG@Texas?5Instruments?5?9?5Stellaris?$AA@ DB 'Texas Instru'
	DB	'ments - Stellaris', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EIGDHDFJ@OPEX?5CORPORATION?$AA@
CONST	SEGMENT
??_C@_0BB@EIGDHDFJ@OPEX?5CORPORATION?$AA@ DB 'OPEX CORPORATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CHCFPHFA@Aces?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@CHCFPHFA@Aces?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Aces Electro'
	DB	'nics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GEGPHPDK@ALPINE?5ELECTRONICS?0?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BJ@GEGPHPDK@ALPINE?5ELECTRONICS?0?5INC?4?$AA@ DB 'ALPINE ELECTRONI'
	DB	'CS, INC.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NCJEDCIM@ASTRON?5INTERNATIONAL?5CORP?4?$AA@
CONST	SEGMENT
??_C@_0BL@NCJEDCIM@ASTRON?5INTERNATIONAL?5CORP?4?$AA@ DB 'ASTRON INTERNAT'
	DB	'IONAL CORP.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DAEKMFBI@Shenzhen?5Luxshare?5Precision?5Indu@
CONST	SEGMENT
??_C@_0CP@DAEKMFBI@Shenzhen?5Luxshare?5Precision?5Indu@ DB 'Shenzhen Luxs'
	DB	'hare Precision Industry Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IEKIELLN@Egis?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BG@IEKIELLN@Egis?5Technology?0?5Inc?4?$AA@ DB 'Egis Technology, In'
	DB	'c.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DNKPBOCD@Mindray?5DS?5USA?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@DNKPBOCD@Mindray?5DS?5USA?0?5Inc?4?$AA@ DB 'Mindray DS USA, Inc'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KDIOKGMF@Kaetat?5Industrial?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BM@KDIOKGMF@Kaetat?5Industrial?5Co?4?0?5Ltd?4?$AA@ DB 'Kaetat Indu'
	DB	'strial Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PPLCBMMB@Philips?5?$CG?5Lite?9ON?5Digital?5Soluti@
CONST	SEGMENT
??_C@_0DA@PPLCBMMB@Philips?5?$CG?5Lite?9ON?5Digital?5Soluti@ DB 'Philips '
	DB	'& Lite-ON Digital Solutions Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PDBDCLGF@LS?5Mtron?$AA@
CONST	SEGMENT
??_C@_08PDBDCLGF@LS?5Mtron?$AA@ DB 'LS Mtron', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MAOFGAIM@SHENZHEN?5D?$CGS?5INDUSTRIES?5LIMITED?$AA@
CONST	SEGMENT
??_C@_0CA@MAOFGAIM@SHENZHEN?5D?$CGS?5INDUSTRIES?5LIMITED?$AA@ DB 'SHENZHE'
	DB	'N D&S INDUSTRIES LIMITED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IHAPHGGJ@Lanterra?5Industrial?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@IHAPHGGJ@Lanterra?5Industrial?5Co?4?0?5Ltd?4?$AA@ DB 'Lanterra '
	DB	'Industrial Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@KIMIGBPK@Orient?5Semiconductor?5Electronics@
CONST	SEGMENT
??_C@_0CH@KIMIGBPK@Orient?5Semiconductor?5Electronics@ DB 'Orient Semicon'
	DB	'ductor Electronics, Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HFOIMFJ@Sunplus?5Innovation?5Technology?5In@
CONST	SEGMENT
??_C@_0CD@HFOIMFJ@Sunplus?5Innovation?5Technology?5In@ DB 'Sunplus Innova'
	DB	'tion Technology Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FCJOHAEE@Contac?5Cable?5Industrial?5Limited?$AA@
CONST	SEGMENT
??_C@_0CA@FCJOHAEE@Contac?5Cable?5Industrial?5Limited?$AA@ DB 'Contac Cab'
	DB	'le Industrial Limited', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JGHIOJAI@Ford?5Motor?5Co?4?$AA@
CONST	SEGMENT
??_C@_0P@JGHIOJAI@Ford?5Motor?5Co?4?$AA@ DB 'Ford Motor Co.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IHCMPCEB@Shenzhen?5Yuanchuan?5Electronic?$AA@
CONST	SEGMENT
??_C@_0BO@IHCMPCEB@Shenzhen?5Yuanchuan?5Electronic?$AA@ DB 'Shenzhen Yuan'
	DB	'chuan Electronic', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MCHPBGAI@Super?5Talent?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BO@MCHPBGAI@Super?5Talent?5Technology?0?5Inc?4?$AA@ DB 'Super Tale'
	DB	'nt Technology, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IPLHGMF@Amlogic?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@IPLHGMF@Amlogic?0?5Inc?4?$AA@ DB 'Amlogic, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GNFBMNPP@ShenMing?5Electron?5?$CIDong?5Guan?$CJ?5Co@
CONST	SEGMENT
??_C@_0CI@GNFBMNPP@ShenMing?5Electron?5?$CIDong?5Guan?$CJ?5Co@ DB 'ShenMi'
	DB	'ng Electron (Dong Guan) Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EOOOBNLE@The?5Hong?5Kong?5Standards?5and?5Test@
CONST	SEGMENT
??_C@_0DA@EOOOBNLE@The?5Hong?5Kong?5Standards?5and?5Test@ DB 'The Hong Ko'
	DB	'ng Standards and Testing Centre Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ODKKJGBD@Plastron?5Precision?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@ODKKJGBD@Plastron?5Precision?5Co?4?0?5Ltd?4?$AA@ DB 'Plastron P'
	DB	'recision Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPNOIOGL@ViXS?5Systems?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BD@DPNOIOGL@ViXS?5Systems?0?5Inc?4?$AA@ DB 'ViXS Systems, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FLEFAHEK@MStar?5Semiconductor?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BK@FLEFAHEK@MStar?5Semiconductor?0?5Inc?4?$AA@ DB 'MStar Semicondu'
	DB	'ctor, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BAHHJBOM@Octekconn?5Incorporation?$AA@
CONST	SEGMENT
??_C@_0BI@BAHHJBOM@Octekconn?5Incorporation?$AA@ DB 'Octekconn Incorporat'
	DB	'ion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KCEJLGKF@SHEN?5ZHEN?5REX?5TECHNOLOGY?5CO?4?0?5LT@
CONST	SEGMENT
??_C@_0CD@KCEJLGKF@SHEN?5ZHEN?5REX?5TECHNOLOGY?5CO?4?0?5LT@ DB 'SHEN ZHEN'
	DB	' REX TECHNOLOGY CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@ENEIOO@High?5Top?5Precision?5Electronic?5Co@
CONST	SEGMENT
??_C@_0CI@ENEIOO@High?5Top?5Precision?5Electronic?5Co@ DB 'High Top Preci'
	DB	'sion Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FJNJCEIJ@Desan?5Wire?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BF@FJNJCEIJ@Desan?5Wire?5Co?4?0?5Ltd?4?$AA@ DB 'Desan Wire Co., Lt'
	DB	'd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BNPJBJHO@Salcomp?5Plc?$AA@
CONST	SEGMENT
??_C@_0M@BNPJBJHO@Salcomp?5Plc?$AA@ DB 'Salcomp Plc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EENODCNA@Johnson?5Component?5?$CG?5Equipments?5C@
CONST	SEGMENT
??_C@_0CJ@EENODCNA@Johnson?5Component?5?$CG?5Equipments?5C@ DB 'Johnson C'
	DB	'omponent & Equipments Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KBMPMKDN@SGS?5Taiwan?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BA@KBMPMKDN@SGS?5Taiwan?5Ltd?4?$AA@ DB 'SGS Taiwan Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HJFKHBGL@Simula?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@HJFKHBGL@Simula?5Technology?5Inc?4?$AA@ DB 'Simula Technology I'
	DB	'nc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GMHKDAOP@Proconn?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@GMHKDAOP@Proconn?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Proconn Te'
	DB	'chnology Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HMENCDPO@Lumberg?5Connect?5GmbH?$AA@
CONST	SEGMENT
??_C@_0BF@HMENCDPO@Lumberg?5Connect?5GmbH?$AA@ DB 'Lumberg Connect GmbH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IOFCBCHK@Bayer?5Health?5Care?5LLC?$AA@
CONST	SEGMENT
??_C@_0BG@IOFCBCHK@Bayer?5Health?5Care?5LLC?$AA@ DB 'Bayer Health Care LL'
	DB	'C', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBCFPAGK@Global?5Unichip?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BF@IBCFPAGK@Global?5Unichip?5Corp?4?$AA@ DB 'Global Unichip Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IHDBJOFK@Tandberg?5Data?$AA@
CONST	SEGMENT
??_C@_0O@IHDBJOFK@Tandberg?5Data?$AA@ DB 'Tandberg Data', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NGCCHBJG@Silicon?5Image?$AA@
CONST	SEGMENT
??_C@_0O@NGCCHBJG@Silicon?5Image?$AA@ DB 'Silicon Image', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KAKHDDLA@TERMINUS?5TECHNOLOGY?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BJ@KAKHDDLA@TERMINUS?5TECHNOLOGY?5INC?4?$AA@ DB 'TERMINUS TECHNOLO'
	DB	'GY INC.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DLODCOOG@Biwin?5Technology?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BG@DLODCOOG@Biwin?5Technology?5Ltd?4?$AA@ DB 'Biwin Technology Ltd'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@NGACLDBO@Astec?5Power?0?5a?5division?5of?5Emers@
CONST	SEGMENT
??_C@_0DB@NGACLDBO@Astec?5Power?0?5a?5division?5of?5Emers@ DB 'Astec Powe'
	DB	'r, a division of Emerson Network Power', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PPNCKFLJ@Amphenol?5East?5Asia?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BI@PPNCKFLJ@Amphenol?5East?5Asia?5Ltd?4?$AA@ DB 'Amphenol East Asi'
	DB	'a Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BIONMJOM@USB?9IF?5non?9workshop?$AA@
CONST	SEGMENT
??_C@_0BE@BIONMJOM@USB?9IF?5non?9workshop?$AA@ DB 'USB-IF non-workshop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GALBDMNI@Best?5Buy?$AA@
CONST	SEGMENT
??_C@_08GALBDMNI@Best?5Buy?$AA@ DB 'Best Buy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HAKCLNCA@Industrial?5Technology?5Research?5I@
CONST	SEGMENT
??_C@_0CJ@HAKCLNCA@Industrial?5Technology?5Research?5I@ DB 'Industrial Te'
	DB	'chnology Research Institute', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JIPMJPAM@ZTE?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BA@JIPMJPAM@ZTE?5Corporation?$AA@ DB 'ZTE Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FFDCAGEL@Dexxon?$AA@
CONST	SEGMENT
??_C@_06FFDCAGEL@Dexxon?$AA@ DB 'Dexxon', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CFPPMAFK@Richnex?5Microelectronics?5Corpora@
CONST	SEGMENT
??_C@_0CF@CFPPMAFK@Richnex?5Microelectronics?5Corpora@ DB 'Richnex Microe'
	DB	'lectronics Corporation', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JJOAHPPC@Fairchild?5Imaging?$AA@
CONST	SEGMENT
??_C@_0BC@JJOAHPPC@Fairchild?5Imaging?$AA@ DB 'Fairchild Imaging', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EPIBIIDM@Nuconn?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BI@EPIBIIDM@Nuconn?5Technology?5Corp?4?$AA@ DB 'Nuconn Technology '
	DB	'Corp.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JFCNKMCG@Office?5Depot?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BD@JFCNKMCG@Office?5Depot?0?5Inc?4?$AA@ DB 'Office Depot, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PPNLBENA@BIOS?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BB@PPNLBENA@BIOS?5Corporation?$AA@ DB 'BIOS Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PJANIMFN@Ironkey?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0N@PJANIMFN@Ironkey?5Inc?4?$AA@ DB 'Ironkey Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CHAGPIBB@Lab126?$AA@
CONST	SEGMENT
??_C@_06CHAGPIBB@Lab126?$AA@ DB 'Lab126', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PCAKKDFD@Irisguard?5UK?5Ltd?$AA@
CONST	SEGMENT
??_C@_0BB@PCAKKDFD@Irisguard?5UK?5Ltd?$AA@ DB 'Irisguard UK Ltd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FJMLIAEB@Ningbo?5Broad?5Telecommunication?5C@
CONST	SEGMENT
??_C@_0CJ@FJMLIAEB@Ningbo?5Broad?5Telecommunication?5C@ DB 'Ningbo Broad '
	DB	'Telecommunication Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NLNPHLHC@Shenzhen?5Xianhe?5Technology?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@NLNPHLHC@Shenzhen?5Xianhe?5Technology?5Co?4?0?5@ DB 'Shenzhen X'
	DB	'ianhe Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CDJNPBB@Avago?5Technologies?0?5Pte?4?$AA@
CONST	SEGMENT
??_C@_0BJ@CDJNPBB@Avago?5Technologies?0?5Pte?4?$AA@ DB 'Avago Technologie'
	DB	's, Pte.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FNMFPLIK@Nordic?5Semiconductor?5ASA?$AA@
CONST	SEGMENT
??_C@_0BJ@FNMFPLIK@Nordic?5Semiconductor?5ASA?$AA@ DB 'Nordic Semiconduct'
	DB	'or ASA', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LFCPLAAL@Alco?5Digital?5Devices?5Limited?$AA@
CONST	SEGMENT
??_C@_0BN@LFCPLAAL@Alco?5Digital?5Devices?5Limited?$AA@ DB 'Alco Digital '
	DB	'Devices Limited', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HPIJIONJ@FineArch?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@HPIJIONJ@FineArch?5Inc?4?$AA@ DB 'FineArch Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NCCLCDI@Kuang?5Ying?5Computer?5Equipment?5Co@
CONST	SEGMENT
??_C@_0CI@NCCLCDI@Kuang?5Ying?5Computer?5Equipment?5Co@ DB 'Kuang Ying Co'
	DB	'mputer Equipment Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DABKNPLD@Fitilink?5Integrated?5Technology?0?5@
CONST	SEGMENT
??_C@_0CF@DABKNPLD@Fitilink?5Integrated?5Technology?0?5@ DB 'Fitilink Int'
	DB	'egrated Technology, Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@INPJKDFM@Google?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0M@INPJKDFM@Google?5Inc?4?$AA@ DB 'Google Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LHNKNBIM@Trimax?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@LHNKNBIM@Trimax?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Trimax Ele'
	DB	'ctronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HBKKPCPF@Linkiss?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BC@HBKKPCPF@Linkiss?5Co?4?0?5Ltd?4?$AA@ DB 'Linkiss Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EGKCPMHF@Summit?5Microelectronics?$AA@
CONST	SEGMENT
??_C@_0BI@EGKCPMHF@Summit?5Microelectronics?$AA@ DB 'Summit Microelectron'
	DB	'ics', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DPMJHMBK@Gwo?5Jinn?5Industries?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@DPMJHMBK@Gwo?5Jinn?5Industries?5Co?4?0?5Ltd?4?$AA@ DB 'Gwo Jinn'
	DB	' Industries Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KAKIFJIN@Dongguan?5YuQiu?5Electronics?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@KAKIFJIN@Dongguan?5YuQiu?5Electronics?5Co?4?0?5@ DB 'Dongguan Y'
	DB	'uQiu Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IGMLMAAK@K?4K?4?5Rocky?$AA@
CONST	SEGMENT
??_C@_0L@IGMLMAAK@K?4K?4?5Rocky?$AA@ DB 'K.K. Rocky', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOFPOMJG@Lenovo?$AA@
CONST	SEGMENT
??_C@_06EOFPOMJG@Lenovo?$AA@ DB 'Lenovo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PLILAAEO@DisplayLink?5?$CIUK?$CJ?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BG@PLILAAEO@DisplayLink?5?$CIUK?$CJ?5Ltd?4?$AA@ DB 'DisplayLink (U'
	DB	'K) Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCLKDPPD@ORTHOFIX?$AA@
CONST	SEGMENT
??_C@_08FCLKDPPD@ORTHOFIX?$AA@ DB 'ORTHOFIX', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FKGCAAGK@Hip?5Hing?5Cable?5?$CG?5Plug?5Mfy?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@FKGCAAGK@Hip?5Hing?5Cable?5?$CG?5Plug?5Mfy?4?5Ltd?4?$AA@ DB 'Hi'
	DB	'p Hing Cable & Plug Mfy. Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IPLEGMCC@Dongguan?5Yangming?5Precision?5of?5P@
CONST	SEGMENT
??_C@_0DI@IPLEGMCC@Dongguan?5Yangming?5Precision?5of?5P@ DB 'Dongguan Yan'
	DB	'gming Precision of Plastic Metal Elec.Co.Lt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FMNDGFCO@Advanced?5Connection?5Technology?5I@
CONST	SEGMENT
??_C@_0CE@FMNDGFCO@Advanced?5Connection?5Technology?5I@ DB 'Advanced Conn'
	DB	'ection Technology Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PAIKKKPL@Printrex?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0P@PAIKKKPL@Printrex?0?5Inc?4?$AA@ DB 'Printrex, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GLPFKNO@ShenZhen?5Litkconn?5Technology?5Co?4@
CONST	SEGMENT
??_C@_0CH@GLPFKNO@ShenZhen?5Litkconn?5Technology?5Co?4@ DB 'ShenZhen Litk'
	DB	'conn Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PDCKJENN@Spreadtrum?5Communications?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BP@PDCKJENN@Spreadtrum?5Communications?5Inc?4?$AA@ DB 'Spreadtrum '
	DB	'Communications Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MGLGHCII@System?5Level?5Solutions?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BN@MGLGHCII@System?5Level?5Solutions?0?5Inc?4?$AA@ DB 'System Leve'
	DB	'l Solutions, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KBPLCNPO@Shenzhen?5Alex?5Connector?5Co?4?0?5Ltd@
CONST	SEGMENT
??_C@_0CC@KBPLCNPO@Shenzhen?5Alex?5Connector?5Co?4?0?5Ltd@ DB 'Shenzhen A'
	DB	'lex Connector Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LLHADAIP@UD?5electronic?5corp?4?$AA@
CONST	SEGMENT
??_C@_0BE@LLHADAIP@UD?5electronic?5corp?4?$AA@ DB 'UD electronic corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PGPGIHGN@LucidPort?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@PGPGIHGN@LucidPort?5Technology?0?5Inc?4?$AA@ DB 'LucidPort Tech'
	DB	'nology, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EFCFBFPB@ASMedia?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BI@EFCFBFPB@ASMedia?5Technology?5Inc?4?$AA@ DB 'ASMedia Technology'
	DB	' Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BACBMICM@MQP?5Electronics?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BF@BACBMICM@MQP?5Electronics?5Ltd?4?$AA@ DB 'MQP Electronics Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LFEKPOAD@Roche?5Diagnostics?$AA@
CONST	SEGMENT
??_C@_0BC@LFEKPOAD@Roche?5Diagnostics?$AA@ DB 'Roche Diagnostics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MBCLBNK@CANON?5IMAGING?5SYSTEMS?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BL@MBCLBNK@CANON?5IMAGING?5SYSTEMS?5INC?4?$AA@ DB 'CANON IMAGING S'
	DB	'YSTEMS INC.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EKGKEMKL@silex?5technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@EKGKEMKL@silex?5technology?0?5Inc?4?$AA@ DB 'silex technology, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GHEMOGNO@Dongguan?5ChingLung?5Wire?5?$CG?5Cable?5@
CONST	SEGMENT
??_C@_0CK@GHEMOGNO@Dongguan?5ChingLung?5Wire?5?$CG?5Cable?5@ DB 'Dongguan'
	DB	' ChingLung Wire & Cable Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LPNLCPKP@Shenzhen?5Zhengerya?5Technology?5Co@
CONST	SEGMENT
??_C@_0CI@LPNLCPKP@Shenzhen?5Zhengerya?5Technology?5Co@ DB 'Shenzhen Zhen'
	DB	'gerya Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NDNOFCGN@Maxwise?5Production?5Enterprise?5Lt@
CONST	SEGMENT
??_C@_0CD@NDNOFCGN@Maxwise?5Production?5Enterprise?5Lt@ DB 'Maxwise Produ'
	DB	'ction Enterprise Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OMFDOLIG@Total?5Phase?$AA@
CONST	SEGMENT
??_C@_0M@OMFDOLIG@Total?5Phase?$AA@ DB 'Total Phase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OFEECAGA@Creatix?5Polymedia?5GmbH?$AA@
CONST	SEGMENT
??_C@_0BH@OFEECAGA@Creatix?5Polymedia?5GmbH?$AA@ DB 'Creatix Polymedia Gm'
	DB	'bH', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CCKIBDCK@HongLin?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@CCKIBDCK@HongLin?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'HongLin E'
	DB	'lectronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GNFMIBKN@Soft?5DB?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0N@GNFMIBKN@Soft?5DB?5Inc?4?$AA@ DB 'Soft DB Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DGDFLKMM@Samtec?$AA@
CONST	SEGMENT
??_C@_06DGDFLKMM@Samtec?$AA@ DB 'Samtec', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FIJNAGLJ@Seong?5Ji?5Industrial?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@FIJNAGLJ@Seong?5Ji?5Industrial?5Co?4?0?5Ltd?4?$AA@ DB 'Seong Ji'
	DB	' Industrial Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIDCGAKL@D?9Box?5Technologies?$AA@
CONST	SEGMENT
??_C@_0BD@GIDCGAKL@D?9Box?5Technologies?$AA@ DB 'D-Box Technologies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HNEJDFII@Hong?5Kong?5Gearway?5Electronics?5Co@
CONST	SEGMENT
??_C@_0CI@HNEJDFII@Hong?5Kong?5Gearway?5Electronics?5Co@ DB 'Hong Kong Ge'
	DB	'arway Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HBACFJJO@Shen?5Zhen?5Teamspower?5Electronics@
CONST	SEGMENT
??_C@_0CL@HBACFJJO@Shen?5Zhen?5Teamspower?5Electronics@ DB 'Shen Zhen Tea'
	DB	'mspower Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KPCEMMAE@Freescale?5Semiconductor?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BO@KPCEMMAE@Freescale?5Semiconductor?0?5Inc?4?$AA@ DB 'Freescale S'
	DB	'emiconductor, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PGJPGLLG@Kunshan?5Guoji?5Electronics?5Co?4?0?5L@
CONST	SEGMENT
??_C@_0CE@PGJPGLLG@Kunshan?5Guoji?5Electronics?5Co?4?0?5L@ DB 'Kunshan Gu'
	DB	'oji Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MGGPMLNL@Palconn?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@MGGPMLNL@Palconn?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Palconn Te'
	DB	'chnology Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HBGIDMAB@Ketron?5SRL?$AA@
CONST	SEGMENT
??_C@_0L@HBGIDMAB@Ketron?5SRL?$AA@ DB 'Ketron SRL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PJFBNPPK@ALLTOP?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BM@PJFBNPPK@ALLTOP?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@ DB 'ALLTOP TECH'
	DB	'NOLOGY CO., LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MLLCLJKN@Sunf?5Pu?5Technology?5Co?4?0?5Ltd?$AA@
CONST	SEGMENT
??_C@_0BM@MLLCLJKN@Sunf?5Pu?5Technology?5Co?4?0?5Ltd?$AA@ DB 'Sunf Pu Tec'
	DB	'hnology Co., Ltd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCLHJFIN@D?5?$CG?5M?5Holdings?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@KCLHJFIN@D?5?$CG?5M?5Holdings?0?5Inc?4?$AA@ DB 'D & M Holdings,'
	DB	' Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PJGLCGBH@Rapid?5Conn?0?5Connect?5County?5Holdi@
CONST	SEGMENT
??_C@_0CI@PJGLCGBH@Rapid?5Conn?0?5Connect?5County?5Holdi@ DB 'Rapid Conn,'
	DB	' Connect County Holdings Bhd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FDFFBPKH@PNY?5Technologies?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BG@FDFFBPKH@PNY?5Technologies?5Inc?4?$AA@ DB 'PNY Technologies Inc'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PJAMMHJM@Phihong?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@PJAMMHJM@Phihong?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Phihong Te'
	DB	'chnology Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KFFNHPKK@HLDS?5?$CIHitachi?9LG?5Data?5Storage?0?5I@
CONST	SEGMENT
??_C@_0CF@KFFNHPKK@HLDS?5?$CIHitachi?9LG?5Data?5Storage?0?5I@ DB 'HLDS (H'
	DB	'itachi-LG Data Storage, Inc.)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NNBEAIKI@JMicron?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BJ@NNBEAIKI@JMicron?5Technology?5Corp?4?$AA@ DB 'JMicron Technolog'
	DB	'y Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NFMNNPJJ@VeriSilicon?5Holdings?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@NFMNNPJJ@VeriSilicon?5Holdings?5Co?4?0?5Ltd?4?$AA@ DB 'VeriSili'
	DB	'con Holdings Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MEIKBKHJ@Skymedi?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@MEIKBKHJ@Skymedi?5Corporation?$AA@ DB 'Skymedi Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HKBKGGAL@Ellisys?$AA@
CONST	SEGMENT
??_C@_07HKBKGGAL@Ellisys?$AA@ DB 'Ellisys', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OBOFFJMJ@MOAI?5ELECTRONICS?5CORPORATION?$AA@
CONST	SEGMENT
??_C@_0BN@OBOFFJMJ@MOAI?5ELECTRONICS?5CORPORATION?$AA@ DB 'MOAI ELECTRONI'
	DB	'CS CORPORATION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LNFIEHCE@StarTech?4com?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BC@LNFIEHCE@StarTech?4com?5Ltd?4?$AA@ DB 'StarTech.com Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@POKLDLPA@ATP?5Electronics?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@POKLDLPA@ATP?5Electronics?5Inc?4?$AA@ DB 'ATP Electronics Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GIDLPKMM@CTK?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BA@GIDLPKMM@CTK?5Corporation?$AA@ DB 'CTK Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JLOFKNJM@EVATRONIX?5SA?$AA@
CONST	SEGMENT
??_C@_0N@JLOFKNJM@EVATRONIX?5SA?$AA@ DB 'EVATRONIX SA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EJBEDMD@DSP?5Group?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BA@EJBEDMD@DSP?5Group?0?5Ltd?4?$AA@ DB 'DSP Group, Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OCKHDMGO@Formosa21?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0P@OCKHDMGO@Formosa21?5Inc?4?$AA@ DB 'Formosa21 Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OEGADIHN@Altek?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@OEGADIHN@Altek?5Corporation?$AA@ DB 'Altek Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EBFAHIJA@Wind?5River?5Systems?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BI@EBFAHIJA@Wind?5River?5Systems?5Inc?4?$AA@ DB 'Wind River System'
	DB	's Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DCCPGNCP@Vega?5Technologies?5Industrial?5?$CIAu@
CONST	SEGMENT
??_C@_0CL@DCCPGNCP@Vega?5Technologies?5Industrial?5?$CIAu@ DB 'Vega Techn'
	DB	'ologies Industrial (Austria) Co.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KOGJPFE@Sensor?5Technologies?5America?0?5Inc@
CONST	SEGMENT
??_C@_0CC@KOGJPFE@Sensor?5Technologies?5America?0?5Inc@ DB 'Sensor Techno'
	DB	'logies America, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KECIKNAF@ABILITY?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BN@KECIKNAF@ABILITY?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@ DB 'ABILITY EN'
	DB	'TERPRISE CO., LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BHONNEDH@Novatel?5Wireless?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@BHONNEDH@Novatel?5Wireless?0?5Inc?4?$AA@ DB 'Novatel Wireless, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBAJJPHC@Telechips?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BA@EBAJJPHC@Telechips?0?5Inc?4?$AA@ DB 'Telechips, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PODMPDKE@Phison?5Electronics?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BJ@PODMPDKE@Phison?5Electronics?5Corp?4?$AA@ DB 'Phison Electronic'
	DB	's Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJPGJJIB@Initio?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@MJPGJJIB@Initio?5Corporation?$AA@ DB 'Initio Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EADKLFFK@ALEREON?0?5INC?4?$AA@
CONST	SEGMENT
??_C@_0O@EADKLFFK@ALEREON?0?5INC?4?$AA@ DB 'ALEREON, INC.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BNPLLCII@AzureWave?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BN@BNPLLCII@AzureWave?5Technologies?0?5Inc?4?$AA@ DB 'AzureWave Te'
	DB	'chnologies, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DPEOBOCF@Wisair?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0M@DPEOBOCF@Wisair?5Ltd?4?$AA@ DB 'Wisair Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BGIJPEKA@JyeTai?5Precision?5Industrial?5Co?4?0@
CONST	SEGMENT
??_C@_0CG@BGIJPEKA@JyeTai?5Precision?5Industrial?5Co?4?0@ DB 'JyeTai Prec'
	DB	'ision Industrial Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LJKDAPJK@TomTom?5International?5B?4V?4?$AA@
CONST	SEGMENT
??_C@_0BK@LJKDAPJK@TomTom?5International?5B?4V?4?$AA@ DB 'TomTom Internat'
	DB	'ional B.V.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DKMEKHIM@Pericom?5Semiconductor?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BM@DKMEKHIM@Pericom?5Semiconductor?5Corp?4?$AA@ DB 'Pericom Semico'
	DB	'nductor Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IPAHGEJP@Swissbit?5AG?$AA@
CONST	SEGMENT
??_C@_0M@IPAHGEJP@Swissbit?5AG?$AA@ DB 'Swissbit AG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@ODBMNHOP@Katsuragawa?5Electric?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@ODBMNHOP@Katsuragawa?5Electric?5Co?4?0?5Ltd?4?$AA@ DB 'Katsurag'
	DB	'awa Electric Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KIELHJB@Konica?5Minolta?5Holdings?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BO@KIELHJB@Konica?5Minolta?5Holdings?0?5Inc?4?$AA@ DB 'Konica Mino'
	DB	'lta Holdings, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DKNOJINI@Better?5Holdings?5?$CIHK?$CJ?5Limited?$AA@
CONST	SEGMENT
??_C@_0BN@DKNOJINI@Better?5Holdings?5?$CIHK?$CJ?5Limited?$AA@ DB 'Better '
	DB	'Holdings (HK) Limited', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JPNNFCKE@LINE?5TECH?5INDUSTRIAL?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BP@JPNNFCKE@LINE?5TECH?5INDUSTRIAL?5CO?4?0?5LTD?4?$AA@ DB 'LINE TE'
	DB	'CH INDUSTRIAL CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OPCIAOPO@Zhejiang?5Xinya?5Electronic?5Techno@
CONST	SEGMENT
??_C@_0CP@OPCIAOPO@Zhejiang?5Xinya?5Electronic?5Techno@ DB 'Zhejiang Xiny'
	DB	'a Electronic Technology Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LMINHIGA@Honey?5Bee?5Electronic?5Internation@
CONST	SEGMENT
??_C@_0CI@LMINHIGA@Honey?5Bee?5Electronic?5Internation@ DB 'Honey Bee Ele'
	DB	'ctronic International Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CDINJBKA@RISO?5KAGAKU?5CORP?4?$AA@
CONST	SEGMENT
??_C@_0BC@CDINJBKA@RISO?5KAGAKU?5CORP?4?$AA@ DB 'RISO KAGAKU CORP.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FDHCJPEM@MARVELL?5SEMICONDUCTOR?0?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BM@FDHCJPEM@MARVELL?5SEMICONDUCTOR?0?5INC?4?$AA@ DB 'MARVELL SEMIC'
	DB	'ONDUCTOR, INC.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EMLGGAIJ@Gean?5Sen?5Electronic?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@EMLGGAIJ@Gean?5Sen?5Electronic?5Co?4?0?5Ltd?4?$AA@ DB 'Gean Sen'
	DB	' Electronic Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HPCCHOFJ@Bel?5Stewart?$AA@
CONST	SEGMENT
??_C@_0M@HPCCHOFJ@Bel?5Stewart?$AA@ DB 'Bel Stewart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BANJHMOB@Aristocrat?5Technologies?$AA@
CONST	SEGMENT
??_C@_0BI@BANJHMOB@Aristocrat?5Technologies?$AA@ DB 'Aristocrat Technolog'
	DB	'ies', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CNPFBGCM@MICRO?5VISION?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BH@CNPFBGCM@MICRO?5VISION?5CO?4?0?5LTD?4?$AA@ DB 'MICRO VISION CO.'
	DB	', LTD.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FCGNNKPJ@ADATA?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@FCGNNKPJ@ADATA?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'ADATA Techno'
	DB	'logy Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KKGDFIOD@NYKO?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BI@KKGDFIOD@NYKO?5Technologies?0?5Inc?4?$AA@ DB 'NYKO Technologies'
	DB	', Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DHPBBMCB@SKYCABLE?5ENTERPRISE?4?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BP@DHPBBMCB@SKYCABLE?5ENTERPRISE?4?5CO?4?0?5LTD?4?$AA@ DB 'SKYCABL'
	DB	'E ENTERPRISE. CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MJAIIBOP@HUDSON?5SOFT?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BG@MJAIIBOP@HUDSON?5SOFT?5CO?4?0?5LTD?4?$AA@ DB 'HUDSON SOFT CO., '
	DB	'LTD.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GJMOHKID@K?4I?4?5Technology?5Co?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@GJMOHKID@K?4I?4?5Technology?5Co?4?5Ltd?4?$AA@ DB 'K.I. Technolo'
	DB	'gy Co. Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HFAICOFB@ATECH?5FLASH?5TECHNOLOGY?$AA@
CONST	SEGMENT
??_C@_0BH@HFAICOFB@ATECH?5FLASH?5TECHNOLOGY?$AA@ DB 'ATECH FLASH TECHNOLO'
	DB	'GY', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LNLMLHPJ@GlobalMedia?5Group?0?5LLC?$AA@
CONST	SEGMENT
??_C@_0BH@LNLMLHPJ@GlobalMedia?5Group?0?5LLC?$AA@ DB 'GlobalMedia Group, '
	DB	'LLC', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JCFADKIE@DONG?5GUAN?5JALINK?5ELECTRONICES?5CO@
CONST	SEGMENT
??_C@_0CG@JCFADKIE@DONG?5GUAN?5JALINK?5ELECTRONICES?5CO@ DB 'DONG GUAN JA'
	DB	'LINK ELECTRONICES CO.,LTD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDIEEFFD@Sierra?5Wireless?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@FDIEEFFD@Sierra?5Wireless?5Inc?4?$AA@ DB 'Sierra Wireless Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BGNNABKD@Sheng?5Yih?5Technologies?5Co?4?0?5Ltd?4@
CONST	SEGMENT
??_C@_0CB@BGNNABKD@Sheng?5Yih?5Technologies?5Co?4?0?5Ltd?4@ DB 'Sheng Yih'
	DB	' Technologies Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HCIAKFOP@Salix?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@HCIAKFOP@Salix?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Salix Techno'
	DB	'logy Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NKCLDENL@Alpha?5Imaging?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BP@NKCLDENL@Alpha?5Imaging?5Technology?5Corp?4?$AA@ DB 'Alpha Imag'
	DB	'ing Technology Corp.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BPPANFMB@Shimane?5SANYO?5Electric?5Co?4?0?5Ltd?4@
CONST	SEGMENT
??_C@_0CB@BPPANFMB@Shimane?5SANYO?5Electric?5Co?4?0?5Ltd?4@ DB 'Shimane S'
	DB	'ANYO Electric Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JFAAFJPO@Tenx?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BG@JFAAFJPO@Tenx?5Technology?0?5Inc?4?$AA@ DB 'Tenx Technology, In'
	DB	'c.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HLACDLIC@Master?5Hill?5Electric?5Wire?5and?5Ca@
CONST	SEGMENT
??_C@_0CO@HLACDLIC@Master?5Hill?5Electric?5Wire?5and?5Ca@ DB 'Master Hill'
	DB	' Electric Wire and Cable Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DEMMBJPB@VSO?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BK@DEMMBJPB@VSO?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@ DB 'VSO ELECTRONI'
	DB	'CS CO., LTD.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKLIJNKN@Medion?5AG?$AA@
CONST	SEGMENT
??_C@_09JKLIJNKN@Medion?5AG?$AA@ DB 'Medion AG', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NDHMOMGK@Golden?5Bright?5?$CISichuan?$CJ?5Electron@
CONST	SEGMENT
??_C@_0DF@NDHMOMGK@Golden?5Bright?5?$CISichuan?$CJ?5Electron@ DB 'Golden '
	DB	'Bright (Sichuan) Electronic Technology Co Ltd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BFJDJKMK@Actions?5Semiconductor?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@BFJDJKMK@Actions?5Semiconductor?5Co?4?0?5Ltd?4?$AA@ DB 'Actions'
	DB	' Semiconductor Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BEMBIFEP@Kycon?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0L@BEMBIFEP@Kycon?5Inc?4?$AA@ DB 'Kycon Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BNHNDFDJ@TM?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BD@BNHNDFDJ@TM?5Technology?5Inc?4?$AA@ DB 'TM Technology Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GMIJPDAF@Princeton?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BL@GMIJPDAF@Princeton?5Technology?5Corp?4?$AA@ DB 'Princeton Techn'
	DB	'ology Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DKGHEGPO@USI?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0O@DKGHEGPO@USI?5Co?4?0?5Ltd?4?$AA@ DB 'USI Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MADBCNBC@Cables?5To?5Go?$AA@
CONST	SEGMENT
??_C@_0N@MADBCNBC@Cables?5To?5Go?$AA@ DB 'Cables To Go', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JBGEKCBJ@Lotes?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BA@JBGEKCBJ@Lotes?5Co?4?0?5Ltd?4?$AA@ DB 'Lotes Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MMEHCLPH@Robert?5Bosch?5GmbH?$AA@
CONST	SEGMENT
??_C@_0BC@MMEHCLPH@Robert?5Bosch?5GmbH?$AA@ DB 'Robert Bosch GmbH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HEECLKMJ@Grand?9tek?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@HEECLKMJ@Grand?9tek?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Grand-t'
	DB	'ek Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JLIOEOBP@PANTECH?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BC@JLIOEOBP@PANTECH?5CO?4?0?5LTD?4?$AA@ DB 'PANTECH CO., LTD.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GGINDOFM@CANON?5ELECTRONICS?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BH@GGINDOFM@CANON?5ELECTRONICS?5INC?4?$AA@ DB 'CANON ELECTRONICS I'
	DB	'NC.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@EJNCJCJN@Freeway?5Electronic?5Wire?5?$CG?5Cable?5@
CONST	SEGMENT
??_C@_0DF@EJNCJCJN@Freeway?5Electronic?5Wire?5?$CG?5Cable?5@ DB 'Freeway '
	DB	'Electronic Wire & Cable (Dongguan) Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HPGECAIP@Giesecke?5?$CG?5Devrient?5GmbH?$AA@
CONST	SEGMENT
??_C@_0BJ@HPGECAIP@Giesecke?5?$CG?5Devrient?5GmbH?$AA@ DB 'Giesecke & Dev'
	DB	'rient GmbH', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OEFJDFLG@Western?5Digital?5Technologies?0?5In@
CONST	SEGMENT
??_C@_0CD@OEFJDFLG@Western?5Digital?5Technologies?0?5In@ DB 'Western Digi'
	DB	'tal Technologies, Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MCAPDOMI@ON?5Semiconductor?$AA@
CONST	SEGMENT
??_C@_0BB@MCAPDOMI@ON?5Semiconductor?$AA@ DB 'ON Semiconductor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DIDNCHDM@Targus?5Group?5International?$AA@
CONST	SEGMENT
??_C@_0BL@DIDNCHDM@Targus?5Group?5International?$AA@ DB 'Targus Group Int'
	DB	'ernational', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PMFKJABH@SteelSeries?5ApS?$AA@
CONST	SEGMENT
??_C@_0BA@PMFKJABH@SteelSeries?5ApS?$AA@ DB 'SteelSeries ApS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MHAOCCHA@WENZHOU?5YIHUA?5COMMUNICATED?5CONNE@
CONST	SEGMENT
??_C@_0CP@MHAOCCHA@WENZHOU?5YIHUA?5COMMUNICATED?5CONNE@ DB 'WENZHOU YIHUA'
	DB	' COMMUNICATED CONNECTOR CO., LTD.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KLMPEDJE@Newly?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@KLMPEDJE@Newly?5Corporation?$AA@ DB 'Newly Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PPCAGGEP@LG?5Electronics?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BE@PPCAGGEP@LG?5Electronics?5Inc?4?$AA@ DB 'LG Electronics Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNNKEBO@Speed?5Tech?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BB@FNNKEBO@Speed?5Tech?5Corp?4?$AA@ DB 'Speed Tech Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MNOHKIGC@CHI?5SHING?5COMPUTER?5ACCESSORIES?5C@
CONST	SEGMENT
??_C@_0CJ@MNOHKIGC@CHI?5SHING?5COMPUTER?5ACCESSORIES?5C@ DB 'CHI SHING CO'
	DB	'MPUTER ACCESSORIES CO., LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JMIKCMLI@Sony?5Ericsson?5Mobile?5Communicati@
CONST	SEGMENT
??_C@_0CH@JMIKCMLI@Sony?5Ericsson?5Mobile?5Communicati@ DB 'Sony Ericsson'
	DB	' Mobile Communications AB', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KMPGIMLP@SAN?5SHING?5ELECTRONICS?5CO?4?0?5LTD?4?4@
CONST	SEGMENT
??_C@_0CB@KMPGIMLP@SAN?5SHING?5ELECTRONICS?5CO?4?0?5LTD?4?4@ DB 'SAN SHIN'
	DB	'G ELECTRONICS CO., LTD..', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DKFGOFCL@Wistron?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@DKFGOFCL@Wistron?5Corporation?$AA@ DB 'Wistron Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPCAKEK@CviLux?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@NPCAKEK@CviLux?5Corporation?$AA@ DB 'CviLux Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KEDKNNLF@Yazaki?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@KEDKNNLF@Yazaki?5Corporation?$AA@ DB 'Yazaki Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HLMPAKPJ@DIONEX?5CORPORATION?$AA@
CONST	SEGMENT
??_C@_0BD@HLMPAKPJ@DIONEX?5CORPORATION?$AA@ DB 'DIONEX CORPORATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAOPHLDB@TEPCO?5UQUEST?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BD@CAOPHLDB@TEPCO?5UQUEST?0?5LTD?4?$AA@ DB 'TEPCO UQUEST, LTD.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@KCDILGEE@GuangZhou?5Chief?5Tech?5Electronic?5@
CONST	SEGMENT
??_C@_0DE@KCDILGEE@GuangZhou?5Chief?5Tech?5Electronic?5@ DB 'GuangZhou Ch'
	DB	'ief Tech Electronic Technology Co. Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GLJCMOOM@Kawai?5Musical?5Instruments?5Mfg?4?5C@
CONST	SEGMENT
??_C@_0CJ@GLJCMOOM@Kawai?5Musical?5Instruments?5Mfg?4?5C@ DB 'Kawai Music'
	DB	'al Instruments Mfg. Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JJBCDJBC@Taiyo?5Cable?5?$CIDongguan?$CJ?5Co?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@JJBCDJBC@Taiyo?5Cable?5?$CIDongguan?$CJ?5Co?4?5Ltd?4?$AA@ DB 'T'
	DB	'aiyo Cable (Dongguan) Co. Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NDDFJIHH@WING?5KEI?5ELECTRICAL?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BO@NDDFJIHH@WING?5KEI?5ELECTRICAL?5CO?4?0?5LTD?4?$AA@ DB 'WING KEI'
	DB	' ELECTRICAL CO., LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PCHAGLHO@WORLDWIDE?5CABLE?5OPTO?5CORP?4?$AA@
CONST	SEGMENT
??_C@_0BL@PCHAGLHO@WORLDWIDE?5CABLE?5OPTO?5CORP?4?$AA@ DB 'WORLDWIDE CABL'
	DB	'E OPTO CORP.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JKBEBDIB@YFC?9BonEagle?5Electric?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@JKBEBDIB@YFC?9BonEagle?5Electric?5Co?4?0?5Ltd?4?$AA@ DB 'YFC-Bo'
	DB	'nEagle Electric Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HHKPOBJN@Good?5Man?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BF@HHKPOBJN@Good?5Man?5Corporation?$AA@ DB 'Good Man Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LHKAEIDJ@CSL?5Wire?5?$CG?5Plug?5?$CIShen?5Zhen?$CJ?5Comp@
CONST	SEGMENT
??_C@_0CE@LHKAEIDJ@CSL?5Wire?5?$CG?5Plug?5?$CIShen?5Zhen?$CJ?5Comp@ DB 'C'
	DB	'SL Wire & Plug (Shen Zhen) Company', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OLFMJOLO@Sunrich?5Technology?5?$CIH?4K?4?$CJ?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@OLFMJOLO@Sunrich?5Technology?5?$CIH?4K?4?$CJ?5Ltd?4?$AA@ DB 'Su'
	DB	'nrich Technology (H.K.) Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FPOIDBI@Lite?9On?5IT?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BB@FPOIDBI@Lite?9On?5IT?5Corp?4?$AA@ DB 'Lite-On IT Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HGLIFDP@InnoVISION?5Multimedia?5Limited?$AA@
CONST	SEGMENT
??_C@_0BO@HGLIFDP@InnoVISION?5Multimedia?5Limited?$AA@ DB 'InnoVISION Mul'
	DB	'timedia Limited', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NLMJJEGP@Axell?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@NLMJJEGP@Axell?5Corporation?$AA@ DB 'Axell Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EEJFEJAC@Sweetray?5Industrial?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@EEJFEJAC@Sweetray?5Industrial?5Ltd?4?$AA@ DB 'Sweetray Industri'
	DB	'al Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FFOINCNP@Y?9S?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BJ@FFOINCNP@Y?9S?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@ DB 'Y-S ELECTRONI'
	DB	'C CO., LTD.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LFNPLID@Ours?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@LFNPLID@Ours?5Technology?5Inc?4?$AA@ DB 'Ours Technology Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PLHJNEDE@ADTEC?5CORPORATION?$AA@
CONST	SEGMENT
??_C@_0BC@PLHJNEDE@ADTEC?5CORPORATION?$AA@ DB 'ADTEC CORPORATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DBHJNIK@MediaTek?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@DBHJNIK@MediaTek?5Inc?4?$AA@ DB 'MediaTek Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BAFJGBFA@Well?5Force?5Electronic?5Co?4?0?5Ltd?$AA@
CONST	SEGMENT
??_C@_0BP@BAFJGBFA@Well?5Force?5Electronic?5Co?4?0?5Ltd?$AA@ DB 'Well For'
	DB	'ce Electronic Co., Ltd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FIEIALAE@Hsi?9Chin?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@FIEIALAE@Hsi?9Chin?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Hsi-Chi'
	DB	'n Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PNJNPPHF@Megawin?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@PNJNPPHF@Megawin?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Megawin Te'
	DB	'chnology Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DKLMDFEK@Neltron?5Industrial?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@DKLMDFEK@Neltron?5Industrial?5Co?4?0?5Ltd?4?$AA@ DB 'Neltron In'
	DB	'dustrial Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@LHINEDL@Union?5Power?5Information?5Industri@
CONST	SEGMENT
??_C@_0CN@LHINEDL@Union?5Power?5Information?5Industri@ DB 'Union Power In'
	DB	'formation Industrial Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MDHILMJA@Neostar?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@MDHILMJA@Neostar?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Neostar Te'
	DB	'chnology Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BNIAIBOP@Smart?5Modular?5Technologies?0?5Inc?4@
CONST	SEGMENT
??_C@_0CB@BNIAIBOP@Smart?5Modular?5Technologies?0?5Inc?4@ DB 'Smart Modul'
	DB	'ar Technologies, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MECAJMAF@Liou?5Yuane?5International?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@MECAJMAF@Liou?5Yuane?5International?5Ltd?4?$AA@ DB 'Liou Yuane '
	DB	'International Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAOPMIJP@Custom?5Engineering?5SPA?$AA@
CONST	SEGMENT
??_C@_0BH@JAOPMIJP@Custom?5Engineering?5SPA?$AA@ DB 'Custom Engineering S'
	DB	'PA', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HKHHADBM@Power?5Quotient?5International?5Co?4@
CONST	SEGMENT
??_C@_0CH@HKHHADBM@Power?5Quotient?5International?5Co?4@ DB 'Power Quotie'
	DB	'nt International Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MEJNGPFO@Contek?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@MEJNGPFO@Contek?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Contek Ele'
	DB	'ctronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BBHIMAGO@SDK?5Co?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0N@BBHIMAGO@SDK?5Co?0?5Ltd?4?$AA@ DB 'SDK Co, Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIGMBEOG@inXtron?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@PIGMBEOG@inXtron?0?5Inc?4?$AA@ DB 'inXtron, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LDGCJJON@Micro?9Star?5International?5Co?4?0?5Lt@
CONST	SEGMENT
??_C@_0CD@LDGCJJON@Micro?9Star?5International?5Co?4?0?5Lt@ DB 'Micro-Star'
	DB	' International Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BBFDLJEL@IOGEAR?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0N@BBFDLJEL@IOGEAR?0?5Inc?4?$AA@ DB 'IOGEAR, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CBEHKKIA@Sure?9Fire?5Electrical?5Corporation@
CONST	SEGMENT
??_C@_0CB@CBEHKKIA@Sure?9Fire?5Electrical?5Corporation@ DB 'Sure-Fire Ele'
	DB	'ctrical Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ECGNEKML@Pitney?5Bowes?$AA@
CONST	SEGMENT
??_C@_0N@ECGNEKML@Pitney?5Bowes?$AA@ DB 'Pitney Bowes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ICKBMN@C?9MEDIA?5ELECTRONICS?5INC?4?$AA@
CONST	SEGMENT
??_C@_0BJ@ICKBMN@C?9MEDIA?5ELECTRONICS?5INC?4?$AA@ DB 'C-MEDIA ELECTRONIC'
	DB	'S INC.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BKFMOADO@Dolby?5Laboratories?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BI@BKFMOADO@Dolby?5Laboratories?5Inc?4?$AA@ DB 'Dolby Laboratories'
	DB	' Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DEKDBPDL@Taiwan?5Line?5Tek?5Electronic?5Co?4?0?5@
CONST	SEGMENT
??_C@_0CF@DEKDBPDL@Taiwan?5Line?5Tek?5Electronic?5Co?4?0?5@ DB 'Taiwan Li'
	DB	'ne Tek Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JNDMIFOJ@Hirakawa?5Hewtech?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BH@JNDMIFOJ@Hirakawa?5Hewtech?5Corp?4?$AA@ DB 'Hirakawa Hewtech Co'
	DB	'rp.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DILBGHLF@MEILU?5ELECTRONICS?5?$CISHENZHEN?$CJ?5CO?4@
CONST	SEGMENT
??_C@_0CH@DILBGHLF@MEILU?5ELECTRONICS?5?$CISHENZHEN?$CJ?5CO?4@ DB 'MEILU '
	DB	'ELECTRONICS (SHENZHEN) CO., LTD.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GHDJEHFK@Volex?5?$CIAsia?$CJ?5Pte?5Ltd?$AA@
CONST	SEGMENT
??_C@_0BF@GHDJEHFK@Volex?5?$CIAsia?$CJ?5Pte?5Ltd?$AA@ DB 'Volex (Asia) Pt'
	DB	'e Ltd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KEPOILEK@Grape?5Systems?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BD@KEPOILEK@Grape?5Systems?5Inc?4?$AA@ DB 'Grape Systems Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MAHCGCHE@NF?5Corporation?$AA@
CONST	SEGMENT
??_C@_0P@MAHCGCHE@NF?5Corporation?$AA@ DB 'NF Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IJEJHEOO@Shanghai?5Hank?5Connection?5Co?4?0?5Lt@
CONST	SEGMENT
??_C@_0CD@IJEJHEOO@Shanghai?5Hank?5Connection?5Co?4?0?5Lt@ DB 'Shanghai H'
	DB	'ank Connection Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IDKBGBCG@NALTEC?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0N@IDKBGBCG@NALTEC?0?5Inc?4?$AA@ DB 'NALTEC, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IIKDMMBP@Qualcomm?5Atheros?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@IIKDMMBP@Qualcomm?5Atheros?0?5Inc?4?$AA@ DB 'Qualcomm Atheros, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KPNEJJKA@ENE?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BE@KPNEJJKA@ENE?5Technology?5Inc?4?$AA@ DB 'ENE Technology Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OOCFEMN@e?9CONN?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BM@OOCFEMN@e?9CONN?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@ DB 'e-CONN ELEC'
	DB	'TRONIC CO., LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OACAMJJG@Z?9Com?5INC?4?$AA@
CONST	SEGMENT
??_C@_0L@OACAMJJG@Z?9Com?5INC?4?$AA@ DB 'Z-Com INC.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ECMAKMHG@Intel?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@ECMAKMHG@Intel?5Corporation?$AA@ DB 'Intel Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DLHFEAFK@Shin?5Din?5Cable?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BE@DLHFEAFK@Shin?5Din?5Cable?5Ltd?4?$AA@ DB 'Shin Din Cable Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NGPEIKDH@emsys?5Embedded?5Systems?5GmbH?$AA@
CONST	SEGMENT
??_C@_0BM@NGPEIKDH@emsys?5Embedded?5Systems?5GmbH?$AA@ DB 'emsys Embedded'
	DB	' Systems GmbH', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DKFGFGHA@Singatron?5Enterprise?5Co?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@DKFGFGHA@Singatron?5Enterprise?5Co?4?5Ltd?4?$AA@ DB 'Singatron '
	DB	'Enterprise Co. Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PCKEPBKO@Motorola?5Solutions?$AA@
CONST	SEGMENT
??_C@_0BD@PCKEPBKO@Motorola?5Solutions?$AA@ DB 'Motorola Solutions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KPNGPOOH@Honda?5Tsushin?5Kogyo?5Co?4?0?5Ltd?$AA@
CONST	SEGMENT
??_C@_0BN@KPNGPOOH@Honda?5Tsushin?5Kogyo?5Co?4?0?5Ltd?$AA@ DB 'Honda Tsus'
	DB	'hin Kogyo Co., Ltd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PNHCHLDH@Solid?5State?5System?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@PNHCHLDH@Solid?5State?5System?5Co?4?0?5Ltd?4?$AA@ DB 'Solid Sta'
	DB	'te System Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KANEMGNF@Whanam?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@KANEMGNF@Whanam?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Whanam Ele'
	DB	'ctronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FHGKBINA@Chant?5Sincere?5Co?4?0?5Ltd?$AA@
CONST	SEGMENT
??_C@_0BH@FHGKBINA@Chant?5Sincere?5Co?4?0?5Ltd?$AA@ DB 'Chant Sincere Co.'
	DB	', Ltd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KMAKLJKD@Dong?5Guan?5Shinko?5Wire?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@KMAKLJKD@Dong?5Guan?5Shinko?5Wire?5Co?4?0?5Ltd?4?$AA@ DB 'Dong '
	DB	'Guan Shinko Wire Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GADMIKAO@Billion?5Bright?5Limited?$AA@
CONST	SEGMENT
??_C@_0BH@GADMIKAO@Billion?5Bright?5Limited?$AA@ DB 'Billion Bright Limit'
	DB	'ed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IIBBHDLP@Sonix?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@IIBBHDLP@Sonix?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Sonix Techno'
	DB	'logy Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08EDJBOCE@Aeroflex?$AA@
CONST	SEGMENT
??_C@_08EDJBOCE@Aeroflex?$AA@ DB 'Aeroflex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BDCJOHPC@Taiyo?5Yuden?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BG@BDCJOHPC@Taiyo?5Yuden?5Co?4?0?5Ltd?4?$AA@ DB 'Taiyo Yuden Co., '
	DB	'Ltd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BJDBAEPG@Dura?5Micro?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BB@BJDBAEPG@Dura?5Micro?0?5Inc?4?$AA@ DB 'Dura Micro, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BIDPCKE@Hasbro?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0N@BIDPCKE@Hasbro?0?5Inc?4?$AA@ DB 'Hasbro, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EBNIPBJG@LTK?5International?5Limited?$AA@
CONST	SEGMENT
??_C@_0BK@EBNIPBJG@LTK?5International?5Limited?$AA@ DB 'LTK International'
	DB	' Limited', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GAPKJOJF@Elka?5International?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BI@GAPKJOJF@Elka?5International?5Ltd?4?$AA@ DB 'Elka International'
	DB	' Ltd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PBGCMNLB@Ericsson?5AB?$AA@
CONST	SEGMENT
??_C@_0M@PBGCMNLB@Ericsson?5AB?$AA@ DB 'Ericsson AB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OODBLDMG@Realtek?5Semiconductor?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BM@OODBLDMG@Realtek?5Semiconductor?5Corp?4?$AA@ DB 'Realtek Semico'
	DB	'nductor Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PKPGHPEE@Seagate?5Technology?5LLC?$AA@
CONST	SEGMENT
??_C@_0BH@PKPGHPEE@Seagate?5Technology?5LLC?$AA@ DB 'Seagate Technology L'
	DB	'LC', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JGDEFBDO@Murata?5Manufacturing?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@JGDEFBDO@Murata?5Manufacturing?5Co?4?0?5Ltd?4?$AA@ DB 'Murata M'
	DB	'anufacturing Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BLJMPEH@HTC?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BA@BLJMPEH@HTC?5Corporation?$AA@ DB 'HTC Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PGGKPFEM@O2Micro?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@PGGKPFEM@O2Micro?0?5Inc?4?$AA@ DB 'O2Micro, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DBGBIANO@ASIX?5Electronics?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BN@DBGBIANO@ASIX?5Electronics?5Corporation?$AA@ DB 'ASIX Electroni'
	DB	'cs Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DICOBJHO@Maxim?5Integrated?5Products?$AA@
CONST	SEGMENT
??_C@_0BK@DICOBJHO@Maxim?5Integrated?5Products?$AA@ DB 'Maxim Integrated '
	DB	'Products', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IGCLCEEO@Sinbon?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@IGCLCEEO@Sinbon?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Sinbon Ele'
	DB	'ctronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MJIIIHDL@Musical?5Electronics?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@MJIIIHDL@Musical?5Electronics?5Ltd?4?$AA@ DB 'Musical Electroni'
	DB	'cs Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GFHEPPBN@Olivetti?5S?4p?4A?$AA@
CONST	SEGMENT
??_C@_0P@GFHEPPBN@Olivetti?5S?4p?4A?$AA@ DB 'Olivetti S.p.A', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IGDJFEE@Pan?9Asia?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@IGDJFEE@Pan?9Asia?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Pan-Asia'
	DB	' Electronics Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KKOFHFLP@Yokogawa?5Electric?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BO@KKOFHFLP@Yokogawa?5Electric?5Corporation?$AA@ DB 'Yokogawa Elec'
	DB	'tric Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PLBMIBK@Electronic?5Warfare?5Associates?0?5I@
CONST	SEGMENT
??_C@_0CK@PLBMIBK@Electronic?5Warfare?5Associates?0?5I@ DB 'Electronic Wa'
	DB	'rfare Associates, Inc. (EWA)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HEOGBEPO@ASUSTek?5Computer?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BG@HEOGBEPO@ASUSTek?5Computer?5Inc?4?$AA@ DB 'ASUSTek Computer Inc'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMCEBPKI@Option?5NV?$AA@
CONST	SEGMENT
??_C@_09FMCEBPKI@Option?5NV?$AA@ DB 'Option NV', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CELKNPMM@Allion?5Test?5Labs?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@CELKNPMM@Allion?5Test?5Labs?0?5Inc?4?$AA@ DB 'Allion Test Labs,'
	DB	' Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HMAJKJ@Vimicro?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@HMAJKJ@Vimicro?5Corporation?$AA@ DB 'Vimicro Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EIBHCLN@SANYO?5Semiconductor?5Company?5Micr@
CONST	SEGMENT
??_C@_0CC@EIBHCLN@SANYO?5Semiconductor?5Company?5Micr@ DB 'SANYO Semicond'
	DB	'uctor Company Micro', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KFMMGOHA@Wincor?5Nixdorf?5GmbH?5?$CG?5Co?5KG?$AA@
CONST	SEGMENT
??_C@_0BM@KFMMGOHA@Wincor?5Nixdorf?5GmbH?5?$CG?5Co?5KG?$AA@ DB 'Wincor Ni'
	DB	'xdorf GmbH & Co KG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BPGMFHBM@Young?5Chang?5Co?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BF@BPGMFHBM@Young?5Chang?5Co?4?5Ltd?4?$AA@ DB 'Young Chang Co. Ltd'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BLIFGEAH@Japan?5Aviation?5Electronics?5Indus@
CONST	SEGMENT
??_C@_0CP@BLIFGEAH@Japan?5Aviation?5Electronics?5Indus@ DB 'Japan Aviatio'
	DB	'n Electronics Industry Ltd. (JAE)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JHAHKIDB@CHESEN?5ELECTRONICS?5CORP?4?$AA@
CONST	SEGMENT
??_C@_0BJ@JHAHKIDB@CHESEN?5ELECTRONICS?5CORP?4?$AA@ DB 'CHESEN ELECTRONIC'
	DB	'S CORP.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HDJGGMBN@Intertek?5NSTL?$AA@
CONST	SEGMENT
??_C@_0O@HDJGGMBN@Intertek?5NSTL?$AA@ DB 'Intertek NSTL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IJFMHNNO@Green?5House?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BG@IJFMHNNO@Green?5House?5Co?4?0?5Ltd?4?$AA@ DB 'Green House Co., '
	DB	'Ltd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBOGHGP@Broadcom?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0P@KBOGHGP@Broadcom?5Corp?4?$AA@ DB 'Broadcom Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FBNECLJJ@Mimaki?5Engineering?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@FBNECLJJ@Mimaki?5Engineering?5Co?4?0?5Ltd?4?$AA@ DB 'Mimaki Eng'
	DB	'ineering Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LHJHCFAG@COMPUTEX?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BD@LHJHCFAG@COMPUTEX?5Co?4?0?5Ltd?4?$AA@ DB 'COMPUTEX Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KGGFOALP@I?1O?5Interconnect?$AA@
CONST	SEGMENT
??_C@_0BB@KGGFOALP@I?1O?5Interconnect?$AA@ DB 'I/O Interconnect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IKEGAKKP@Hirose?5Electric?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BK@IKEGAKKP@Hirose?5Electric?5Co?4?0?5Ltd?4?$AA@ DB 'Hirose Electr'
	DB	'ic Co., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EKKNDOHK@Physio?9Control?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@EKKNDOHK@Physio?9Control?0?5Inc?4?$AA@ DB 'Physio-Control, Inc.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HPCCBBBB@HOYA?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BB@HPCCBBBB@HOYA?5Corporation?$AA@ DB 'HOYA Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MPNFCJBM@Jo?9Dan?5International?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@MPNFCJBM@Jo?9Dan?5International?0?5Inc?4?$AA@ DB 'Jo-Dan Intern'
	DB	'ational, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LAHNEDCJ@A?9FOUR?5TECH?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BG@LAHNEDCJ@A?9FOUR?5TECH?5CO?4?0?5LTD?4?$AA@ DB 'A-FOUR TECH CO.,'
	DB	' LTD.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05KFMIDCBE@Jungo?$AA@
CONST	SEGMENT
??_C@_05KFMIDCBE@Jungo?$AA@ DB 'Jungo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HNEJNPKP@Electronics?5Testing?5Center?0?5Taiw@
CONST	SEGMENT
??_C@_0CD@HNEJNPKP@Electronics?5Testing?5Center?0?5Taiw@ DB 'Electronics '
	DB	'Testing Center, Taiwan', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OJFDPOOK@Workbit?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@OJFDPOOK@Workbit?5Corporation?$AA@ DB 'Workbit Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JHLIIJEE@NISCA?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@JHLIIJEE@NISCA?5Corporation?$AA@ DB 'NISCA Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OHPOFJEM@Japan?5Cash?5Machine?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@OHPOFJEM@Japan?5Cash?5Machine?5Co?4?0?5Ltd?4?$AA@ DB 'Japan Cas'
	DB	'h Machine Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NGELPCKK@Lin?5Shiung?5Enterprise?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@NGELPCKK@Lin?5Shiung?5Enterprise?5Co?4?0?5Ltd?4?$AA@ DB 'Lin Sh'
	DB	'iung Enterprise Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NHOGNCFH@Contech?5Research?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@NHOGNCFH@Contech?5Research?0?5Inc?4?$AA@ DB 'Contech Research, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DOLEFDNC@TRIDENT?5MICROSYSTEMS?5?$CIFar?5East?$CJ?5@
CONST	SEGMENT
??_C@_0CF@DOLEFDNC@TRIDENT?5MICROSYSTEMS?5?$CIFar?5East?$CJ?5@ DB 'TRIDEN'
	DB	'T MICROSYSTEMS (Far East) Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LKCCNLNO@Polycom?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@LKCCNLNO@Polycom?0?5Inc?4?$AA@ DB 'Polycom, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DIONPOBP@Medialogic?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BH@DIONPOBP@Medialogic?5Corporation?$AA@ DB 'Medialogic Corporatio'
	DB	'n', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KLPBIJLK@Agilent?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@KLPBIJLK@Agilent?5Technologies?0?5Inc?4?$AA@ DB 'Agilent Techno'
	DB	'logies, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06HLMMPIBG@NVIDIA?$AA@
CONST	SEGMENT
??_C@_06HLMMPIBG@NVIDIA?$AA@ DB 'NVIDIA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LKMMOGNE@Kingston?5Technology?5Company?$AA@
CONST	SEGMENT
??_C@_0BM@LKMMOGNE@Kingston?5Technology?5Company?$AA@ DB 'Kingston Techno'
	DB	'logy Company', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PLHGNMC@J?4S?4T?4?5Mfg?4?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BG@PLHGNMC@J?4S?4T?4?5Mfg?4?5Co?4?0?5Ltd?4?$AA@ DB 'J.S.T. Mfg. Co'
	DB	'., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DPPDGGNF@Plextor?5LLC?$AA@
CONST	SEGMENT
??_C@_0M@DPPDGGNF@Plextor?5LLC?$AA@ DB 'Plextor LLC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDMCHING@Pixart?5Imaging?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@FDMCHING@Pixart?5Imaging?0?5Inc?4?$AA@ DB 'Pixart Imaging, Inc.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JMAMIBAH@Toshiba?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@JMAMIBAH@Toshiba?5Corporation?$AA@ DB 'Toshiba Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IJHLMKN@Dymo?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BB@IJHLMKN@Dymo?5Corporation?$AA@ DB 'Dymo Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OCKCLCDJ@Garmin?5International?$AA@
CONST	SEGMENT
??_C@_0BF@OCKCLCDJ@Garmin?5International?$AA@ DB 'Garmin International', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BNPBHCJB@Silicon?5Motion?0?5Inc?4?5?9?5Taiwan?$AA@
CONST	SEGMENT
??_C@_0BO@BNPBHCJB@Silicon?5Motion?0?5Inc?4?5?9?5Taiwan?$AA@ DB 'Silicon '
	DB	'Motion, Inc. - Taiwan', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DGGIOLK@Audio?9Technica?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BF@DGGIOLK@Audio?9Technica?5Corp?4?$AA@ DB 'Audio-Technica Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DEEADHEC@FARADAY?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BJ@DEEADHEC@FARADAY?5Technology?5Corp?4?$AA@ DB 'FARADAY Technolog'
	DB	'y Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ILLLPBKP@AuthenTec?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BA@ILLLPBKP@AuthenTec?0?5Inc?4?$AA@ DB 'AuthenTec, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NMFIDNE@Gemalto?5SA?$AA@
CONST	SEGMENT
??_C@_0L@NMFIDNE@Gemalto?5SA?$AA@ DB 'Gemalto SA', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PMKDDGDC@Pioneer?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@PMKDDGDC@Pioneer?5Corporation?$AA@ DB 'Pioneer Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JNLBBKDI@TAI?5TWUN?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BO@JNLBBKDI@TAI?5TWUN?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@ DB 'TAI TWUN'
	DB	' ENTERPRISE CO., LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HFFFIPIB@Texas?5Instruments?5Japan?$AA@
CONST	SEGMENT
??_C@_0BI@HFFFIPIB@Texas?5Instruments?5Japan?$AA@ DB 'Texas Instruments J'
	DB	'apan', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CFIMBAIC@RadioShack?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BH@CFIMBAIC@RadioShack?5Corporation?$AA@ DB 'RadioShack Corporatio'
	DB	'n', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PNBHHOAN@Icron?5Technologies?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BP@PNBHHOAN@Icron?5Technologies?5Corporation?$AA@ DB 'Icron Techno'
	DB	'logies Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EMBEKEAB@Lauterbach?5GmbH?$AA@
CONST	SEGMENT
??_C@_0BA@EMBEKEAB@Lauterbach?5GmbH?$AA@ DB 'Lauterbach GmbH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FKPDHKLP@A?9Tec?5Subsystem?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BG@FKPDHKLP@A?9Tec?5Subsystem?0?5Inc?4?$AA@ DB 'A-Tec Subsystem, I'
	DB	'nc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CEKEIHLM@MEC?5IMEX?5INC?1HPT?$AA@
CONST	SEGMENT
??_C@_0BB@CEKEIHLM@MEC?5IMEX?5INC?1HPT?$AA@ DB 'MEC IMEX INC/HPT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DELPFPOB@Argosy?5Research?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@DELPFPOB@Argosy?5Research?5Inc?4?$AA@ DB 'Argosy Research Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@POAJBKGF@Action?5Star?5Enterprise?5Co?4?0?5Ltd?4@
CONST	SEGMENT
??_C@_0CB@POAJBKGF@Action?5Star?5Enterprise?5Co?4?0?5Ltd?4@ DB 'Action St'
	DB	'ar Enterprise Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CAINGGKC@Evermuch?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@CAINGGKC@Evermuch?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Evermuch '
	DB	'Technology Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FDLEJAIK@Dotop?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@FDLEJAIK@Dotop?5Technology?0?5Inc?4?$AA@ DB 'Dotop Technology, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OPFGKFFJ@Century?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@OPFGKFFJ@Century?5Corporation?$AA@ DB 'Century Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NBGJMCGE@Circuit?5Assembly?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BH@NBGJMCGE@Circuit?5Assembly?5Corp?4?$AA@ DB 'Circuit Assembly Co'
	DB	'rp.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BNLONGOH@David?5Electronics?5Company?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@BNLONGOH@David?5Electronics?5Company?0?5Ltd?4?$AA@ DB 'David El'
	DB	'ectronics Company, Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ODMCNPPD@Arasan?5Chip?5Systems?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BJ@ODMCNPPD@Arasan?5Chip?5Systems?5Inc?4?$AA@ DB 'Arasan Chip Syst'
	DB	'ems Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JKHOIPCI@Casio?5Computer?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@JKHOIPCI@Casio?5Computer?5Co?4?0?5Ltd?4?$AA@ DB 'Casio Computer'
	DB	' Co., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FNDINGLK@Carry?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@FNDINGLK@Carry?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Carry Techno'
	DB	'logy Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EGFACLDP@AVerMedia?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BN@EGFACLDP@AVerMedia?5Technologies?0?5Inc?4?$AA@ DB 'AVerMedia Te'
	DB	'chnologies, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MGBHEDBN@TIME?5Interconnect?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BH@MGBHEDBN@TIME?5Interconnect?5Ltd?4?$AA@ DB 'TIME Interconnect L'
	DB	'td.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NJLEDFOB@OLYMPUS?5CORPORATION?$AA@
CONST	SEGMENT
??_C@_0BE@NJLEDFOB@OLYMPUS?5CORPORATION?$AA@ DB 'OLYMPUS CORPORATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OCMFCBHB@Plustek?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@OCMFCBHB@Plustek?0?5Inc?4?$AA@ DB 'Plustek, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MPFKAMGD@National?5Technical?5Systems?$AA@
CONST	SEGMENT
??_C@_0BL@MPFKAMGD@National?5Technical?5Systems?$AA@ DB 'National Technic'
	DB	'al Systems', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LGBOFDFN@Copartner?5Technology?5Corporation@
CONST	SEGMENT
??_C@_0CB@LGBOFDFN@Copartner?5Technology?5Corporation@ DB 'Copartner Tech'
	DB	'nology Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KACIGGGG@SanDisk?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@KACIGGGG@SanDisk?5Corporation?$AA@ DB 'SanDisk Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OBNCJIEM@Fairchild?5Semiconductor?$AA@
CONST	SEGMENT
??_C@_0BI@OBNCJIEM@Fairchild?5Semiconductor?$AA@ DB 'Fairchild Semiconduc'
	DB	'tor', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IKDDLBBP@Comda?5Advanced?5Technology?5Corpor@
CONST	SEGMENT
??_C@_0CG@IKDDLBBP@Comda?5Advanced?5Technology?5Corpor@ DB 'Comda Advance'
	DB	'd Technology Corporation', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FCBANMAL@HID?5Global?5GmbH?$AA@
CONST	SEGMENT
??_C@_0BA@FCBANMAL@HID?5Global?5GmbH?$AA@ DB 'HID Global GmbH', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HFGLNKOO@Jess?9Link?5Products?5Co?4?0?5Ltd?4?5?$CIJP@
CONST	SEGMENT
??_C@_0CD@HFGLNKOO@Jess?9Link?5Products?5Co?4?0?5Ltd?4?5?$CIJP@ DB 'Jess-'
	DB	'Link Products Co., Ltd. (JPC)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PCICHEDF@Cyber?5Power?5Systems?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BK@PCICHEDF@Cyber?5Power?5Systems?0?5Inc?4?$AA@ DB 'Cyber Power Sy'
	DB	'stems, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PJBMJABB@Lorom?5Industrial?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@PJBMJABB@Lorom?5Industrial?5Co?4?0?5Ltd?4?$AA@ DB 'Lorom Indust'
	DB	'rial Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IFGJOCOG@Sunix?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BA@IFGJOCOG@Sunix?5Co?4?0?5Ltd?4?$AA@ DB 'Sunix Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NNOCEOFA@Imation?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0O@NNOCEOFA@Imation?5Corp?4?$AA@ DB 'Imation Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JCFMJDGG@Magic?5Control?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BP@JCFMJDGG@Magic?5Control?5Technology?5Corp?4?$AA@ DB 'Magic Cont'
	DB	'rol Technology Corp.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HDLCMAHN@Excel?5Cell?5Electronic?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@HDLCMAHN@Excel?5Cell?5Electronic?5Co?4?0?5Ltd?4?$AA@ DB 'Excel '
	DB	'Cell Electronic Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MKILJNBK@Oki?5Electric?5Industry?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0CA@MKILJNBK@Oki?5Electric?5Industry?5Co?4?0?5Ltd?4?$AA@ DB 'Oki El'
	DB	'ectric Industry Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MDDCDOBA@Heisei?5Electronics?5Co?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BM@MDDCDOBA@Heisei?5Electronics?5Co?4?5Ltd?4?$AA@ DB 'Heisei Elect'
	DB	'ronics Co. Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FPPDHAGC@Mitsubishi?5Electric?5Corporation?$AA@
CONST	SEGMENT
??_C@_0CA@FPPDHAGC@Mitsubishi?5Electric?5Corporation?$AA@ DB 'Mitsubishi '
	DB	'Electric Corporation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IGNPDHHH@SIIG?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0L@IGNPDHHH@SIIG?0?5Inc?4?$AA@ DB 'SIIG, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IAMJELKE@Bizlink?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BJ@IAMJELKE@Bizlink?5Technology?0?5Inc?4?$AA@ DB 'Bizlink Technolo'
	DB	'gy, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PBNHDNIB@Leoco?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@PBNHDNIB@Leoco?5Corporation?$AA@ DB 'Leoco Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBMIOCIB@Oki?5Data?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BF@KBMIOCIB@Oki?5Data?5Corporation?$AA@ DB 'Oki Data Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MFHNCDAI@Pixela?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@MFHNCDAI@Pixela?5Corporation?$AA@ DB 'Pixela Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFEICALO@Testronic?5Labs?$AA@
CONST	SEGMENT
??_C@_0P@DFEICALO@Testronic?5Labs?$AA@ DB 'Testronic Labs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NHGJCBNO@Greatland?5Electronics?5Taiwan?5Ltd@
CONST	SEGMENT
??_C@_0CC@NHGJCBNO@Greatland?5Electronics?5Taiwan?5Ltd@ DB 'Greatland Ele'
	DB	'ctronics Taiwan Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KJLDAPCA@Xiamen?5Doowell?5Electron?5Co?4?0?5Ltd@
CONST	SEGMENT
??_C@_0CC@KJLDAPCA@Xiamen?5Doowell?5Electron?5Co?4?0?5Ltd@ DB 'Xiamen Doo'
	DB	'well Electron Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KEFLECEP@MadCatz?5Europe?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BE@KEFLECEP@MadCatz?5Europe?5Ltd?4?$AA@ DB 'MadCatz Europe Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EMAGANPI@Tektronix?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BA@EMAGANPI@Tektronix?0?5Inc?4?$AA@ DB 'Tektronix, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HLLIJJKK@Hagiwara?5Solutions?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BN@HLLIJJKK@Hagiwara?5Solutions?5Co?4?0?5Ltd?4?$AA@ DB 'Hagiwara S'
	DB	'olutions Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LFPCEBHN@Golden?5Bridge?5Electech?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BM@LFPCEBHN@Golden?5Bridge?5Electech?5Inc?4?$AA@ DB 'Golden Bridge'
	DB	' Electech Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09JOKCKELG@Dell?5Inc?4?$AA@
CONST	SEGMENT
??_C@_09JOKCKELG@Dell?5Inc?4?$AA@ DB 'Dell Inc.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PDKHMLGO@Prolific?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BK@PDKHMLGO@Prolific?5Technology?0?5Inc?4?$AA@ DB 'Prolific Techno'
	DB	'logy, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GHMCMJEK@ACARD?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BH@GHMCMJEK@ACARD?5Technology?5Corp?4?$AA@ DB 'ACARD Technology Co'
	DB	'rp.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BPDLABPC@Total?5Technologies?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@BPDLABPC@Total?5Technologies?0?5Ltd?4?$AA@ DB 'Total Technologi'
	DB	'es, Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PKNBNCAJ@Hamamatsu?5Photonics?5K?4K?4?$AA@
CONST	SEGMENT
??_C@_0BJ@PKNBNCAJ@Hamamatsu?5Photonics?5K?4K?4?$AA@ DB 'Hamamatsu Photon'
	DB	'ics K.K.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PAFBBAIH@TSAY?9E?5?$CIBVI?$CJ?5International?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0CA@PAFBBAIH@TSAY?9E?5?$CIBVI?$CJ?5International?5Inc?4?$AA@ DB 'TS'
	DB	'AY-E (BVI) International Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MJJJJEAM@Good?5Way?5Technology?5Co?4?0?5Ltd?4?5?$CG?5@
CONST	SEGMENT
??_C@_0DD@MJJJJEAM@Good?5Way?5Technology?5Co?4?0?5Ltd?4?5?$CG?5@ DB 'Good'
	DB	' Way Technology Co., Ltd. & GWC technology Inc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DBNMJIBL@Sigma?5Designs?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BE@DBNMJIBL@Sigma?5Designs?0?5Inc?4?$AA@ DB 'Sigma Designs, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HLMOOHDB@Tekcon?5Electronics?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BJ@HLMOOHDB@Tekcon?5Electronics?5Corp?4?$AA@ DB 'Tekcon Electronic'
	DB	's Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JPOIGLAH@Glory?5Mark?5Electronic?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BL@JPOIGLAH@Glory?5Mark?5Electronic?5Ltd?4?$AA@ DB 'Glory Mark Ele'
	DB	'ctronic Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BBNBDGIM@Space?5Shuttle?5Hi?9Tech?5Co?4?0Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@BBNBDGIM@Space?5Shuttle?5Hi?9Tech?5Co?4?0Ltd?4?$AA@ DB 'Space S'
	DB	'huttle Hi-Tech Co.,Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPHBIEFO@WIBU?9Systems?5AG?$AA@
CONST	SEGMENT
??_C@_0BA@BPHBIEFO@WIBU?9Systems?5AG?$AA@ DB 'WIBU-Systems AG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HBOMJHJG@Suyin?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@HBOMJHJG@Suyin?5Corporation?$AA@ DB 'Suyin Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EBDNAMPI@Ji?9Haw?5Industrial?5Co?4?0?5Ltd?$AA@
CONST	SEGMENT
??_C@_0BL@EBDNAMPI@Ji?9Haw?5Industrial?5Co?4?0?5Ltd?$AA@ DB 'Ji-Haw Indus'
	DB	'trial Co., Ltd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PMGKCBAF@Analog?5Devices?0?5Inc?4?5Development@
CONST	SEGMENT
??_C@_0CH@PMGKCBAF@Analog?5Devices?0?5Inc?4?5Development@ DB 'Analog Devi'
	DB	'ces, Inc. Development Tools', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GAMNDPPF@Chrontel?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0P@GAMNDPPF@Chrontel?0?5Inc?4?$AA@ DB 'Chrontel, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBKMBCEI@Avision?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@JBKMBCEI@Avision?0?5Inc?4?$AA@ DB 'Avision, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@POFLHCFC@MAIN?5SUPER?5ENTERPRISES?5CO?4?0LTD?4?$AA@
CONST	SEGMENT
??_C@_0CA@POFLHCFC@MAIN?5SUPER?5ENTERPRISES?5CO?4?0LTD?4?$AA@ DB 'MAIN SU'
	DB	'PER ENTERPRISES CO.,LTD.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCAKJIAA@Littelfuse?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BB@GCAKJIAA@Littelfuse?0?5Inc?4?$AA@ DB 'Littelfuse, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OFHNPHHH@Seiko?5Instruments?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@OFHNPHHH@Seiko?5Instruments?5Inc?4?$AA@ DB 'Seiko Instruments I'
	DB	'nc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BNDJFIFN@TransAct?5Technologies?5Incorporat@
CONST	SEGMENT
??_C@_0CD@BNDJFIFN@TransAct?5Technologies?5Incorporat@ DB 'TransAct Techn'
	DB	'ologies Incorporated', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EHGAEDDA@Totoku?5Electric?5Co?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BK@EHGAEDDA@Totoku?5Electric?5Co?4?0?5LTD?4?$AA@ DB 'Totoku Electr'
	DB	'ic Co., LTD.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IBGJKEKA@Joinsoon?5Electronics?5Mfg?4?5Co?4?0?5L@
CONST	SEGMENT
??_C@_0CE@IBGJKEKA@Joinsoon?5Electronics?5Mfg?4?5Co?4?0?5L@ DB 'Joinsoon '
	DB	'Electronics Mfg. Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LJAJLGJE@SMK?5Manufacturing?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@LJAJLGJE@SMK?5Manufacturing?5Inc?4?$AA@ DB 'SMK Manufacturing I'
	DB	'nc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HAMNADII@Novatek?5Microelectronics?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BP@HAMNADII@Novatek?5Microelectronics?5Corp?4?$AA@ DB 'Novatek Mic'
	DB	'roelectronics Corp.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PJDPEADK@LeCroy?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@PJDPEADK@LeCroy?5Corporation?$AA@ DB 'LeCroy Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IOEIJMCL@Datalogic?5Scanning?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BJ@IOEIJMCL@Datalogic?5Scanning?0?5Inc?4?$AA@ DB 'Datalogic Scanni'
	DB	'ng, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NBAANMIA@Unixtar?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BI@NBAANMIA@Unixtar?5Technology?5Inc?4?$AA@ DB 'Unixtar Technology'
	DB	' Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KBGKOOGJ@Fuji?5Electric?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BI@KBGKOOGJ@Fuji?5Electric?5Co?4?0?5Ltd?4?$AA@ DB 'Fuji Electric C'
	DB	'o., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CKIEML@Genesys?5Logic?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BE@CKIEML@Genesys?5Logic?0?5Inc?4?$AA@ DB 'Genesys Logic, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JPKFBBCH@Symbol?5Technologies?$AA@
CONST	SEGMENT
??_C@_0BE@JPKFBBCH@Symbol?5Technologies?$AA@ DB 'Symbol Technologies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNOLCDCN@Lexar?5Media?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BC@CNOLCDCN@Lexar?5Media?0?5Inc?4?$AA@ DB 'Lexar Media, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OADDMKLB@Microtek?5International?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BM@OADDMKLB@Microtek?5International?5Inc?4?$AA@ DB 'Microtek Inter'
	DB	'national Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DNOMCPDN@Ricoh?5Company?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BD@DNOMCPDN@Ricoh?5Company?5Ltd?4?$AA@ DB 'Ricoh Company Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IMDHJGED@Foxlink?1Cheng?5Uei?5Precision?5Indu@
CONST	SEGMENT
??_C@_0CP@IMDHJGED@Foxlink?1Cheng?5Uei?5Precision?5Indu@ DB 'Foxlink/Chen'
	DB	'g Uei Precision Industry Co., Ltd.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JJANANCF@Qualcomm?0?5Inc?$AA@
CONST	SEGMENT
??_C@_0O@JJANANCF@Qualcomm?0?5Inc?$AA@ DB 'Qualcomm, Inc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ILGCAFHO@Kawasaki?5Microelectronics?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0CA@ILGCAFHO@Kawasaki?5Microelectronics?0?5Inc?4?$AA@ DB 'Kawasaki '
	DB	'Microelectronics, Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BDKIEMDH@Tyco?5Electronics?$AA@
CONST	SEGMENT
??_C@_0BB@BDKIEMDH@Tyco?5Electronics?$AA@ DB 'Tyco Electronics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DJDIGDEG@National?5Instruments?$AA@
CONST	SEGMENT
??_C@_0BF@DJDIGDEG@National?5Instruments?$AA@ DB 'National Instruments', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BEKADALE@Y?4C?4?5Cable?5U?4S?4A?4?0?5Inc?$AA@
CONST	SEGMENT
??_C@_0BH@BEKADALE@Y?4C?4?5Cable?5U?4S?4A?4?0?5Inc?$AA@ DB 'Y.C. Cable U.'
	DB	'S.A., Inc', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05EBJDGKGA@Apple?$AA@
CONST	SEGMENT
??_C@_05EBJDGKGA@Apple?$AA@ DB 'Apple', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PALNNPFJ@OmniVision?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BO@PALNNPFJ@OmniVision?5Technologies?0?5Inc?4?$AA@ DB 'OmniVision '
	DB	'Technologies, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05EENIFCCI@LaCie?$AA@
CONST	SEGMENT
??_C@_05EENIFCCI@LaCie?$AA@ DB 'LaCie', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DLALOKFF@Iomega?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@DLALOKFF@Iomega?5Corporation?$AA@ DB 'Iomega Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LGOLJEOJ@OMRON?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@LGOLJEOJ@OMRON?5Corporation?$AA@ DB 'OMRON Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CKEFINHN@Alcor?5Micro?0?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BD@CKEFINHN@Alcor?5Micro?0?5Corp?4?$AA@ DB 'Alcor Micro, Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PNCFOBBM@RATOC?5Systems?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BE@PNCFOBBM@RATOC?5Systems?0?5Inc?4?$AA@ DB 'RATOC Systems, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CDPILELF@Roland?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@CDPILELF@Roland?5Corporation?$AA@ DB 'Roland Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DBEKGGBP@AVM?5GmbH?$AA@
CONST	SEGMENT
??_C@_08DBEKGGBP@AVM?5GmbH?$AA@ DB 'AVM GmbH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DLENFJNK@Y?9E?5Data?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0P@DLENFJNK@Y?9E?5Data?0?5Inc?4?$AA@ DB 'Y-E Data, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JDHIHHMP@BAFO?1Quality?5Computer?5Accessorie@
CONST	SEGMENT
??_C@_0CC@JDHIHHMP@BAFO?1Quality?5Computer?5Accessorie@ DB 'BAFO/Quality '
	DB	'Computer Accessories', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DJMACOGF@Zoran?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@DJMACOGF@Zoran?5Corporation?$AA@ DB 'Zoran Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BPNCPPJL@Conexant?5Systems?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@BPNCPPJL@Conexant?5Systems?0?5Inc?4?$AA@ DB 'Conexant Systems, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PCAMLHGM@WACOM?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BA@PCAMLHGM@WACOM?5Co?4?0?5Ltd?4?$AA@ DB 'WACOM Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LLCBPJLE@Cadence?5Design?5Systems?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BN@LLCBPJLE@Cadence?5Design?5Systems?0?5Inc?4?$AA@ DB 'Cadence Des'
	DB	'ign Systems, Inc.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FGPDBDMF@ATEN?5International?5Co?4?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BM@FGPDBDMF@ATEN?5International?5Co?4?5Ltd?4?$AA@ DB 'ATEN Interna'
	DB	'tional Co. Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BLKLAKEJ@Fuji?5Xerox?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BF@BLKLAKEJ@Fuji?5Xerox?5Co?4?0?5Ltd?4?$AA@ DB 'Fuji Xerox Co., Lt'
	DB	'd.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FOPBDEC@Sony?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BB@FOPBDEC@Sony?5Corporation?$AA@ DB 'Sony Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JMAENH@Synopsys?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0P@JMAENH@Synopsys?0?5Inc?4?$AA@ DB 'Synopsys, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OKBFFENA@Wacom?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BH@OKBFFENA@Wacom?5Technology?5Corp?4?$AA@ DB 'Wacom Technology Co'
	DB	'rp.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EAHBAECN@Aladdin?5Knowledge?5Systems?$AA@
CONST	SEGMENT
??_C@_0BK@EAHBAECN@Aladdin?5Knowledge?5Systems?$AA@ DB 'Aladdin Knowledge'
	DB	' Systems', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OEIMDHJB@PLX?5Technology?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@OEIMDHJB@PLX?5Technology?0?5Inc?4?$AA@ DB 'PLX Technology, Inc.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MPHIFDML@ACON?0?5Advanced?9Connectek?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BP@MPHIFDML@ACON?0?5Advanced?9Connectek?0?5Inc?4?$AA@ DB 'ACON, Ad'
	DB	'vanced-Connectek, Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IKHGDMKC@Taiwan?5Semiconductor?5Manufacturi@
CONST	SEGMENT
??_C@_0CH@IKHGDMKC@Taiwan?5Semiconductor?5Manufacturi@ DB 'Taiwan Semicon'
	DB	'ductor Manufacturing Co.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CJECLAIC@American?5Power?5Conversion?$AA@
CONST	SEGMENT
??_C@_0BK@CJECLAIC@American?5Power?5Conversion?$AA@ DB 'American Power Co'
	DB	'nversion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IEJECICL@Star?5Micronics?5Co?4?0?5LTD?$AA@
CONST	SEGMENT
??_C@_0BI@IEJECICL@Star?5Micronics?5Co?4?0?5LTD?$AA@ DB 'Star Micronics C'
	DB	'o., LTD', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MHMGALMF@Longwell?5Electronics?1Longwell?5Co@
CONST	SEGMENT
??_C@_0CG@MHMGALMF@Longwell?5Electronics?1Longwell?5Co@ DB 'Longwell Elec'
	DB	'tronics/Longwell Company', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MNHCACLA@FCI?5Electronics?$AA@
CONST	SEGMENT
??_C@_0BA@MNHCACLA@FCI?5Electronics?$AA@ DB 'FCI Electronics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JPLKCFJN@Belkin?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@JPLKCFJN@Belkin?5Corporation?$AA@ DB 'Belkin Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OMIFCFDP@Hosiden?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@OMIFCFDP@Hosiden?5Corporation?$AA@ DB 'Hosiden Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HPKDLJPE@Fujikura?1DDK?$AA@
CONST	SEGMENT
??_C@_0N@HPKDLJPE@Fujikura?1DDK?$AA@ DB 'Fujikura/DDK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LAOEDIBA@PFU?5Limited?$AA@
CONST	SEGMENT
??_C@_0M@LAOEDIBA@PFU?5Limited?$AA@ DB 'PFU Limited', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EENPEENP@SUNPLUS?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@
CONST	SEGMENT
??_C@_0BN@EENPEENP@SUNPLUS?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@ DB 'SUNPLUS TE'
	DB	'CHNOLOGY CO., LTD.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LIIOOGBH@Brother?5Industries?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BJ@LIIOOGBH@Brother?5Industries?0?5Ltd?4?$AA@ DB 'Brother Industri'
	DB	'es, Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JIJDPPMO@Newnex?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BI@JIJDPPMO@Newnex?5Technology?5Corp?4?$AA@ DB 'Newnex Technology '
	DB	'Corp.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DEPAFADD@Chicony?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@DEPAFADD@Chicony?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Chicony E'
	DB	'lectronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EFCPDDGG@Tokyo?5Electron?5Device?5Limited?$AA@
CONST	SEGMENT
??_C@_0BO@EFCPDDGG@Tokyo?5Electron?5Device?5Limited?$AA@ DB 'Tokyo Electr'
	DB	'on Device Limited', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BJLCCIIK@Northstar?5Systems?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BI@BJLCCIIK@Northstar?5Systems?5Corp?4?$AA@ DB 'Northstar Systems '
	DB	'Corp.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CGAOADOO@Samsung?5Electronics?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@CGAOADOO@Samsung?5Electronics?5Co?4?0?5Ltd?4?$AA@ DB 'Samsung E'
	DB	'lectronics Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LGJOJJNH@SCM?5Microsystems?$AA@
CONST	SEGMENT
??_C@_0BB@LGJOJJNH@SCM?5Microsystems?$AA@ DB 'SCM Microsystems', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LFOEADKM@Exar?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BB@LFOEADKM@Exar?5Corporation?$AA@ DB 'Exar Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NGIIFMHF@Sharp?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@NGIIFMHF@Sharp?5Corporation?$AA@ DB 'Sharp Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HPBJICLA@Panasonic?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BG@HPBJICLA@Panasonic?5Corporation?$AA@ DB 'Panasonic Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BJMPMCDF@Holtek?5Semiconductor?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@BJMPMCDF@Holtek?5Semiconductor?0?5Inc?4?$AA@ DB 'Holtek Semicon'
	DB	'ductor, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GLLPJAAH@Microchip?5Technology?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BK@GLLPJAAH@Microchip?5Technology?5Inc?4?$AA@ DB 'Microchip Techno'
	DB	'logy Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CIDIGMJE@ST?9Ericsson?$AA@
CONST	SEGMENT
??_C@_0M@CIDIGMJE@ST?9Ericsson?$AA@ DB 'ST-Ericsson', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DGJHAIHG@FUJIFILM?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BF@DGJHAIHG@FUJIFILM?5Corporation?$AA@ DB 'FUJIFILM Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CAOGFALO@Lite?9On?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BJ@CAOGFALO@Lite?9On?5Technology?5Corp?4?$AA@ DB 'Lite-On Technolo'
	DB	'gy Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MFGIPGKK@Fujitsu?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0N@MFGIPGKK@Fujitsu?5Ltd?4?$AA@ DB 'Fujitsu Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NAOBNEME@I?9O?5Data?5Device?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BG@NAOBNEME@I?9O?5Data?5Device?0?5Inc?4?$AA@ DB 'I-O Data Device, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LODEJCJJ@Seiko?5Epson?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BC@LODEJCJJ@Seiko?5Epson?5Corp?4?$AA@ DB 'Seiko Epson Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IBBFBLCL@Compal?5Electronics?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BJ@IBBFBLCL@Compal?5Electronics?0?5Inc?4?$AA@ DB 'Compal Electroni'
	DB	'cs, Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@POFNKNIM@ROHM?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0P@POFNKNIM@ROHM?5Co?4?0?5Ltd?4?$AA@ DB 'ROHM Co., Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FGCLJBBL@Cypress?5Semiconductor?$AA@
CONST	SEGMENT
??_C@_0BG@FGCLJBBL@Cypress?5Semiconductor?$AA@ DB 'Cypress Semiconductor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HJPMHLJH@Pan?5International?$AA@
CONST	SEGMENT
??_C@_0BC@HJPMHLJH@Pan?5International?$AA@ DB 'Pan International', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GNNADKEG@Nikon?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@GNNADKEG@Nikon?5Corporation?$AA@ DB 'Nikon Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GLDEECEB@Canon?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0L@GLDEECEB@Canon?5Inc?4?$AA@ DB 'Canon Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OEADKIBB@Visioneer?$AA@
CONST	SEGMENT
??_C@_09OEADKIBB@Visioneer?$AA@ DB 'Visioneer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EDCNNFOI@Hitachi?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0O@EDCNNFOI@Hitachi?0?5Ltd?4?$AA@ DB 'Hitachi, Ltd.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBNNEMMM@Yamaha?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BD@LBNNEMMM@Yamaha?5Corporation?$AA@ DB 'Yamaha Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KONCBIDB@ITE?5Tech?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@KONCBIDB@ITE?5Tech?5Inc?4?$AA@ DB 'ITE Tech Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OEHDDJBP@Foxconn?5?1?5Hon?5Hai?$AA@
CONST	SEGMENT
??_C@_0BC@OEHDDJBP@Foxconn?5?1?5Hon?5Hai?$AA@ DB 'Foxconn / Hon Hai', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KBJBCOHP@STMicroelectronics?$AA@
CONST	SEGMENT
??_C@_0BD@KBJBCOHP@STMicroelectronics?$AA@ DB 'STMicroelectronics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OKFLBHJF@Kyocera?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BE@OKFLBHJF@Kyocera?5Corporation?$AA@ DB 'Kyocera Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MGJHDLEM@Toshiba?5America?5Info?4?5Systems?0?5I@
CONST	SEGMENT
??_C@_0CE@MGJHDLEM@Toshiba?5America?5Info?4?5Systems?0?5I@ DB 'Toshiba Am'
	DB	'erica Info. Systems, Inc.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JKCENOI@Plantronics?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BC@JKCENOI@Plantronics?0?5Inc?4?$AA@ DB 'Plantronics, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JMLOFGEB@LSI?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BA@JMLOFGEB@LSI?5Corporation?$AA@ DB 'LSI Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMJDEFAN@Logitech?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@NMJDEFAN@Logitech?5Inc?4?$AA@ DB 'Logitech Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JEFPHDAK@American?5Megatrends?$AA@
CONST	SEGMENT
??_C@_0BE@JEFPHDAK@American?5Megatrends?$AA@ DB 'American Megatrends', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JJGMGNMK@Wieson?5Technologies?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BO@JJGMGNMK@Wieson?5Technologies?5Co?4?0?5Ltd?4?$AA@ DB 'Wieson Te'
	DB	'chnologies Co., Ltd.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05CFGIIEPJ@EATON?$AA@
CONST	SEGMENT
??_C@_05CFGIIEPJ@EATON?$AA@ DB 'EATON', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CABKABLN@Primax?5Electronics?$AA@
CONST	SEGMENT
??_C@_0BD@CABKABLN@Primax?5Electronics?$AA@ DB 'Primax Electronics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOBPLLNH@Microsoft?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BG@EOBPLLNH@Microsoft?5Corporation?$AA@ DB 'Microsoft Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EAFCJGLH@Renesas?5Electronics?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BK@EAFCJGLH@Renesas?5Electronics?5Corp?4?$AA@ DB 'Renesas Electron'
	DB	'ics Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CIDHCDNI@KYE?5Systems?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BC@CIDHCDNI@KYE?5Systems?5Corp?4?$AA@ DB 'KYE Systems Corp.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JOFOMFLH@Silicon?5Integrated?5Systems?5Corp?4@
CONST	SEGMENT
??_C@_0CB@JOFOMFLH@Silicon?5Integrated?5Systems?5Corp?4@ DB 'Silicon Inte'
	DB	'grated Systems Corp.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NEDOGEDE@Texas?5Instruments?$AA@
CONST	SEGMENT
??_C@_0BC@NEDOGEDE@Texas?5Instruments?$AA@ DB 'Texas Instruments', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LOPMEJIG@Alps?5Electric?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BI@LOPMEJIG@Alps?5Electric?5Co?4?0?5Ltd?4?$AA@ DB 'Alps Electric C'
	DB	'o., Ltd.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LFBOMFGA@EIZO?5NANAO?5CORPORATION?$AA@
CONST	SEGMENT
??_C@_0BH@LFBOMFGA@EIZO?5NANAO?5CORPORATION?$AA@ DB 'EIZO NANAO CORPORATI'
	DB	'ON', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KCFEHCNK@Lexmark?5International?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BL@KCFEHCNK@Lexmark?5International?5Inc?4?$AA@ DB 'Lexmark Interna'
	DB	'tional Inc.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PDGAJDKJ@Advanced?5Micro?5Devices?$AA@
CONST	SEGMENT
??_C@_0BH@PDGAJDKJ@Advanced?5Micro?5Devices?$AA@ DB 'Advanced Micro Devic'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BGJHIBOH@Fujitsu?5Component?5Limited?$AA@
CONST	SEGMENT
??_C@_0BK@BGJHIBOH@Fujitsu?5Component?5Limited?$AA@ DB 'Fujitsu Component'
	DB	' Limited', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JMLDMEEO@Molex?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0L@JMLDMEEO@Molex?5Inc?4?$AA@ DB 'Molex Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JKLOLBDG@SMSC?$AA@
CONST	SEGMENT
??_C@_04JKLOLBDG@SMSC?$AA@ DB 'SMSC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LOIKONEK@Nokia?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@LOIKONEK@Nokia?5Corporation?$AA@ DB 'Nokia Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CDIDDBG@Creative?5Labs?$AA@
CONST	SEGMENT
??_C@_0O@CDIDDBG@Creative?5Labs?$AA@ DB 'Creative Labs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BBLEBCKI@Nuvoton?5Technology?5Corp?4?$AA@
CONST	SEGMENT
??_C@_0BJ@BBLEBCKI@Nuvoton?5Technology?5Corp?4?$AA@ DB 'Nuvoton Technolog'
	DB	'y Corp.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EJPGPDCC@Giga?9Byte?5Technology?5Co?4?0?5Ltd?4?$AA@
CONST	SEGMENT
??_C@_0BP@EJPGPDCC@Giga?9Byte?5Technology?5Co?4?0?5Ltd?4?$AA@ DB 'Giga-By'
	DB	'te Technology Co., Ltd.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HBBMPLAJ@BUFFALO?5INC?4?$AA@
CONST	SEGMENT
??_C@_0N@HBBMPLAJ@BUFFALO?5INC?4?$AA@ DB 'BUFFALO INC.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DMJKNCDK@MCCI?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BB@DMJKNCDK@MCCI?5Corporation?$AA@ DB 'MCCI Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LEHBDMGE@VIA?5Technologies?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BH@LEHBDMGE@VIA?5Technologies?0?5Inc?4?$AA@ DB 'VIA Technologies, '
	DB	'Inc.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCNGEJDK@Weltrend?5Semiconductor?$AA@
CONST	SEGMENT
??_C@_0BH@JCNGEJDK@Weltrend?5Semiconductor?$AA@ DB 'Weltrend Semiconducto'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DEIKAEKL@Eastman?5Kodak?5Company?$AA@
CONST	SEGMENT
??_C@_0BG@DEIKAEKL@Eastman?5Kodak?5Company?$AA@ DB 'Eastman Kodak Company'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KPLBOCAE@NEC?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BA@KPLBOCAE@NEC?5Corporation?$AA@ DB 'NEC Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PKMDPELO@Quanta?5Computer?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0BF@PKMDPELO@Quanta?5Computer?5Inc?4?$AA@ DB 'Quanta Computer Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NLEDAFLA@Future?5Technology?5Devices?5Intern@
CONST	SEGMENT
??_C@_0DA@NLEDAFLA@Future?5Technology?5Devices?5Intern@ DB 'Future Techno'
	DB	'logy Devices International Limited', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MEJFLCNJ@Elitegroup?5Computer?5Systems?$AA@
CONST	SEGMENT
??_C@_0BM@MEJFLCNJ@Elitegroup?5Computer?5Systems?$AA@ DB 'Elitegroup Comp'
	DB	'uter Systems', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJFJAJAK@Diebold?0?5Inc?4?$AA@
CONST	SEGMENT
??_C@_0O@EJFJAJAK@Diebold?0?5Inc?4?$AA@ DB 'Diebold, Inc.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GKDJMMLL@Hewlett?5Packard?$AA@
CONST	SEGMENT
??_C@_0BA@GKDJMMLL@Hewlett?5Packard?$AA@ DB 'Hewlett Packard', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ELLAHEBO@Atmel?5Corporation?$AA@
CONST	SEGMENT
??_C@_0BC@ELLAHEBO@Atmel?5Corporation?$AA@ DB 'Atmel Corporation', 00H ; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
_USBVendorIDs DW 03ebH
	ORG $+2
	DD	FLAT:??_C@_0BC@ELLAHEBO@Atmel?5Corporation?$AA@
	DW	03f0H
	ORG $+2
	DD	FLAT:??_C@_0BA@GKDJMMLL@Hewlett?5Packard?$AA@
	DW	03f4H
	ORG $+2
	DD	FLAT:??_C@_0O@EJFJAJAK@Diebold?0?5Inc?4?$AA@
	DW	03fcH
	ORG $+2
	DD	FLAT:??_C@_0BM@MEJFLCNJ@Elitegroup?5Computer?5Systems?$AA@
	DW	0403H
	ORG $+2
	DD	FLAT:??_C@_0DA@NLEDAFLA@Future?5Technology?5Devices?5Intern@
	DW	0408H
	ORG $+2
	DD	FLAT:??_C@_0BF@PKMDPELO@Quanta?5Computer?5Inc?4?$AA@
	DW	0409H
	ORG $+2
	DD	FLAT:??_C@_0BA@KPLBOCAE@NEC?5Corporation?$AA@
	DW	040aH
	ORG $+2
	DD	FLAT:??_C@_0BG@DEIKAEKL@Eastman?5Kodak?5Company?$AA@
	DW	040bH
	ORG $+2
	DD	FLAT:??_C@_0BH@JCNGEJDK@Weltrend?5Semiconductor?$AA@
	DW	040dH
	ORG $+2
	DD	FLAT:??_C@_0BH@LEHBDMGE@VIA?5Technologies?0?5Inc?4?$AA@
	DW	040eH
	ORG $+2
	DD	FLAT:??_C@_0BB@DMJKNCDK@MCCI?5Corporation?$AA@
	DW	0411H
	ORG $+2
	DD	FLAT:??_C@_0N@HBBMPLAJ@BUFFALO?5INC?4?$AA@
	DW	0414H
	ORG $+2
	DD	FLAT:??_C@_0BP@EJPGPDCC@Giga?9Byte?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0416H
	ORG $+2
	DD	FLAT:??_C@_0BJ@BBLEBCKI@Nuvoton?5Technology?5Corp?4?$AA@
	DW	041eH
	ORG $+2
	DD	FLAT:??_C@_0O@CDIDDBG@Creative?5Labs?$AA@
	DW	0421H
	ORG $+2
	DD	FLAT:??_C@_0BC@LOIKONEK@Nokia?5Corporation?$AA@
	DW	0424H
	ORG $+2
	DD	FLAT:??_C@_04JKLOLBDG@SMSC?$AA@
	DW	042fH
	ORG $+2
	DD	FLAT:??_C@_0L@JMLDMEEO@Molex?5Inc?4?$AA@
	DW	0430H
	ORG $+2
	DD	FLAT:??_C@_0BK@BGJHIBOH@Fujitsu?5Component?5Limited?$AA@
	DW	0438H
	ORG $+2
	DD	FLAT:??_C@_0BH@PDGAJDKJ@Advanced?5Micro?5Devices?$AA@
	DW	043dH
	ORG $+2
	DD	FLAT:??_C@_0BL@KCFEHCNK@Lexmark?5International?5Inc?4?$AA@
	DW	0440H
	ORG $+2
	DD	FLAT:??_C@_0BH@LFBOMFGA@EIZO?5NANAO?5CORPORATION?$AA@
	DW	044eH
	ORG $+2
	DD	FLAT:??_C@_0BI@LOPMEJIG@Alps?5Electric?5Co?4?0?5Ltd?4?$AA@
	DW	0451H
	ORG $+2
	DD	FLAT:??_C@_0BC@NEDOGEDE@Texas?5Instruments?$AA@
	DW	0457H
	ORG $+2
	DD	FLAT:??_C@_0CB@JOFOMFLH@Silicon?5Integrated?5Systems?5Corp?4@
	DW	0458H
	ORG $+2
	DD	FLAT:??_C@_0BC@CIDHCDNI@KYE?5Systems?5Corp?4?$AA@
	DW	045bH
	ORG $+2
	DD	FLAT:??_C@_0BK@EAFCJGLH@Renesas?5Electronics?5Corp?4?$AA@
	DW	045eH
	ORG $+2
	DD	FLAT:??_C@_0BG@EOBPLLNH@Microsoft?5Corporation?$AA@
	DW	0461H
	ORG $+2
	DD	FLAT:??_C@_0BD@CABKABLN@Primax?5Electronics?$AA@
	DW	0463H
	ORG $+2
	DD	FLAT:??_C@_05CFGIIEPJ@EATON?$AA@
	DW	0468H
	ORG $+2
	DD	FLAT:??_C@_0BO@JJGMGNMK@Wieson?5Technologies?5Co?4?0?5Ltd?4?$AA@
	DW	046bH
	ORG $+2
	DD	FLAT:??_C@_0BE@JEFPHDAK@American?5Megatrends?$AA@
	DW	046dH
	ORG $+2
	DD	FLAT:??_C@_0O@NMJDEFAN@Logitech?5Inc?4?$AA@
	DW	047eH
	ORG $+2
	DD	FLAT:??_C@_0BA@JMLOFGEB@LSI?5Corporation?$AA@
	DW	047fH
	ORG $+2
	DD	FLAT:??_C@_0BC@JKCENOI@Plantronics?0?5Inc?4?$AA@
	DW	0480H
	ORG $+2
	DD	FLAT:??_C@_0CE@MGJHDLEM@Toshiba?5America?5Info?4?5Systems?0?5I@
	DW	0482H
	ORG $+2
	DD	FLAT:??_C@_0BE@OKFLBHJF@Kyocera?5Corporation?$AA@
	DW	0483H
	ORG $+2
	DD	FLAT:??_C@_0BD@KBJBCOHP@STMicroelectronics?$AA@
	DW	0489H
	ORG $+2
	DD	FLAT:??_C@_0BC@OEHDDJBP@Foxconn?5?1?5Hon?5Hai?$AA@
	DW	048dH
	ORG $+2
	DD	FLAT:??_C@_0O@KONCBIDB@ITE?5Tech?5Inc?4?$AA@
	DW	0499H
	ORG $+2
	DD	FLAT:??_C@_0BD@LBNNEMMM@Yamaha?5Corporation?$AA@
	DW	04a4H
	ORG $+2
	DD	FLAT:??_C@_0O@EDCNNFOI@Hitachi?0?5Ltd?4?$AA@
	DW	04a7H
	ORG $+2
	DD	FLAT:??_C@_09OEADKIBB@Visioneer?$AA@
	DW	04a9H
	ORG $+2
	DD	FLAT:??_C@_0L@GLDEECEB@Canon?5Inc?4?$AA@
	DW	04b0H
	ORG $+2
	DD	FLAT:??_C@_0BC@GNNADKEG@Nikon?5Corporation?$AA@
	DW	04b1H
	ORG $+2
	DD	FLAT:??_C@_0BC@HJPMHLJH@Pan?5International?$AA@
	DW	04b4H
	ORG $+2
	DD	FLAT:??_C@_0BG@FGCLJBBL@Cypress?5Semiconductor?$AA@
	DW	04b5H
	ORG $+2
	DD	FLAT:??_C@_0P@POFNKNIM@ROHM?5Co?4?0?5Ltd?4?$AA@
	DW	04b7H
	ORG $+2
	DD	FLAT:??_C@_0BJ@IBBFBLCL@Compal?5Electronics?0?5Inc?4?$AA@
	DW	04b8H
	ORG $+2
	DD	FLAT:??_C@_0BC@LODEJCJJ@Seiko?5Epson?5Corp?4?$AA@
	DW	04bbH
	ORG $+2
	DD	FLAT:??_C@_0BG@NAOBNEME@I?9O?5Data?5Device?0?5Inc?4?$AA@
	DW	04c5H
	ORG $+2
	DD	FLAT:??_C@_0N@MFGIPGKK@Fujitsu?5Ltd?4?$AA@
	DW	04caH
	ORG $+2
	DD	FLAT:??_C@_0BJ@CAOGFALO@Lite?9On?5Technology?5Corp?4?$AA@
	DW	04cbH
	ORG $+2
	DD	FLAT:??_C@_0BF@DGJHAIHG@FUJIFILM?5Corporation?$AA@
	DW	04ccH
	ORG $+2
	DD	FLAT:??_C@_0M@CIDIGMJE@ST?9Ericsson?$AA@
	DW	04d8H
	ORG $+2
	DD	FLAT:??_C@_0BK@GLLPJAAH@Microchip?5Technology?5Inc?4?$AA@
	DW	04d9H
	ORG $+2
	DD	FLAT:??_C@_0BL@BJMPMCDF@Holtek?5Semiconductor?0?5Inc?4?$AA@
	DW	04daH
	ORG $+2
	DD	FLAT:??_C@_0BG@HPBJICLA@Panasonic?5Corporation?$AA@
	DW	04ddH
	ORG $+2
	DD	FLAT:??_C@_0BC@NGIIFMHF@Sharp?5Corporation?$AA@
	DW	04e2H
	ORG $+2
	DD	FLAT:??_C@_0BB@LFOEADKM@Exar?5Corporation?$AA@
	DW	04e6H
	ORG $+2
	DD	FLAT:??_C@_0BB@LGJOJJNH@SCM?5Microsystems?$AA@
	DW	04e8H
	ORG $+2
	DD	FLAT:??_C@_0BO@CGAOADOO@Samsung?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	04ebH
	ORG $+2
	DD	FLAT:??_C@_0BI@BJLCCIIK@Northstar?5Systems?5Corp?4?$AA@
	DW	04ecH
	ORG $+2
	DD	FLAT:??_C@_0BO@EFCPDDGG@Tokyo?5Electron?5Device?5Limited?$AA@
	DW	04f2H
	ORG $+2
	DD	FLAT:??_C@_0BO@DEPAFADD@Chicony?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	04f7H
	ORG $+2
	DD	FLAT:??_C@_0BI@JIJDPPMO@Newnex?5Technology?5Corp?4?$AA@
	DW	04f9H
	ORG $+2
	DD	FLAT:??_C@_0BJ@LIIOOGBH@Brother?5Industries?0?5Ltd?4?$AA@
	DW	04fcH
	ORG $+2
	DD	FLAT:??_C@_0BN@EENPEENP@SUNPLUS?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@
	DW	04feH
	ORG $+2
	DD	FLAT:??_C@_0M@LAOEDIBA@PFU?5Limited?$AA@
	DW	0501H
	ORG $+2
	DD	FLAT:??_C@_0N@HPKDLJPE@Fujikura?1DDK?$AA@
	DW	0507H
	ORG $+2
	DD	FLAT:??_C@_0BE@OMIFCFDP@Hosiden?5Corporation?$AA@
	DW	050dH
	ORG $+2
	DD	FLAT:??_C@_0BD@JPLKCFJN@Belkin?5Corporation?$AA@
	DW	0514H
	ORG $+2
	DD	FLAT:??_C@_0BA@MNHCACLA@FCI?5Electronics?$AA@
	DW	0516H
	ORG $+2
	DD	FLAT:??_C@_0CG@MHMGALMF@Longwell?5Electronics?1Longwell?5Co@
	DW	0519H
	ORG $+2
	DD	FLAT:??_C@_0BI@IEJECICL@Star?5Micronics?5Co?4?0?5LTD?$AA@
	DW	051dH
	ORG $+2
	DD	FLAT:??_C@_0BK@CJECLAIC@American?5Power?5Conversion?$AA@
	DW	0520H
	ORG $+2
	DD	FLAT:??_C@_0CH@IKHGDMKC@Taiwan?5Semiconductor?5Manufacturi@
	DW	0522H
	ORG $+2
	DD	FLAT:??_C@_0BP@MPHIFDML@ACON?0?5Advanced?9Connectek?0?5Inc?4?$AA@
	DW	0525H
	ORG $+2
	DD	FLAT:??_C@_0BF@OEIMDHJB@PLX?5Technology?0?5Inc?4?$AA@
	DW	0529H
	ORG $+2
	DD	FLAT:??_C@_0BK@EAHBAECN@Aladdin?5Knowledge?5Systems?$AA@
	DW	0531H
	ORG $+2
	DD	FLAT:??_C@_0BH@OKBFFENA@Wacom?5Technology?5Corp?4?$AA@
	DW	053fH
	ORG $+2
	DD	FLAT:??_C@_0P@JMAENH@Synopsys?0?5Inc?4?$AA@
	DW	054cH
	ORG $+2
	DD	FLAT:??_C@_0BB@FOPBDEC@Sony?5Corporation?$AA@
	DW	0550H
	ORG $+2
	DD	FLAT:??_C@_0BF@BLKLAKEJ@Fuji?5Xerox?5Co?4?0?5Ltd?4?$AA@
	DW	0557H
	ORG $+2
	DD	FLAT:??_C@_0BM@FGPDBDMF@ATEN?5International?5Co?4?5Ltd?4?$AA@
	DW	0559H
	ORG $+2
	DD	FLAT:??_C@_0BN@LLCBPJLE@Cadence?5Design?5Systems?0?5Inc?4?$AA@
	DW	056aH
	ORG $+2
	DD	FLAT:??_C@_0BA@PCAMLHGM@WACOM?5Co?4?0?5Ltd?4?$AA@
	DW	0572H
	ORG $+2
	DD	FLAT:??_C@_0BH@BPNCPPJL@Conexant?5Systems?0?5Inc?4?$AA@
	DW	0573H
	ORG $+2
	DD	FLAT:??_C@_0BC@DJMACOGF@Zoran?5Corporation?$AA@
	DW	0576H
	ORG $+2
	DD	FLAT:??_C@_0CC@JDHIHHMP@BAFO?1Quality?5Computer?5Accessorie@
	DW	057bH
	ORG $+2
	DD	FLAT:??_C@_0P@DLENFJNK@Y?9E?5Data?0?5Inc?4?$AA@
	DW	057cH
	ORG $+2
	DD	FLAT:??_C@_08DBEKGGBP@AVM?5GmbH?$AA@
	DW	0582H
	ORG $+2
	DD	FLAT:??_C@_0BD@CDPILELF@Roland?5Corporation?$AA@
	DW	0584H
	ORG $+2
	DD	FLAT:??_C@_0BE@PNCFOBBM@RATOC?5Systems?0?5Inc?4?$AA@
	DW	058fH
	ORG $+2
	DD	FLAT:??_C@_0BD@CKEFINHN@Alcor?5Micro?0?5Corp?4?$AA@
	DW	0590H
	ORG $+2
	DD	FLAT:??_C@_0BC@LGOLJEOJ@OMRON?5Corporation?$AA@
	DW	059bH
	ORG $+2
	DD	FLAT:??_C@_0BD@DLALOKFF@Iomega?5Corporation?$AA@
	DW	059fH
	ORG $+2
	DD	FLAT:??_C@_05EENIFCCI@LaCie?$AA@
	DW	05a9H
	ORG $+2
	DD	FLAT:??_C@_0BO@PALNNPFJ@OmniVision?5Technologies?0?5Inc?4?$AA@
	DW	05acH
	ORG $+2
	DD	FLAT:??_C@_05EBJDGKGA@Apple?$AA@
	DW	05adH
	ORG $+2
	DD	FLAT:??_C@_0BH@BEKADALE@Y?4C?4?5Cable?5U?4S?4A?4?0?5Inc?$AA@
	DW	03923H
	ORG $+2
	DD	FLAT:??_C@_0BF@DJDIGDEG@National?5Instruments?$AA@
	DW	05beH
	ORG $+2
	DD	FLAT:??_C@_0BB@BDKIEMDH@Tyco?5Electronics?$AA@
	DW	05c1H
	ORG $+2
	DD	FLAT:??_C@_0CA@ILGCAFHO@Kawasaki?5Microelectronics?0?5Inc?4?$AA@
	DW	05c6H
	ORG $+2
	DD	FLAT:??_C@_0O@JJANANCF@Qualcomm?0?5Inc?$AA@
	DW	05c8H
	ORG $+2
	DD	FLAT:??_C@_0CP@IMDHJGED@Foxlink?1Cheng?5Uei?5Precision?5Indu@
	DW	05caH
	ORG $+2
	DD	FLAT:??_C@_0BD@DNOMCPDN@Ricoh?5Company?5Ltd?4?$AA@
	DW	05daH
	ORG $+2
	DD	FLAT:??_C@_0BM@OADDMKLB@Microtek?5International?5Inc?4?$AA@
	DW	05dcH
	ORG $+2
	DD	FLAT:??_C@_0BC@CNOLCDCN@Lexar?5Media?0?5Inc?4?$AA@
	DW	05e0H
	ORG $+2
	DD	FLAT:??_C@_0BE@JPKFBBCH@Symbol?5Technologies?$AA@
	DW	05e3H
	ORG $+2
	DD	FLAT:??_C@_0BE@CKIEML@Genesys?5Logic?0?5Inc?4?$AA@
	DW	05e5H
	ORG $+2
	DD	FLAT:??_C@_0BI@KBGKOOGJ@Fuji?5Electric?5Co?4?0?5Ltd?4?$AA@
	DW	05f5H
	ORG $+2
	DD	FLAT:??_C@_0BI@NBAANMIA@Unixtar?5Technology?5Inc?4?$AA@
	DW	05f9H
	ORG $+2
	DD	FLAT:??_C@_0BJ@IOEIJMCL@Datalogic?5Scanning?0?5Inc?4?$AA@
	DW	05ffH
	ORG $+2
	DD	FLAT:??_C@_0BD@PJDPEADK@LeCroy?5Corporation?$AA@
	DW	0603H
	ORG $+2
	DD	FLAT:??_C@_0BP@HAMNADII@Novatek?5Microelectronics?5Corp?4?$AA@
	DW	0609H
	ORG $+2
	DD	FLAT:??_C@_0BH@LJAJLGJE@SMK?5Manufacturing?5Inc?4?$AA@
	DW	060fH
	ORG $+2
	DD	FLAT:??_C@_0CE@IBGJKEKA@Joinsoon?5Electronics?5Mfg?4?5Co?4?0?5L@
	DW	0611H
	ORG $+2
	DD	FLAT:??_C@_0BK@EHGAEDDA@Totoku?5Electric?5Co?4?0?5LTD?4?$AA@
	DW	0613H
	ORG $+2
	DD	FLAT:??_C@_0CD@BNDJFIFN@TransAct?5Technologies?5Incorporat@
	DW	0619H
	ORG $+2
	DD	FLAT:??_C@_0BH@OFHNPHHH@Seiko?5Instruments?5Inc?4?$AA@
	DW	0623H
	ORG $+2
	DD	FLAT:??_C@_0BB@GCAKJIAA@Littelfuse?0?5Inc?4?$AA@
	DW	062eH
	ORG $+2
	DD	FLAT:??_C@_0CA@POFLHCFC@MAIN?5SUPER?5ENTERPRISES?5CO?4?0LTD?4?$AA@
	DW	0638H
	ORG $+2
	DD	FLAT:??_C@_0O@JBKMBCEI@Avision?0?5Inc?4?$AA@
	DW	0639H
	ORG $+2
	DD	FLAT:??_C@_0P@GAMNDPPF@Chrontel?0?5Inc?4?$AA@
	DW	064bH
	ORG $+2
	DD	FLAT:??_C@_0CH@PMGKCBAF@Analog?5Devices?0?5Inc?4?5Development@
	DW	064cH
	ORG $+2
	DD	FLAT:??_C@_0BL@EBDNAMPI@Ji?9Haw?5Industrial?5Co?4?0?5Ltd?$AA@
	DW	064eH
	ORG $+2
	DD	FLAT:??_C@_0BC@HBOMJHJG@Suyin?5Corporation?$AA@
	DW	064fH
	ORG $+2
	DD	FLAT:??_C@_0BA@BPHBIEFO@WIBU?9Systems?5AG?$AA@
	DW	0655H
	ORG $+2
	DD	FLAT:??_C@_0BP@BBNBDGIM@Space?5Shuttle?5Hi?9Tech?5Co?4?0Ltd?4?$AA@
	DW	0656H
	ORG $+2
	DD	FLAT:??_C@_0BL@JPOIGLAH@Glory?5Mark?5Electronic?5Ltd?4?$AA@
	DW	0657H
	ORG $+2
	DD	FLAT:??_C@_0BJ@HLMOOHDB@Tekcon?5Electronics?5Corp?4?$AA@
	DW	0658H
	ORG $+2
	DD	FLAT:??_C@_0BE@DBNMJIBL@Sigma?5Designs?0?5Inc?4?$AA@
	DW	065fH
	ORG $+2
	DD	FLAT:??_C@_0DD@MJJJJEAM@Good?5Way?5Technology?5Co?4?0?5Ltd?4?5?$CG?5@
	DW	0660H
	ORG $+2
	DD	FLAT:??_C@_0CA@PAFBBAIH@TSAY?9E?5?$CIBVI?$CJ?5International?5Inc?4?$AA@
	DW	0661H
	ORG $+2
	DD	FLAT:??_C@_0BJ@PKNBNCAJ@Hamamatsu?5Photonics?5K?4K?4?$AA@
	DW	066aH
	ORG $+2
	DD	FLAT:??_C@_0BJ@BPDLABPC@Total?5Technologies?0?5Ltd?4?$AA@
	DW	0678H
	ORG $+2
	DD	FLAT:??_C@_0BH@GHMCMJEK@ACARD?5Technology?5Corp?4?$AA@
	DW	067bH
	ORG $+2
	DD	FLAT:??_C@_0BK@PDKHMLGO@Prolific?5Technology?0?5Inc?4?$AA@
	DW	0413cH
	ORG $+2
	DD	FLAT:??_C@_09JOKCKELG@Dell?5Inc?4?$AA@
	DW	0690H
	ORG $+2
	DD	FLAT:??_C@_0BM@LFPCEBHN@Golden?5Bridge?5Electech?5Inc?4?$AA@
	DW	0693H
	ORG $+2
	DD	FLAT:??_C@_0BN@HLLIJJKK@Hagiwara?5Solutions?5Co?4?0?5Ltd?4?$AA@
	DW	0699H
	ORG $+2
	DD	FLAT:??_C@_0BA@EMAGANPI@Tektronix?0?5Inc?4?$AA@
	DW	06a3H
	ORG $+2
	DD	FLAT:??_C@_0BE@KEFLECEP@MadCatz?5Europe?5Ltd?4?$AA@
	DW	06a4H
	ORG $+2
	DD	FLAT:??_C@_0CC@KJLDAPCA@Xiamen?5Doowell?5Electron?5Co?4?0?5Ltd@
	DW	06adH
	ORG $+2
	DD	FLAT:??_C@_0CC@NHGJCBNO@Greatland?5Electronics?5Taiwan?5Ltd@
	DW	06aeH
	ORG $+2
	DD	FLAT:??_C@_0P@DFEICALO@Testronic?5Labs?$AA@
	DW	06b8H
	ORG $+2
	DD	FLAT:??_C@_0BD@MFHNCDAI@Pixela?5Corporation?$AA@
	DW	06bcH
	ORG $+2
	DD	FLAT:??_C@_0BF@KBMIOCIB@Oki?5Data?5Corporation?$AA@
	DW	06bfH
	ORG $+2
	DD	FLAT:??_C@_0BC@PBNHDNIB@Leoco?5Corporation?$AA@
	DW	06c4H
	ORG $+2
	DD	FLAT:??_C@_0BJ@IAMJELKE@Bizlink?5Technology?0?5Inc?4?$AA@
	DW	06c8H
	ORG $+2
	DD	FLAT:??_C@_0L@IGNPDHHH@SIIG?0?5Inc?4?$AA@
	DW	06d3H
	ORG $+2
	DD	FLAT:??_C@_0CA@FPPDHAGC@Mitsubishi?5Electric?5Corporation?$AA@
	DW	06deH
	ORG $+2
	DD	FLAT:??_C@_0BM@MDDCDOBA@Heisei?5Electronics?5Co?4?5Ltd?4?$AA@
	DW	070aH
	ORG $+2
	DD	FLAT:??_C@_0CA@MKILJNBK@Oki?5Electric?5Industry?5Co?4?0?5Ltd?4?$AA@
	DW	070eH
	ORG $+2
	DD	FLAT:??_C@_0CA@HDLCMAHN@Excel?5Cell?5Electronic?5Co?4?0?5Ltd?4?$AA@
	DW	0711H
	ORG $+2
	DD	FLAT:??_C@_0BP@JCFMJDGG@Magic?5Control?5Technology?5Corp?4?$AA@
	DW	0718H
	ORG $+2
	DD	FLAT:??_C@_0O@NNOCEOFA@Imation?5Corp?4?$AA@
	DW	072eH
	ORG $+2
	DD	FLAT:??_C@_0BA@IFGJOCOG@Sunix?5Co?4?0?5Ltd?4?$AA@
	DW	0736H
	ORG $+2
	DD	FLAT:??_C@_0BL@PJBMJABB@Lorom?5Industrial?5Co?4?0?5Ltd?4?$AA@
	DW	0764H
	ORG $+2
	DD	FLAT:??_C@_0BK@PCICHEDF@Cyber?5Power?5Systems?0?5Inc?4?$AA@
	DW	0766H
	ORG $+2
	DD	FLAT:??_C@_0CD@HFGLNKOO@Jess?9Link?5Products?5Co?4?0?5Ltd?4?5?$CIJP@
	DW	076bH
	ORG $+2
	DD	FLAT:??_C@_0BA@FCBANMAL@HID?5Global?5GmbH?$AA@
	DW	0777H
	ORG $+2
	DD	FLAT:??_C@_0CG@IKDDLBBP@Comda?5Advanced?5Technology?5Corpor@
	DW	0779H
	ORG $+2
	DD	FLAT:??_C@_0BI@OBNCJIEM@Fairchild?5Semiconductor?$AA@
	DW	0781H
	ORG $+2
	DD	FLAT:??_C@_0BE@KACIGGGG@SanDisk?5Corporation?$AA@
	DW	0791H
	ORG $+2
	DD	FLAT:??_C@_0CB@LGBOFDFN@Copartner?5Technology?5Corporation@
	DW	07a2H
	ORG $+2
	DD	FLAT:??_C@_0BL@MPFKAMGD@National?5Technical?5Systems?$AA@
	DW	07b3H
	ORG $+2
	DD	FLAT:??_C@_0O@OCMFCBHB@Plustek?0?5Inc?4?$AA@
	DW	07b4H
	ORG $+2
	DD	FLAT:??_C@_0BE@NJLEDFOB@OLYMPUS?5CORPORATION?$AA@
	DW	07b7H
	ORG $+2
	DD	FLAT:??_C@_0BH@MGBHEDBN@TIME?5Interconnect?5Ltd?4?$AA@
	DW	07caH
	ORG $+2
	DD	FLAT:??_C@_0BN@EGFACLDP@AVerMedia?5Technologies?0?5Inc?4?$AA@
	DW	07ccH
	ORG $+2
	DD	FLAT:??_C@_0BL@FNDINGLK@Carry?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	07cfH
	ORG $+2
	DD	FLAT:??_C@_0BJ@JKHOIPCI@Casio?5Computer?5Co?4?0?5Ltd?4?$AA@
	DW	07daH
	ORG $+2
	DD	FLAT:??_C@_0BJ@ODMCNPPD@Arasan?5Chip?5Systems?5Inc?4?$AA@
	DW	07dfH
	ORG $+2
	DD	FLAT:??_C@_0CA@BNLONGOH@David?5Electronics?5Company?0?5Ltd?4?$AA@
	DW	07f6H
	ORG $+2
	DD	FLAT:??_C@_0BH@NBGJMCGE@Circuit?5Assembly?5Corp?4?$AA@
	DW	07f7H
	ORG $+2
	DD	FLAT:??_C@_0BE@OPFGKFFJ@Century?5Corporation?$AA@
	DW	07f9H
	ORG $+2
	DD	FLAT:??_C@_0BH@FDLEJAIK@Dotop?5Technology?0?5Inc?4?$AA@
	DW	080aH
	ORG $+2
	DD	FLAT:??_C@_0BO@CAINGGKC@Evermuch?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0835H
	ORG $+2
	DD	FLAT:??_C@_0CB@POAJBKGF@Action?5Star?5Enterprise?5Co?4?0?5Ltd?4@
	DW	0840H
	ORG $+2
	DD	FLAT:??_C@_0BF@DELPFPOB@Argosy?5Research?5Inc?4?$AA@
	DW	086fH
	ORG $+2
	DD	FLAT:??_C@_0BB@CEKEIHLM@MEC?5IMEX?5INC?1HPT?$AA@
	DW	0874H
	ORG $+2
	DD	FLAT:??_C@_0BG@FKPDHKLP@A?9Tec?5Subsystem?0?5Inc?4?$AA@
	DW	0897H
	ORG $+2
	DD	FLAT:??_C@_0BA@EMBEKEAB@Lauterbach?5GmbH?$AA@
	DW	089dH
	ORG $+2
	DD	FLAT:??_C@_0BP@PNBHHOAN@Icron?5Technologies?5Corporation?$AA@
	DW	08b9H
	ORG $+2
	DD	FLAT:??_C@_0BH@CFIMBAIC@RadioShack?5Corporation?$AA@
	DW	08bbH
	ORG $+2
	DD	FLAT:??_C@_0BI@HFFFIPIB@Texas?5Instruments?5Japan?$AA@
	DW	08c7H
	ORG $+2
	DD	FLAT:??_C@_0BO@JNLBBKDI@TAI?5TWUN?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@
	DW	08e4H
	ORG $+2
	DD	FLAT:??_C@_0BE@PMKDDGDC@Pioneer?5Corporation?$AA@
	DW	08e6H
	ORG $+2
	DD	FLAT:??_C@_0L@NMFIDNE@Gemalto?5SA?$AA@
	DW	08ffH
	ORG $+2
	DD	FLAT:??_C@_0BA@ILLLPBKP@AuthenTec?0?5Inc?4?$AA@
	DW	0906H
	ORG $+2
	DD	FLAT:??_C@_0BJ@DEEADHEC@FARADAY?5Technology?5Corp?4?$AA@
	DW	0909H
	ORG $+2
	DD	FLAT:??_C@_0BF@DGGIOLK@Audio?9Technica?5Corp?4?$AA@
	DW	090cH
	ORG $+2
	DD	FLAT:??_C@_0BO@BNPBHCJB@Silicon?5Motion?0?5Inc?4?5?9?5Taiwan?$AA@
	DW	091eH
	ORG $+2
	DD	FLAT:??_C@_0BF@OCKCLCDJ@Garmin?5International?$AA@
	DW	0922H
	ORG $+2
	DD	FLAT:??_C@_0BB@IJHLMKN@Dymo?5Corporation?$AA@
	DW	0930H
	ORG $+2
	DD	FLAT:??_C@_0BE@JMAMIBAH@Toshiba?5Corporation?$AA@
	DW	093aH
	ORG $+2
	DD	FLAT:??_C@_0BF@FDMCHING@Pixart?5Imaging?0?5Inc?4?$AA@
	DW	093bH
	ORG $+2
	DD	FLAT:??_C@_0M@DPPDGGNF@Plextor?5LLC?$AA@
	DW	093eH
	ORG $+2
	DD	FLAT:??_C@_0BG@PLHGNMC@J?4S?4T?4?5Mfg?4?5Co?4?0?5Ltd?4?$AA@
	DW	0951H
	ORG $+2
	DD	FLAT:??_C@_0BM@LKMMOGNE@Kingston?5Technology?5Company?$AA@
	DW	0955H
	ORG $+2
	DD	FLAT:??_C@_06HLMMPIBG@NVIDIA?$AA@
	DW	0957H
	ORG $+2
	DD	FLAT:??_C@_0BL@KLPBIJLK@Agilent?5Technologies?0?5Inc?4?$AA@
	DW	095bH
	ORG $+2
	DD	FLAT:??_C@_0BH@DIONPOBP@Medialogic?5Corporation?$AA@
	DW	095dH
	ORG $+2
	DD	FLAT:??_C@_0O@LKCCNLNO@Polycom?0?5Inc?4?$AA@
	DW	06000H
	ORG $+2
	DD	FLAT:??_C@_0CF@DOLEFDNC@TRIDENT?5MICROSYSTEMS?5?$CIFar?5East?$CJ?5@
	DW	09a4H
	ORG $+2
	DD	FLAT:??_C@_0BH@NHOGNCFH@Contech?5Research?0?5Inc?4?$AA@
	DW	09a8H
	ORG $+2
	DD	FLAT:??_C@_0CA@NGELPCKK@Lin?5Shiung?5Enterprise?5Co?4?0?5Ltd?4?$AA@
	DW	09abH
	ORG $+2
	DD	FLAT:??_C@_0BN@OHPOFJEM@Japan?5Cash?5Machine?5Co?4?0?5Ltd?4?$AA@
	DW	09c2H
	ORG $+2
	DD	FLAT:??_C@_0BC@JHLIIJEE@NISCA?5Corporation?$AA@
	DW	09ccH
	ORG $+2
	DD	FLAT:??_C@_0BE@OJFDPOOK@Workbit?5Corporation?$AA@
	DW	09cfH
	ORG $+2
	DD	FLAT:??_C@_0CD@HNEJNPKP@Electronics?5Testing?5Center?0?5Taiw@
	DW	09d9H
	ORG $+2
	DD	FLAT:??_C@_05KFMIDCBE@Jungo?$AA@
	DW	09daH
	ORG $+2
	DD	FLAT:??_C@_0BG@LAHNEDCJ@A?9FOUR?5TECH?5CO?4?0?5LTD?4?$AA@
	DW	09e5H
	ORG $+2
	DD	FLAT:??_C@_0BL@MPNFCJBM@Jo?9Dan?5International?0?5Inc?4?$AA@
	DW	0a17H
	ORG $+2
	DD	FLAT:??_C@_0BB@HPCCBBBB@HOYA?5Corporation?$AA@
	DW	0a21H
	ORG $+2
	DD	FLAT:??_C@_0BF@EKKNDOHK@Physio?9Control?0?5Inc?4?$AA@
	DW	0a47H
	ORG $+2
	DD	FLAT:??_C@_0BK@IKEGAKKP@Hirose?5Electric?5Co?4?0?5Ltd?4?$AA@
	DW	0a48H
	ORG $+2
	DD	FLAT:??_C@_0BB@KGGFOALP@I?1O?5Interconnect?$AA@
	DW	0a4cH
	ORG $+2
	DD	FLAT:??_C@_0BD@LHJHCFAG@COMPUTEX?5Co?4?0?5Ltd?4?$AA@
	DW	0a50H
	ORG $+2
	DD	FLAT:??_C@_0BN@FBNECLJJ@Mimaki?5Engineering?5Co?4?0?5Ltd?4?$AA@
	DW	0a5cH
	ORG $+2
	DD	FLAT:??_C@_0P@KBOGHGP@Broadcom?5Corp?4?$AA@
	DW	0a6bH
	ORG $+2
	DD	FLAT:??_C@_0BG@IJFMHNNO@Green?5House?5Co?4?0?5Ltd?4?$AA@
	DW	0a7dH
	ORG $+2
	DD	FLAT:??_C@_0O@HDJGGMBN@Intertek?5NSTL?$AA@
	DW	0a81H
	ORG $+2
	DD	FLAT:??_C@_0BJ@JHAHKIDB@CHESEN?5ELECTRONICS?5CORP?4?$AA@
	DW	0a8eH
	ORG $+2
	DD	FLAT:??_C@_0CP@BLIFGEAH@Japan?5Aviation?5Electronics?5Indus@
	DW	0a8fH
	ORG $+2
	DD	FLAT:??_C@_0BF@BPGMFHBM@Young?5Chang?5Co?4?5Ltd?4?$AA@
	DW	0aa7H
	ORG $+2
	DD	FLAT:??_C@_0BM@KFMMGOHA@Wincor?5Nixdorf?5GmbH?5?$CG?5Co?5KG?$AA@
	DW	0ac3H
	ORG $+2
	DD	FLAT:??_C@_0CC@EIBHCLN@SANYO?5Semiconductor?5Company?5Micr@
	DW	0ac8H
	ORG $+2
	DD	FLAT:??_C@_0BE@HMAJKJ@Vimicro?5Corporation?$AA@
	DW	0ae3H
	ORG $+2
	DD	FLAT:??_C@_0BH@CELKNPMM@Allion?5Test?5Labs?0?5Inc?4?$AA@
	DW	0af0H
	ORG $+2
	DD	FLAT:??_C@_09FMCEBPKI@Option?5NV?$AA@
	DW	0b05H
	ORG $+2
	DD	FLAT:??_C@_0BG@HEOGBEPO@ASUSTek?5Computer?5Inc?4?$AA@
	DW	0b1eH
	ORG $+2
	DD	FLAT:??_C@_0CK@PLBMIBK@Electronic?5Warfare?5Associates?0?5I@
	DW	0b21H
	ORG $+2
	DD	FLAT:??_C@_0BO@KKOFHFLP@Yokogawa?5Electric?5Corporation?$AA@
	DW	0b23H
	ORG $+2
	DD	FLAT:??_C@_0BP@IGDJFEE@Pan?9Asia?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	0b3cH
	ORG $+2
	DD	FLAT:??_C@_0P@GFHEPPBN@Olivetti?5S?4p?4A?$AA@
	DW	0b4eH
	ORG $+2
	DD	FLAT:??_C@_0BJ@MJIIIHDL@Musical?5Electronics?5Ltd?4?$AA@
	DW	0b54H
	ORG $+2
	DD	FLAT:??_C@_0BN@IGCLCEEO@Sinbon?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	0b6aH
	ORG $+2
	DD	FLAT:??_C@_0BK@DICOBJHO@Maxim?5Integrated?5Products?$AA@
	DW	0b95H
	ORG $+2
	DD	FLAT:??_C@_0BN@DBGBIANO@ASIX?5Electronics?5Corporation?$AA@
	DW	0b97H
	ORG $+2
	DD	FLAT:??_C@_0O@PGGKPFEM@O2Micro?0?5Inc?4?$AA@
	DW	0bb4H
	ORG $+2
	DD	FLAT:??_C@_0BA@BLJMPEH@HTC?5Corporation?$AA@
	DW	0bb5H
	ORG $+2
	DD	FLAT:??_C@_0BP@JGDEFBDO@Murata?5Manufacturing?5Co?4?0?5Ltd?4?$AA@
	DW	0bc2H
	ORG $+2
	DD	FLAT:??_C@_0BH@PKPGHPEE@Seagate?5Technology?5LLC?$AA@
	DW	0bdaH
	ORG $+2
	DD	FLAT:??_C@_0BM@OODBLDMG@Realtek?5Semiconductor?5Corp?4?$AA@
	DW	0bdbH
	ORG $+2
	DD	FLAT:??_C@_0M@PBGCMNLB@Ericsson?5AB?$AA@
	DW	0be4H
	ORG $+2
	DD	FLAT:??_C@_0BI@GAPKJOJF@Elka?5International?5Ltd?4?$AA@
	DW	0beeH
	ORG $+2
	DD	FLAT:??_C@_0BK@EBNIPBJG@LTK?5International?5Limited?$AA@
	DW	0c06H
	ORG $+2
	DD	FLAT:??_C@_0N@BIDPCKE@Hasbro?0?5Inc?4?$AA@
	DW	0c0bH
	ORG $+2
	DD	FLAT:??_C@_0BB@BJDBAEPG@Dura?5Micro?0?5Inc?4?$AA@
	DW	0c24H
	ORG $+2
	DD	FLAT:??_C@_0BG@BDCJOHPC@Taiyo?5Yuden?5Co?4?0?5Ltd?4?$AA@
	DW	0c39H
	ORG $+2
	DD	FLAT:??_C@_08EDJBOCE@Aeroflex?$AA@
	DW	0c45H
	ORG $+2
	DD	FLAT:??_C@_0BL@IIBBHDLP@Sonix?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0c56H
	ORG $+2
	DD	FLAT:??_C@_0BH@GADMIKAO@Billion?5Bright?5Limited?$AA@
	DW	0c59H
	ORG $+2
	DD	FLAT:??_C@_0CA@KMAKLJKD@Dong?5Guan?5Shinko?5Wire?5Co?4?0?5Ltd?4?$AA@
	DW	0c62H
	ORG $+2
	DD	FLAT:??_C@_0BH@FHGKBINA@Chant?5Sincere?5Co?4?0?5Ltd?$AA@
	DW	0c68H
	ORG $+2
	DD	FLAT:??_C@_0BN@KANEMGNF@Whanam?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	0c76H
	ORG $+2
	DD	FLAT:??_C@_0BN@PNHCHLDH@Solid?5State?5System?5Co?4?0?5Ltd?4?$AA@
	DW	0c89H
	ORG $+2
	DD	FLAT:??_C@_0BN@KPNGPOOH@Honda?5Tsushin?5Kogyo?5Co?4?0?5Ltd?$AA@
	DW	0cadH
	ORG $+2
	DD	FLAT:??_C@_0BD@PCKEPBKO@Motorola?5Solutions?$AA@
	DW	0cb7H
	ORG $+2
	DD	FLAT:??_C@_0BO@DKFGFGHA@Singatron?5Enterprise?5Co?4?5Ltd?4?$AA@
	DW	0cc4H
	ORG $+2
	DD	FLAT:??_C@_0BM@NGPEIKDH@emsys?5Embedded?5Systems?5GmbH?$AA@
	DW	0cd9H
	ORG $+2
	DD	FLAT:??_C@_0BE@DLHFEAFK@Shin?5Din?5Cable?5Ltd?4?$AA@
	DW	08086H
	ORG $+2
	DD	FLAT:??_C@_0BC@ECMAKMHG@Intel?5Corporation?$AA@
	DW	0cdeH
	ORG $+2
	DD	FLAT:??_C@_0L@OACAMJJG@Z?9Com?5INC?4?$AA@
	DW	0cf1H
	ORG $+2
	DD	FLAT:??_C@_0BM@OOCFEMN@e?9CONN?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@
	DW	0cf2H
	ORG $+2
	DD	FLAT:??_C@_0BE@KPNEJJKA@ENE?5Technology?5Inc?4?$AA@
	DW	0cf3H
	ORG $+2
	DD	FLAT:??_C@_0BH@IIKDMMBP@Qualcomm?5Atheros?0?5Inc?4?$AA@
	DW	0d17H
	ORG $+2
	DD	FLAT:??_C@_0N@IDKBGBCG@NALTEC?0?5Inc?4?$AA@
	DW	0d19H
	ORG $+2
	DD	FLAT:??_C@_0CD@IJEJHEOO@Shanghai?5Hank?5Connection?5Co?4?0?5Lt@
	DW	0d4aH
	ORG $+2
	DD	FLAT:??_C@_0P@MAHCGCHE@NF?5Corporation?$AA@
	DW	0d4bH
	ORG $+2
	DD	FLAT:??_C@_0BD@KEPOILEK@Grape?5Systems?5Inc?4?$AA@
	DW	0d51H
	ORG $+2
	DD	FLAT:??_C@_0BF@GHDJEHFK@Volex?5?$CIAsia?$CJ?5Pte?5Ltd?$AA@
	DW	0d61H
	ORG $+2
	DD	FLAT:??_C@_0CH@DILBGHLF@MEILU?5ELECTRONICS?5?$CISHENZHEN?$CJ?5CO?4@
	DW	0d71H
	ORG $+2
	DD	FLAT:??_C@_0BH@JNDMIFOJ@Hirakawa?5Hewtech?5Corp?4?$AA@
	DW	0d7cH
	ORG $+2
	DD	FLAT:??_C@_0CF@DEKDBPDL@Taiwan?5Line?5Tek?5Electronic?5Co?4?0?5@
	DW	0d87H
	ORG $+2
	DD	FLAT:??_C@_0BI@BKFMOADO@Dolby?5Laboratories?5Inc?4?$AA@
	DW	0d8cH
	ORG $+2
	DD	FLAT:??_C@_0BJ@ICKBMN@C?9MEDIA?5ELECTRONICS?5INC?4?$AA@
	DW	0d8fH
	ORG $+2
	DD	FLAT:??_C@_0N@ECGNEKML@Pitney?5Bowes?$AA@
	DW	0d90H
	ORG $+2
	DD	FLAT:??_C@_0CB@CBEHKKIA@Sure?9Fire?5Electrical?5Corporation@
	DW	0da7H
	ORG $+2
	DD	FLAT:??_C@_0N@BBFDLJEL@IOGEAR?0?5Inc?4?$AA@
	DW	0db0H
	ORG $+2
	DD	FLAT:??_C@_0CD@LDGCJJON@Micro?9Star?5International?5Co?4?0?5Lt@
	DW	0dc4H
	ORG $+2
	DD	FLAT:??_C@_0O@PIGMBEOG@inXtron?0?5Inc?4?$AA@
	DW	0dc5H
	ORG $+2
	DD	FLAT:??_C@_0N@BBHIMAGO@SDK?5Co?0?5Ltd?4?$AA@
	DW	0dd1H
	ORG $+2
	DD	FLAT:??_C@_0BN@MEJNGPFO@Contek?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	0dd2H
	ORG $+2
	DD	FLAT:??_C@_0CH@HKHHADBM@Power?5Quotient?5International?5Co?4@
	DW	0dd4H
	ORG $+2
	DD	FLAT:??_C@_0BH@JAOPMIJP@Custom?5Engineering?5SPA?$AA@
	DW	0e23H
	ORG $+2
	DD	FLAT:??_C@_0BO@MECAJMAF@Liou?5Yuane?5International?5Ltd?4?$AA@
	DW	0e39H
	ORG $+2
	DD	FLAT:??_C@_0CB@BNIAIBOP@Smart?5Modular?5Technologies?0?5Inc?4@
	DW	0e3aH
	ORG $+2
	DD	FLAT:??_C@_0BN@MDHILMJA@Neostar?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0e5bH
	ORG $+2
	DD	FLAT:??_C@_0CN@LHINEDL@Union?5Power?5Information?5Industri@
	DW	0e5dH
	ORG $+2
	DD	FLAT:??_C@_0BN@DKLMDFEK@Neltron?5Industrial?5Co?4?0?5Ltd?4?$AA@
	DW	0e6aH
	ORG $+2
	DD	FLAT:??_C@_0BN@PNJNPPHF@Megawin?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0e72H
	ORG $+2
	DD	FLAT:??_C@_0BP@FIEIALAE@Hsi?9Chin?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	0e8cH
	ORG $+2
	DD	FLAT:??_C@_0BP@BAFJGBFA@Well?5Force?5Electronic?5Co?4?0?5Ltd?$AA@
	DW	0e8dH
	ORG $+2
	DD	FLAT:??_C@_0O@DBHJNIK@MediaTek?5Inc?4?$AA@
	DW	0e9bH
	ORG $+2
	DD	FLAT:??_C@_0BC@PLHJNEDE@ADTEC?5CORPORATION?$AA@
	DW	0ea0H
	ORG $+2
	DD	FLAT:??_C@_0BF@LFNPLID@Ours?5Technology?5Inc?4?$AA@
	DW	0eb2H
	ORG $+2
	DD	FLAT:??_C@_0BJ@FFOINCNP@Y?9S?5ELECTRONIC?5CO?4?0?5LTD?4?$AA@
	DW	0ec2H
	ORG $+2
	DD	FLAT:??_C@_0BJ@EEJFEJAC@Sweetray?5Industrial?5Ltd?4?$AA@
	DW	0ec3H
	ORG $+2
	DD	FLAT:??_C@_0BC@NLMJJEGP@Axell?5Corporation?$AA@
	DW	0ec6H
	ORG $+2
	DD	FLAT:??_C@_0BO@HGLIFDP@InnoVISION?5Multimedia?5Limited?$AA@
	DW	0ecdH
	ORG $+2
	DD	FLAT:??_C@_0BB@FPOIDBI@Lite?9On?5IT?5Corp?4?$AA@
	DW	0ee4H
	ORG $+2
	DD	FLAT:??_C@_0BP@OLFMJOLO@Sunrich?5Technology?5?$CIH?4K?4?$CJ?5Ltd?4?$AA@
	DW	0f08H
	ORG $+2
	DD	FLAT:??_C@_0CE@LHKAEIDJ@CSL?5Wire?5?$CG?5Plug?5?$CIShen?5Zhen?$CJ?5Comp@
	DW	0f2eH
	ORG $+2
	DD	FLAT:??_C@_0BF@HHKPOBJN@Good?5Man?5Corporation?$AA@
	DW	0f32H
	ORG $+2
	DD	FLAT:??_C@_0CA@JKBEBDIB@YFC?9BonEagle?5Electric?5Co?4?0?5Ltd?4?$AA@
	DW	0f4cH
	ORG $+2
	DD	FLAT:??_C@_0BL@PCHAGLHO@WORLDWIDE?5CABLE?5OPTO?5CORP?4?$AA@
	DW	0f52H
	ORG $+2
	DD	FLAT:??_C@_0BO@NDDFJIHH@WING?5KEI?5ELECTRICAL?5CO?4?0?5LTD?4?$AA@
	DW	0f53H
	ORG $+2
	DD	FLAT:??_C@_0CA@JJBCDJBC@Taiyo?5Cable?5?$CIDongguan?$CJ?5Co?4?5Ltd?4?$AA@
	DW	0f54H
	ORG $+2
	DD	FLAT:??_C@_0CJ@GLJCMOOM@Kawai?5Musical?5Instruments?5Mfg?4?5C@
	DW	0f60H
	ORG $+2
	DD	FLAT:??_C@_0DE@KCDILGEE@GuangZhou?5Chief?5Tech?5Electronic?5@
	DW	0f68H
	ORG $+2
	DD	FLAT:??_C@_0BD@CAOPHLDB@TEPCO?5UQUEST?0?5LTD?4?$AA@
	DW	0f69H
	ORG $+2
	DD	FLAT:??_C@_0BD@HLMPAKPJ@DIONEX?5CORPORATION?$AA@
	DW	0f8bH
	ORG $+2
	DD	FLAT:??_C@_0BD@KEDKNNLF@Yazaki?5Corporation?$AA@
	DW	0f97H
	ORG $+2
	DD	FLAT:??_C@_0BD@NPCAKEK@CviLux?5Corporation?$AA@
	DW	0fb8H
	ORG $+2
	DD	FLAT:??_C@_0BE@DKFGOFCL@Wistron?5Corporation?$AA@
	DW	0fbaH
	ORG $+2
	DD	FLAT:??_C@_0CB@KMPGIMLP@SAN?5SHING?5ELECTRONICS?5CO?4?0?5LTD?4?4@
	DW	0fceH
	ORG $+2
	DD	FLAT:??_C@_0CH@JMIKCMLI@Sony?5Ericsson?5Mobile?5Communicati@
	DW	0ff7H
	ORG $+2
	DD	FLAT:??_C@_0CJ@MNOHKIGC@CHI?5SHING?5COMPUTER?5ACCESSORIES?5C@
	DW	01000H
	ORG $+2
	DD	FLAT:??_C@_0BB@FNNKEBO@Speed?5Tech?5Corp?4?$AA@
	DW	01004H
	ORG $+2
	DD	FLAT:??_C@_0BE@PPCAGGEP@LG?5Electronics?5Inc?4?$AA@
	DW	01026H
	ORG $+2
	DD	FLAT:??_C@_0BC@KLMPEDJE@Newly?5Corporation?$AA@
	DW	0102fH
	ORG $+2
	DD	FLAT:??_C@_0CP@MHAOCCHA@WENZHOU?5YIHUA?5COMMUNICATED?5CONNE@
	DW	01038H
	ORG $+2
	DD	FLAT:??_C@_0BA@PMFKJABH@SteelSeries?5ApS?$AA@
	DW	01048H
	ORG $+2
	DD	FLAT:??_C@_0BL@DIDNCHDM@Targus?5Group?5International?$AA@
	DW	01057H
	ORG $+2
	DD	FLAT:??_C@_0BB@MCAPDOMI@ON?5Semiconductor?$AA@
	DW	01058H
	ORG $+2
	DD	FLAT:??_C@_0CD@OEFJDFLG@Western?5Digital?5Technologies?0?5In@
	DW	01059H
	ORG $+2
	DD	FLAT:??_C@_0BJ@HPGECAIP@Giesecke?5?$CG?5Devrient?5GmbH?$AA@
	DW	0105cH
	ORG $+2
	DD	FLAT:??_C@_0DF@EJNCJCJN@Freeway?5Electronic?5Wire?5?$CG?5Cable?5@
	DW	01083H
	ORG $+2
	DD	FLAT:??_C@_0BH@GGINDOFM@CANON?5ELECTRONICS?5INC?4?$AA@
	DW	01084H
	ORG $+2
	DD	FLAT:??_C@_0BC@JLIOEOBP@PANTECH?5CO?4?0?5LTD?4?$AA@
	DW	0108bH
	ORG $+2
	DD	FLAT:??_C@_0BP@HEECLKMJ@Grand?9tek?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0108cH
	ORG $+2
	DD	FLAT:??_C@_0BC@MMEHCLPH@Robert?5Bosch?5GmbH?$AA@
	DW	0108eH
	ORG $+2
	DD	FLAT:??_C@_0BA@JBGEKCBJ@Lotes?5Co?4?0?5Ltd?4?$AA@
	DW	010aaH
	ORG $+2
	DD	FLAT:??_C@_0N@MADBCNBC@Cables?5To?5Go?$AA@
	DW	010abH
	ORG $+2
	DD	FLAT:??_C@_0O@DKGHEGPO@USI?5Co?4?0?5Ltd?4?$AA@
	DW	010aeH
	ORG $+2
	DD	FLAT:??_C@_0BL@GMIJPDAF@Princeton?5Technology?5Corp?4?$AA@
	DW	010bbH
	ORG $+2
	DD	FLAT:??_C@_0BD@BNHNDFDJ@TM?5Technology?5Inc?4?$AA@
	DW	010cdH
	ORG $+2
	DD	FLAT:??_C@_0L@BEMBIFEP@Kycon?5Inc?4?$AA@
	DW	010d6H
	ORG $+2
	DD	FLAT:??_C@_0CA@BFJDJKMK@Actions?5Semiconductor?5Co?4?0?5Ltd?4?$AA@
	DW	01112H
	ORG $+2
	DD	FLAT:??_C@_0DF@NDHMOMGK@Golden?5Bright?5?$CISichuan?$CJ?5Electron@
	DW	01113H
	ORG $+2
	DD	FLAT:??_C@_09JKLIJNKN@Medion?5AG?$AA@
	DW	0111eH
	ORG $+2
	DD	FLAT:??_C@_0BK@DEMMBJPB@VSO?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@
	DW	0112eH
	ORG $+2
	DD	FLAT:??_C@_0CO@HLACDLIC@Master?5Hill?5Electric?5Wire?5and?5Ca@
	DW	01130H
	ORG $+2
	DD	FLAT:??_C@_0BG@JFAAFJPO@Tenx?5Technology?0?5Inc?4?$AA@
	DW	01146H
	ORG $+2
	DD	FLAT:??_C@_0CB@BPPANFMB@Shimane?5SANYO?5Electric?5Co?4?0?5Ltd?4@
	DW	0114dH
	ORG $+2
	DD	FLAT:??_C@_0BP@NKCLDENL@Alpha?5Imaging?5Technology?5Corp?4?$AA@
	DW	0115bH
	ORG $+2
	DD	FLAT:??_C@_0BL@HCIAKFOP@Salix?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	01175H
	ORG $+2
	DD	FLAT:??_C@_0CB@BGNNABKD@Sheng?5Yih?5Technologies?5Co?4?0?5Ltd?4@
	DW	01199H
	ORG $+2
	DD	FLAT:??_C@_0BF@FDIEEFFD@Sierra?5Wireless?5Inc?4?$AA@
	DW	0119aH
	ORG $+2
	DD	FLAT:??_C@_0CG@JCFADKIE@DONG?5GUAN?5JALINK?5ELECTRONICES?5CO@
	DW	011aaH
	ORG $+2
	DD	FLAT:??_C@_0BH@LNLMLHPJ@GlobalMedia?5Group?0?5LLC?$AA@
	DW	011b0H
	ORG $+2
	DD	FLAT:??_C@_0BH@HFAICOFB@ATECH?5FLASH?5TECHNOLOGY?$AA@
	DW	011e6H
	ORG $+2
	DD	FLAT:??_C@_0BJ@GJMOHKID@K?4I?4?5Technology?5Co?4?5Ltd?4?$AA@
	DW	0120eH
	ORG $+2
	DD	FLAT:??_C@_0BG@MJAIIBOP@HUDSON?5SOFT?5CO?4?0?5LTD?4?$AA@
	DW	01223H
	ORG $+2
	DD	FLAT:??_C@_0BP@DHPBBMCB@SKYCABLE?5ENTERPRISE?4?5CO?4?0?5LTD?4?$AA@
	DW	0124bH
	ORG $+2
	DD	FLAT:??_C@_0BI@KKGDFIOD@NYKO?5Technologies?0?5Inc?4?$AA@
	DW	0125fH
	ORG $+2
	DD	FLAT:??_C@_0BL@FCGNNKPJ@ADATA?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	01262H
	ORG $+2
	DD	FLAT:??_C@_0BH@CNPFBGCM@MICRO?5VISION?5CO?4?0?5LTD?4?$AA@
	DW	0126cH
	ORG $+2
	DD	FLAT:??_C@_0BI@BANJHMOB@Aristocrat?5Technologies?$AA@
	DW	0126dH
	ORG $+2
	DD	FLAT:??_C@_0M@HPCCHOFJ@Bel?5Stewart?$AA@
	DW	01281H
	ORG $+2
	DD	FLAT:??_C@_0BO@EMLGGAIJ@Gean?5Sen?5Electronic?5Co?4?0?5Ltd?4?$AA@
	DW	01286H
	ORG $+2
	DD	FLAT:??_C@_0BM@FDHCJPEM@MARVELL?5SEMICONDUCTOR?0?5INC?4?$AA@
	DW	01294H
	ORG $+2
	DD	FLAT:??_C@_0BC@CDINJBKA@RISO?5KAGAKU?5CORP?4?$AA@
	DW	012abH
	ORG $+2
	DD	FLAT:??_C@_0CI@LMINHIGA@Honey?5Bee?5Electronic?5Internation@
	DW	012b8H
	ORG $+2
	DD	FLAT:??_C@_0CP@OPCIAOPO@Zhejiang?5Xinya?5Electronic?5Techno@
	DW	012d2H
	ORG $+2
	DD	FLAT:??_C@_0BP@JPNNFCKE@LINE?5TECH?5INDUSTRIAL?5CO?4?0?5LTD?4?$AA@
	DW	012d7H
	ORG $+2
	DD	FLAT:??_C@_0BN@DKNOJINI@Better?5Holdings?5?$CIHK?$CJ?5Limited?$AA@
	DW	0132bH
	ORG $+2
	DD	FLAT:??_C@_0BO@KIELHJB@Konica?5Minolta?5Holdings?0?5Inc?4?$AA@
	DW	01348H
	ORG $+2
	DD	FLAT:??_C@_0BP@ODBMNHOP@Katsuragawa?5Electric?5Co?4?0?5Ltd?4?$AA@
	DW	01370H
	ORG $+2
	DD	FLAT:??_C@_0M@IPAHGEJP@Swissbit?5AG?$AA@
	DW	0137dH
	ORG $+2
	DD	FLAT:??_C@_0BM@DKMEKHIM@Pericom?5Semiconductor?5Corp?4?$AA@
	DW	01390H
	ORG $+2
	DD	FLAT:??_C@_0BK@LJKDAPJK@TomTom?5International?5B?4V?4?$AA@
	DW	013caH
	ORG $+2
	DD	FLAT:??_C@_0CG@BGIJPEKA@JyeTai?5Precision?5Industrial?5Co?4?0@
	DW	013cfH
	ORG $+2
	DD	FLAT:??_C@_0M@DPEOBOCF@Wisair?5Ltd?4?$AA@
	DW	013d3H
	ORG $+2
	DD	FLAT:??_C@_0BN@BNPLLCII@AzureWave?5Technologies?0?5Inc?4?$AA@
	DW	013dcH
	ORG $+2
	DD	FLAT:??_C@_0O@EADKLFFK@ALEREON?0?5INC?4?$AA@
	DW	013fdH
	ORG $+2
	DD	FLAT:??_C@_0BD@MJPGJJIB@Initio?5Corporation?$AA@
	DW	013feH
	ORG $+2
	DD	FLAT:??_C@_0BJ@PODMPDKE@Phison?5Electronics?5Corp?4?$AA@
	DW	0140eH
	ORG $+2
	DD	FLAT:??_C@_0BA@EBAJJPHC@Telechips?0?5Inc?4?$AA@
	DW	01410H
	ORG $+2
	DD	FLAT:??_C@_0BH@BHONNEDH@Novatel?5Wireless?0?5Inc?4?$AA@
	DW	01419H
	ORG $+2
	DD	FLAT:??_C@_0BN@KECIKNAF@ABILITY?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@
	DW	01421H
	ORG $+2
	DD	FLAT:??_C@_0CC@KOGJPFE@Sensor?5Technologies?5America?0?5Inc@
	DW	01429H
	ORG $+2
	DD	FLAT:??_C@_0CL@DCCPGNCP@Vega?5Technologies?5Industrial?5?$CIAu@
	DW	01439H
	ORG $+2
	DD	FLAT:??_C@_0BI@EBFAHIJA@Wind?5River?5Systems?5Inc?4?$AA@
	DW	0143cH
	ORG $+2
	DD	FLAT:??_C@_0BC@OEGADIHN@Altek?5Corporation?$AA@
	DW	0147aH
	ORG $+2
	DD	FLAT:??_C@_0P@OCKHDMGO@Formosa21?5Inc?4?$AA@
	DW	01487H
	ORG $+2
	DD	FLAT:??_C@_0BA@EJBEDMD@DSP?5Group?0?5Ltd?4?$AA@
	DW	0148eH
	ORG $+2
	DD	FLAT:??_C@_0N@JLOFKNJM@EVATRONIX?5SA?$AA@
	DW	014adH
	ORG $+2
	DD	FLAT:??_C@_0BA@GIDLPKMM@CTK?5Corporation?$AA@
	DW	014afH
	ORG $+2
	DD	FLAT:??_C@_0BF@POKLDLPA@ATP?5Electronics?5Inc?4?$AA@
	DW	014b0H
	ORG $+2
	DD	FLAT:??_C@_0BC@LNFIEHCE@StarTech?4com?5Ltd?4?$AA@
	DW	014cdH
	ORG $+2
	DD	FLAT:??_C@_0BN@OBOFFJMJ@MOAI?5ELECTRONICS?5CORPORATION?$AA@
	DW	01500H
	ORG $+2
	DD	FLAT:??_C@_07HKBKGGAL@Ellisys?$AA@
	DW	01516H
	ORG $+2
	DD	FLAT:??_C@_0BE@MEIKBKHJ@Skymedi?5Corporation?$AA@
	DW	0151cH
	ORG $+2
	DD	FLAT:??_C@_0BP@NFMNNPJJ@VeriSilicon?5Holdings?5Co?4?0?5Ltd?4?$AA@
	DW	0152dH
	ORG $+2
	DD	FLAT:??_C@_0BJ@NNBEAIKI@JMicron?5Technology?5Corp?4?$AA@
	DW	0152eH
	ORG $+2
	DD	FLAT:??_C@_0CF@KFFNHPKK@HLDS?5?$CIHitachi?9LG?5Data?5Storage?0?5I@
	DW	01540H
	ORG $+2
	DD	FLAT:??_C@_0BN@PJAMMHJM@Phihong?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0154bH
	ORG $+2
	DD	FLAT:??_C@_0BG@FDFFBPKH@PNY?5Technologies?5Inc?4?$AA@
	DW	0154dH
	ORG $+2
	DD	FLAT:??_C@_0CI@PJGLCGBH@Rapid?5Conn?0?5Connect?5County?5Holdi@
	DW	0154eH
	ORG $+2
	DD	FLAT:??_C@_0BF@KCLHJFIN@D?5?$CG?5M?5Holdings?0?5Inc?4?$AA@
	DW	01568H
	ORG $+2
	DD	FLAT:??_C@_0BM@MLLCLJKN@Sunf?5Pu?5Technology?5Co?4?0?5Ltd?$AA@
	DW	01570H
	ORG $+2
	DD	FLAT:??_C@_0BM@PJFBNPPK@ALLTOP?5TECHNOLOGY?5CO?4?0?5LTD?4?$AA@
	DW	0157bH
	ORG $+2
	DD	FLAT:??_C@_0L@HBGIDMAB@Ketron?5SRL?$AA@
	DW	01586H
	ORG $+2
	DD	FLAT:??_C@_0BN@MGGPMLNL@Palconn?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	01598H
	ORG $+2
	DD	FLAT:??_C@_0CE@PGJPGLLG@Kunshan?5Guoji?5Electronics?5Co?4?0?5L@
	DW	015a2H
	ORG $+2
	DD	FLAT:??_C@_0BO@KPCEMMAE@Freescale?5Semiconductor?0?5Inc?4?$AA@
	DW	015a8H
	ORG $+2
	DD	FLAT:??_C@_0CL@HBACFJJO@Shen?5Zhen?5Teamspower?5Electronics@
	DW	015aaH
	ORG $+2
	DD	FLAT:??_C@_0CI@HNEJDFII@Hong?5Kong?5Gearway?5Electronics?5Co@
	DW	015c9H
	ORG $+2
	DD	FLAT:??_C@_0BD@GIDCGAKL@D?9Box?5Technologies?$AA@
	DW	015e0H
	ORG $+2
	DD	FLAT:??_C@_0BO@FIJNAGLJ@Seong?5Ji?5Industrial?5Co?4?0?5Ltd?4?$AA@
	DW	0160dH
	ORG $+2
	DD	FLAT:??_C@_06DGDFLKMM@Samtec?$AA@
	DW	01612H
	ORG $+2
	DD	FLAT:??_C@_0N@GNFMIBKN@Soft?5DB?5Inc?4?$AA@
	DW	0163eH
	ORG $+2
	DD	FLAT:??_C@_0BO@CCKIBDCK@HongLin?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	01660H
	ORG $+2
	DD	FLAT:??_C@_0BH@OFEECAGA@Creatix?5Polymedia?5GmbH?$AA@
	DW	01679H
	ORG $+2
	DD	FLAT:??_C@_0M@OMFDOLIG@Total?5Phase?$AA@
	DW	01682H
	ORG $+2
	DD	FLAT:??_C@_0CD@NDNOFCGN@Maxwise?5Production?5Enterprise?5Lt@
	DW	016a5H
	ORG $+2
	DD	FLAT:??_C@_0CI@LPNLCPKP@Shenzhen?5Zhengerya?5Technology?5Co@
	DW	016acH
	ORG $+2
	DD	FLAT:??_C@_0CK@GHEMOGNO@Dongguan?5ChingLung?5Wire?5?$CG?5Cable?5@
	DW	016ccH
	ORG $+2
	DD	FLAT:??_C@_0BH@EKGKEMKL@silex?5technology?0?5Inc?4?$AA@
	DW	01736H
	ORG $+2
	DD	FLAT:??_C@_0BL@MBCLBNK@CANON?5IMAGING?5SYSTEMS?5INC?4?$AA@
	DW	0173aH
	ORG $+2
	DD	FLAT:??_C@_0BC@LFEKPOAD@Roche?5Diagnostics?$AA@
	DW	01748H
	ORG $+2
	DD	FLAT:??_C@_0BF@BACBMICM@MQP?5Electronics?5Ltd?4?$AA@
	DW	0174cH
	ORG $+2
	DD	FLAT:??_C@_0BI@EFCFBFPB@ASMedia?5Technology?5Inc?4?$AA@
	DW	01759H
	ORG $+2
	DD	FLAT:??_C@_0BL@PGPGIHGN@LucidPort?5Technology?0?5Inc?4?$AA@
	DW	0176eH
	ORG $+2
	DD	FLAT:??_C@_0BE@LLHADAIP@UD?5electronic?5corp?4?$AA@
	DW	01771H
	ORG $+2
	DD	FLAT:??_C@_0CC@KBPLCNPO@Shenzhen?5Alex?5Connector?5Co?4?0?5Ltd@
	DW	01772H
	ORG $+2
	DD	FLAT:??_C@_0BN@MGLGHCII@System?5Level?5Solutions?0?5Inc?4?$AA@
	DW	01782H
	ORG $+2
	DD	FLAT:??_C@_0BP@PDCKJENN@Spreadtrum?5Communications?5Inc?4?$AA@
	DW	01788H
	ORG $+2
	DD	FLAT:??_C@_0CH@GLPFKNO@ShenZhen?5Litkconn?5Technology?5Co?4@
	DW	01796H
	ORG $+2
	DD	FLAT:??_C@_0P@PAIKKKPL@Printrex?0?5Inc?4?$AA@
	DW	017a5H
	ORG $+2
	DD	FLAT:??_C@_0CE@FMNDGFCO@Advanced?5Connection?5Technology?5I@
	DW	017beH
	ORG $+2
	DD	FLAT:??_C@_0DI@IPLEGMCC@Dongguan?5Yangming?5Precision?5of?5P@
	DW	017cfH
	ORG $+2
	DD	FLAT:??_C@_0CA@FKGCAAGK@Hip?5Hing?5Cable?5?$CG?5Plug?5Mfy?4?5Ltd?4?$AA@
	DW	017e1H
	ORG $+2
	DD	FLAT:??_C@_08FCLKDPPD@ORTHOFIX?$AA@
	DW	017e9H
	ORG $+2
	DD	FLAT:??_C@_0BG@PLILAAEO@DisplayLink?5?$CIUK?$CJ?5Ltd?4?$AA@
	DW	017efH
	ORG $+2
	DD	FLAT:??_C@_06EOFPOMJG@Lenovo?$AA@
	DW	017f5H
	ORG $+2
	DD	FLAT:??_C@_0L@IGMLMAAK@K?4K?4?5Rocky?$AA@
	DW	01829H
	ORG $+2
	DD	FLAT:??_C@_0CF@KAKIFJIN@Dongguan?5YuQiu?5Electronics?5Co?4?0?5@
	DW	01831H
	ORG $+2
	DD	FLAT:??_C@_0BO@DPMJHMBK@Gwo?5Jinn?5Industries?5Co?4?0?5Ltd?4?$AA@
	DW	01898H
	ORG $+2
	DD	FLAT:??_C@_0BI@EGKCPMHF@Summit?5Microelectronics?$AA@
	DW	01899H
	ORG $+2
	DD	FLAT:??_C@_0BC@HBKKPCPF@Linkiss?5Co?4?0?5Ltd?4?$AA@
	DW	0189bH
	ORG $+2
	DD	FLAT:??_C@_0BN@LHNKNBIM@Trimax?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	018d1H
	ORG $+2
	DD	FLAT:??_C@_0M@INPJKDFM@Google?5Inc?4?$AA@
	DW	018e3H
	ORG $+2
	DD	FLAT:??_C@_0CF@DABKNPLD@Fitilink?5Integrated?5Technology?0?5@
	DW	018faH
	ORG $+2
	DD	FLAT:??_C@_0CI@NCCLCDI@Kuang?5Ying?5Computer?5Equipment?5Co@
	DW	018fdH
	ORG $+2
	DD	FLAT:??_C@_0O@HPIJIONJ@FineArch?5Inc?4?$AA@
	DW	01914H
	ORG $+2
	DD	FLAT:??_C@_0BN@LFCPLAAL@Alco?5Digital?5Devices?5Limited?$AA@
	DW	01915H
	ORG $+2
	DD	FLAT:??_C@_0BJ@FNMFPLIK@Nordic?5Semiconductor?5ASA?$AA@
	DW	0192fH
	ORG $+2
	DD	FLAT:??_C@_0BJ@CDJNPBB@Avago?5Technologies?0?5Pte?4?$AA@
	DW	01930H
	ORG $+2
	DD	FLAT:??_C@_0CF@NLNPHLHC@Shenzhen?5Xianhe?5Technology?5Co?4?0?5@
	DW	01931H
	ORG $+2
	DD	FLAT:??_C@_0CJ@FJMLIAEB@Ningbo?5Broad?5Telecommunication?5C@
	DW	01946H
	ORG $+2
	DD	FLAT:??_C@_0BB@PCAKKDFD@Irisguard?5UK?5Ltd?$AA@
	DW	01949H
	ORG $+2
	DD	FLAT:??_C@_06CHAGPIBB@Lab126?$AA@
	DW	01953H
	ORG $+2
	DD	FLAT:??_C@_0N@PJANIMFN@Ironkey?5Inc?4?$AA@
	DW	01957H
	ORG $+2
	DD	FLAT:??_C@_0BB@PPNLBENA@BIOS?5Corporation?$AA@
	DW	01958H
	ORG $+2
	DD	FLAT:??_C@_0BD@JFCNKMCG@Office?5Depot?0?5Inc?4?$AA@
	DW	01989H
	ORG $+2
	DD	FLAT:??_C@_0BI@EPIBIIDM@Nuconn?5Technology?5Corp?4?$AA@
	DW	0198dH
	ORG $+2
	DD	FLAT:??_C@_0BC@JJOAHPPC@Fairchild?5Imaging?$AA@
	DW	0199cH
	ORG $+2
	DD	FLAT:??_C@_0CF@CFPPMAFK@Richnex?5Microelectronics?5Corpora@
	DW	0199dH
	ORG $+2
	DD	FLAT:??_C@_06FFDCAGEL@Dexxon?$AA@
	DW	019d2H
	ORG $+2
	DD	FLAT:??_C@_0BA@JIPMJPAM@ZTE?5Corporation?$AA@
	DW	019e8H
	ORG $+2
	DD	FLAT:??_C@_0CJ@HAKCLNCA@Industrial?5Technology?5Research?5I@
	DW	019ffH
	ORG $+2
	DD	FLAT:??_C@_08GALBDMNI@Best?5Buy?$AA@
	DW	01a0aH
	ORG $+2
	DD	FLAT:??_C@_0BE@BIONMJOM@USB?9IF?5non?9workshop?$AA@
	DW	01a25H
	ORG $+2
	DD	FLAT:??_C@_0BI@PPNCKFLJ@Amphenol?5East?5Asia?5Ltd?4?$AA@
	DW	01a35H
	ORG $+2
	DD	FLAT:??_C@_0DB@NGACLDBO@Astec?5Power?0?5a?5division?5of?5Emers@
	DW	01a36H
	ORG $+2
	DD	FLAT:??_C@_0BG@DLODCOOG@Biwin?5Technology?5Ltd?4?$AA@
	DW	01a40H
	ORG $+2
	DD	FLAT:??_C@_0BJ@KAKHDDLA@TERMINUS?5TECHNOLOGY?5INC?4?$AA@
	DW	01a4aH
	ORG $+2
	DD	FLAT:??_C@_0O@NGCCHBJG@Silicon?5Image?$AA@
	DW	01a5aH
	ORG $+2
	DD	FLAT:??_C@_0O@IHDBJOFK@Tandberg?5Data?$AA@
	DW	01a6eH
	ORG $+2
	DD	FLAT:??_C@_0BF@IBCFPAGK@Global?5Unichip?5Corp?4?$AA@
	DW	01a79H
	ORG $+2
	DD	FLAT:??_C@_0BG@IOFCBCHK@Bayer?5Health?5Care?5LLC?$AA@
	DW	01a7bH
	ORG $+2
	DD	FLAT:??_C@_0BF@HMENCDPO@Lumberg?5Connect?5GmbH?$AA@
	DW	01a82H
	ORG $+2
	DD	FLAT:??_C@_0BN@GMHKDAOP@Proconn?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	01a8aH
	ORG $+2
	DD	FLAT:??_C@_0BH@HJFKHBGL@Simula?5Technology?5Inc?4?$AA@
	DW	01a8bH
	ORG $+2
	DD	FLAT:??_C@_0BA@KBMPMKDN@SGS?5Taiwan?5Ltd?4?$AA@
	DW	01aaeH
	ORG $+2
	DD	FLAT:??_C@_0CJ@EENODCNA@Johnson?5Component?5?$CG?5Equipments?5C@
	DW	01acbH
	ORG $+2
	DD	FLAT:??_C@_0M@BNPJBJHO@Salcomp?5Plc?$AA@
	DW	01ad1H
	ORG $+2
	DD	FLAT:??_C@_0BF@FJNJCEIJ@Desan?5Wire?5Co?4?0?5Ltd?4?$AA@
	DW	01aedH
	ORG $+2
	DD	FLAT:??_C@_0CI@ENEIOO@High?5Top?5Precision?5Electronic?5Co@
	DW	01aeeH
	ORG $+2
	DD	FLAT:??_C@_0CD@KCEJLGKF@SHEN?5ZHEN?5REX?5TECHNOLOGY?5CO?4?0?5LT@
	DW	01aefH
	ORG $+2
	DD	FLAT:??_C@_0BI@BAHHJBOM@Octekconn?5Incorporation?$AA@
	DW	01b20H
	ORG $+2
	DD	FLAT:??_C@_0BK@FLEFAHEK@MStar?5Semiconductor?0?5Inc?4?$AA@
	DW	01b36H
	ORG $+2
	DD	FLAT:??_C@_0BD@DPNOIOGL@ViXS?5Systems?0?5Inc?4?$AA@
	DW	01b48H
	ORG $+2
	DD	FLAT:??_C@_0BN@ODKKJGBD@Plastron?5Precision?5Co?4?0?5Ltd?4?$AA@
	DW	01b65H
	ORG $+2
	DD	FLAT:??_C@_0DA@EOOOBNLE@The?5Hong?5Kong?5Standards?5and?5Test@
	DW	01b88H
	ORG $+2
	DD	FLAT:??_C@_0CI@GNFBMNPP@ShenMing?5Electron?5?$CIDong?5Guan?$CJ?5Co@
	DW	01b8eH
	ORG $+2
	DD	FLAT:??_C@_0O@IPLHGMF@Amlogic?0?5Inc?4?$AA@
	DW	01b8fH
	ORG $+2
	DD	FLAT:??_C@_0BO@MCHPBGAI@Super?5Talent?5Technology?0?5Inc?4?$AA@
	DW	01b99H
	ORG $+2
	DD	FLAT:??_C@_0BO@IHCMPCEB@Shenzhen?5Yuanchuan?5Electronic?$AA@
	DW	01bc4H
	ORG $+2
	DD	FLAT:??_C@_0P@JGHIOJAI@Ford?5Motor?5Co?4?$AA@
	DW	01bceH
	ORG $+2
	DD	FLAT:??_C@_0CA@FCJOHAEE@Contac?5Cable?5Industrial?5Limited?$AA@
	DW	01bcfH
	ORG $+2
	DD	FLAT:??_C@_0CD@HFOIMFJ@Sunplus?5Innovation?5Technology?5In@
	DW	01bf6H
	ORG $+2
	DD	FLAT:??_C@_0CH@KIMIGBPK@Orient?5Semiconductor?5Electronics@
	DW	01c10H
	ORG $+2
	DD	FLAT:??_C@_0BO@IHAPHGGJ@Lanterra?5Industrial?5Co?4?0?5Ltd?4?$AA@
	DW	01c27H
	ORG $+2
	DD	FLAT:??_C@_0CA@MAOFGAIM@SHENZHEN?5D?$CGS?5INDUSTRIES?5LIMITED?$AA@
	DW	01c31H
	ORG $+2
	DD	FLAT:??_C@_08PDBDCLGF@LS?5Mtron?$AA@
	DW	01c6bH
	ORG $+2
	DD	FLAT:??_C@_0DA@PPLCBMMB@Philips?5?$CG?5Lite?9ON?5Digital?5Soluti@
	DW	01c77H
	ORG $+2
	DD	FLAT:??_C@_0BM@KDIOKGMF@Kaetat?5Industrial?5Co?4?0?5Ltd?4?$AA@
	DW	01c78H
	ORG $+2
	DD	FLAT:??_C@_0BF@DNKPBOCD@Mindray?5DS?5USA?0?5Inc?4?$AA@
	DW	01c7aH
	ORG $+2
	DD	FLAT:??_C@_0BG@IEKIELLN@Egis?5Technology?0?5Inc?4?$AA@
	DW	01c7bH
	ORG $+2
	DD	FLAT:??_C@_0CP@DAEKMFBI@Shenzhen?5Luxshare?5Precision?5Indu@
	DW	01c8eH
	ORG $+2
	DD	FLAT:??_C@_0BL@NCJEDCIM@ASTRON?5INTERNATIONAL?5CORP?4?$AA@
	DW	01c98H
	ORG $+2
	DD	FLAT:??_C@_0BJ@GEGPHPDK@ALPINE?5ELECTRONICS?0?5INC?4?$AA@
	DW	01cb3H
	ORG $+2
	DD	FLAT:??_C@_0BL@CHCFPHFA@Aces?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	01cb4H
	ORG $+2
	DD	FLAT:??_C@_0BB@EIGDHDFJ@OPEX?5CORPORATION?$AA@
	DW	01cbeH
	ORG $+2
	DD	FLAT:??_C@_0BO@JLIFAMG@Texas?5Instruments?5?9?5Stellaris?$AA@
	DW	01cdeH
	ORG $+2
	DD	FLAT:??_C@_0DA@BKKOBFJG@Telecommunications?5Technology?5As@
	DW	01ce1H
	ORG $+2
	DD	FLAT:??_C@_0N@LKKAKDAC@Amphenol?5KAE?$AA@
	DW	01d08H
	ORG $+2
	DD	FLAT:??_C@_0CL@OJLMBANN@NINGBO?5HENTEK?5DRAGON?5ELECTRONICS@
	DW	01d0aH
	ORG $+2
	DD	FLAT:??_C@_0BH@GIIFDIFG@Johnson?5Controls?0?5Inc?4?$AA@
	DW	01d29H
	ORG $+2
	DD	FLAT:??_C@_0CA@GDMPIAIK@Horng?5Tong?5Enterprise?5Co?4?0?5Ltd?4?$AA@
	DW	01d42H
	ORG $+2
	DD	FLAT:??_C@_0BD@JJOGFDJ@DRAGON?5JOY?5LIMITED?$AA@
	DW	01d43H
	ORG $+2
	DD	FLAT:??_C@_0BJ@IKAGMPGB@Montage?5Technology?0?5Inc?4?$AA@
	DW	01d45H
	ORG $+2
	DD	FLAT:??_C@_0BC@KIFIHBOP@Qisda?5Corporation?$AA@
	DW	01d49H
	ORG $+2
	DD	FLAT:??_C@_0CI@PCPBKJFB@SHENZHEN?5LINKCONN?5ELECTRONICS?5CO@
	DW	01d4dH
	ORG $+2
	DD	FLAT:??_C@_0BF@EEHMEIJP@Pegatron?5Corporation?$AA@
	DW	01d5cH
	ORG $+2
	DD	FLAT:??_C@_0BC@HAMMCKPN@Fresco?5Logic?5Inc?4?$AA@
	DW	01d5dH
	ORG $+2
	DD	FLAT:??_C@_0BL@MMCBELAO@QIXING?5INDUSTRIAL?5?$CIHK?$CJ?5CO?4?$AA@
	DW	01d60H
	ORG $+2
	DD	FLAT:??_C@_0BN@EBGBPGPI@ASAP?5International?5Co?4?0?5Ltd?4?$AA@
	DW	01d69H
	ORG $+2
	DD	FLAT:??_C@_0BL@NKBOOFNF@Walta?5Electronic?5Co?4?0?5Ltd?4?$AA@
	DW	01d6bH
	ORG $+2
	DD	FLAT:??_C@_0BF@JDCHKKGB@The?5Linux?5Foundation?$AA@
	DW	01d77H
	ORG $+2
	DD	FLAT:??_C@_0DE@IMGLKMI@Yueqing?5Changling?5Electronic?5Ins@
	DW	01d79H
	ORG $+2
	DD	FLAT:??_C@_0CH@EKHHMHEC@Shenzhen?5My?9Power?5Technology?5Co?4@
	DW	01d80H
	ORG $+2
	DD	FLAT:??_C@_04EOPNHLPE@PLDA?$AA@
	DW	01da0H
	ORG $+2
	DD	FLAT:??_C@_0BK@FNCNBIIF@Parade?5Technologies?0?5Inc?4?$AA@
	DW	01dbeH
	ORG $+2
	DD	FLAT:??_C@_0BD@GCMMCDEJ@S?4R?4N?4?5Corporation?$AA@
	DW	01dccH
	ORG $+2
	DD	FLAT:??_C@_0CE@EGHGGAJG@Document?5Capture?5Technologies?0?5I@
	DW	01dd8H
	ORG $+2
	DD	FLAT:??_C@_0BL@NACGMHGM@BUFFALO?5KOKUYO?5SUPPLY?5INC?4?$AA@
	DW	01ddfH
	ORG $+2
	DD	FLAT:??_C@_0BH@NMLKIBDM@GDA?5Technologies?0?5Inc?4?$AA@
	DW	01df2H
	ORG $+2
	DD	FLAT:??_C@_0CK@INFLCDIC@Telecommunication?5Metrology?5Cent@
	DW	01e08H
	ORG $+2
	DD	FLAT:??_C@_0BA@FHOGIFBC@Inventure?0?5Inc?4?$AA@
	DW	01e10H
	ORG $+2
	DD	FLAT:??_C@_0BJ@FEMBFAJG@Point?5Grey?5Research?5Inc?4?$AA@
	DW	01e33H
	ORG $+2
	DD	FLAT:??_C@_0BD@LIIMMKIN@KOBIAN?5CANADA?5INC?4?$AA@
	DW	01e3aH
	ORG $+2
	DD	FLAT:??_C@_0CE@BIOHJJL@Continental?5Automotive?5Systems?5I@
	DW	01e47H
	ORG $+2
	DD	FLAT:??_C@_0CB@BKOLJNN@HUNG?5TA?5H?4T?4ENTERPRISE?5CO?4?0?5LTD?4@
	DW	01e4eH
	ORG $+2
	DD	FLAT:??_C@_0BH@JAAJJDAF@Etron?5Technology?0?5Inc?4?$AA@
	DW	01e6dH
	ORG $+2
	DD	FLAT:??_C@_0CF@GIBECCII@WAN?5SHIH?5ELECTRONIC?5?$CIH?4K?4?$CJ?5CO?4?0?5@
	DW	01e73H
	ORG $+2
	DD	FLAT:??_C@_0BO@OPAJPFGF@COMLINK?5ELECTRONICS?5CO?4?0?5LTD?4?$AA@
	DW	01e89H
	ORG $+2
	DD	FLAT:??_C@_0DA@GFKEDMJF@Vtion?5Information?5Technology?5?$CIFu@
	DW	01ea3H
	ORG $+2
	DD	FLAT:??_C@_0BL@BINCEHIC@Concraft?5Holding?5Co?4?0?5Ltd?4?$AA@
	DW	01eb7H
	ORG $+2
	DD	FLAT:??_C@_0CH@IFPLLPOK@WIN?5WIN?5PRECISION?5INDUSTRIAL?5CO?4@
	DW	01ec9H
	ORG $+2
	DD	FLAT:??_C@_0BJ@IADLJBAM@MOSER?5BAER?5INDIA?5LIMITED?$AA@
	DW	01ed4H
	ORG $+2
	DD	FLAT:??_C@_0BJ@HDEECJAH@Transwitch?5?$CIIsrael?$CJ?5Ltd?4?$AA@
	DW	01f1dH
	ORG $+2
	DD	FLAT:??_C@_0DC@MLCJGJKA@How?5Weih?5Precision?5Technology?5?$CIS@
	DW	01f20H
	ORG $+2
	DD	FLAT:??_C@_0CG@BIKNKPGD@Shenzhen?5Tenwei?5Electronics?5Co?4?0@
	DW	01f28H
	ORG $+2
	DD	FLAT:??_C@_0CG@LKIHKKAD@Cal?9Comp?5Electronics?5?$CG?5Communica@
	DW	01f29H
	ORG $+2
	DD	FLAT:??_C@_0BN@COMGKDHO@Analogix?5Semiconductor?0?5Inc?4?$AA@
	DW	01f31H
	ORG $+2
	DD	FLAT:??_C@_0BP@DOFDLEGP@SASKEN?5COMMUNICATION?5TECH?5LTD?4?$AA@
	DW	01f3cH
	ORG $+2
	DD	FLAT:??_C@_0CE@MEDMJIF@Chang?5Yang?5Electronics?5Company?5L@
	DW	01f75H
	ORG $+2
	DD	FLAT:??_C@_0BD@GGCBPHPK@Innostor?5Co?4?0?5Ltd?4?$AA@
	DW	01f89H
	ORG $+2
	DD	FLAT:??_C@_0CI@NHHBKKBH@Dongguan?5Goldconn?5Electronics?5Co@
	DW	01f8aH
	ORG $+2
	DD	FLAT:??_C@_0CC@LPIGCLDE@Morning?5Star?5Industrial?5Co?4?0?5Ltd@
	DW	01facH
	ORG $+2
	DD	FLAT:??_C@_0BJ@OBPDBGLK@Franklin?5Technology?5Inc?4?$AA@
	DW	01fadH
	ORG $+2
	DD	FLAT:??_C@_0BH@OKNGIEAK@Cresta?5Technology?5Inc?4?$AA@
	DW	01fb4H
	ORG $+2
	DD	FLAT:??_C@_0CB@EHEKJNGP@Owl?5Computing?5Technologies?0?5Inc?4@
	DW	01fb5H
	ORG $+2
	DD	FLAT:??_C@_0DA@LDONKOKE@Siemens?5Enterprise?5Communication@
	DW	01fc9H
	ORG $+2
	DD	FLAT:??_C@_0BD@GMPBKEIC@NXP?5Semiconductors?$AA@
	DW	01fecH
	ORG $+2
	DD	FLAT:??_C@_0CA@CAPPIABK@NIAN?5YEONG?5ENTERPRISE?5CO?4?0?5LTD?4?$AA@
	DW	01ff5H
	ORG $+2
	DD	FLAT:??_C@_0DB@KONADFN@Changzhou?5Wujin?5BEST?5Electronic?5@
	DW	02001H
	ORG $+2
	DD	FLAT:??_C@_0BD@BJBLIGAM@D?9Link?5Corporation?$AA@
	DW	0200dH
	ORG $+2
	DD	FLAT:??_C@_0CI@GOBPPKNF@Belkin?5Electronic?5?$CIChangzhou?$CJ?5Co@
	DW	0200eH
	ORG $+2
	DD	FLAT:??_C@_0BN@KHNMKBEO@DAIICHI?5PARTS?5?$CIHK?$CJ?5CO?4?0?5LTD?4?$AA@
	DW	0201cH
	ORG $+2
	DD	FLAT:??_C@_0CF@DHGBCKNB@Freeport?5Resources?5Enterprises?5C@
	DW	02028H
	ORG $+2
	DD	FLAT:??_C@_0BG@PIIFGLBL@DETAS?5TECHNOLOGY?5LTD?4?$AA@
	DW	0205cH
	ORG $+2
	DD	FLAT:??_C@_0CI@FBHBCILE@Shenzhen?5Tronixin?5Electronics?5Co@
	DW	02066H
	ORG $+2
	DD	FLAT:??_C@_0CJ@OEPJLPBL@Unicorn?5Electronics?5Components?5C@
	DW	0207dH
	ORG $+2
	DD	FLAT:??_C@_0BK@DJALMDKA@CESI?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	0208eH
	ORG $+2
	DD	FLAT:??_C@_0N@JJLIGBFN@Luxshare?9ICT?$AA@
	DW	02095H
	ORG $+2
	DD	FLAT:??_C@_0BA@CFCNDLPN@CE?5LINK?5LIMITED?$AA@
	DW	02096H
	ORG $+2
	DD	FLAT:??_C@_0BP@FNHFFJPK@Microconn?5Electronic?5Co?4?0?5Ltd?4?$AA@
	DW	020afH
	ORG $+2
	DD	FLAT:??_C@_0CF@MCDKIGNK@Shenzhen?5CARVE?5Electronics?5Co?4?0?5@
	DW	020c0H
	ORG $+2
	DD	FLAT:??_C@_0BK@EIBNNPGD@FENGHUA?5KINGSUN?5CO?4?0?5LTD?4?$AA@
	DW	020c2H
	ORG $+2
	DD	FLAT:??_C@_0DE@EMOPPBDG@Sumitomo?5Electric?5Ind?4?0?5Ltd?4?0?5Op@
	DW	020f7H
	ORG $+2
	DD	FLAT:??_C@_0BJ@PMOEHKIK@SOFTHARD?5Technology?5Ltd?4?$AA@
	DW	02109H
	ORG $+2
	DD	FLAT:??_C@_0P@GBIKBMAL@VIA?5Labs?0?5Inc?4?$AA@
	DW	02116H
	ORG $+2
	DD	FLAT:??_C@_0N@JLDIPNLJ@KT?5Tech?5Inc?4?$AA@
	DW	0212cH
	ORG $+2
	DD	FLAT:??_C@_0CF@GAGJPPB@Shenzhen?5Linoya?5Electronic?5Co?4?0?5@
	DW	0212eH
	ORG $+2
	DD	FLAT:??_C@_0CJ@CNOJBLBI@Amphenol?5AssembleTech?5?$CIXiamen?$CJ?5C@
	DW	02147H
	ORG $+2
	DD	FLAT:??_C@_0CF@JOALJALB@Chin?9Ban?5Electronics?5?$CIHong?5Kong?$CJ@
	DW	02148H
	ORG $+2
	DD	FLAT:??_C@_0CD@KDAPKLEA@Visteon?5Sistemas?5Automotives?5Ltd@
	DW	0214cH
	ORG $+2
	DD	FLAT:??_C@_0BD@LDDEGFID@Y?5Soft?5Corporation?$AA@
	DW	02166H
	ORG $+2
	DD	FLAT:??_C@_0BI@FBCKNBLM@JVC?5KENWOOD?5Corporation?$AA@
	DW	02173H
	ORG $+2
	DD	FLAT:??_C@_0DH@EJJEPBOI@HUIZHOU?5HUANGJI?5PRECISIONS?5FLEX?5@
	DW	02174H
	ORG $+2
	DD	FLAT:??_C@_0BM@BKHGEKPK@Transcend?5Information?0?5Inc?4?$AA@
	DW	02176H
	ORG $+2
	DD	FLAT:??_C@_0BF@BAPBHHHN@TMC?1Allion?5Test?5Labs?$AA@
	DW	02188H
	ORG $+2
	DD	FLAT:??_C@_08EPBIMIG@CalDigit?$AA@
	DW	021b5H
	ORG $+2
	DD	FLAT:??_C@_0CF@DANJAKAE@SHENZHEN?5JASON?5ELECTRONICS?5CO?4?0?5@
	DW	021c4H
	ORG $+2
	DD	FLAT:??_C@_0BP@PBMDMJMJ@Netcom?5Technology?5?$CIHK?$CJ?5Limited?$AA@
	DW	021d3H
	ORG $+2
	DD	FLAT:??_C@_0BP@FAJGPKNC@Compupack?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	021e9H
	ORG $+2
	DD	FLAT:??_C@_0CM@MMCEPGGG@Jiafuh?5Metal?5?$CG?5Plastic?5?$CIShenZhen@
	DW	021f7H
	ORG $+2
	DD	FLAT:??_C@_0CG@OHNMOHEM@Wuerth?9Elektronik?5eiSos?5GmbH?5?$CG?5C@
	DW	02205H
	ORG $+2
	DD	FLAT:??_C@_0CB@CHMCCAAM@3eYamaichi?5Electronics?5Co?4?0?5Ltd?4@
	DW	02206H
	ORG $+2
	DD	FLAT:??_C@_0CG@NEPAELKJ@Wiretek?5International?5Investment@
	DW	02250H
	ORG $+2
	DD	FLAT:??_C@_0BP@OIDAFMJB@Evernew?5Wire?5?$CG?5Cable?5Co?4?0?5Ltd?4?$AA@
	DW	02270H
	ORG $+2
	DD	FLAT:??_C@_0CH@BNMEADNA@XiaMen?5GaoLuChang?5Electronics?5Co@
	DW	0227fH
	ORG $+2
	DD	FLAT:??_C@_0BD@PEIOBOIA@Granite?5River?5Labs?$AA@
	DW	02289H
	ORG $+2
	DD	FLAT:??_C@_0CO@GPGEJOEG@Sun?5Fair?5Electric?5Wire?5?$CG?5Cable?5?$CI@
	DW	0228aH
	ORG $+2
	DD	FLAT:??_C@_0CH@JIBHMNOD@Hotron?5Precision?5Electronic?5Ind?4@
	DW	0228bH
	ORG $+2
	DD	FLAT:??_C@_0CO@EAFKPNFN@Shenzhen?5DLK?5Electronics?5Technol@
	DW	02297H
	ORG $+2
	DD	FLAT:??_C@_0CD@FPBFIKDM@Grain?5Media?5Technology?5Corporati@
	DW	022a9H
	ORG $+2
	DD	FLAT:??_C@_0BK@OFJMDPCF@Valor?5Communication?0?5Inc?4?$AA@
	DW	022abH
	ORG $+2
	DD	FLAT:??_C@_0BN@LAOLKJDB@Trigence?5Semiconductor?0?5Inc?4?$AA@
	DW	022b8H
	ORG $+2
	DD	FLAT:??_C@_0BH@JCNJIDNH@Motorola?5Mobility?5Inc?4?$AA@
	DW	022dbH
	ORG $+2
	DD	FLAT:??_C@_0O@PFEHLJC@Phase?5One?5A?1S?$AA@
	DW	022fdH
	ORG $+2
	DD	FLAT:??_C@_0O@LJFFELIC@Miltope?5Corp?4?$AA@
	DW	022ffH
	ORG $+2
	DD	FLAT:??_C@_05CCBNKHPD@Avnet?$AA@
	DW	02313H
	ORG $+2
	DD	FLAT:??_C@_0CF@DNEMFNPO@Kunshan?5Jiahua?5Electronics?5Co?4?0?5@
	DW	02315H
	ORG $+2
	DD	FLAT:??_C@_0BL@CONNOJEO@Avery?5Design?5Systems?0?5Inc?4?$AA@
	DW	02317H
	ORG $+2
	DD	FLAT:??_C@_0BI@LPLOPAA@Huawei?5Device?5Co?4?0?5Ltd?4?$AA@
	DW	02326H
	ORG $+2
	DD	FLAT:??_C@_0BK@MFDKEFFA@CKM?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	02330H
	ORG $+2
	DD	FLAT:??_C@_09GCGEMCFF@Tensorcom?$AA@
	DW	02358H
	ORG $+2
	DD	FLAT:??_C@_0BG@JCFEOFFG@Greenconn?5Corporation?$AA@
	DW	02359H
	ORG $+2
	DD	FLAT:??_C@_0CM@MLMJGOMM@Shenzhen?5Autone?9Tronic?5Technolog@
	DW	0235bH
	ORG $+2
	DD	FLAT:??_C@_0BP@GJOKBILK@KangXiang?5Electronic?5Co?4?0?5Ltd?4?$AA@
	DW	023acH
	ORG $+2
	DD	FLAT:??_C@_0BJ@OHNJGPJN@Marunix?5Electron?5Limited?$AA@
	DW	023dcH
	ORG $+2
	DD	FLAT:??_C@_0CD@NDCLAIIH@Phonic?5Ear?0?5Inc?4?5Frontrow?5Divisi@
	DW	023e0H
	ORG $+2
	DD	FLAT:??_C@_0CF@CFJNEAJP@BitifEye?5Digital?5Test?5Solutions?5@
	DW	023f4H
	ORG $+2
	DD	FLAT:??_C@_07CEDODHPO@NXT?5Plc?$AA@
	DW	023f5H
	ORG $+2
	DD	FLAT:??_C@_0BE@BMBKAED@SpeedConn?5Co?4?0?5Ltd?4?$AA@
	DW	023fdH
	ORG $+2
	DD	FLAT:??_C@_0M@MGCPLAOJ@AWare?0?5Inc?4?$AA@
	DW	023feH
	ORG $+2
	DD	FLAT:??_C@_0BE@CNAOMOBO@Express?5Way?5Limited?$AA@
	DW	02400H
	ORG $+2
	DD	FLAT:??_C@_0CN@EJBOGONI@ChuangYi?5Hardware?5Precision?5Moul@
	DW	02406H
	ORG $+2
	DD	FLAT:??_C@_0O@BNIKCMOM@INSIDE?5Secure?$AA@
	DW	02407H
	ORG $+2
	DD	FLAT:??_C@_0BH@KJMMFBKI@Incasolution?5Co?4?0?5Ltd?4?$AA@
	DW	0240fH
	ORG $+2
	DD	FLAT:??_C@_0BO@GNFPHMGK@Trantek?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	0241aH
	ORG $+2
	DD	FLAT:??_C@_0BM@GMFHMCEF@The?5Silanna?5Group?5Pty?4?5Ltd?4?$AA@
	DW	0241bH
	ORG $+2
	DD	FLAT:??_C@_0CK@PEDMBLOK@Dongguan?5City?5Qirui?5Electronics?5@
	DW	02438H
	ORG $+2
	DD	FLAT:??_C@_0CB@GILKPBEO@Innopower?5Technology?5Corporation@
	DW	0244cH
	ORG $+2
	DD	FLAT:??_C@_0BC@MIHCGNOI@Minebea?5Co?4?0?5Ltd?4?$AA@
	DW	02452H
	ORG $+2
	DD	FLAT:??_C@_0BO@OPKCBFPL@Speeder?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	02453H
	ORG $+2
	DD	FLAT:??_C@_06HHAPBGEJ@BAANTO?$AA@
	DW	02454H
	ORG $+2
	DD	FLAT:??_C@_0BL@LPJGBHEM@Velosti?5Technology?5Limited?$AA@
	DW	02455H
	ORG $+2
	DD	FLAT:??_C@_0BC@FEINIIOM@Anton?1Bauer?0?5Inc?4?$AA@
	DW	0246aH
	ORG $+2
	DD	FLAT:??_C@_0CA@OBJDCDKL@UNH?5Interoperability?5Laboratory?$AA@
	DW	0246bH
	ORG $+2
	DD	FLAT:??_C@_0DI@DKAFDFAC@Perfect?5Fortune?5Electric?5Wire?5?$CG?5@
	DW	02477H
	ORG $+2
	DD	FLAT:??_C@_08PDELGFBH@UbiVelox?$AA@
	DW	0247bH
	ORG $+2
	DD	FLAT:??_C@_0CB@POEOBKIH@Digibras?5Industria?5do?5Brasil?5S?4A@
	DW	0247cH
	ORG $+2
	DD	FLAT:??_C@_0BH@EHAGJFEE@Fullconn?5Industry?5Inc?4?$AA@
	DW	0247dH
	ORG $+2
	DD	FLAT:??_C@_0P@BCJJHJDJ@JARGY?5CO?4?5LTD?4?$AA@
	DW	02488H
	ORG $+2
	DD	FLAT:??_C@_0BB@MDEMAKAA@SuperD?5Co?4?0?5Ltd?4?$AA@
	DW	02489H
	ORG $+2
	DD	FLAT:??_C@_0BL@MHJFMACI@Irvine?5Sensors?5Corporation?$AA@
	DW	0248aH
	ORG $+2
	DD	FLAT:??_C@_0CK@KHHEAIMH@TeLink?5Semiconductor?5?$CIShanghai?$CJ?5@
	DW	0248bH
	ORG $+2
	DD	FLAT:??_C@_0BK@CFHJHDDG@SYNCONN?5INTERCONNECT?5INC?4?$AA@
	DW	02495H
	ORG $+2
	DD	FLAT:??_C@_0BJ@MAPFGIK@Summit?5Semiconductor?5LLC?$AA@
	DW	02496H
	ORG $+2
	DD	FLAT:??_C@_0DA@CGBDOBCP@Dongguan?5DaTang?5Industrial?5Inves@
	DW	02497H
	ORG $+2
	DD	FLAT:??_C@_0BO@GKPDCPNP@HyunWoo?5Electronics?5Co?4?0?5Ltd?4?$AA@
	DW	024a6H
	ORG $+2
	DD	FLAT:??_C@_0CH@IDDOGDKP@Shenzhen?5Pangngai?5Industrial?5Co?4@
	DW	024aeH
	ORG $+2
	DD	FLAT:??_C@_0CE@EAHJMINJ@Shenzhen?5Rapoo?5Technology?5Co?4?0?5L@
	DW	024b5H
	ORG $+2
	DD	FLAT:??_C@_0N@EBDJACPJ@3C?5TEK?5CORP?4?$AA@
	DW	024b6H
	ORG $+2
	DD	FLAT:??_C@_0CK@CLEDKDEL@Shenzhen?5New?9Conn?5International?5@
	DW	024ceH
	ORG $+2
	DD	FLAT:??_C@_0CE@JOMBCIJH@Shenzhen?5Deren?5Electronic?5Co?4?0?5L@
	DW	024cfH
	ORG $+2
	DD	FLAT:??_C@_0M@NMCNEDLC@Lytro?0?5Inc?4?$AA@
	DW	024d0H
	ORG $+2
	DD	FLAT:??_C@_0BL@DEJKGIMK@Smith?5Micro?5Software?0?5Inc?4?$AA@
	DW	024daH
	ORG $+2
	DD	FLAT:??_C@_0BN@HAAHPMIC@KYOCERA?5ELCO?5Korea?5Co?4?0?5Ltd?4?$AA@
	DW	024dbH
	ORG $+2
	DD	FLAT:??_C@_0BB@PGAFDCCK@DDUSB?5Technology?$AA@
	DW	024edH
	ORG $+2
	DD	FLAT:??_C@_0BO@ONHDIMLP@ZEN?5FACTORY?5GROUP?5?$CIASIA?$CJ?5LTD?4?$AA@
	DW	024f7H
	ORG $+2
	DD	FLAT:??_C@_0M@GHCMHPKC@Seneye?5Ltd?4?$AA@
	DW	024fbH
	ORG $+2
	DD	FLAT:??_C@_0BC@HBLEADPM@GTECH?5Corporation?$AA@
	DW	02509H
	ORG $+2
	DD	FLAT:??_C@_0BO@KGBBCJH@Chain?9In?5Electronic?5Co?4?0?5Ltd?4?$AA@
	DW	02529H
	ORG $+2
	DD	FLAT:??_C@_0CO@JCAFCPHA@SUZHOU?5XINYA?5ELECTRIC?5COMMUNICAT@
	DW	0252bH
	ORG $+2
	DD	FLAT:??_C@_0CN@BNJPCKEF@TOP?5Exactitude?5Industry?5?$CIShenZhe@
	DW	02535H
	ORG $+2
	DD	FLAT:??_C@_0DD@CFLDKGBD@Shenzhen?5Hong?5Junde?5Precision?5Te@
	DW	02536H
	ORG $+2
	DD	FLAT:??_C@_0BM@PDILJJBJ@Ubisys?5Technology?5Co?4?0?5Ltd?4?$AA@
	DW	02537H
	ORG $+2
	DD	FLAT:??_C@_0BD@PLHJJNHE@Norel?5Systems?5Ltd?4?$AA@
	DW	02558H
	ORG $+2
	DD	FLAT:??_C@_0BJ@KIEOKLMB@INTECH?5ELECTRONICS?5CORP?4?$AA@
	DW	02567H
	ORG $+2
	DD	FLAT:??_C@_0CG@NMMKCBIB@DongGuan?5LongTao?5Electronic?5Co?4?0@
	DW	02568H
	ORG $+2
	DD	FLAT:??_C@_0CA@CFAALAJE@ALL?5LINK?5CONN?4?5TECHNOLOGY?5CORP?4?$AA@
	DW	02569H
	ORG $+2
	DD	FLAT:??_C@_0CL@DMEHNIKM@DongGuan?5City?5MingJi?5Electronics@
	DW	02574H
	ORG $+2
	DD	FLAT:??_C@_0BG@OBILOFPF@AVer?5Information?5Inc?4?$AA@
	DW	02575H
	ORG $+2
	DD	FLAT:??_C@_0BI@MHBLLANG@Weida?5Hi?9Tech?5Co?4?0?5Ltd?4?$AA@
	DW	02579H
	ORG $+2
	DD	FLAT:??_C@_0CF@JLNODIAF@Dongguan?5Kowell?5Electronic?5Co?4?0?5@
	DW	02587H
	ORG $+2
	DD	FLAT:??_C@_0CE@MEBHAOHC@Ningbo?5Jiatang?5Electronic?5Co?4?0?5L@
	DW	02588H
	ORG $+2
	DD	FLAT:??_C@_0BC@EPMKAPFK@Infinitegra?0?5Inc?4?$AA@
	DW	02591H
	ORG $+2
	DD	FLAT:??_C@_0BL@GPGPDPPI@Optimus?5Semiconductor?5Inc?4?$AA@
	DW	0259bH
	ORG $+2
	DD	FLAT:??_C@_06JAGNIOHH@INUVIO?$AA@
	DW	0259cH
	ORG $+2
	DD	FLAT:??_C@_0BL@PDKHOHKG@Immedia?5Semiconductor?5Inc?4?$AA@
	DW	0259dH
	ORG $+2
	DD	FLAT:??_C@_0BF@GEOEIPEL@RCA?5DA?5AMAZONIA?5LTDA?$AA@
	DW	025a4H
	ORG $+2
	DD	FLAT:??_C@_0P@GGHEMJJH@ALGOLTEK?0?5INC?4?$AA@
	DW	025abH
	ORG $+2
	DD	FLAT:??_C@_0P@KJGACBOE@Carmanah?5Signs?$AA@
	DW	025b2H
	ORG $+2
	DD	FLAT:??_C@_0P@OEFFHHLL@DRS?9RSTA?0?5Inc?4?$AA@
	DW	025b3H
	ORG $+2
	DD	FLAT:??_C@_0CF@LHOCOHOF@DongGuan?5Elinke?5Industrial?5Co?4?0?5@
	DW	025c3H
	ORG $+2
	DD	FLAT:??_C@_06CJJNEMAE@Phorus?$AA@
	DW	025c7H
	ORG $+2
	DD	FLAT:??_C@_0BN@PKAIGMCM@MEGATRON?5Elektronik?5AG?5?$CG?5Co?4?$AA@
	DW	025d3H
	ORG $+2
	DD	FLAT:??_C@_0CI@EJBKCNKI@Zhe?5Jiang?5Huasheng?5Technology?5Co@
	DW	025e1H
	ORG $+2
	DD	FLAT:??_C@_0L@IOINFDHJ@Daimler?5AG?$AA@
	DW	025f2H
	ORG $+2
	DD	FLAT:??_C@_0CG@OAMKINAC@Dongguan?5Jinyue?5Electronics?5Co?4?0@
	DW	025fbH
	ORG $+2
	DD	FLAT:??_C@_0CD@JGKEGNMJ@PENTAX?5RICOH?5IMAGING?5COMPANY?0?5LT@
	DW	025fcH
	ORG $+2
	DD	FLAT:??_C@_0BI@NCIPEGB@RWA?5?$CIHong?5Kong?$CJ?5Limited?$AA@
	DW	0260eH
	ORG $+2
	DD	FLAT:??_C@_0CC@GLDMKJH@DongGuan?5HYX?5Industrial?5Co?4?0?5Ltd@
	DW	02614H
	ORG $+2
	DD	FLAT:??_C@_0BL@MKIOGMIA@VMC?5Consulting?5Corporation?$AA@
	DW	0261aH
	ORG $+2
	DD	FLAT:??_C@_0DD@JFHBCIAC@Shandong?5Synthesis?5Electronic?5Te@
	DW	0261bH
	ORG $+2
	DD	FLAT:??_C@_0BJ@FPNGMFON@INTELLIGENT?5ENERGY?0?5LTD?4?$AA@
	DW	0261cH
	ORG $+2
	DD	FLAT:??_C@_0O@KCHFFECA@EISST?5Limited?$AA@
	DW	0262bH
	ORG $+2
	DD	FLAT:??_C@_0CO@FNFDMCAN@JXT?5Precision?5Electronics?5Techni@
	DW	0707H
	ORG $+2
	DD	FLAT:??_C@_0N@OGJAAGP@Vendor?5x0707?$AA@
	DW	077aH
	ORG $+2
	DD	FLAT:??_C@_06NMEADBLN@Sankio?$AA@
	DW	07c0H
	ORG $+2
	DD	FLAT:??_C@_0N@BHJPEAKB@Vendor?5x07C0?$AA@
	DW	07d1H
	ORG $+2
	DD	FLAT:??_C@_0N@LMLGHGF@Vendor?5x07D1?$AA@
	DW	08a6H
	ORG $+2
	DD	FLAT:??_C@_0M@LKDAPJIF@Toshiba?5TEC?$AA@
	DW	0b8bH
	ORG $+2
	DD	FLAT:??_C@_0N@OEOECLEK@TMD?5Security?$AA@
	DW	0bedH
	ORG $+2
	DD	FLAT:??_C@_0N@EKANAEP@Vendor?5x0BED?$AA@
	DW	0c94H
	ORG $+2
	DD	FLAT:??_C@_0BC@GGOFANFE@SAGEM?5Denmark?5A?1S?$AA@
	DW	01046H
	ORG $+2
	DD	FLAT:??_C@_0O@EDCNNFOI@Hitachi?0?5Ltd?4?$AA@
	DW	01051H
	ORG $+2
	DD	FLAT:??_C@_0BC@GAEDCENO@Star?5Microsystems?$AA@
	DW	01427H
	ORG $+2
	DD	FLAT:??_C@_0N@CCDIFCFP@Vendor?5x1427?$AA@
	DW	01e2cH
	ORG $+2
	DD	FLAT:??_C@_0N@OEOECLEK@TMD?5Security?$AA@
	DW	01d5fH
	ORG $+2
	DD	FLAT:??_C@_08HHHILLLH@VIVOtech?$AA@
	DW	00H
	ORG $+2
	DD	FLAT:??_C@_07NFANNNEC@UNKNOWN?$AA@
_wmiClasses DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BF@GIOJHHEG@Win32_1394Controller?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_07HMDPOHHF@Product?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0O@GLLHAKAI@ConfigOptions?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_05BOMFGPKE@Depth?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_06HCAKHJJK@Height?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_06ODJMJFLN@Weight?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_05IBAMDCFI@Width?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0N@CCJNCHMP@HostingBoard?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0N@FCOIALPI@HotSwappable?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_09DADBKOHO@Removable?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0M@KLOLJEDG@Replaceable?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0BI@NLNEBFOD@RequirementsDescription?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0BG@KNNEFNEE@RequiresDaughterBoard?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0L@NLNCHAIH@SlotLayout?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_0BE@DAJBDDHL@SpecialRequirements?$AA@
	DD	FLAT:??_C@_0BA@FKIDHCEN@Win32_BaseBoard?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0O@PKGMNGNM@BatteryStatus?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0O@IKADLBCG@TimeOnBattery?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BB@HMDCOCCC@TimeToFullCharge?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BE@HNKJKBND@BatteryRechargeTime?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_09CAHFAGKL@Chemistry?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0P@IFPGNGPN@DesignCapacity?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0O@PBABLEFL@DesignVoltage?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BJ@CDCEHMEP@EstimatedChargeRemaining?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BB@NPKJIND@EstimatedRunTime?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BE@NEEKJBPN@ExpectedBatteryLife?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0N@DDGBNILM@ExpectedLife?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BD@HADPLBCE@FullChargeCapacity?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BA@KENPOHHF@MaxRechargeTime?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0BE@IIEJDIAD@SmartBatteryVersion?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0O@CLAKILND@Win32_Battery?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BE@DHLHFABD@BiosCharacteristics?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0M@JNJNMLGA@BIOSVersion?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0M@PIEABBJI@BuildNumber?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_07FOHBHJJA@CodeSet?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BA@LAFEEKJE@CurrentLanguage?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BD@IAKLNJOL@IdentificationCode?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BF@JGHHIKJK@InstallableLanguages?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BA@OPCNKLIC@ListOfLanguages?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0O@LMGDODCH@OtherTargetOS?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0M@PLCFCEDN@PrimaryBIOS?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0M@FEKFCCJH@ReleaseDate?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BC@GDJFCIN@SMBIOSBIOSVersion?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BD@GHLLPFOK@SMBIOSMajorVersion?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BD@NBGOPAJG@SMBIOSMinorVersion?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0O@BHMENNOL@SMBIOSPresent?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BC@MBHIKAHO@SoftwareElementID?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_0BF@GFDCFGAP@SoftwareElementState?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0L@JLLHHBAL@Win32_BIOS?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_06KNDINCOD@BusNum?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_07FFFMBEEK@BusType?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_09HPFDNOIF@Win32_Bus?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_05FHDOJGAA@Drive?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0L@PEPMOJNO@VolumeName?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BD@KNELKJMD@VolumeSerialNumber?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@FNJCOOAL@Capabilities?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BB@GHOHONOE@DefaultBlockSize?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0P@HKGKOHLF@DriveIntegrity?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BA@KMBBNBII@FileSystemFlags?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BC@JDDJOAMF@FileSystemFlagsEx?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@HEPDBKFE@MaxBlockSize?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BH@GKGMNPDK@MaximumComponentLength?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@HBNKJHPM@MaxMediaSize?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0M@BKHKLNGH@MediaLoaded?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_09HPDNNFFF@MediaType?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BJ@FCFAAAMD@MfrAssignedRevisionLevel?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@DELMGCCC@MinBlockSize?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0O@IIJMNCFJ@NeedsCleaning?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BH@COPKOGMD@NumberOfMediaSupported?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0O@MEKHAACN@RevisionLevel?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_07IMFLOLAO@SCSIBus?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0BA@FGFDLPLK@SCSILogicalUnit?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_08IICBNDDA@SCSIPort?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@BGGJIJCI@SCSITargetId?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_04EBKMHHBE@Size?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BB@KBKCBBFJ@Win32_CDROMDrive?$AA@
	DD	FLAT:??_C@_0N@GFEIEMMN@TransferRate?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_04HOKNCALA@Port?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0L@PGAIMACF@DMAChannel?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0M@HJPEAMBM@AddressSize?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_09LDKFCLB@BurstMode?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_08IOOBKHAJ@ByteMode?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0O@BPLPAGKN@ChannelTiming?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0BA@HBAKOKJE@MaxTransferSize?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0P@HFMGHLOP@TransferWidths?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_0M@MOIPDDOB@TypeCTiming?$AA@
	DD	FLAT:??_C@_0BB@ILOPCCAP@Win32_DMAChannel?$AA@
	DD	FLAT:??_C@_08HKOOHOAE@WordMode?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0M@PIEABBJI@BuildNumber?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_07FOHBHJJA@CodeSet?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_07DFGIDBBA@Control?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0BG@IOIHNNJK@DeviceDescriptorBlock?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0BD@IAKLNJOL@IdentificationCode?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0BA@JOJBKDJN@LanguageEdition?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0O@LMGDODCH@OtherTargetOS?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_06CGGMGNDK@PM_API?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0BB@CCKMONLJ@ServiceTableSize?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0BC@MBHIKAHO@SoftwareElementID?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0BF@GFDCFGAP@SoftwareElementState?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_0BG@LEBBIDOP@TargetOperatingSystem?$AA@
	DD	FLAT:??_C@_0BA@DGOGJGDP@Win32_DriverVXD?$AA@
	DD	FLAT:??_C@_07JENHGIOM@V86_API?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BH@GBOCBJMM@Win32_FloppyController?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0N@HEPDBKFE@MaxBlockSize?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0N@HBNKJHPM@MaxMediaSize?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0N@DELMGCCC@MinBlockSize?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0N@FNJCOOAL@Capabilities?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BB@GHOHONOE@DefaultBlockSize?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0O@IIJMNCFJ@NeedsCleaning?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BH@COPKOGMD@NumberOfMediaSupported?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@MGJAFBFH@Win32_FloppyDrive?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0O@PBOKHICP@ActiveCooling?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0P@MCPBPNON@Win32_HeatPipe?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BE@FMCMMJCA@Win32_IDEController?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BF@EEIPINHM@Win32_InfraredDevice?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_09PKFILKGD@Shareable?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_0N@NCNNCPPP@TriggerLevel?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_0M@NKHMGHID@TriggerType?$AA@
	DD	FLAT:??_C@_0BC@MGLAEOHD@Win32_IRQResource?$AA@
	DD	FLAT:??_C@_06BOOCMPNK@Vector?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_06KMHOJANB@Layout?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0BF@DODFNOHG@NumberOfFunctionKeys?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_08EOCJLAAL@IsLocked?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_08FJIAHGMM@Password?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0P@IGJIBAJA@Win32_Keyboard?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0P@GCEIIPJN@PrimaryBusType?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0P@EJGNFGBG@RevisionNumber?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0BB@MKKJDBAN@SecondaryBusType?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BI@DKDNDIIN@Win32_MotherboardDevice?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0L@PMICFDLL@DeviceType?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_07DOAOMMKG@Enabled?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0N@FCOIALPI@HotSwappable?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_09DADBKOHO@Removable?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_0M@KLOLJEDG@Replaceable?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BE@ILPPNPBM@Win32_OnBoardDevice?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BH@CNGPGCKD@Win32_PCMCIAController?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_07LMLHFMEG@Service?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_09GPHNMGJN@ClassGuid?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0N@EEHHOFBP@CompatibleID?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0L@MCPBCGGP@HardwareID?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BA@EHCOOLPP@Win32_PnPEntity?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0N@HMDMLBLH@PointingType?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BA@EHILAMBM@NumberOfButtons?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BA@PLLFIHNG@DeviceInterface?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0N@OGCCLEJJ@HardwareType?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0L@DEGCDBKP@Handedness?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BF@FLDPHBAC@DoubleSpeedThreshold?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0M@LNGELFEC@InfFileName?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0L@KHOEHLLF@InfSection?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_08EOCJLAAL@IsLocked?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0BD@MJAHKLJJ@QuadSpeedThreshold?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0L@KGPBCGJE@Resolution?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0L@NEGJIGMA@SampleRate?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BF@MJMHBKMK@Win32_PointingDevice?$AA@
	DD	FLAT:??_C@_05MKJLCFN@Synch?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0BM@OAEDMMAI@ExternalReferenceDesignator?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0BM@JBGCGAG@InternalReferenceDesignator?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_08BOPEOHEK@PortType?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0O@CPCPFFAH@ConnectorType?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0BA@KNNOFNF@ConnectorPinout?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BE@BFHBBNBL@Win32_PortConnector?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@JJNGNMBL@Win32_PortResource?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BD@JJNGNMBL@Win32_PortResource?$AA@
	DD	FLAT:??_C@_05NNNCCOHC@Alias?$AA@
	DD	FLAT:??_C@_0BD@JJNGNMBL@Win32_PortResource?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BD@JJNGNMBL@Win32_PortResource?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0BA@PFCCEOEE@DefaultDataType?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0L@EAJLGPDF@DriverPath?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_08CKKAOMLK@FilePath?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0L@LKBOBDBI@ConfigFile?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_08JFJMIJHO@DataFile?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0M@PJPGFADP@MonitorName?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0BC@MLDLGMGB@SupportedPlatform?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_07JFPHJDHA@InfName?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_08GLFJHHAH@HelpFile?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0P@NBBGILI@DependentFiles?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_06ENMIEFDD@OEMUrl?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_07LCDJNPHI@Started?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_09IAGOJBFI@StartMode?$AA@
	DD	FLAT:??_C@_0BE@HLKMDILE@Win32_PrinterDriver?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0N@MDJPNJNL@Architecture?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0O@FFCOPHIP@NumberOfCores?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0O@MJOHKFKO@MaxClockSpeed?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BK@OBFFNDNO@NumberOfLogicalProcessors?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_06BOFMEHLD@Family?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0M@DJKFFMLN@L2CacheSize?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0N@NBPCHGPE@L2CacheSpeed?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0M@PICLIDHN@L3CacheSize?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0N@EKFHDKJL@L3CacheSpeed?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0N@IPOPOCBB@AddressWidth?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_09OJECCCEO@CpuStatus?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BC@JFANJPME@CurrentClockSpeed?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0P@IHAGOHLC@CurrentVoltage?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_09KNGBBIL@DataWidth?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_08JALCBBMK@ExtClock?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_05KOHFLOFG@Level?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0P@HLLBIGKP@LoadPercentage?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BH@LLAHKBOJ@OtherFamilyDescription?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0M@DHKOOBFD@ProcessorId?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0O@DAODMABE@ProcessorType?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_08DNLDHPFP@Revision?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_04EBAMNOLK@Role?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0BC@GCIFEBIL@SocketDesignation?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_08HPJGCEAH@Stepping?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_08HJBCPKNB@UniqueId?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0O@KHACBBMN@UpgradeMethod?$AA@
	DD	FLAT:??_C@_0BA@OJJOBJJP@Win32_Processor?$AA@
	DD	FLAT:??_C@_0M@DEJHGOJI@VoltageCaps?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0L@DJBCKAGE@DriverName?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BA@BJODOJJC@HardwareVersion?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BD@LPBNFPJD@ControllerTimeouts?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_09DJCHLIFB@DeviceMap?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_05FNNGFGLF@Index?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0N@OLJPFNHL@MaxDataWidth?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BA@IDEAMGMB@MaxTransferRate?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BF@OGNJDJGP@ProtectionManagement?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BF@OGHHAMBD@Win32_SCSIController?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0M@BFAJGJNN@MaxBaudRate?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0N@KFNBCBNP@ProviderType?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_06JCOMDNII@Binary?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0N@FNJCOOAL@Capabilities?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BH@PKAPBGLB@MaximumInputBufferSize?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BI@EAKFLPF@MaximumOutputBufferSize?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BB@NCMHEECO@OSAutoDiscovered?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BB@CCEBCKAP@SettableBaudRate?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BB@BOCNMDDI@SettableDataBits?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BE@FMKJPGFK@SettableFlowControl?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0P@MOHECAJ@SettableParity?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BE@NMPLPPIE@SettableParityCheck?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0N@OBGEBGNG@SettableRLSD?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BB@EPIEMKMF@SettableStopBits?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BC@EEEMKCBH@Supports16BitMode?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0P@GODDIGIP@SupportsDTRDSR?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BI@LJLLOLPH@SupportsElapsedTimeouts?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BE@JOEIKOLI@SupportsIntTimeouts?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BE@JCPAAGPO@SupportsParityCheck?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0N@GBIJPBEE@SupportsRLSD?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0P@NGNOBJLG@SupportsRTSCTS?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BK@GGENNCGN@SupportsSpecialCharacters?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BA@OPAGJFHI@SupportsXOnXOff?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BD@GDEAPHBI@SupportsXOnXOffSet?$AA@
	DD	FLAT:??_C@_0BB@DLHLCIMJ@Win32_SerialPort?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_08FCNNIBJG@BaudRate?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0M@PAFDOFKP@BitsPerByte?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_06OKNHBMNM@Parity?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_08DPBIGBFM@StopBits?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_06OICOCAHF@IsBusy?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BG@DFLLPBBO@AbortReadWriteOnError?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BC@OGEDEEBA@BinaryModeEnabled?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BD@MCBMPIAJ@ContinueXMitOnXOff?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BC@BMKJGEMK@CTSOutflowControl?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BB@LNMOOKGE@DiscardNULLBytes?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BC@HDHNIDHE@DSROutflowControl?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0P@FDLAEJMA@DSRSensitivity?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BD@HKACMHPL@DTRFlowControlType?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0N@HDNBGKMG@EOFCharacter?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BG@HECEEKCN@ErrorReplaceCharacter?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BI@MDNCEDD@ErrorReplacementEnabled?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0P@ELDMBJ@EventCharacter?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BD@KACACAPH@ParityCheckEnabled?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BD@HDDKDMKB@RTSFlowControlType?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0O@IABHIILA@XOffCharacter?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BC@PIOKAKHD@XOffXMitThreshold?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0N@LMKFMCPA@XOnCharacter?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BB@OHGPOKOF@XOnXMitThreshold?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BF@FMELJHC@XOnXOffInFlowControl?$AA@
	DD	FLAT:??_C@_0BO@BPJAPEGK@Win32_SerialPortConfiguration?$AA@
	DD	FLAT:??_C@_0BG@LCMFOHKE@XOnXOffOutFlowControl?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0M@MNPNDAHP@ProductName?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0O@GILLNKKD@MPU401Address?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0O@GHJKPLAG@DMABufferSize?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@INJPMPPD@Win32_SoundDevice?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BE@KNIHCNGM@Win32_USBController?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BE@FEOPMOOE@CurrentBitsPerPixel?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BM@OFHJCNEB@CurrentHorizontalResolution?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BK@LFIAOAGD@CurrentVerticalResolution?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BG@NCBMILGB@CurrentNumberOfColors?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BD@JKLPINND@CurrentRefreshRate?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BA@CDIHNLEF@CurrentScanMode?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BH@IKBJPLJ@CurrentNumberOfColumns?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BE@BKBIMFEG@CurrentNumberOfRows?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BC@GFHBBCIN@VideoArchitecture?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BA@COFLHODM@VideoMemoryType?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_09LIEAKBEG@VideoMode?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BF@MAGAOPPB@VideoModeDescription?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0P@OMEGAAG@VideoProcessor?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BC@PEHKLIOA@ColorTableEntries?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BF@JCFFEIIM@NumberOfColorPlanes?$DL?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BD@DECAKEGH@NumberOfVideoPages?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BF@FKKNOPFN@SystemPaletteEntries?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BI@DFJMJFBI@AcceleratorCapabilities?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BF@LPCADEJI@AdapterCompatibility?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0P@MPKKGADB@AdapterDACType?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0L@CKHNOAKJ@AdapterRAM?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0M@HMKFJKEG@InfFilename?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0L@KHOEHLLF@InfSection?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0O@KKIKAADI@DriverVersion?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BD@HBMCPLLH@DeviceSpecificPens?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0L@HJOBJMDE@DitherType?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0L@GAFFCADK@DriverDate?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_09MBIABGHL@ICMIntent?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_09OGGCGCBA@ICMMethod?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BI@NCJGCGIA@InstalledDisplayDrivers?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BD@KFJBBNPN@MaxMemorySupported?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0P@DHIEOPKP@MaxRefreshRate?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0P@BADPIIJO@MinRefreshRate?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0L@NCAJOFAD@Monochrome?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BN@FJFLBOEO@ReservedSystemPaletteEntries?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BF@HGGDLIIF@SpecificationVersion?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BG@IOBPPLKC@Win32_VideoController?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0L@BLANPANH@Partitions?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_04EBKMHHBE@Size?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_09HPDNNFFF@MediaType?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_09GDNFOKKF@Signature?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0P@MMMIFHLL@BytesPerSector?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@FNJCOOAL@Capabilities?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BB@GHOHONOE@DefaultBlockSize?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BB@HMBACBBL@FirmwareRevision?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_05FNNGFGLF@Index?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0O@IHENGMAG@InterfaceType?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@HEPDBKFE@MaxBlockSize?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@HBNKJHPM@MaxMediaSize?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0M@BKHKLNGH@MediaLoaded?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@DELMGCCC@MinBlockSize?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0O@IIJMNCFJ@NeedsCleaning?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BH@COPKOGMD@NumberOfMediaSupported?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_07IMFLOLAO@SCSIBus?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BA@FGFDLPLK@SCSILogicalUnit?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_08IICBNDDA@SCSIPort?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@BGGJIJCI@SCSITargetId?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BA@CCMKCJPC@SectorsPerTrack?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0P@NEMACPGO@TotalCylinders?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0L@PLGEACLG@TotalHeads?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0N@BJMAPGKO@TotalSectors?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0M@BHKEFGGG@TotalTracks?$AA@
	DD	FLAT:??_C@_0BA@CJPFNKBD@Win32_DiskDrive?$AA@
	DD	FLAT:??_C@_0BC@KOKBEBBE@TracksPerCylinder?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_04EBKMHHBE@Size?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_04KOACHJEN@Type?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_08GBCOMNMP@Bootable?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0O@GKABHDFN@BootPartition?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BB@GMPNKCND@PrimaryPartition?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_06IOEANFCI@Access?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_09JFLKFGKE@BlockSize?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0O@NMDEFEE@HiddenSectors?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_07ODOLMOGH@Purpose?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0BB@CLPKNLNO@RewritePartition?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0P@HEMAHOJD@StartingOffset?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@GBMGFCLI@Win32_DiskPartition?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_09HPDNNFFF@MediaType?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0BB@GANKFIKA@MediaDescription?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0BC@FNAKMFAB@CreationClassName?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_09DADBKOHO@Removable?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0M@KLOLJEDG@Replaceable?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0N@FCOIALPI@HotSwappable?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_08PINBMPEF@Capacity?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0P@CNPPDDMA@WriteProtectOn?$AA@
	DD	FLAT:??_C@_0BE@JBJLNBAC@Win32_PhysicalMedia?$AA@
	DD	FLAT:??_C@_0N@NINPCONM@CleanerMedia?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_02HOGEDOAB@Id?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@FNJCOOAL@Capabilities?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0M@COKFBABJ@Compression?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BB@GHOHONOE@DefaultBlockSize?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_03NLPJKHLD@ECC?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BD@IDPNAMKG@EOTWarningZoneSize?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@PNICBLFI@FeaturesHigh?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0M@GCKGDCME@FeaturesLow?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@HEPDBKFE@MaxBlockSize?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@HBNKJHPM@MaxMediaSize?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BC@NKLHGLCM@MaxPartitionCount?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_09HPDNNFFF@MediaType?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0N@DELMGCCC@MinBlockSize?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0O@IIJMNCFJ@NeedsCleaning?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BH@COPKOGMD@NumberOfMediaSupported?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_07DDDGKLAD@Padding?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0P@OCFCAPCK@ReportSetMarks?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BA@GLDDIFFN@Win32_TapeDrive?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_07ODOLMOGH@Purpose?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_06IOEANFCI@Access?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BE@FGEPBFNL@AdditionalErrorData?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0O@BJAAJMNJ@Associativity?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_09JFLKFGKE@BlockSize?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0L@GKCEABFB@CacheSpeed?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_09LDLPEFB@CacheType?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0N@FNMLGPI@MaxCacheSize?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BB@HJBOPHEK@CorrectableError?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0M@JJECGOOK@CurrentSRAM?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0O@DMEOEBEF@EndingAddress?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0M@PJGEGKNG@ErrorAccess?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0N@BEELHEFJ@ErrorAddress?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BB@OEAEPHLK@ErrorCorrectType?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_09GOCFECJA@ErrorData?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0P@LPKOAMHJ@ErrorDataOrder?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_09EPPHMMOH@ErrorInfo?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BA@DBMDPLBE@ErrorResolution?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_09LMOKKAAG@ErrorTime?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BC@FEODMBII@ErrorTransferSize?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0L@NIIIAJJG@FlushTimer?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0O@BJDNNDOA@InstalledSize?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_05KOHFLOFG@Level?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_08BFDFHGHF@LineSize?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_08KDOEBHGA@Location?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BG@GMMANAIM@OtherErrorDescription?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0L@OICKBPFP@ReadPolicy?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BC@CACAEAGO@ReplacementPolicy?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BA@JKJCLFJA@StartingAddress?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0O@LOONNFKJ@SupportedSRAM?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0BD@EHELDMNK@SystemLevelAddress?$AA@
	DD	FLAT:??_C@_0BC@BKKBKJDE@Win32_CacheMemory?$AA@
	DD	FLAT:??_C@_0M@GMGLDKG@WritePolicy?$AA@
	DD	FLAT:??_C@_0BK@CHMJMDKA@Win32_DeviceMemoryAddress?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BK@CHMJMDKA@Win32_DeviceMemoryAddress?$AA@
	DD	FLAT:??_C@_0L@NKIIONIP@MemoryType?$AA@
	DD	FLAT:??_C@_0BK@CHMJMDKA@Win32_DeviceMemoryAddress?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BK@CHMJMDKA@Win32_DeviceMemoryAddress?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BA@JKJCLFJA@StartingAddress?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0O@DMEOEBEF@EndingAddress?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BD@EHELDMNK@SystemLevelAddress?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_06IOEANFCI@Access?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BE@FGEPBFNL@AdditionalErrorData?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_09JFLKFGKE@BlockSize?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BB@HJBOPHEK@CorrectableError?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0M@PJGEGKNG@ErrorAccess?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0N@BEELHEFJ@ErrorAddress?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_09GOCFECJA@ErrorData?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0P@LPKOAMHJ@ErrorDataOrder?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BB@CCADGENH@ErrorGranularity?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_09EPPHMMOH@ErrorInfo?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BA@DBMDPLBE@ErrorResolution?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_09LMOKKAAG@ErrorTime?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BC@FEODMBII@ErrorTransferSize?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BG@GMMANAIM@OtherErrorDescription?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_07ODOLMOGH@Purpose?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@NBCNDILJ@Win32_MemoryArray?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BA@JKJCLFJA@StartingAddress?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0O@DMEOEBEF@EndingAddress?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_09JFLKFGKE@BlockSize?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_06IOEANFCI@Access?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BE@FGEPBFNL@AdditionalErrorData?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BB@HJBOPHEK@CorrectableError?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0M@PJGEGKNG@ErrorAccess?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0N@BEELHEFJ@ErrorAddress?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_09GOCFECJA@ErrorData?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0P@LPKOAMHJ@ErrorDataOrder?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BB@CCADGENH@ErrorGranularity?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_09EPPHMMOH@ErrorInfo?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BA@DBMDPLBE@ErrorResolution?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_09LMOKKAAG@ErrorTime?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BC@FEODMBII@ErrorTransferSize?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BG@GMMANAIM@OtherErrorDescription?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_07ODOLMOGH@Purpose?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BD@MHIIAMPP@Win32_MemoryDevice?$AA@
	DD	FLAT:??_C@_0BD@EHELDMNK@SystemLevelAddress?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_09ELEBPJGH@BankLabel?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_08PINBMPEF@Capacity?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_09KNGBBIL@DataWidth?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0O@DKGGAIKL@DeviceLocator?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0L@JPOMKNPI@FormFactor?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0N@FCOIALPI@HotSwappable?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0BE@GAJMAAIE@InterleaveDataDepth?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0BD@OOBFBMPB@InterleavePosition?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0L@NKIIONIP@MemoryType?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0O@MJAFBIEI@PositionInRow?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_09DADBKOHO@Removable?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0M@KLOLJEDG@Replaceable?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_05HOIAGEJD@Speed?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0L@EONKMHCB@TotalWidth?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_0L@NHBAOOAD@TypeDetail?$AA@
	DD	FLAT:??_C@_0BF@CGHJBIMG@Win32_PhysicalMemory?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0O@EOCLGIEK@MemoryDevices?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_05BOMFGPKE@Depth?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_06HCAKHJJK@Height?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_05IBAMDCFI@Width?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_06ODJMJFLN@Weight?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0N@FCOIALPI@HotSwappable?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_08KDOEBHGA@Location?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0M@LPAFCHAO@MaxCapacity?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0BG@BDKPEMKD@MemoryErrorCorrection?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_09DADBKOHO@Removable?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_0M@KLOLJEDG@Replaceable?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BK@FKMONDCJ@Win32_PhysicalMemoryArray?$AA@
	DD	FLAT:??_C@_03GMFFJGJI@Use?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BA@JKJCLFJA@StartingAddress?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0O@DMEOEBEF@EndingAddress?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_06IOEANFCI@Access?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BE@FGEPBFNL@AdditionalErrorData?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_09JFLKFGKE@BlockSize?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BB@HJBOPHEK@CorrectableError?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0M@PJGEGKNG@ErrorAccess?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0N@BEELHEFJ@ErrorAddress?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_09GOCFECJA@ErrorData?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0P@LPKOAMHJ@ErrorDataOrder?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_09EPPHMMOH@ErrorInfo?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BA@DBMDPLBE@ErrorResolution?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_09LMOKKAAG@ErrorTime?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BC@FEODMBII@ErrorTransferSize?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BG@GMMANAIM@OtherErrorDescription?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_07ODOLMOGH@Purpose?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BD@CLOLHCII@Win32_SMBIOSMemory?$AA@
	DD	FLAT:??_C@_0BD@EHELDMNK@SystemLevelAddress?$AA@
	DD	FLAT:??_C@_0BL@GIIBFPAF@Win32_SystemMemoryResource?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BL@GIIBFPAF@Win32_SystemMemoryResource?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BL@GIIBFPAF@Win32_SystemMemoryResource?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0L@GEHHDFHH@SystemType?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BD@KEFEPCEP@NumberOfProcessors?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BK@OBFFNDNO@NumberOfLogicalProcessors?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_08KAFEAHEM@UserName?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BE@BPKIAGEB@AdminPasswordStatus?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BJ@GMKDMOMC@AutomaticManagedPagefile?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BJ@CCCKPNOE@AutomaticResetBootOption?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BJ@HFJMLPDD@AutomaticResetCapability?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BC@LOIFGJNH@BootOptionOnLimit?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BF@NHNHHNLM@BootOptionOnWatchDog?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BB@KCAGDBFG@BootROMSupported?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0M@FAIFADKE@BootupState?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BD@NPOFELCJ@ChassisBootupState?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BA@KEBGPOLH@CurrentTimeZone?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BB@PNOOHJBN@DaylightInEffect?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0M@HMDMJNAL@DNSHostName?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_06HFDFFJHI@Domain?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0L@DHGJAMBB@DomainRole?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BK@DMLHGPE@EnableDaylightSavingsTime?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BG@OFHEPCGG@FrontPanelResetStatus?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BC@MOGIEFCC@InfraredSupported?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BA@FHFMLOBH@InitialLoadInfo?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BH@NPMFKEOG@KeyboardPasswordStatus?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0N@FDMFJCLB@LastLoadInfo?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0L@INCFKHMA@NameFormat?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BJ@OJMPPEPI@NetworkServerModeEnabled?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0O@KFCLFAME@OEMLogoBitmap?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0P@DEDOEGFN@OEMStringArray?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0N@BDBDHMKI@PartOfDomain?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BA@BAAGJACJ@PauseAfterReset?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0N@EOPDJAGI@PCSystemType?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BG@MGBDJIM@PowerOnPasswordStatus?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0L@PFLEPOFF@PowerState?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BB@PGEJAGBJ@PowerSupplyState?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BE@GNDJOKHP@PrimaryOwnerContact?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BB@CIHLIHGG@PrimaryOwnerName?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BA@JGMMLHGF@ResetCapability?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0L@NDDNCBN@ResetCount?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0L@ODMHPMJN@ResetLimit?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_05CPOHHMHJ@Roles?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BK@GHHBNFKI@SupportContactDescription?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BD@MJBJDOPG@SystemStartupDelay?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BF@HNHDCNN@SystemStartupOptions?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BF@IKJAHOGK@SystemStartupSetting?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0N@HHACICKK@ThermalState?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0BE@LPDNMOEG@TotalPhysicalMemory?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_0L@FAPFOCCC@WakeUpType?$AA@
	DD	FLAT:??_C@_0BF@GMDCFJKK@Win32_ComputerSystem?$AA@
	DD	FLAT:??_C@_09CLAAHCGK@Workgroup?$AA@
	DD	FLAT:??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@
	DD	FLAT:??_C@_06LGGLFMPE@Vendor?$AA@
	DD	FLAT:??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@
	DD	FLAT:??_C@_04NOKDILIH@UUID?$AA@
	DD	FLAT:??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@
	DD	FLAT:??_C@_0BC@IBEJLMDM@IdentifyingNumber?$AA@
	DD	FLAT:??_C@_0BM@IEKJLBKB@Win32_ComputerSystemProduct?$AA@
	DD	FLAT:??_C@_09ODBEMGCH@SKUNumber?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_09IHHILKBJ@ProductID?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_06LGGLFMPE@Vendor?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0P@CAOEPKFE@AssignmentType?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0BC@IBEJLMDM@IdentifyingNumber?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0BA@DLLPKNMD@InstallLocation?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0N@FNHIHJOE@InstallState?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_08LMOOJGEG@HelpLink?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0O@PPCFOOHH@HelpTelephone?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0O@GCCHCBIO@InstallSource?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_08BENDAOKD@Language?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0N@ONDNCIN@LocalPackage?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0N@LIDMIFHK@PackageCache?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0M@OMMGPPBL@PackageCode?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0M@PLFIHHBG@PackageName?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_08KOFIEIPM@RegOwner?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0L@BDBMLIBF@RegCompany?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_09ODBEMGCH@SKUNumber?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0L@LNLOEOEC@Transforms?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0N@CIJCJNDA@URLInfoAbout?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_0O@FDAGMPND@URLUpdateInfo?$AA@
	DD	FLAT:??_C@_0O@LCAALOJJ@Win32_Product?$AA@
	DD	FLAT:??_C@_09JCLOCIPO@WordCount?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_08GFKGEEBB@HotFixID?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_0M@NMGHOPGA@InstalledBy?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_0M@NBDMPIKF@InstalledOn?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_0M@PIGNGIJB@FixComments?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_0BE@FBEKBLIJ@ServicePackInEffect?$AA@
	DD	FLAT:??_C@_0BK@FHHANEEI@Win32_QuickFixEngineering?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0O@PBOKHICP@ActiveCooling?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@DKANKDCG@Win32_Refrigeration?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0P@OGGGECNI@Win32_Registry?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0P@OGGGECNI@Win32_Registry?$AA@
	DD	FLAT:??_C@_0M@MLALLFJB@CurrentSize?$AA@
	DD	FLAT:??_C@_0P@OGGGECNI@Win32_Registry?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0P@OGGGECNI@Win32_Registry?$AA@
	DD	FLAT:??_C@_0M@JHEHBNHB@MaximumSize?$AA@
	DD	FLAT:??_C@_0P@OGGGECNI@Win32_Registry?$AA@
	DD	FLAT:??_C@_0N@JHIKPPPP@ProposedSize?$AA@
	DD	FLAT:??_C@_0P@OGGGECNI@Win32_Registry?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
	DD	FLAT:??_C@_03OMFNLMOB@SID?$AA@
	DD	FLAT:??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
	DD	FLAT:??_C@_06HFDFFJHI@Domain?$AA@
	DD	FLAT:??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
	DD	FLAT:??_C@_0N@FPKOIMIG@LocalAccount?$AA@
	DD	FLAT:??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
	DD	FLAT:??_C@_07JDPBNNMM@SIDType?$AA@
	DD	FLAT:??_C@_0BE@DHOOODEL@Win32_SystemAccount?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0M@MLHPPPJP@DisplayName?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_08LHLJMCNC@PathName?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0M@MEIJGDEJ@AcceptPause?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0L@MPAKMMDG@AcceptStop?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0BA@DKLNMHH@DesktopInteract?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0N@GPBKMKLE@ErrorControl?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_08FHJJFIAP@ExitCode?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0BI@JAIDFKNN@ServiceSpecificExitCode?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_0M@CFFFGGEC@ServiceType?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_07LCDJNPHI@Started?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_09IAGOJBFI@StartMode?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_09CIMAKHDE@StartName?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_05JNKNAC@State?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@GGPCAOMO@Win32_SystemDriver?$AA@
	DD	FLAT:??_C@_05KFFLJNBG@TagId?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0N@MLFAOMIG@ChassisTypes?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_05BOMFGPKE@Depth?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_06HCAKHJJK@Height?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_05IBAMDCFI@Width?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_06ODJMJFLN@Weight?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0N@FBKDMIBE@AudibleAlarm?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BC@OICCILBJ@BreachDescription?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BI@OIOFCGCN@CableManagementStrategy?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BK@DMAHAAAM@CurrentRequiredOrProduced?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0P@FPMIANAI@HeatGeneration?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0N@FCOIALPI@HotSwappable?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0M@FLPBGKMO@LockPresent?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BD@BOLIJOBH@NumberOfPowerCords?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_09DADBKOHO@Removable?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0M@KLOLJEDG@Replaceable?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0P@IFAJDLJO@SecurityBreach?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0P@LBCDFKMM@SecurityStatus?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BE@CDEDGENH@ServiceDescriptions?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BC@MJACHPAA@ServicePhilosophy?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0P@GDBINLPP@SMBIOSAssetTag?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0BB@EPPDMJMG@TypeDescriptions?$AA@
	DD	FLAT:??_C@_0BG@COLMHJCF@Win32_SystemEnclosure?$AA@
	DD	FLAT:??_C@_0N@BGAIBJKD@VisibleAlarm?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_03PJHNOEGB@Tag?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0BA@JKMEMADA@SlotDesignation?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0O@CPCPFFAH@ConnectorType?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_05NFIJOKEG@Model?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0BA@KNNOFNF@ConnectorPinout?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0N@OHNMFPEL@CurrentUsage?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0O@JIADPBNP@HeightAllowed?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0O@ICFBEHEI@LengthAllowed?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0N@OLJPFNHL@MaxDataWidth?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0BF@DMENANMJ@OtherIdentifyingInfo?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0L@MIOPIENN@PartNumber?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_09KGLBDKHB@PMESignal?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_09HKGEBMAI@PoweredOn?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0BD@MJCDBDLK@PurposeDescription?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_06LOOAMPBO@Shared?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_03LMAAELJP@SKU?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0P@MHGKENBB@SpecialPurpose?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0BA@HLMBNLEL@SupportsHotPlug?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0O@OPICFFNJ@ThermalRating?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0BH@BMAHGALK@VccMixedVoltageSupport?$AA@
	DD	FLAT:??_C@_0BB@IINEGLLN@Win32_SystemSlot?$AA@
	DD	FLAT:??_C@_0BH@LMHCBHLE@VppMixedVoltageSupport?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0M@MNPNDAHP@ProductName?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0L@MLCHOGMM@MACAddress?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BA@PKOOKBHK@PhysicalAdapter?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0M@IOFGKGDC@ServiceName?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BA@FMEGGBNH@NetConnectionID?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BE@OHJLPIPO@NetConnectionStatus?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_05HOIAGEJD@Speed?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_08MFFAALKH@MaxSpeed?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_04MEIDEPGF@GUID?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BB@HCIBJPII@NetworkAddresses?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BB@CPOCLJND@PermanentAddress?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0M@CBMGKKGD@AdapterType?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0O@JDINGPBK@AdapterTypeID?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_09MMNBJFFE@AutoSense?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_09HBJECKPO@Installed?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0P@LMPBIBLI@InterfaceIndex?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0L@COBEMNCH@NetEnabled?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BF@IPHNLIOA@Win32_NetworkAdapter?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0L@MLCHOGMM@MACAddress?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_09NIGMFFPO@IPAddress?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0L@BJOKJMLN@DHCPServer?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BB@HACNIBBH@DefaultIPGateway?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_09FBHLGFBK@DNSDomain?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0M@HMDMJNAL@DNSHostName?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_08EKHHNDLH@IPSubnet?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0M@IOFGKGDC@ServiceName?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BF@NNMMFFI@ArpAlwaysSourceRoute?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BA@DHDIOMKI@ArpUseEtherSNAP?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0N@OAKOAPMO@DatabasePath?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BE@GOBIIDKA@DeadGWDetectEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0L@JFBEJJHM@DefaultTOS?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0L@EIDNNLHD@DefaultTTL?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0M@HIMIFMFA@DHCPEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BB@BOGKHOEE@DHCPLeaseExpires?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BC@MIONLOAH@DHCPLeaseObtained?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BL@NEHFNDKH@DNSDomainSuffixSearchOrder?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BM@LEBEBEIJ@DNSEnabledForWINSResolution?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BF@CIMMNJEP@DNSServerSearchOrder?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BN@OACMHJBD@DomainDNSRegistrationEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BE@GGFBGHJP@ForwardBufferMemory?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BL@EIIPDLGE@FullDNSRegistrationEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BC@JPOLFPNM@GatewayCostMetric?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_09LFCMALKM@IGMPLevel?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0P@LMPBIBLI@InterfaceIndex?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BD@KDBLHBOO@IPConnectionMetric?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_09KIFLBGKF@IPEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BI@LBDHONDJ@IPFilterSecurityEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BG@IJANIIKC@IPPortSecurityEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BH@HHIPIHMF@IPSecPermitIPProtocols?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BE@JOIOPHFJ@IPSecPermitTCPPorts?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BE@IDDAOKAD@IPSecPermitUDPPorts?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BD@EFBIPBIB@IPUseZeroBroadcast?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0L@JNAHKDDE@IPXAddress?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0L@ONDAOAGP@IPXEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0N@EAKCLKKB@IPXFrameType?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0N@FHNNAGIP@IPXMediaType?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BB@HFHJDNKD@IPXNetworkNumber?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BE@KIGHGIHN@IPXVirtualNetNumber?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BC@HLLJNCGL@KeepAliveInterval?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0O@HNPIKCNH@KeepAliveTime?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_03BLLMIPHO@MTU?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BC@CHJCENM@NumForwardPackets?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BF@DPKIODPI@PMTUBHDetectEnabled?$DL?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BF@KBFAFCNG@PMTUDiscoveryEnabled?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BE@MJKNHDFN@TcpipNetbiosOptions?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BN@NBAJINBE@TcpMaxConnectRetransmissions?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BK@ICGANMDC@TcpMaxDataRetransmissions?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BC@CEGEJAFC@TcpNumConnections?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BL@JOFENPLC@TcpUseRFC1122UrgentPointer?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0O@CIEPJIDD@TcpWindowSize?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BI@MIGGLKDO@WINSEnableLMHostsLookup?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BD@POPKKJKC@WINSHostLookupFile?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BC@BECMMLFM@WINSPrimaryServer?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0M@CMEBCDLL@WINSScopeID?$AA@
	DD	FLAT:??_C@_0CC@CIAMNGGL@Win32_NetworkAdapterConfiguratio@
	DD	FLAT:??_C@_0BE@CHHDIDN@WINSSecondaryServer?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_08FPDCFGEH@FullName?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0O@PKMMPAKN@HomeDirectory?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0BD@GBDEODMP@HomeDirectoryDrive?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0M@NDLIHBHJ@LogonServer?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_06HAPGBBDI@UserId?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_08LFHMHDM@UserType?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0M@KEGPAPIK@UserComment?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0P@FLJOKOM@AccountExpires?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0BD@JGGENGAP@AuthorizationFlags?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0BB@OBONNEPA@BadPasswordCount?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_08BHOPBADB@Caption?$DL?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_08DOHJINHB@CodePage?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_07JABLCLAF@Comment?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0M@NALIBBDH@CountryCode?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_05BOOEKJH@Flags?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0L@NKJIFPDG@LastLogoff?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_09JEOPKIAO@LastLogon?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0L@HFGJFNDM@LogonHours?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0P@BDLNENEK@MaximumStorage?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0P@FMELCCCP@NumberOfLogons?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0L@PBGCNDPG@Parameters?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0M@HKNCEPDC@PasswordAge?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0BA@HLOHOKEI@PasswordExpires?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0P@CIBDNLPH@PrimaryGroupId?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0L@FILALLBE@Privileges?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_07EELFDIBP@Profile?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0L@GHILPLPE@ScriptPath?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0N@LMMEGDEF@UnitsPerWeek?$AA@
	DD	FLAT:??_C@_0BK@BBOKMFIH@Win32_NetworkLoginProfile?$AA@
	DD	FLAT:??_C@_0N@LMIHDJBC@Workstations?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BG@IODJFDPJ@ConnectionlessService?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BD@ECGOALCK@GuaranteesDelivery?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BF@FAHCIDLD@GuaranteesSequencing?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BD@FFCOFDOJ@MaximumAddressSize?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BD@IBPHBINL@MaximumMessageSize?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BA@NLEIFDG@MessageOriented?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BD@PCBKNDJA@MinimumAddressSize?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BF@DJOBDJFP@PseudoStreamOriented?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BF@ONDNBOBK@SupportsBroadcasting?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BE@OAOGNDFG@SupportsConnectData?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BH@KMFDMCNH@SupportsDisconnectData?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BD@BJHEFNDH@SupportsEncryption?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BG@MJFBKLBP@SupportsExpeditedData?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BH@PFGLDBHN@SupportsFragmentation?$DL?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BI@FGBPBAKA@SupportsGracefulClosing?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BM@MDHHIPIM@SupportsGuaranteedBandwidth?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BF@BHPPOJFK@SupportsMulticasting?$AA@
	DD	FLAT:??_C@_0BG@IFKJCFNC@Win32_NetworkProtocol?$AA@
	DD	FLAT:??_C@_0BJ@MNHPDIFA@SupportsQualityofService?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_08BHIEONMC@FileSize?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0L@OHPKPJND@AccessMask?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_07CNOHFBBG@Archive?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0L@FBPJPEIN@Compressed?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0N@GPGLEEKJ@CreationDate?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_09KLPLELGE@Encrypted?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0BB@CPNPJAMG@EncryptionMethod?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_06PDIOKLEE@FSName?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_05MBDCODDP@Group?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_06FHBILLDG@Hidden?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0L@PCJCDOJK@InUseCount?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0N@BLGOKNC@LastAccessed?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0N@JFOMFNHF@LastModified?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_08PMHOKLA@Readable?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_06JIODDOFH@System?$AA@
	DD	FLAT:??_C@_0BA@MBMLPGOB@Win32_CodecFile?$AA@
	DD	FLAT:??_C@_09HKGIPMHJ@Writeable?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_0M@MNPNDAHP@ProductName?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_06LGGLFMPE@Vendor?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_0BC@IBEJLMDM@IdentifyingNumber?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_08OBOKCFEP@Accesses?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_0L@PLFFHFAH@Attributes?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_0N@FNHIHJOE@InstallState?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_07PKCEDPHO@LastUse?$AA@
	DD	FLAT:??_C@_0BG@OEFCBCCA@Win32_SoftwareFeature?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0M@MLHPPPJP@DisplayName?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_08LHLJMCNC@PathName?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0M@CFFFGGEC@ServiceType?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_09IAGOJBFI@StartMode?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_05JNKNAC@State?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0N@GPBKMKLE@ErrorControl?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_07LCDJNPHI@Started?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0M@MEIJGDEJ@AcceptPause?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0L@MPAKMMDG@AcceptStop?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0BA@DKLNMHH@DesktopInteract?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_08FHJJFIAP@ExitCode?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_0BI@JAIDFKNN@ServiceSpecificExitCode?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_09CIMAKHDE@StartName?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BC@DPAOPBJD@Win32_BaseService?$AA@
	DD	FLAT:??_C@_05KFFLJNBG@TagId?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_0O@KLLIKPKC@BootDirectory?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_0BC@BJLIMIEA@ConfigurationPath?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_09PABAEPFH@LastDrive?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_0BB@FHBPINGK@ScratchDirectory?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0BI@EMHOOOGN@Win32_BootConfiguration?$AA@
	DD	FLAT:??_C@_0O@FDHFFDED@TempDirectory?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0M@EEKAPENF@BorderWidth?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0L@GMHAONPD@CoolSwitch?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BA@NKDGIFD@CursorBlinkRate?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BA@CNEMFCKH@DragFullWindows?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BA@MJNOPNAD@GridGranularity?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0M@FALLBHKM@IconSpacing?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BC@HAAMKFAI@IconTitleFaceName?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0O@COINDPHH@IconTitleSize?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0O@HLNDODKM@IconTitleWrap?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_07NOCIGAPP@Pattern?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BC@KENIIHPI@ScreenSaverActive?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BG@OPEGFPLM@ScreenSaverExecutable?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BC@ENMGOCGL@ScreenSaverSecure?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BD@LIKEHLGN@ScreenSaverTimeout?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_09FAKNONCF@Wallpaper?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0BD@MNOICNPG@WallpaperStretched?$AA@
	DD	FLAT:??_C@_0O@MLAGCNDM@Win32_Desktop?$AA@
	DD	FLAT:??_C@_0P@HLGPBKPI@WallpaperTiled?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0N@EJILFHEF@ScreenHeight?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0M@GOACCFHI@ScreenWidth?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BG@JHIHGKIO@PixelsPerXLogicalInch?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BG@EKBBLDAL@PixelsPerYLogicalInch?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BE@EAJFLPNK@MonitorManufacturer?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0M@FCPFJAEP@MonitorType?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_09LPCHGGLO@Bandwidth?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0M@GAHMDPOP@DisplayType?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_08EOCJLAAL@IsLocked?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BF@CJJIHFON@Win32_DesktopMonitor?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0O@PBOKHICP@ActiveCooling?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0N@HOGGFFKF@DesiredSpeed?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_09BEHCCOGC@Win32_Fan?$AA@
	DD	FLAT:??_C@_0O@ODMHJIAL@VariableSpeed?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0P@NOCBMKBI@OSArchitecture?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0M@PIEABBJI@BuildNumber?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_09LLAGGHGM@BuildType?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0L@EGALIDNG@CSDVersion?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BI@MCMKKPJH@ServicePackMajorVersion?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BI@HEBPKKOL@ServicePackMinorVersion?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0P@HNONGDKL@OSProductSuite?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_06MNBFCOOH@OSType?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0N@MHPBIIPD@Organization?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0P@DAFCPCAO@RegisteredUser?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0M@GGPOPAAP@ProductType?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0L@BLKKOICB@BootDevice?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0N@LCIKLBMI@SystemDevice?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0M@JBPIDKPO@SystemDrive?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BA@FNJMICPB@SystemDirectory?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BB@IEJHMEDK@WindowsDirectory?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_07FOHBHJJA@CodeSet?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0M@NALIBBDH@CountryCode?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0L@IOMOHLID@OSLanguage?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BA@KEBGPOLH@CurrentTimeZone?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0CC@LDMHMPMB@DataExecutionPrevention_Availabl@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0CK@PHHDEHCB@DataExecutionPrevention_32BitApp@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0CA@KCIFHCEN@DataExecutionPrevention_Drivers?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0CG@FOLHLACL@DataExecutionPrevention_SupportP@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_05GCIPIGEI@Debug?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0M@DGCHPHG@Distributed?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BA@LIJDDPMD@EncryptionLevel?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BL@LKLGBOHP@ForegroundApplicationBoost?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BD@KJPLACJD@FreePhysicalMemory?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BH@GDCHGEBO@FreeSpaceInPagingFiles?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BC@HEKPKJCK@FreeVirtualMemory?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BB@GLODIIPC@LargeSystemCache?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0P@DKHNBJBB@LastBootUpTime?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0O@GFNPHCJN@LocalDateTime?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_06BMNFLCFO@Locale?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BF@BJJFAIPL@MaxNumberOfProcesses?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BF@OEEDDGBK@MaxProcessMemorySize?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0N@FEFLNODO@MUILanguages?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BG@MGHJNMGE@NumberOfLicensedUsers?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BC@FILGLGHH@NumberOfProcesses?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0O@PBBGLGFJ@NumberOfUsers?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BD@GLJCNHGP@OperatingSystemSKU?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BF@KAMHDIPP@OtherTypeDescription?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0L@KNGIFFNB@PAEEnabled?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0O@NNCCMBIG@PlusProductID?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BC@LMIHOAGL@PlusVersionNumber?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_07NAEHBBNL@Primary?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BI@BKJHEEOL@SizeStoredInPagingFiles?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_09IIJPJFOC@SuiteMask?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BD@PBNAJGBH@TotalSwapSpaceSize?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BH@IBKKELEK@TotalVirtualMemorySize?$AA@
	DD	FLAT:??_C@_0BG@MCGAGLCL@Win32_OperatingSystem?$AA@
	DD	FLAT:??_C@_0BH@EOFEPLNL@TotalVisibleMemorySize?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_08BHIEONMC@FileSize?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_09LCEICGML@FreeSpace?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_06PDIOKLEE@FSName?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0L@OHPKPJND@AccessMask?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_07CNOHFBBG@Archive?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0L@FBPJPEIN@Compressed?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0BC@MBGAHHAB@CompressionMethod?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0N@GPGLEEKJ@CreationDate?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_09KLPLELGE@Encrypted?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0BB@CPNPJAMG@EncryptionMethod?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_06FHBILLDG@Hidden?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0M@EONNPILK@InitialSize?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0L@PCJCDOJK@InUseCount?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0N@BLGOKNC@LastAccessed?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0N@JFOMFNHF@LastModified?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_0M@JHEHBNHB@MaximumSize?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_08PMHOKLA@Readable?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_06JIODDOFH@System?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_07NGFJPNPN@Version?$AA@
	DD	FLAT:??_C@_0P@GFMPEM@Win32_PageFile?$AA@
	DD	FLAT:??_C@_09HKGIPMHJ@Writeable?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0N@FNJCOOAL@Capabilities?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BH@EPMKAGLN@CapabilityDescriptions?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0L@LICOLOBE@DMASupport?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BE@JDLAPHJE@MaxNumberControlled?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BB@NCMHEECO@OSAutoDiscovered?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BC@JHPOAJCM@ProtocolSupported?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BD@CPCJFLPJ@Win32_ParallelPort?$AA@
	DD	FLAT:??_C@_0BA@HADKHLAI@TimeOfLastReset?$AA@
	DD	FLAT:??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@
	DD	FLAT:??_C@_0BA@LEMEMCNN@ProxyPortNumber?$AA@
	DD	FLAT:??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@
	DD	FLAT:??_C@_0M@BCMAAPLG@ProxyServer?$AA@
	DD	FLAT:??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@
	DD	FLAT:??_C@_0L@FFDIDHBB@ServerName?$AA@
	DD	FLAT:??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0M@GFHBIAHO@Win32_Proxy?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_04HMIIHGGM@Path?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_0P@IBLGFEE@MaximumAllowed?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_0N@PEAHLPLG@AllowMaximum?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0M@MCIKNCEL@Win32_Share?$AA@
	DD	FLAT:??_C@_04KOACHJEN@Type?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_09IHHILKBJ@ProductID?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_0BD@HINAAJAB@ActivationRequired?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_0BB@FFPKNIIL@IsNotificationOn?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_0BK@MHMKFBPN@RemainingEvaluationPeriod?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_0BF@GDCPFLAD@RemainingGracePeriod?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_0L@FFDIDHBB@ServerName?$AA@
	DD	FLAT:??_C@_0BP@BGMJPOID@Win32_WindowsProductActivation?$AA@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BK@HACJICBD@ASPScriptDefaultNamespace?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BB@HHJGCMCA@ASPScriptEnabled?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BA@FCAEOBFB@AutorecoverMofs?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0P@LBFHKJDL@AutoStartWin9X?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0P@HCBDPJED@BackupInterval?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0P@HCKKJOFA@BackupLastTime?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0N@DMPKCKPJ@BuildVersion?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BC@PJAEIMII@DatabaseDirectory?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BA@GMIIIOHB@DatabaseMaxSize?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BL@FLALGEND@EnableAnonWin9xConnections?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0N@OBNHEDLP@EnableEvents?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BP@DHLDKHJI@EnableStartupHeapPreallocation?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BN@FBHHPGGC@HighThresholdOnClientObjects?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BG@LKICGCBK@HighThresholdOnEvents?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BG@MDEOBFAH@InstallationDirectory?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BN@GKEEMEKI@LastStartupHeapPreallocation?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BB@FALFKNPE@LoggingDirectory?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0N@FMFGOJPB@LoggingLevel?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BM@NGNJMOHJ@LowThresholdOnClientObjects?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BF@PHEPMKDN@LowThresholdOnEvents?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0P@CEPALFMK@MaxLogFileSize?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BH@PBKELOKA@MaxWaitOnClientObjects?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BA@NHHFPHIJ@MaxWaitOnEvents?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_0BI@NOBDNJPM@MofSelfInstallDirectory?$AA@
	DD	FLAT:??_C@_0BB@BBHCGAKO@Win32_WMISetting?$AA@
	DD	FLAT:??_C@_09CMMJGBDB@SettingID?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0BA@FLFAPDFG@ConnectionState?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0P@LNPCDAPC@ConnectionType?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0M@GAHMDPOP@DisplayType?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0L@CCMICFHJ@RemotePath?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_08KAFEAHEM@UserName?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0L@OHPKPJND@AccessMask?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_07JABLCLAF@Comment?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_09CLGGKACF@LocalName?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0L@FLEBOKCI@RemoteName?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0L@LNKKEMJM@Persistent?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0N@ONCOBKP@ProviderName?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_0N@EPHJOCBJ@ResourceType?$AA@
	DD	FLAT:??_C@_0BI@NLCFKEJK@Win32_NetworkConnection?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_05IEIONIFO@Label?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0M@EHMJIHII@DriveLetter?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_08PINBMPEF@Capacity?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_09LCEICGML@FreeSpace?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_09NKILGKMH@DriveType?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0L@FPFLHALM@FileSystem?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0N@FPJJBBNM@SerialNumber?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_09JFLKFGKE@BlockSize?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0P@PGINBNEO@NumberOfBlocks?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_06IOEANFCI@Access?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_09HICOCIIF@Automount?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0L@FBPJPEIN@Compressed?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0M@FMPADJNN@DirtyBitSet?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BB@PNCBAHDK@ErrorMethodology?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BA@JDIBBDEO@IndexingEnabled?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BG@ELFKDNP@MaximumFileNameLength?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_07ODOLMOGH@Purpose?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0O@HEHOMNCC@QuotasEnabled?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BB@MPFPEDFA@QuotasIncomplete?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BB@JJBCJECG@QuotasRebuilding?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BD@BJDMHPHA@SupportsDiskQuotas?$AA@
	DD	FLAT:??_C@_0N@NNCPDPIH@Win32_Volume?$AA@
	DD	FLAT:??_C@_0BN@DMMADKEM@SupportsFileBasedCompression?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BE@EFDGHEPA@AvgDiskBytesPerRead?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BJ@BDMNCNHC@AvgDiskBytesPerRead_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BI@NOBLAOA@AvgDiskBytesPerTransfer?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BN@DKGECFBJ@AvgDiskBytesPerTransfer_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BF@POONAKDE@AvgDiskBytesPerWrite?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BK@CFFBJGE@AvgDiskBytesPerWrite_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BD@CKOOLAI@AvgDiskQueueLength?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BH@NCJLEAHB@AvgDiskReadQueueLength?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BD@LLDDCMMH@AvgDiskSecPerRead?$DL?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BH@OOEPJOH@AvgDiskSecPerRead_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BG@JDCFEBPA@AvgDiskSecPerTransfer?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BL@BNDKFKFB@AvgDiskSecPerTransfer_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BD@MEJEANKD@AvgDiskSecPerWrite?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BI@ICCNFHHL@AvgDiskSecPerWrite_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BI@LJILLEEA@AvgDiskWriteQueueLength?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BH@CFGDHLM@CurrentDiskQueueLength?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BA@BBEHMIEJ@DiskBytesPerSec?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BE@IJJNINGL@DiskReadBytesPerSec?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BA@GPEPCNFG@DiskReadsPerSec?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BE@INHPJNPE@DiskTransfersPerSec?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BF@BLPLIECA@DiskWriteBytesPerSec?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BB@FFLCGPKG@DiskWritesPerSec?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BE@KMHMAHCP@PercentDiskReadTime?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BJ@JDFDIKDL@PercentDiskReadTime_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BA@HPDMAPLN@PercentDiskTime?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BF@CHKOMNLI@PercentDiskTime_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BF@DOKCNDOL@PercentDiskWriteTime?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BK@OCJABKEM@PercentDiskWriteTime_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BA@LOOKHAGM@PercentIdleTime?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BF@PLICIEBG@PercentIdleTime_Base?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0O@JFLPIICD@SplitIOPerSec?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CI@FFMDGJKG@Win32_PerfRawData_PerfDisk_Physi@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0O@EJBHEMAA@FreeMegabytes?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BE@EFDGHEPA@AvgDiskBytesPerRead?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BJ@BDMNCNHC@AvgDiskBytesPerRead_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BI@NOBLAOA@AvgDiskBytesPerTransfer?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BN@DKGECFBJ@AvgDiskBytesPerTransfer_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BF@POONAKDE@AvgDiskBytesPerWrite?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BK@CFFBJGE@AvgDiskBytesPerWrite_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BD@CKOOLAI@AvgDiskQueueLength?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BH@NCJLEAHB@AvgDiskReadQueueLength?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BC@IJGACNJB@AvgDiskSecPerRead?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BH@OOEPJOH@AvgDiskSecPerRead_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BG@JDCFEBPA@AvgDiskSecPerTransfer?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BL@BNDKFKFB@AvgDiskSecPerTransfer_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BD@MEJEANKD@AvgDiskSecPerWrite?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BI@ICCNFHHL@AvgDiskSecPerWrite_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BI@LJILLEEA@AvgDiskWriteQueueLength?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BH@CFGDHLM@CurrentDiskQueueLength?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BA@BBEHMIEJ@DiskBytesPerSec?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BE@IJJNINGL@DiskReadBytesPerSec?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BA@GPEPCNFG@DiskReadsPerSec?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BE@INHPJNPE@DiskTransfersPerSec?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BF@BLPLIECA@DiskWriteBytesPerSec?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BB@FFLCGPKG@DiskWritesPerSec?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BE@KMHMAHCP@PercentDiskReadTime?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BJ@JDFDIKDL@PercentDiskReadTime_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BA@HPDMAPLN@PercentDiskTime?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BF@CHKOMNLI@PercentDiskTime_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BF@DOKCNDOL@PercentDiskWriteTime?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BK@OCJABKEM@PercentDiskWriteTime_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BB@FDAACFPN@PercentFreeSpace?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BG@KEJCKNPB@PercentFreeSpace_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BA@LOOKHAGM@PercentIdleTime?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BF@PLICIEBG@PercentIdleTime_Base?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0O@JFLPIICD@SplitIOPerSec?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CH@LGANEOML@Win32_PerfRawData_PerfDisk_Logic@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BE@IEAMAKJB@BytesReceivedPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BH@GKKKHEEC@BytesTransmittedPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BB@NADCFLBJ@BytesTotalPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0O@GPMHHPHG@PacketsPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BG@PFNBEMLM@PacketsReceivedPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BJ@EHOOHGK@PacketsTransmittedPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0N@IJGODAGI@ConnectsCore?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BF@MNEGHJGM@ConnectsLanManager20?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BF@NEFNEICN@ConnectsLanManager21?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BC@EOFEMAHF@ConnectsWindowsNT?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BA@DJMJIEBG@CurrentCommands?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BJ@CAIAAECL@FileDataOperationsPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BJ@BKIGCPAP@FileReadOperationsPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BK@PGBFPAJ@FileWriteOperationsPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BE@OGCPPNJJ@NetworkErrorsPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BF@LPDAMOL@ReadBytesCachePerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BH@IAHICFAL@ReadBytesNetworkPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BJ@ILOCGCLG@ReadBytesNonPagingPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BG@OLGMIDCE@ReadBytesPagingPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BL@CFIGOGID@ReadOperationsRandomPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BC@JALNAJBD@ReadPacketsPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BH@JCFIFLJN@ReadPacketsSmallPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BC@MGHKCLNK@ReadsDeniedPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BB@FFKFENGC@ReadsLargePerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BC@GAMKMMKB@ServerDisconnects?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BB@LGLKKLGK@ServerReconnects?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0P@EPIIEJNA@ServerSessions?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BD@BALBBJPI@ServerSessionsHung?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BG@GCNKDHCE@WriteBytesCachePerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BI@HNBBGOIH@WriteBytesNetworkPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BK@PNNKNAIA@WriteBytesNonPagingPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BH@OANOHFDO@WriteBytesPagingPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BM@IJPFNDGO@WriteOperationsRandomPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BD@NEABLLFJ@WritePacketsPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BI@GPDBBABB@WritePacketsSmallPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BC@LMECNINB@WriteDeniedPerSec?$AA@
	DD	FLAT:??_C@_0CF@MIMNIAPF@Win32_PerfRawData_PerfNet_Redire@
	DD	FLAT:??_C@_0BB@HAMOOOJ@WriteLargePerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BF@MGINILGA@AsyncCopyReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BE@CAOOLPND@AsyncDataMapsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BF@GKOKALKG@AsyncFastReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BE@OMOFBJFA@AsyncMDLReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BE@PNDFACCO@AsyncPinReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BE@FFJCEMDJ@CopyReadHitsPercent?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BJ@FGOEJAHL@CopyReadHitsPercent_Base?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BA@BIHGDHJL@CopyReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BC@MJKDEPG@DataFlushesPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BF@JDDABGEO@DataFlushPagesPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@KOAAJIJA@DataMapHitsPercent?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BI@ILDKBHLK@DataMapHitsPercent_Base?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BC@OOMEAEEA@DataMapPinsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BH@JDIGEHGG@DataMapPinsPerSec_Base?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0P@GAMMIBDO@DataMapsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BL@HBAEFMGM@FastReadNotPossiblesPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BN@JGPDPBED@FastReadResourceMissesPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BA@LEBBLHFN@FastReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BH@JCPDBLIF@LazyWriteFlushesPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BF@GOGJJNKE@LazyWritePagesPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@PNDPPHMH@MDLReadHitsPercent?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BI@NMONEPAO@MDLReadHitsPercent_Base?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0P@KMMHCHLN@MDLReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@INCEIJBE@PinReadHitsPercent?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BI@KGBEKIEP@PinReadHitsPercent_Base?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0P@LNBHDMMD@PinReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BB@NGKOLIIB@ReadAheadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BE@PJJLELAC@SyncCopyReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@IDCIAAHF@SyncDataMapsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BE@FFPMMLME@SyncFastReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@EPCDKGPG@SyncMDLReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@FOPDLNII@SyncPinReadsPerSec?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0BP@LHEMPHPB@Win32_PerfRawData_PerfOS_Cache?$AA@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0P@HPKKNIPF@AvailableBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BA@DKABBPEK@AvailableKBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BA@FJNBCKHA@AvailableMBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0L@ECJIAGHC@CacheBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0P@BPAGOPIK@CacheBytesPeak?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BC@ONMHHFEO@CacheFaultsPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0M@HHOMCEFN@CommitLimit?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0P@FAEGOFEG@CommittedBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BH@BIADJNEE@DemandZeroFaultsPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BL@MIKHIOLC@FreeSystemPageTableEntries?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BB@HOEEGAIG@PageFaultsPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BA@BHCICMAP@PageReadsPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BB@NHNEKMAP@PagesInputPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BC@PGIEMCPC@PagesOutputPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0M@PJBDCOH@PagesPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BB@EHHNOBPH@PageWritesPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BL@EHMKCOHH@PercentCommittedBytesInUse?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0CA@DKFDEGAA@PercentCommittedBytesInUse_Base?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BD@GAOJBHDB@PoolNonpagedAllocs?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BC@GMPJEGLC@PoolNonpagedBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BA@LDKKFHCE@PoolPagedAllocs?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0P@PJENKINF@PoolPagedBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BH@OMBHLDMN@PoolPagedResidentBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BJ@NPNGHFJN@SystemCacheResidentBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BI@KPKNFENK@SystemCodeResidentBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BF@JBGABIBK@SystemCodeTotalBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BK@MNCINJBF@SystemDriverResidentBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BH@KPIDEMMH@SystemDriverTotalBytes?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BH@KEMPGDKK@TransitionFaultsPerSec?$AA@
	DD	FLAT:??_C@_0CA@MENAEGKE@Win32_PerfRawData_PerfOS_Memory?$AA@
	DD	FLAT:??_C@_0BC@KBPIOBBH@WriteCopiesPerSec?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_09BNGODGIH@Processes?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_07CMIGFCHA@Threads?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_07LDPBBEEB@Mutexes?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_06HEBKAGDH@Events?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0L@GLBCAKLN@Semaphores?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_08FBPDBPOE@Sections?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CB@OFCHCPMB@Win32_PerfRawData_PerfOS_Objects@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0N@CKGFJCHF@PercentUsage?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0BB@JKLALBIF@PercentUsagePeak?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CE@MFJPDLKO@Win32_PerfRawData_PerfOS_PagingF@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BF@EMKPKJGP@PercentProcessorTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BA@JCLIOML@PercentUserTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BA@LOOKHAGM@PercentIdleTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BE@DLJADCBG@C1TransitionsPerSec?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BE@JIMGLELP@C2TransitionsPerSec?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BE@EPCEDEOH@C3TransitionsPerSec?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_07BHCICOFH@DPCRate?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BB@KHEGFAIJ@DPCsQueuedPerSec?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BB@FCICDGPJ@InterruptsPerSec?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0O@PJFMGMCN@PercentC1Time?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0O@HPMIBOID@PercentC2Time?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0O@LEJEMNCG@PercentC3Time?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0P@LMLLFJEI@PercentDPCTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BF@GMGAHOLM@PercentInterruptTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BG@FPNGHOGK@PercentPrivilegedTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CD@BCJODFFP@Win32_PerfRawData_PerfOS_Process@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_09BNGODGIH@Processes?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_07CMIGFCHA@Threads?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BG@KHFHJKMP@AlignmentFixupsPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BG@GIPKJDB@ContextSwitchesPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BK@DHKAACDP@ExceptionDispatchesPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BH@EMNLAEFK@FileControlBytesPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BM@PIKKJCOI@FileControlOperationsPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BJ@CAIAAECL@FileDataOperationsPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BE@NKKLPLAB@FileReadBytesPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BJ@BKIGCPAP@FileReadOperationsPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BF@LGMPDKBA@FileWriteBytesPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BK@PGBFPAJ@FileWriteOperationsPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BJ@PHDBHNCO@FloatingEmulationsPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BB@EEOEKLCO@Frequency_Object?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BD@IONDPFD@Frequency_PerfTime?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BD@MECIOMGA@Frequency_Sys100NS?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BK@NGGOKLMO@PercentRegistryQuotaInUse?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BF@NPGOAGED@ProcessorQueueLength?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BC@HMBPBBJB@SystemCallsPerSec?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0N@JBKHOEPE@SystemUpTime?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BB@JNCIMECH@Timestamp_Object?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BD@ECCCBBP@Timestamp_PerfTime?$AA@
	DD	FLAT:??_C@_0CA@OICKPIAK@Win32_PerfRawData_PerfOS_System?$AA@
	DD	FLAT:??_C@_0BD@MIOHPCCM@Timestamp_Sys100NS?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0P@IDBBEDLI@CurrentReading?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_08NLCOAFEI@Accuracy?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0L@KGPBCGJE@Resolution?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_09BKMALBOE@Tolerance?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0P@OAFFNBPO@NominalReading?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_09EDCPMBJN@NormalMax?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_09FBKECFPC@NormalMin?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BH@NMAIJHFM@LowerThresholdCritical?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BE@NPMAGCMK@LowerThresholdFatal?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BK@LBKIMOJN@LowerThresholdNonCritical?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BH@FKDKGMLL@UpperThresholdCritical?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BE@HGEJIDLL@UpperThresholdFatal?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BK@CCJKGBMI@UpperThresholdNonCritical?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0M@EIBDACPL@MaxReadable?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0M@NIGABCBB@MinReadable?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_08JLKOPNJP@IsLinear?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@ENAKGAAL@Win32_CurrentProbe?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0O@PKGMNGNM@BatteryStatus?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BB@NPKJIND@EstimatedRunTime?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0O@IKADLBCG@TimeOnBattery?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BJ@CDCEHMEP@EstimatedChargeRemaining?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BB@HMDCOCCC@TimeToFullCharge?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0N@BBNLMPJO@Manufacturer?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BA@EMGHNHBI@ManufactureDate?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_09CAHFAGKL@Chemistry?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0P@IFPGNGPN@DesignCapacity?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BD@HADPLBCE@FullChargeCapacity?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BE@HNKJKBND@BatteryRechargeTime?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BD@EBMPMBCC@CapacityMultiplier?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0O@PBABLEFL@DesignVoltage?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BE@NEEKJBPN@ExpectedBatteryLife?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0N@DDGBNILM@ExpectedLife?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_08KDOEBHGA@Location?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BA@LLOCDJF@MaxBatteryError?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BA@KENPOHHF@MaxRechargeTime?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BE@IIEJDIAD@SmartBatteryVersion?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0BI@LFKNNEKA@SystemCreationClassName?$AA@
	DD	FLAT:??_C@_0BG@GEFEDJOA@Win32_PortableBattery?$AA@
	DD	FLAT:??_C@_0L@MPHEPFAH@SystemName?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0P@IDBBEDLI@CurrentReading?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_08NLCOAFEI@Accuracy?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0L@KGPBCGJE@Resolution?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_09BKMALBOE@Tolerance?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0P@OAFFNBPO@NominalReading?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_09EDCPMBJN@NormalMax?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_09FBKECFPC@NormalMin?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BH@NMAIJHFM@LowerThresholdCritical?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BE@NPMAGCMK@LowerThresholdFatal?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BK@LBKIMOJN@LowerThresholdNonCritical?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BH@FKDKGMLL@UpperThresholdCritical?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BE@HGEJIDLL@UpperThresholdFatal?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BK@CCJKGBMI@UpperThresholdNonCritical?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0M@NIGABCBB@MinReadable?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0M@EIBDACPL@MaxReadable?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_08JLKOPNJP@IsLinear?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BH@HMHAIEPK@Win32_TemperatureProbe?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0M@HHJKGII@PNPDeviceID?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_08JLPEJKOE@DeviceID?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0P@IDBBEDLI@CurrentReading?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_08NLCOAFEI@Accuracy?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0L@KGPBCGJE@Resolution?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_09BKMALBOE@Tolerance?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0P@OAFFNBPO@NominalReading?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_09EDCPMBJN@NormalMax?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_09FBKECFPC@NormalMin?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BH@NMAIJHFM@LowerThresholdCritical?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BE@NPMAGCMK@LowerThresholdFatal?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BK@LBKIMOJN@LowerThresholdNonCritical?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BH@FKDKGMLL@UpperThresholdCritical?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BE@HGEJIDLL@UpperThresholdFatal?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BK@CCJKGBMI@UpperThresholdNonCritical?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0M@NIGABCBB@MinReadable?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0M@EIBDACPL@MaxReadable?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0N@MFGCECDI@Availability?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_07OJKFJLLK@Caption?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BH@JDEEEDCN@ConfigManagerErrorCode?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BI@OBNCDCBF@ConfigManagerUserConfig?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0M@OHKMKKDH@Description?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0N@FJHLDHMG@ErrorCleared?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BB@KIDBLMK@ErrorDescription?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0M@NBIJNNJJ@InstallDate?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_08JLKOPNJP@IsLinear?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0O@NDKHIJAE@LastErrorCode?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BM@NFDEHNHA@PowerManagementCapabilities?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0BJ@CFOPGMLH@PowerManagementSupported?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_06PGDKHFME@Status?$AA@
	DD	FLAT:??_C@_0BD@HAJJDCII@Win32_VoltageProbe?$AA@
	DD	FLAT:??_C@_0L@PKEHCAEI@StatusInfo?$AA@
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAPAXPAPAXV?$allocator@PAX@std@@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Result$ = 8						; size = 4
??$_Uninit_copy@PAPAXPAPAXV?$allocator@PAX@std@@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<void * *,void * *,std::allocator<void *> >, COMDAT
; __First$ = ecx
; __Dest$ = edx
; __Count$ = eax

; 146  : 	_DEBUG_RANGE(_First, _Last);
; 147  : 	_DEBUG_POINTER(_Dest);
; 148  : 	size_t _Count = (size_t)(_Last - _First);
; 149  : 	_FwdIt _Result = _Dest + _Count;
; 150  : 	if (_Count > 0)
; 151  : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Count * sizeof (*_First), &*_First, _Count * sizeof (*_First));	// NB: non-overlapping move

  00000	03 c0		 add	 eax, eax
  00002	03 c0		 add	 eax, eax
  00004	50		 push	 eax
  00005	51		 push	 ecx
  00006	50		 push	 eax
  00007	52		 push	 edx
  00008	e8 00 00 00 00	 call	 _memmove_s

; 152  : 	return (_Result);

  0000d	8b 44 24 14	 mov	 eax, DWORD PTR __Result$[esp+12]
  00011	83 c4 10	 add	 esp, 16			; 00000010H

; 153  : 	}

  00014	c3		 ret	 0
??$_Uninit_copy@PAPAXPAPAXV?$allocator@PAX@std@@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<void * *,void * *,std::allocator<void *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXU_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXU_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<void * *,unsigned int,void *>, COMDAT
; __First$ = ecx
; __Count$ = eax
; __Val$ = edx

; 3197 : 	for (; 0 < _Count; --_Count, ++_First)

  00000	85 c0		 test	 eax, eax
  00002	76 0e		 jbe	 SHORT $LN1@Fill_n@9
  00004	56		 push	 esi
$LL3@Fill_n@9:

; 3198 : 		*_First = _Val;

  00005	8b 32		 mov	 esi, DWORD PTR [edx]
  00007	89 31		 mov	 DWORD PTR [ecx], esi
  00009	48		 dec	 eax
  0000a	83 c1 04	 add	 ecx, 4
  0000d	85 c0		 test	 eax, eax
  0000f	77 f4		 ja	 SHORT $LL3@Fill_n@9
  00011	5e		 pop	 esi
$LN1@Fill_n@9:

; 3199 : 	}

  00012	c3		 ret	 0
??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXU_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<void * *,unsigned int,void *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@PAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX@Z
_TEXT	SEGMENT
??$_Iter_cat@PAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX@Z PROC ; std::_Iter_cat<void * *>, COMDAT
; ___$ReturnUdt$ = eax

; 953  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 954  : 	return (_Cat);
; 955  : 	}

  00000	c3		 ret	 0
??$_Iter_cat@PAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX@Z ENDP ; std::_Iter_cat<void * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
??$_Copy_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<void * *,void * *,std::random_access_iterator_tag>, COMDAT
; __First$ = ecx
; __Off$ = eax
; __Result$ = esi

; 2699 : 
; 2700 :  #if _HAS_ITERATOR_DEBUGGING
; 2701 : 	_DEBUG_RANGE(_First, _Last);
; 2702 : 	if (_First != _Last)
; 2703 : 		_DEBUG_POINTER(_Dest);
; 2704 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2705 : 
; 2706 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move
; 2707 : 	/* if _OutIt is range checked, this will make sure there is enough space for 
; 2708 : 	 * the memmove
; 2709 : 	 */
; 2710 : 	_OutIt _Result = _Dest - _Off;
; 2711 : 	if (_Off > 0)
; 2712 : 		_CRT_SECURE_MEMMOVE(&*_Result, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

  00000	03 c0		 add	 eax, eax
  00002	03 c0		 add	 eax, eax
  00004	50		 push	 eax
  00005	51		 push	 ecx
  00006	50		 push	 eax
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 _memmove_s
  0000d	83 c4 10	 add	 esp, 16			; 00000010H

; 2713 : 	return _Result;

  00010	8b c6		 mov	 eax, esi

; 2714 : 	}

  00012	c3		 ret	 0
??$_Copy_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<void * *,void * *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAXU_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAXU_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<void * *>, COMDAT
; __It$ = eax

; 1147 : 		return _It;

  00000	8b 00		 mov	 eax, DWORD PTR [eax]

; 1148 : 	}

  00002	c3		 ret	 0
??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAXU_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<void * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Move_cat@PAPAX@std@@YA?AU_Undefined_move_tag@0@ABQAPAX@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Move_cat@PAPAX@std@@YA?AU_Undefined_move_tag@0@ABQAPAX@Z PROC ; std::_Move_cat<void * *>, COMDAT

; 1200 : 	{

  00000	51		 push	 ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Move_cat@PAPAX@std@@YA?AU_Undefined_move_tag@0@ABQAPAX@Z ENDP ; std::_Move_cat<void * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z
_TEXT	SEGMENT
??$_Fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z PROC		; std::_Fill<void * *,void *>, COMDAT
; __First$ = eax
; __Last$ = ecx
; __Val$ = edx

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

  00000	3b c1		 cmp	 eax, ecx
  00002	74 0d		 je	 SHORT $LN1@Fill@8
  00004	56		 push	 esi
$LL3@Fill@8:

; 3159 : 		*_First = _Val;

  00005	8b 32		 mov	 esi, DWORD PTR [edx]
  00007	89 30		 mov	 DWORD PTR [eax], esi
  00009	83 c0 04	 add	 eax, 4
  0000c	3b c1		 cmp	 eax, ecx
  0000e	75 f5		 jne	 SHORT $LL3@Fill@8
  00010	5e		 pop	 esi
$LN1@Fill@8:

; 3160 : 	}

  00011	c3		 ret	 0
??$_Fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z ENDP		; std::_Fill<void * *,void *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<void *> >, COMDAT

; 242  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<void *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Result$ = 8						; size = 4
??$_Copy_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<void * *,void * *,std::random_access_iterator_tag>, COMDAT
; __First$ = ecx
; __Dest$ = edx
; __Off$ = eax

; 2495 : 
; 2496 :  #if _HAS_ITERATOR_DEBUGGING
; 2497 : 	_DEBUG_RANGE(_First, _Last);
; 2498 : 	if (_First != _Last)
; 2499 : 		_DEBUG_POINTER(_Dest);
; 2500 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2501 : 
; 2502 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move
; 2503 : 	// if _OutIt is range checked, this will make sure there is enough space for the memmove
; 2504 : 	_OutIt _Result = _Dest + _Off;
; 2505 : 	if (_Off > 0)
; 2506 : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

  00000	03 c0		 add	 eax, eax
  00002	03 c0		 add	 eax, eax
  00004	50		 push	 eax
  00005	51		 push	 ecx
  00006	50		 push	 eax
  00007	52		 push	 edx
  00008	e8 00 00 00 00	 call	 _memmove_s

; 2507 : 	return _Result;

  0000d	8b 44 24 14	 mov	 eax, DWORD PTR __Result$[esp+12]
  00011	83 c4 10	 add	 esp, 16			; 00000010H

; 2508 : 	}

  00014	c3		 ret	 0
??$_Copy_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<void * *,void * *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAPAXPAPAX@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAX0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
??$_Ptr_cat@PAPAXPAPAX@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAX0@Z PROC ; std::_Ptr_cat<void * *,void * *>, COMDAT

; 1509 : 	{

  00000	51		 push	 ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@PAPAXPAPAX@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAX0@Z ENDP ; std::_Ptr_cat<void * *,void * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PAPAXPAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX0@Z
_TEXT	SEGMENT
??$_Iter_random@PAPAXPAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX0@Z PROC ; std::_Iter_random<void * *,void * *>, COMDAT
; ___$ReturnUdt$ = eax

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);
; 998  : 	}

  00000	c3		 ret	 0
??$_Iter_random@PAPAXPAPAX@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAX0@Z ENDP ; std::_Iter_random<void * *,void * *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAX@Z
_TEXT	SEGMENT
??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAX@Z PROC	; std::_Checked_base<void * *>, COMDAT
; __It$ = eax

; 1164 : 		typename _Checked_iterator_base_helper<_Iter>::_Checked_iterator_base_type_tag _Base_tag;
; 1165 : 		return _Checked_base(_It, _Base_tag);

  00000	8b 00		 mov	 eax, DWORD PTR [eax]

; 1166 : 	}

  00002	c3		 ret	 0
??$_Checked_base@PAPAX@std@@YAPAPAXAAPAPAX@Z ENDP	; std::_Checked_base<void * *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$?0PAX@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z
_TEXT	SEGMENT
??$?0PAX@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><void *>, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

  00000	c3		 ret	 0
??$?0PAX@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAX@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><void *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z
_TEXT	SEGMENT
??$fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z PROC		; std::fill<void * *,void *>, COMDAT
; __First$ = eax
; __Last$ = ecx
; __Val$ = edx

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

  00000	3b c1		 cmp	 eax, ecx
  00002	74 0d		 je	 SHORT $LN11@fill
  00004	56		 push	 esi
$LL13@fill:
  00005	8b 32		 mov	 esi, DWORD PTR [edx]
  00007	89 30		 mov	 DWORD PTR [eax], esi
  00009	83 c0 04	 add	 eax, 4
  0000c	3b c1		 cmp	 eax, ecx
  0000e	75 f5		 jne	 SHORT $LL13@fill
  00010	5e		 pop	 esi
$LN11@fill:

; 3188 : 	}

  00011	c3		 ret	 0
??$fill@PAPAXPAX@std@@YAXPAPAX0ABQAX@Z ENDP		; std::fill<void * *,void *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@@Z
_TEXT	SEGMENT
??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@@Z PROC ; std::_Destroy_range<std::allocator<void *> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAX@std@@@std@@YAXPAPAX0AAV?$allocator@PAX@0@@Z ENDP ; std::_Destroy_range<std::allocator<void *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 129  : 		{	// construct from a related allocator (do nothing)
; 130  : 		}

  00000	c3		 ret	 0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$unchecked_copy@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z
_TEXT	SEGMENT
??$unchecked_copy@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z PROC ; stdext::unchecked_copy<void * *,void * *>, COMDAT
; __First$ = edi
; __Last$ = eax
; __Dest$ = edx

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

  00000	2b c7		 sub	 eax, edi
  00002	c1 f8 02	 sar	 eax, 2
  00005	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000c	56		 push	 esi
  0000d	8d 34 11	 lea	 esi, DWORD PTR [ecx+edx]
  00010	85 c0		 test	 eax, eax
  00012	7e 0c		 jle	 SHORT $LN18@unchecked_@9
  00014	51		 push	 ecx
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _memmove_s
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
$LN18@unchecked_@9:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi

; 3607 : 	}

  00023	c3		 ret	 0
??$unchecked_copy@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z ENDP ; stdext::unchecked_copy<void * *,void * *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAX@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAX@std@@QBEIXZ PROC		; std::allocator<void *>::max_size, COMDAT

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 167  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAX@std@@QBEIXZ ENDP		; std::allocator<void *>::max_size
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAX@std@@QAEXPAPAXI@Z
_TEXT	SEGMENT
?deallocate@?$allocator@PAX@std@@QAEXPAPAXI@Z PROC	; std::allocator<void *>::deallocate, COMDAT
; __Ptr$ = eax

; 140  : 		::operator delete(_Ptr);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00006	59		 pop	 ecx

; 141  : 		}

  00007	c3		 ret	 0
?deallocate@?$allocator@PAX@std@@QAEXPAPAXI@Z ENDP	; std::allocator<void *>::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAX@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@PAX@std@@QAE@ABV01@@Z PROC		; std::allocator<void *>::allocator<void *>, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

  00000	c3		 ret	 0
??0?$allocator@PAX@std@@QAE@ABV01@@Z ENDP		; std::allocator<void *>::allocator<void *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXPAPAX0@Z
_TEXT	SEGMENT
?_Destroy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXPAPAX0@Z PROC ; std::vector<void *,std::allocator<void *> >::_Destroy, COMDAT

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

  00000	c3		 ret	 0
?_Destroy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXPAPAX0@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Destroy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ PROC ; std::vector<void *,std::allocator<void *> >::max_size, COMDAT

; 731  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 732  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ ENDP ; std::vector<void *,std::allocator<void *> >::max_size
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::deallocate, COMDAT
; __Ptr$ = eax

; 140  : 		::operator delete(_Ptr);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00006	59		 pop	 ecx

; 141  : 		}

  00007	c3		 ret	 0
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::deallocate
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

  00000	c3		 ret	 0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$allocator@PAX@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAX@std@@QAE@XZ PROC			; std::allocator<void *>::allocator<void *>, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

  00000	c3		 ret	 0
??0?$allocator@PAX@std@@QAE@XZ ENDP			; std::allocator<void *>::allocator<void *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXXZ PROC ; std::vector<void *,std::allocator<void *> >::_Tidy, COMDAT

; 1124 : 		if (_Myfirst != 0)

  00000	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN4@Tidy@8

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$LN4@Tidy@8:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00012	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, 0
  0001c	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, 0
  00026	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20, 0

; 1135 : 		}

  00030	c3		 ret	 0
?_Tidy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXXZ ENDP ; std::vector<void *,std::allocator<void *> >::_Tidy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ PROC ; std::vector<void *,std::allocator<void *> >::capacity, COMDAT

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00006	85 c9		 test	 ecx, ecx
  00008	75 03		 jne	 SHORT $LN3@capacity@8
  0000a	33 c0		 xor	 eax, eax

; 636  : 		}

  0000c	c3		 ret	 0
$LN3@capacity@8:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000d	a1 14 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 02	 sar	 eax, 2

; 636  : 		}

  00017	c3		 ret	 0
?capacity@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ ENDP ; std::vector<void *,std::allocator<void *> >::capacity
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = eax

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

  00000	c3		 ret	 0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ PROC ; std::vector<void *,std::allocator<void *> >::size, COMDAT

; 726  : 		return (_Mylast - _Myfirst);

  00000	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00005	2b 05 0c 00 00
	00		 sub	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  0000b	c1 f8 02	 sar	 eax, 2

; 727  : 		}

  0000e	c3		 ret	 0
?size@?$vector@PAXV?$allocator@PAX@std@@@std@@QBEIXZ ENDP ; std::vector<void *,std::allocator<void *> >::size
_TEXT	ENDS
PUBLIC	?CountSetBits@@YAKK@Z				; CountSetBits
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
;	COMDAT ?CountSetBits@@YAKK@Z
_TEXT	SEGMENT
tv95 = -4						; size = 4
?CountSetBits@@YAKK@Z PROC				; CountSetBits, COMDAT
; _bitMask$ = edx

; 1558 : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	55		 push	 ebp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1559 :     DWORD LSHIFT = sizeof(ULONG_PTR)*8 - 1;
; 1560 :     DWORD bitSetCount = 0;

  00005	33 c0		 xor	 eax, eax
  00007	33 db		 xor	 ebx, ebx
  00009	33 ff		 xor	 edi, edi

; 1561 :     ULONG_PTR bitTest = (ULONG_PTR)1 << LSHIFT;    

  0000b	b9 00 00 00 80	 mov	 ecx, -2147483648	; 80000000H
  00010	33 f6		 xor	 esi, esi
  00012	c7 44 24 10 08
	00 00 00	 mov	 DWORD PTR tv95[esp+20], 8
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL3@CountSetBi:

; 1562 :     DWORD i;
; 1563 :     
; 1564 :     for (i = 0; i <= LSHIFT; ++i)
; 1565 :     {
; 1566 :         bitSetCount += ((bitMask & bitTest)?1:0);

  00020	8b e9		 mov	 ebp, ecx
  00022	23 ea		 and	 ebp, edx
  00024	f7 dd		 neg	 ebp
  00026	1b ed		 sbb	 ebp, ebp
  00028	f7 dd		 neg	 ebp
  0002a	03 c5		 add	 eax, ebp

; 1567 :         bitTest/=2;

  0002c	d1 e9		 shr	 ecx, 1
  0002e	8b e9		 mov	 ebp, ecx
  00030	23 ea		 and	 ebp, edx
  00032	f7 dd		 neg	 ebp
  00034	1b ed		 sbb	 ebp, ebp
  00036	f7 dd		 neg	 ebp
  00038	03 f5		 add	 esi, ebp
  0003a	d1 e9		 shr	 ecx, 1
  0003c	8b e9		 mov	 ebp, ecx
  0003e	23 ea		 and	 ebp, edx
  00040	f7 dd		 neg	 ebp
  00042	1b ed		 sbb	 ebp, ebp
  00044	f7 dd		 neg	 ebp
  00046	03 fd		 add	 edi, ebp
  00048	d1 e9		 shr	 ecx, 1
  0004a	8b e9		 mov	 ebp, ecx
  0004c	23 ea		 and	 ebp, edx
  0004e	f7 dd		 neg	 ebp
  00050	1b ed		 sbb	 ebp, ebp
  00052	f7 dd		 neg	 ebp
  00054	03 dd		 add	 ebx, ebp
  00056	d1 e9		 shr	 ecx, 1
  00058	83 6c 24 10 01	 sub	 DWORD PTR tv95[esp+20], 1
  0005d	75 c1		 jne	 SHORT $LL3@CountSetBi
  0005f	03 df		 add	 ebx, edi
  00061	5f		 pop	 edi
  00062	03 de		 add	 ebx, esi
  00064	5e		 pop	 esi
  00065	5d		 pop	 ebp
  00066	03 c3		 add	 eax, ebx
  00068	5b		 pop	 ebx

; 1568 :     }
; 1569 : 
; 1570 :     return bitSetCount;
; 1571 : }

  00069	59		 pop	 ecx
  0006a	c3		 ret	 0
?CountSetBits@@YAKK@Z ENDP				; CountSetBits
_TEXT	ENDS
PUBLIC	?DriverTypeName@@YAPADK@Z			; DriverTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?DriverTypeName@@YAPADK@Z
_TEXT	SEGMENT
?DriverTypeName@@YAPADK@Z PROC				; DriverTypeName, COMDAT
; _driverType$ = eax

; 1441 :     switch(driverType)

  00000	48		 dec	 eax
  00001	83 f8 05	 cmp	 eax, 5
  00004	77 2b		 ja	 SHORT $LN1@DriverType
  00006	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@DriverType[eax*4]
$LN7@DriverType:

; 1442 :     {
; 1443 :     case DRIVE_NO_ROOT_DIR:
; 1444 :         return "NoRootDir";

  0000d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_09MOKIPJGJ@NoRootDir?$AA@

; 1458 :     }
; 1459 : }

  00012	c3		 ret	 0
$LN6@DriverType:

; 1445 :     case DRIVE_REMOVABLE:
; 1446 :         return "Removable";

  00013	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_09DADBKOHO@Removable?$AA@

; 1458 :     }
; 1459 : }

  00018	c3		 ret	 0
$LN5@DriverType:

; 1447 :     case DRIVE_FIXED:
; 1448 :         return "Fixed";

  00019	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05OCBIINAK@Fixed?$AA@

; 1458 :     }
; 1459 : }

  0001e	c3		 ret	 0
$LN4@DriverType:

; 1449 :     case DRIVE_REMOTE:
; 1450 :         return "Remote";

  0001f	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06MHHFENDB@Remote?$AA@

; 1458 :     }
; 1459 : }

  00024	c3		 ret	 0
$LN3@DriverType:

; 1451 :     case DRIVE_CDROM:
; 1452 :         return "CDRom";

  00025	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05JIFOIGMJ@CDRom?$AA@

; 1458 :     }
; 1459 : }

  0002a	c3		 ret	 0
$LN2@DriverType:

; 1453 :     case DRIVE_RAMDISK:
; 1454 :         return "RamDisk";

  0002b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07CPJGKNJN@RamDisk?$AA@

; 1458 :     }
; 1459 : }

  00030	c3		 ret	 0
$LN1@DriverType:

; 1455 :     case DRIVE_UNKNOWN:
; 1456 :     default:
; 1457 :         return "Unknown";

  00031	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07NBCGADJA@Unknown?$AA@

; 1458 :     }
; 1459 : }

  00036	c3		 ret	 0
  00037	90		 npad	 1
$LN12@DriverType:
  00038	00 00 00 00	 DD	 $LN7@DriverType
  0003c	00 00 00 00	 DD	 $LN6@DriverType
  00040	00 00 00 00	 DD	 $LN5@DriverType
  00044	00 00 00 00	 DD	 $LN4@DriverType
  00048	00 00 00 00	 DD	 $LN3@DriverType
  0004c	00 00 00 00	 DD	 $LN2@DriverType
?DriverTypeName@@YAPADK@Z ENDP				; DriverTypeName
_TEXT	ENDS
PUBLIC	__real@412e848000000000
PUBLIC	__real@00000000
PUBLIC	?ProcessorSpeedCalc@@YAMXZ			; ProcessorSpeedCalc
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+006
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?ProcessorSpeedCalc@@YAMXZ
_TEXT	SEGMENT
tv84 = -44						; size = 4
_nCtrStop$ = -44					; size = 8
_nCtr$ = -36						; size = 8
_nFreq$ = -28						; size = 8
_cyclesStop$ = -20					; size = 8
_cyclesStart$ = -12					; size = 8
?ProcessorSpeedCalc@@YAMXZ PROC				; ProcessorSpeedCalc, COMDAT

; 1237 : {

  00000	83 ec 30	 sub	 esp, 48			; 00000030H

; 1238 :     /*
; 1239 :     RdTSC: It's the Pentium instruction "ReaD Time Stamp Counter". It measures the
; 1240 :     number of clock cycles that have passed since the processor was reset, as a
; 1241 :     64-bit number. That's what the _emit lines do.*/
; 1242 :     #define RdTSC __asm _emit 0x0f __asm _emit 0x31
; 1243 : 
; 1244 :     //variables for the clock-cycles
; 1245 :     __int64 cyclesStart = 0, cyclesStop = 0;

  00003	33 c0		 xor	 eax, eax
  00005	89 44 24 24	 mov	 DWORD PTR _cyclesStart$[esp+48], eax
  00009	89 44 24 28	 mov	 DWORD PTR _cyclesStart$[esp+52], eax
  0000d	89 44 24 1c	 mov	 DWORD PTR _cyclesStop$[esp+48], eax
  00011	89 44 24 20	 mov	 DWORD PTR _cyclesStop$[esp+52], eax

; 1246 : 
; 1247 :     //variables for the High-Res Preformance Counter
; 1248 :     unsigned __int64 nCtr = 0, nFreq = 0, nCtrStop = 0;

  00015	89 44 24 0c	 mov	 DWORD PTR _nCtr$[esp+48], eax
  00019	89 44 24 10	 mov	 DWORD PTR _nCtr$[esp+52], eax
  0001d	89 44 24 14	 mov	 DWORD PTR _nFreq$[esp+48], eax
  00021	89 44 24 18	 mov	 DWORD PTR _nFreq$[esp+52], eax
  00025	89 44 24 04	 mov	 DWORD PTR _nCtrStop$[esp+48], eax
  00029	89 44 24 08	 mov	 DWORD PTR _nCtrStop$[esp+52], eax
  0002d	56		 push	 esi

; 1249 : 
; 1250 :     //retrieve performance-counter frequency per second
; 1251 :     if(!QueryPerformanceFrequency((LARGE_INTEGER *) &nFreq))

  0002e	8d 44 24 18	 lea	 eax, DWORD PTR _nFreq$[esp+52]
  00032	50		 push	 eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceFrequency@4
  00039	85 c0		 test	 eax, eax
  0003b	75 07		 jne	 SHORT $LN4@ProcessorS

; 1252 :         return 0;

  0003d	d9 ee		 fldz

; 1283 : }

  0003f	5e		 pop	 esi
  00040	83 c4 30	 add	 esp, 48			; 00000030H
  00043	c3		 ret	 0
$LN4@ProcessorS:

; 1253 : 
; 1254 :     //retrieve the current value of the performance counter
; 1255 :     QueryPerformanceCounter((LARGE_INTEGER *) &nCtrStop);

  00044	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__QueryPerformanceCounter@4
  0004a	8d 4c 24 08	 lea	 ecx, DWORD PTR _nCtrStop$[esp+52]
  0004e	51		 push	 ecx
  0004f	ff d6		 call	 esi

; 1256 : 
; 1257 :     //add the frequency to the counter-value
; 1258 :     nCtrStop += nFreq;

  00051	8b 54 24 18	 mov	 edx, DWORD PTR _nFreq$[esp+52]
  00055	01 54 24 08	 add	 DWORD PTR _nCtrStop$[esp+52], edx
  00059	8b 44 24 1c	 mov	 eax, DWORD PTR _nFreq$[esp+56]
  0005d	11 44 24 0c	 adc	 DWORD PTR _nCtrStop$[esp+56], eax

; 1261 :     {
; 1262 :         //retrieve the clock-cycles for the start value
; 1263 :         RdTSC

  00061	0f		 DB	 15			; 0000000fH
  00062	31		 DB	 49			; 00000031H

; 1264 :         mov DWORD PTR cyclesStart, eax

  00063	89 44 24 28	 mov	 DWORD PTR _cyclesStart$[esp+52], eax

; 1265 :         mov DWORD PTR [cyclesStart + 4], edx

  00067	89 54 24 2c	 mov	 DWORD PTR _cyclesStart$[esp+56], edx
  0006b	eb 03 8d 49 00	 npad	 5

; 1259 : 
; 1260 :     _asm

$LL3@ProcessorS:

; 1266 :     }
; 1267 : 
; 1268 :     do{
; 1269 :         //retrieve the value of the performance counter until 1 sec has gone by
; 1270 :         QueryPerformanceCounter((LARGE_INTEGER *)&nCtr);

  00070	8d 4c 24 10	 lea	 ecx, DWORD PTR _nCtr$[esp+52]
  00074	51		 push	 ecx
  00075	ff d6		 call	 esi

; 1271 :     }while (nCtr < nCtrStop);

  00077	8b 54 24 14	 mov	 edx, DWORD PTR _nCtr$[esp+56]
  0007b	3b 54 24 0c	 cmp	 edx, DWORD PTR _nCtrStop$[esp+56]
  0007f	72 ef		 jb	 SHORT $LL3@ProcessorS
  00081	77 0a		 ja	 SHORT $LN8@ProcessorS
  00083	8b 44 24 10	 mov	 eax, DWORD PTR _nCtr$[esp+52]
  00087	3b 44 24 08	 cmp	 eax, DWORD PTR _nCtrStop$[esp+52]
  0008b	72 e3		 jb	 SHORT $LL3@ProcessorS
$LN8@ProcessorS:

; 1272 : 
; 1273 :     _asm 
; 1274 :     {
; 1275 :         //retrieve again the clock-cycles after 1 sec has gone by
; 1276 :         RdTSC

  0008d	0f		 DB	 15			; 0000000fH
  0008e	31		 DB	 49			; 00000031H

; 1277 :         mov DWORD PTR cyclesStop, eax

  0008f	89 44 24 20	 mov	 DWORD PTR _cyclesStop$[esp+52], eax

; 1278 :         mov DWORD PTR [cyclesStop + 4], edx

  00093	89 54 24 24	 mov	 DWORD PTR _cyclesStop$[esp+56], edx

; 1279 :     }
; 1280 : 
; 1281 :     //stop-start is speed in Hz divided by 1,000,000 is speed in MHz
; 1282 :     return	((float)cyclesStop-(float)cyclesStart) / MHz;

  00097	df 6c 24 20	 fild	 QWORD PTR _cyclesStop$[esp+52]
  0009b	df 6c 24 28	 fild	 QWORD PTR _cyclesStart$[esp+52]

; 1283 : }

  0009f	5e		 pop	 esi
  000a0	de e9		 fsubp	 ST(1), ST(0)
  000a2	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@412e848000000000
  000a8	d9 5c 24 04	 fstp	 DWORD PTR tv84[esp+48]
  000ac	d9 44 24 04	 fld	 DWORD PTR tv84[esp+48]
  000b0	83 c4 30	 add	 esp, 48			; 00000030H
  000b3	c3		 ret	 0
?ProcessorSpeedCalc@@YAMXZ ENDP				; ProcessorSpeedCalc
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@408f400000000000
PUBLIC	?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z		; CalcElapsedTime
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z
_TEXT	SEGMENT
tv140 = 8						; size = 8
tv137 = 8						; size = 8
tv135 = 8						; size = 4
tv80 = 8						; size = 4
tv78 = 8						; size = 8
_tickStart$ = 8						; size = 8
tv67 = 16						; size = 2
_timeElapsed$ = 16					; size = 4
_seconds$ = 20						; size = 4
?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z PROC		; CalcElapsedTime, COMDAT
; _tickEnd$ = esi

; 636  :     tickEnd = SysTick;

  00000	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 637  :     timeElapsed = (float)(tickEnd-tickStart)/SECOND;

  00006	8b c8		 mov	 ecx, eax
  00008	89 06		 mov	 DWORD PTR [esi], eax
  0000a	33 d2		 xor	 edx, edx
  0000c	2b 4c 24 04	 sub	 ecx, DWORD PTR _tickStart$[esp-4]
  00010	8b c2		 mov	 eax, edx
  00012	1b 44 24 08	 sbb	 eax, DWORD PTR _tickStart$[esp]
  00016	89 4c 24 04	 mov	 DWORD PTR tv140[esp-4], ecx
  0001a	8b c8		 mov	 ecx, eax
  0001c	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  00021	89 44 24 08	 mov	 DWORD PTR tv140[esp], eax
  00025	df 6c 24 04	 fild	 QWORD PTR tv140[esp-4]
  00029	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  0002f	89 54 24 04	 mov	 DWORD PTR tv137[esp-4], edx
  00033	89 4c 24 08	 mov	 DWORD PTR tv137[esp], ecx
  00037	df 6c 24 04	 fild	 QWORD PTR tv137[esp-4]

; 638  :     seconds = (unsigned long)(timeElapsed+0.5);

  0003b	8b 4c 24 10	 mov	 ecx, DWORD PTR _seconds$[esp-4]
  0003f	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00042	8b 54 24 0c	 mov	 edx, DWORD PTR _timeElapsed$[esp-4]
  00046	d9 7c 24 0c	 fnstcw	 WORD PTR tv67[esp-4]
  0004a	d9 e0		 fchs
  0004c	0f b7 44 24 0c	 movzx	 eax, WORD PTR tv67[esp-4]
  00051	de c1		 faddp	 ST(1), ST(0)
  00053	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00058	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@408f400000000000
  0005e	d9 5c 24 04	 fstp	 DWORD PTR tv135[esp-4]
  00062	d9 44 24 04	 fld	 DWORD PTR tv135[esp-4]
  00066	d9 12		 fst	 DWORD PTR [edx]
  00068	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fe0000000000000
  0006e	89 44 24 04	 mov	 DWORD PTR tv80[esp-4], eax
  00072	d9 6c 24 04	 fldcw	 WORD PTR tv80[esp-4]
  00076	df 7c 24 04	 fistp	 QWORD PTR tv78[esp-4]
  0007a	8b 44 24 04	 mov	 eax, DWORD PTR tv78[esp-4]
  0007e	89 01		 mov	 DWORD PTR [ecx], eax
  00080	d9 6c 24 0c	 fldcw	 WORD PTR tv67[esp-4]

; 639  : }

  00084	c3		 ret	 0
?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ENDP		; CalcElapsedTime
_TEXT	ENDS
PUBLIC	?WideStrToMultiStr@@YAPADPA_W@Z			; WideStrToMultiStr
; Function compile flags: /Ogtpy
;	COMDAT ?WideStrToMultiStr@@YAPADPA_W@Z
_TEXT	SEGMENT
?WideStrToMultiStr@@YAPADPA_W@Z PROC			; WideStrToMultiStr, COMDAT
; _WideStr$ = ebx

; 584  : {

  00000	55		 push	 ebp

; 585  :     ULONG nBytes;
; 586  :     PCHAR MultiStr;
; 587  : 
; 588  :     // Get the length of the converted string
; 589  :     //
; 590  :     nBytes = WideCharToMultiByte(
; 591  :                  CP_ACP,
; 592  :                  0,
; 593  :                  WideStr,
; 594  :                  -1,
; 595  :                  NULL,
; 596  :                  0,
; 597  :                  NULL,
; 598  :                  NULL);

  00001	8b 2d 00 00 00
	00		 mov	 ebp, DWORD PTR __imp__WideCharToMultiByte@32
  00007	56		 push	 esi
  00008	6a 00		 push	 0
  0000a	6a 00		 push	 0
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	6a ff		 push	 -1
  00012	53		 push	 ebx
  00013	6a 00		 push	 0
  00015	6a 00		 push	 0
  00017	ff d5		 call	 ebp
  00019	8b f0		 mov	 esi, eax

; 599  : 
; 600  :     if (nBytes == 0)

  0001b	85 f6		 test	 esi, esi
  0001d	75 03		 jne	 SHORT $LN3@WideStrToM
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp

; 629  : }

  00021	c3		 ret	 0
$LN3@WideStrToM:
  00022	57		 push	 edi

; 601  :     {
; 602  :         return NULL;
; 603  :     }
; 604  : 
; 605  :     // Allocate space to hold the converted string
; 606  :     //
; 607  :     MultiStr = (char *)malloc(nBytes);

  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 _malloc
  00029	8b f8		 mov	 edi, eax
  0002b	83 c4 04	 add	 esp, 4

; 608  :     if(MultiStr)

  0002e	85 ff		 test	 edi, edi
  00030	74 1e		 je	 SHORT $LN1@WideStrToM

; 609  :     {
; 610  :         // Convert the string
; 611  :         //
; 612  :         nBytes = WideCharToMultiByte(
; 613  :                      CP_ACP,
; 614  :                      0,
; 615  :                      WideStr,
; 616  :                      -1,
; 617  :                      MultiStr,
; 618  :                      nBytes,
; 619  :                      NULL,
; 620  :                      NULL);

  00032	6a 00		 push	 0
  00034	6a 00		 push	 0
  00036	56		 push	 esi
  00037	57		 push	 edi
  00038	6a ff		 push	 -1
  0003a	53		 push	 ebx
  0003b	6a 00		 push	 0
  0003d	6a 00		 push	 0
  0003f	ff d5		 call	 ebp

; 621  : 
; 622  :         if (nBytes == 0)

  00041	85 c0		 test	 eax, eax
  00043	75 0b		 jne	 SHORT $LN1@WideStrToM

; 623  :         {
; 624  :             free(MultiStr);

  00045	57		 push	 edi
  00046	e8 00 00 00 00	 call	 _free
  0004b	83 c4 04	 add	 esp, 4

; 625  :             MultiStr = NULL;

  0004e	33 ff		 xor	 edi, edi
$LN1@WideStrToM:

; 626  :         }
; 627  :     }
; 628  :     return MultiStr;

  00050	8b c7		 mov	 eax, edi
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp

; 629  : }

  00055	c3		 ret	 0
?WideStrToMultiStr@@YAPADPA_W@Z ENDP			; WideStrToMultiStr
_TEXT	ENDS
PUBLIC	?GUID2Str@@YAPADPAU_GUID@@PADI@Z		; GUID2Str
; Function compile flags: /Ogtpy
;	COMDAT ?GUID2Str@@YAPADPAU_GUID@@PADI@Z
_TEXT	SEGMENT
?GUID2Str@@YAPADPAU_GUID@@PADI@Z PROC			; GUID2Str, COMDAT
; _lpGuid$ = edi
; _lpStr$ = esi

; 409  :     if(!lpGuid || !lpStr)

  00000	85 ff		 test	 edi, edi
  00002	0f 84 11 01 00
	00		 je	 $LN5@GUID2Str
  00008	85 f6		 test	 esi, esi
  0000a	0f 84 09 01 00
	00		 je	 $LN5@GUID2Str
  00010	53		 push	 ebx

; 412  :     }
; 413  : 
; 414  :     if(maxLenght<50)
; 415  :     {
; 416  :         return NULL;
; 417  :     }
; 418  : 
; 419  :     LPBYTE data = NULL;
; 420  :     int x = 0, i = 0;
; 421  : 
; 422  :     lpStr[x++] = '{';

  00011	c6 06 7b	 mov	 BYTE PTR [esi], 123	; 0000007bH

; 423  :     data = (LPBYTE)&lpGuid->Data1;
; 424  : 
; 425  :     //cChar = ((*(lpBufBin+ulIndex)) >> 4) & 0x0f;
; 426  :     //*(lpszBufStr+2*ulIndex) = cChar + 0x30;
; 427  :     //cChar = (*(lpBufBin+ulIndex)) & 0x0f;
; 428  :     //*(lpszBufStr+2*ulIndex+1) = cChar + 0x30;
; 429  : 
; 430  :     sprintf(&lpStr[x],"%.2X",data[3]);

  00014	0f b6 47 03	 movzx	 eax, BYTE PTR [edi+3]
  00018	55		 push	 ebp
  00019	50		 push	 eax
  0001a	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  00022	51		 push	 ecx
  00023	e8 00 00 00 00	 call	 _sprintf

; 431  :     x += 2;
; 432  :     sprintf(&lpStr[x],"%.2X",data[2]);

  00028	0f b6 57 02	 movzx	 edx, BYTE PTR [edi+2]
  0002c	52		 push	 edx
  0002d	8d 46 03	 lea	 eax, DWORD PTR [esi+3]
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _sprintf

; 433  :     x += 2;
; 434  :     sprintf(&lpStr[x],"%.2X",data[1]);

  0003b	0f b6 4f 01	 movzx	 ecx, BYTE PTR [edi+1]
  0003f	51		 push	 ecx
  00040	8d 56 05	 lea	 edx, DWORD PTR [esi+5]
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  00048	52		 push	 edx
  00049	e8 00 00 00 00	 call	 _sprintf

; 435  :     x += 2;
; 436  :     sprintf(&lpStr[x],"%.2X",data[0]);

  0004e	0f b6 07	 movzx	 eax, BYTE PTR [edi]
  00051	50		 push	 eax
  00052	8d 4e 07	 lea	 ecx, DWORD PTR [esi+7]
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 _sprintf

; 437  :     x += 2;
; 438  :     lpStr[x++] = '-';

  00060	b3 2d		 mov	 bl, 45			; 0000002dH
  00062	88 5e 09	 mov	 BYTE PTR [esi+9], bl

; 439  : 
; 440  :     data = (LPBYTE)&lpGuid->Data2;
; 441  :     sprintf(&lpStr[x],"%.2X",data[1]);

  00065	0f b6 57 05	 movzx	 edx, BYTE PTR [edi+5]
  00069	52		 push	 edx
  0006a	8d 46 0a	 lea	 eax, DWORD PTR [esi+10]
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 _sprintf

; 442  :     x += 2;
; 443  :     sprintf(&lpStr[x],"%.2X",data[0]);

  00078	0f b6 4f 04	 movzx	 ecx, BYTE PTR [edi+4]
  0007c	51		 push	 ecx
  0007d	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 _sprintf

; 444  :     x += 2;
; 445  :     lpStr[x++] = '-';

  0008b	88 5e 0e	 mov	 BYTE PTR [esi+14], bl

; 446  : 
; 447  :     data = (LPBYTE)&lpGuid->Data3;
; 448  :     sprintf(&lpStr[x],"%.2X",data[1]);

  0008e	0f b6 47 07	 movzx	 eax, BYTE PTR [edi+7]
  00092	83 c4 48	 add	 esp, 72			; 00000048H
  00095	50		 push	 eax
  00096	8d 4e 0f	 lea	 ecx, DWORD PTR [esi+15]
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  0009e	51		 push	 ecx
  0009f	e8 00 00 00 00	 call	 _sprintf

; 449  :     x += 2;
; 450  :     sprintf(&lpStr[x],"%.2X",data[0]);

  000a4	0f b6 57 06	 movzx	 edx, BYTE PTR [edi+6]
  000a8	52		 push	 edx
  000a9	8d 46 11	 lea	 eax, DWORD PTR [esi+17]
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 _sprintf

; 451  :     x += 2;
; 452  :     lpStr[x++] = '-';

  000b7	88 5e 13	 mov	 BYTE PTR [esi+19], bl

; 453  : 
; 454  :     sprintf(&lpStr[x],"%.2X",lpGuid->Data4[0]);

  000ba	0f b6 4f 08	 movzx	 ecx, BYTE PTR [edi+8]
  000be	51		 push	 ecx
  000bf	8d 56 14	 lea	 edx, DWORD PTR [esi+20]
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  000c7	52		 push	 edx
  000c8	e8 00 00 00 00	 call	 _sprintf

; 455  :     x += 2;
; 456  :     sprintf(&lpStr[x],"%.2X",lpGuid->Data4[1]);

  000cd	0f b6 47 09	 movzx	 eax, BYTE PTR [edi+9]
  000d1	50		 push	 eax
  000d2	8d 4e 16	 lea	 ecx, DWORD PTR [esi+22]
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 _sprintf

; 457  :     x += 2;
; 458  :     lpStr[x++] = '-';

  000e0	88 5e 18	 mov	 BYTE PTR [esi+24], bl
  000e3	83 c4 30	 add	 esp, 48			; 00000030H
  000e6	bd 19 00 00 00	 mov	 ebp, 25			; 00000019H

; 459  : 
; 460  :     for(i=2;i<8;i++)

  000eb	bb 02 00 00 00	 mov	 ebx, 2
$LL3@GUID2Str:

; 461  :     {
; 462  :         sprintf(&lpStr[x],"%.2X",lpGuid->Data4[i]);

  000f0	0f b6 54 1f 08	 movzx	 edx, BYTE PTR [edi+ebx+8]
  000f5	52		 push	 edx
  000f6	8d 04 2e	 lea	 eax, DWORD PTR [esi+ebp]
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_04CFJMJGDJ@?$CF?42X?$AA@
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 _sprintf
  00104	43		 inc	 ebx
  00105	83 c4 0c	 add	 esp, 12			; 0000000cH

; 463  :         x += 2;

  00108	83 c5 02	 add	 ebp, 2
  0010b	83 fb 08	 cmp	 ebx, 8
  0010e	7c e0		 jl	 SHORT $LL3@GUID2Str

; 464  :     }
; 465  :     lpStr[x++] = '}';

  00110	c6 04 2e 7d	 mov	 BYTE PTR [esi+ebp], 125	; 0000007dH
  00114	5d		 pop	 ebp

; 466  : 
; 467  :     return lpStr;

  00115	8b c6		 mov	 eax, esi
  00117	5b		 pop	 ebx

; 468  : }

  00118	c3		 ret	 0
$LN5@GUID2Str:

; 410  :     {
; 411  :         return NULL;

  00119	33 c0		 xor	 eax, eax

; 468  : }

  0011b	c3		 ret	 0
?GUID2Str@@YAPADPAU_GUID@@PADI@Z ENDP			; GUID2Str
_TEXT	ENDS
PUBLIC	?GetLastErrorMessage@@YAPADKPADK@Z		; GetLastErrorMessage
; Function compile flags: /Ogtpy
;	COMDAT ?GetLastErrorMessage@@YAPADKPADK@Z
_TEXT	SEGMENT
_nSize$ = 8						; size = 4
?GetLastErrorMessage@@YAPADKPADK@Z PROC			; GetLastErrorMessage, COMDAT
; _dwLastError$ = ebx
; _lpBuffer$ = esi

; 307  : {

  00000	55		 push	 ebp

; 308  :     HMODULE hModule = NULL; //default to system source
; 309  : 
; 310  :     DWORD dwFormatFlags = FORMAT_MESSAGE_IGNORE_INSERTS |
; 311  :                           FORMAT_MESSAGE_FROM_SYSTEM;
; 312  : 
; 313  :     //if dwErrorCode is in the network range, load the message source.
; 314  :     if ((dwLastError >= NERR_BASE) && (dwLastError <= MAX_NERR))

  00001	8d 83 cc f7 ff
	ff		 lea	 eax, DWORD PTR [ebx-2100]
  00007	33 ed		 xor	 ebp, ebp
  00009	57		 push	 edi
  0000a	bf 00 12 00 00	 mov	 edi, 4608		; 00001200H
  0000f	3d 83 03 00 00	 cmp	 eax, 899		; 00000383H
  00014	77 19		 ja	 SHORT $LN13@GetLastErr

; 315  :         hModule = LoadLibraryEx("netmsg.dll", NULL, LOAD_LIBRARY_AS_DATAFILE);

  00016	6a 02		 push	 2
  00018	55		 push	 ebp
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExA@12
  00024	8b e8		 mov	 ebp, eax

; 316  : 
; 317  :     if (hModule != NULL)

  00026	85 ed		 test	 ebp, ebp
  00028	74 05		 je	 SHORT $LN13@GetLastErr

; 318  :         dwFormatFlags |= FORMAT_MESSAGE_FROM_HMODULE;

  0002a	bf 00 1a 00 00	 mov	 edi, 6656		; 00001a00H
$LN13@GetLastErr:

; 319  : 
; 320  :     //call FormatMessage() to allow for message text to be acquired
; 321  :     //from the system or from the supplied module handle.
; 322  :     if (FormatMessage(dwFormatFlags, hModule, dwLastError,
; 323  :                       MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), //default language
; 324  :                       lpBuffer, nSize, NULL))

  0002f	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nSize$[esp+4]
  00033	6a 00		 push	 0
  00035	51		 push	 ecx
  00036	56		 push	 esi
  00037	68 00 04 00 00	 push	 1024			; 00000400H
  0003c	53		 push	 ebx
  0003d	55		 push	 ebp
  0003e	57		 push	 edi
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  00045	85 c0		 test	 eax, eax
  00047	74 29		 je	 SHORT $LN5@GetLastErr

; 325  : 	{
; 326  : 		if(strlen(lpBuffer) > 2)

  00049	8b c6		 mov	 eax, esi
  0004b	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0004e	8b ff		 npad	 2
$LL10@GetLastErr:
  00050	8a 08		 mov	 cl, BYTE PTR [eax]
  00052	40		 inc	 eax
  00053	84 c9		 test	 cl, cl
  00055	75 f9		 jne	 SHORT $LL10@GetLastErr
  00057	2b c2		 sub	 eax, edx
  00059	83 f8 02	 cmp	 eax, 2
  0005c	76 14		 jbe	 SHORT $LN5@GetLastErr

; 327  : 			lpBuffer[strlen(lpBuffer) - 2] = NULL;	//over-write the newline char

  0005e	8b c6		 mov	 eax, esi
  00060	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL11@GetLastErr:
  00063	8a 08		 mov	 cl, BYTE PTR [eax]
  00065	40		 inc	 eax
  00066	84 c9		 test	 cl, cl
  00068	75 f9		 jne	 SHORT $LL11@GetLastErr
  0006a	2b c2		 sub	 eax, edx
  0006c	88 4c 30 fe	 mov	 BYTE PTR [eax+esi-2], cl

; 328  : 		else

  00070	eb 03		 jmp	 SHORT $LN2@GetLastErr
$LN5@GetLastErr:

; 329  : 			lpBuffer[0] = NULL;						//set first char to null
; 330  : 	}
; 331  : 	else
; 332  : 	{
; 333  : 		//set first char to null
; 334  : 		lpBuffer[0] = NULL;

  00072	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN2@GetLastErr:

; 335  : 	}
; 336  : 
; 337  :     //if we loaded a message source, unload it.
; 338  :     if (hModule != NULL)

  00075	85 ed		 test	 ebp, ebp
  00077	74 07		 je	 SHORT $LN12@GetLastErr

; 339  :         FreeLibrary(hModule);

  00079	55		 push	 ebp
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN12@GetLastErr:
  00080	5f		 pop	 edi

; 340  : 
; 341  : 	return lpBuffer;

  00081	8b c6		 mov	 eax, esi
  00083	5d		 pop	 ebp

; 342  : }

  00084	c3		 ret	 0
?GetLastErrorMessage@@YAPADKPADK@Z ENDP			; GetLastErrorMessage
_TEXT	ENDS
PUBLIC	_message$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?DebugStringToFile@@YAXPADH@Z			; DebugStringToFile
; Function compile flags: /Ogtpy
;	COMDAT ?DebugStringToFile@@YAXPADH@Z
_TEXT	SEGMENT
_extension$144431 = -5092				; size = 4
_stLocalTime$144440 = -5088				; size = 16
_message$GSCopy$ = -5072				; size = 4
_dwBytesWritten$144442 = -5068				; size = 4
_hdTh$144428 = -5064					; size = 4
_oldFile$144456 = -5060					; size = 1024
_logFile$144443 = -4036					; size = 1024
_line$144430 = -3012					; size = 3000
__$ArrayPad$ = -8					; size = 4
_message$ = 8						; size = 4
_typeDebug$ = 12					; size = 4
?DebugStringToFile@@YAXPADH@Z PROC			; DebugStringToFile, COMDAT

; 70   : {

  00000	b8 e4 13 00 00	 mov	 eax, 5092		; 000013e4H
  00005	e8 00 00 00 00	 call	 __chkstk
  0000a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000f	33 c4		 xor	 eax, esp
  00011	89 84 24 dc 13
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+5092], eax

; 71   :     if(typeDebug&LOG_DEBUG_ALL)

  00018	f6 84 24 ec 13
	00 00 70	 test	 BYTE PTR _typeDebug$[esp+5088], 112 ; 00000070H
  00020	53		 push	 ebx
  00021	55		 push	 ebp
  00022	56		 push	 esi
  00023	8b b4 24 f4 13
	00 00		 mov	 esi, DWORD PTR _message$[esp+5100]
  0002a	57		 push	 edi

; 118  :                 {
; 119  :                     CloseHandle(hTraceFile);

  0002b	89 74 24 24	 mov	 DWORD PTR _message$GSCopy$[esp+5108], esi
  0002f	0f 84 1f 02 00
	00		 je	 $LN11@DebugStrin
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GBPLBEEL@SysStatus_Trace?$AA@
  0003a	33 db		 xor	 ebx, ebx
  0003c	53		 push	 ebx
  0003d	53		 push	 ebx
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMutexA@12
  00044	6a ff		 push	 -1
  00046	50		 push	 eax
  00047	89 44 24 34	 mov	 DWORD PTR _hdTh$144428[esp+5116], eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00051	68 b7 0b 00 00	 push	 2999			; 00000bb7H
  00056	8d 84 24 35 08
	00 00		 lea	 eax, DWORD PTR _line$144430[esp+5113]
  0005d	53		 push	 ebx
  0005e	50		 push	 eax
  0005f	88 9c 24 3c 08
	00 00		 mov	 BYTE PTR _line$144430[esp+5120], bl
  00066	e8 00 00 00 00	 call	 _memset
  0006b	33 c0		 xor	 eax, eax
  0006d	66 89 44 24 1d	 mov	 WORD PTR _extension$144431[esp+5121], ax
  00072	88 44 24 1f	 mov	 BYTE PTR _extension$144431[esp+5123], al
  00076	8a 84 24 08 14
	00 00		 mov	 al, BYTE PTR _typeDebug$[esp+5116]
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00080	88 5c 24 10	 mov	 BYTE PTR _extension$144431[esp+5108], bl
  00084	a8 10		 test	 al, 16			; 00000010H
  00086	74 0e		 je	 SHORT $LN10@DebugStrin
  00088	6a 03		 push	 3
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_03LBAKCJJ@dbg?$AA@
  0008f	8d 4c 24 18	 lea	 ecx, DWORD PTR _extension$144431[esp+5116]
  00093	51		 push	 ecx
  00094	eb 22		 jmp	 SHORT $LN18@DebugStrin
$LN10@DebugStrin:

; 72   :     {
; 73   :         HANDLE hdTh = CreateMutex(NULL,FALSE,"SysStatus_Trace");
; 74   :         WaitForSingleObject(hdTh,INFINITE);
; 75   : 
; 76   :         char line[3000] = {0};
; 77   :         char extension[4] = {0};
; 78   : 
; 79   :         if(typeDebug&LOG_DEBUG)
; 80   :         {
; 81   :             strncpy(extension,"dbg",3);
; 82   :         }
; 83   :         else if(typeDebug&LOG_DEBUG_WND)

  00096	a8 20		 test	 al, 32			; 00000020H
  00098	74 0e		 je	 SHORT $LN8@DebugStrin

; 84   :         {
; 85   :             strncpy(extension,"wnd",3);

  0009a	6a 03		 push	 3
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_03GLILPAEP@wnd?$AA@
  000a1	8d 54 24 18	 lea	 edx, DWORD PTR _extension$144431[esp+5116]
  000a5	52		 push	 edx
  000a6	eb 10		 jmp	 SHORT $LN18@DebugStrin
$LN8@DebugStrin:

; 86   :         }
; 87   :         else if(typeDebug&LOG_DEBUG_WMI)

  000a8	a8 40		 test	 al, 64			; 00000040H
  000aa	74 14		 je	 SHORT $LN6@DebugStrin

; 88   :         {
; 89   :             strncpy(extension,"wmi",3);

  000ac	6a 03		 push	 3
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_03NMGDDAFL@wmi?$AA@
  000b3	8d 44 24 18	 lea	 eax, DWORD PTR _extension$144431[esp+5116]
  000b7	50		 push	 eax
$LN18@DebugStrin:
  000b8	e8 00 00 00 00	 call	 _strncpy
  000bd	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@DebugStrin:

; 90   :         }
; 91   : 
; 92   :         SYSTEMTIME stLocalTime = {0};

  000c0	33 c0		 xor	 eax, eax

; 93   :         GetLocalTime( &stLocalTime );

  000c2	8d 54 24 14	 lea	 edx, DWORD PTR _stLocalTime$144440[esp+5108]
  000c6	33 c9		 xor	 ecx, ecx
  000c8	52		 push	 edx
  000c9	66 89 4c 24 18	 mov	 WORD PTR _stLocalTime$144440[esp+5112], cx
  000ce	89 44 24 1a	 mov	 DWORD PTR _stLocalTime$144440[esp+5114], eax
  000d2	89 44 24 1e	 mov	 DWORD PTR _stLocalTime$144440[esp+5118], eax
  000d6	89 44 24 22	 mov	 DWORD PTR _stLocalTime$144440[esp+5122], eax
  000da	66 89 44 24 26	 mov	 WORD PTR _stLocalTime$144440[esp+5126], ax
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 94   : 
; 95   :         _snprintf(line,sizeof(line),"%.4d-%.2d-%.2d %.2d:%.2d:%.2d.%.3d PID %.5u %s",
; 96   :                        stLocalTime.wYear,stLocalTime.wMonth,stLocalTime.wDay,stLocalTime.wHour,
; 97   :                        stLocalTime.wMinute,stLocalTime.wSecond,stLocalTime.wMilliseconds,
; 98   :                        GetCurrentProcessId(),message);

  000e5	56		 push	 esi
  000e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  000ec	0f b7 4c 24 24	 movzx	 ecx, WORD PTR _stLocalTime$144440[esp+5124]
  000f1	0f b7 54 24 22	 movzx	 edx, WORD PTR _stLocalTime$144440[esp+5122]
  000f6	50		 push	 eax
  000f7	0f b7 44 24 2a	 movzx	 eax, WORD PTR _stLocalTime$144440[esp+5130]
  000fc	50		 push	 eax
  000fd	0f b7 44 24 28	 movzx	 eax, WORD PTR _stLocalTime$144440[esp+5128]
  00102	51		 push	 ecx
  00103	0f b7 4c 24 2a	 movzx	 ecx, WORD PTR _stLocalTime$144440[esp+5130]
  00108	52		 push	 edx
  00109	0f b7 54 24 2a	 movzx	 edx, WORD PTR _stLocalTime$144440[esp+5130]
  0010e	50		 push	 eax
  0010f	0f b7 44 24 2c	 movzx	 eax, WORD PTR _stLocalTime$144440[esp+5132]
  00114	51		 push	 ecx
  00115	52		 push	 edx
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@CLGPPHLF@?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4?$CF?4@
  0011c	8d 8c 24 58 08
	00 00		 lea	 ecx, DWORD PTR _line$144430[esp+5148]
  00123	68 b8 0b 00 00	 push	 3000			; 00000bb8H
  00128	51		 push	 ecx
  00129	e8 00 00 00 00	 call	 __snprintf

; 99   : 
; 100  :         DWORD dwBytesWritten = 0;
; 101  :         char logFile[1024] = {0};

  0012e	68 ff 03 00 00	 push	 1023			; 000003ffH
  00133	8d 94 24 65 04
	00 00		 lea	 edx, DWORD PTR _logFile$144443[esp+5161]
  0013a	53		 push	 ebx
  0013b	52		 push	 edx
  0013c	89 5c 24 64	 mov	 DWORD PTR _dwBytesWritten$144442[esp+5168], ebx
  00140	88 9c 24 6c 04
	00 00		 mov	 BYTE PTR _logFile$144443[esp+5168], bl
  00147	e8 00 00 00 00	 call	 _memset

; 102  :         _snprintf(logFile,sizeof(logFile),"%s.%s",gszLogFilePrefix,extension);

  0014c	8d 44 24 4c	 lea	 eax, DWORD PTR _extension$144431[esp+5168]
  00150	50		 push	 eax
  00151	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
  0015b	8d 8c 24 78 04
	00 00		 lea	 ecx, DWORD PTR _logFile$144443[esp+5180]
  00162	68 00 04 00 00	 push	 1024			; 00000400H
  00167	51		 push	 ecx
  00168	e8 00 00 00 00	 call	 __snprintf
  0016d	8b 2d 00 00 00
	00		 mov	 ebp, DWORD PTR __imp__CreateFileA@28
  00173	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__CloseHandle@4
  00179	83 c4 50	 add	 esp, 80			; 00000050H
$LN5@DebugStrin:

; 103  : 
; 104  :         while(true)
; 105  :         {
; 106  :             HANDLE hTraceFile = CreateFile(logFile,
; 107  :                                            GENERIC_READ|GENERIC_WRITE,
; 108  :                                            FILE_SHARE_READ|FILE_SHARE_WRITE,
; 109  :                                            NULL,
; 110  :                                            OPEN_ALWAYS,
; 111  :                                            FILE_ATTRIBUTE_NORMAL,
; 112  :                                            NULL);

  0017c	53		 push	 ebx
  0017d	68 80 00 00 00	 push	 128			; 00000080H
  00182	6a 04		 push	 4
  00184	53		 push	 ebx
  00185	6a 03		 push	 3
  00187	68 00 00 00 c0	 push	 -1073741824		; c0000000H
  0018c	8d 94 24 48 04
	00 00		 lea	 edx, DWORD PTR _logFile$144443[esp+5132]
  00193	52		 push	 edx
  00194	ff d5		 call	 ebp
  00196	8b f0		 mov	 esi, eax

; 113  :             if(hTraceFile!=INVALID_HANDLE_VALUE)

  00198	83 fe ff	 cmp	 esi, -1
  0019b	74 df		 je	 SHORT $LN5@DebugStrin

; 114  :             {
; 115  :                 //Set position o the end of the file
; 116  :                 DWORD dwFileSize = GetFileSize(hTraceFile,NULL);

  0019d	53		 push	 ebx
  0019e	56		 push	 esi
  0019f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFileSize@8

; 117  :                 if(dwFileSize>(MBYTES*9))

  001a5	3d 00 00 90 00	 cmp	 eax, 9437184		; 00900000H
  001aa	76 59		 jbe	 SHORT $LN2@DebugStrin

; 118  :                 {
; 119  :                     CloseHandle(hTraceFile);

  001ac	56		 push	 esi
  001ad	ff d7		 call	 edi

; 120  :                     hTraceFile = INVALID_HANDLE_VALUE;
; 121  : 
; 122  :                     char oldFile[1024] = {0};

  001af	68 ff 03 00 00	 push	 1023			; 000003ffH
  001b4	8d 44 24 35	 lea	 eax, DWORD PTR _oldFile$144456[esp+5113]
  001b8	53		 push	 ebx
  001b9	50		 push	 eax
  001ba	88 5c 24 3c	 mov	 BYTE PTR _oldFile$144456[esp+5120], bl
  001be	e8 00 00 00 00	 call	 _memset

; 123  :                     _snprintf(oldFile,sizeof(oldFile),"%s.%s_old",gszLogFilePrefix,extension);

  001c3	8d 4c 24 1c	 lea	 ecx, DWORD PTR _extension$144431[esp+5120]
  001c7	51		 push	 ecx
  001c8	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_09BJLKJKJF@?$CFs?4?$CFs_old?$AA@
  001d2	8d 54 24 48	 lea	 edx, DWORD PTR _oldFile$144456[esp+5132]
  001d6	68 00 04 00 00	 push	 1024			; 00000400H
  001db	52		 push	 edx
  001dc	e8 00 00 00 00	 call	 __snprintf

; 124  : 
; 125  :                     //remove old file
; 126  :                     remove((const char*)oldFile);

  001e1	8d 44 24 50	 lea	 eax, DWORD PTR _oldFile$144456[esp+5140]
  001e5	50		 push	 eax
  001e6	e8 00 00 00 00	 call	 _remove

; 127  :                     rename((const char*)logFile,(const char*)oldFile);

  001eb	8d 4c 24 54	 lea	 ecx, DWORD PTR _oldFile$144456[esp+5144]
  001ef	51		 push	 ecx
  001f0	8d 94 24 58 04
	00 00		 lea	 edx, DWORD PTR _logFile$144443[esp+5148]
  001f7	52		 push	 edx
  001f8	e8 00 00 00 00	 call	 _rename
  001fd	83 c4 2c	 add	 esp, 44			; 0000002cH

; 134  :                     break;      //exit loop
; 135  :                 }
; 136  :             }
; 137  :         }

  00200	e9 77 ff ff ff	 jmp	 $LN5@DebugStrin
$LN2@DebugStrin:

; 128  :                 }
; 129  :                 else
; 130  :                 {
; 131  :                     SetFilePointer(hTraceFile,0,NULL,FILE_END);

  00205	6a 02		 push	 2
  00207	53		 push	 ebx
  00208	53		 push	 ebx
  00209	56		 push	 esi
  0020a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFilePointer@16

; 132  :                     WriteFile(hTraceFile,line,strlen(line),&dwBytesWritten,NULL); 

  00210	8d 84 24 30 08
	00 00		 lea	 eax, DWORD PTR _line$144430[esp+5108]
  00217	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0021a	8d 9b 00 00 00
	00		 npad	 6
$LL15@DebugStrin:
  00220	8a 08		 mov	 cl, BYTE PTR [eax]
  00222	40		 inc	 eax
  00223	3a cb		 cmp	 cl, bl
  00225	75 f9		 jne	 SHORT $LL15@DebugStrin
  00227	53		 push	 ebx
  00228	8d 4c 24 2c	 lea	 ecx, DWORD PTR _dwBytesWritten$144442[esp+5112]
  0022c	51		 push	 ecx
  0022d	2b c2		 sub	 eax, edx
  0022f	50		 push	 eax
  00230	8d 94 24 3c 08
	00 00		 lea	 edx, DWORD PTR _line$144430[esp+5120]
  00237	52		 push	 edx
  00238	56		 push	 esi
  00239	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WriteFile@20

; 133  :                     CloseHandle(hTraceFile);

  0023f	56		 push	 esi
  00240	ff d7		 call	 edi

; 138  : 
; 139  :         ReleaseMutex(hdTh);

  00242	8b 74 24 2c	 mov	 esi, DWORD PTR _hdTh$144428[esp+5108]
  00246	56		 push	 esi
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4

; 140  :         CloseHandle(hdTh);

  0024d	56		 push	 esi
  0024e	ff d7		 call	 edi
  00250	8b 74 24 24	 mov	 esi, DWORD PTR _message$GSCopy$[esp+5108]
$LN11@DebugStrin:

; 141  :     }   //END: if(bDebug)
; 142  :     OutputDebugString(message);

  00254	56		 push	 esi
  00255	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4

; 143  : }

  0025b	8b 8c 24 ec 13
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+5108]
  00262	5f		 pop	 edi
  00263	5e		 pop	 esi
  00264	5d		 pop	 ebp
  00265	5b		 pop	 ebx
  00266	33 cc		 xor	 ecx, esp
  00268	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026d	81 c4 e4 13 00
	00		 add	 esp, 5092		; 000013e4H
  00273	c3		 ret	 0
?DebugStringToFile@@YAXPADH@Z ENDP			; DebugStringToFile
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?_thGetInt@@YAHPAH@Z				; _thGetInt
; Function compile flags: /Ogtpy
;	COMDAT ?_thGetInt@@YAHPAH@Z
_TEXT	SEGMENT
_sMember$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?_thGetInt@@YAHPAH@Z PROC				; _thGetInt, COMDAT
; _piProtectedVar$ = ecx

; 43   : {

  00000	83 ec 68	 sub	 esp, 104		; 00000068H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	33 c4		 xor	 eax, esp
  0000a	89 44 24 64	 mov	 DWORD PTR __$ArrayPad$[esp+104], eax
  0000e	57		 push	 edi

; 44   :     //retorna uma copia int do valor do endereco da variavel recebida. 
; 45   :     //Garante a integridade da variavel durante processamento multithread.
; 46   : 
; 47   :     int iRetVal;
; 48   :     char sMember[100]={0};

  0000f	6a 63		 push	 99			; 00000063H
  00011	8d 44 24 09	 lea	 eax, DWORD PTR _sMember$[esp+113]
  00015	6a 00		 push	 0
  00017	50		 push	 eax
  00018	8b f9		 mov	 edi, ecx
  0001a	c6 44 24 10 00	 mov	 BYTE PTR _sMember$[esp+120], 0
  0001f	e8 00 00 00 00	 call	 _memset
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 49   :     HANDLE hdTh =0;
; 50   : 
; 51   :     if(!piProtectedVar)

  00027	85 ff		 test	 edi, edi
  00029	75 12		 jne	 SHORT $LN1@thGetInt

; 52   :         return 0;

  0002b	33 c0		 xor	 eax, eax
  0002d	5f		 pop	 edi

; 62   : 
; 63   :     return iRetVal;
; 64   : }

  0002e	8b 4c 24 64	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+104]
  00032	33 cc		 xor	 ecx, esp
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	83 c4 68	 add	 esp, 104		; 00000068H
  0003c	c3		 ret	 0
$LN1@thGetInt:
  0003d	56		 push	 esi

; 53   : 
; 54   :     _snprintf(sMember,sizeof(sMember)-1,"%p",(int)piProtectedVar);

  0003e	57		 push	 edi
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_02BBAHNLBA@?$CFp?$AA@
  00044	8d 4c 24 10	 lea	 ecx, DWORD PTR _sMember$[esp+120]
  00048	6a 63		 push	 99			; 00000063H
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 __snprintf
  00050	83 c4 10	 add	 esp, 16			; 00000010H

; 55   :     hdTh = CreateMutex(NULL,FALSE,sMember);

  00053	8d 54 24 08	 lea	 edx, DWORD PTR _sMember$[esp+112]
  00057	52		 push	 edx
  00058	6a 00		 push	 0
  0005a	6a 00		 push	 0
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMutexA@12
  00062	8b f0		 mov	 esi, eax

; 56   :     WaitForSingleObject(hdTh,INFINITE);

  00064	6a ff		 push	 -1
  00066	56		 push	 esi
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 57   : 
; 58   :     iRetVal = *piProtectedVar;

  0006d	8b 3f		 mov	 edi, DWORD PTR [edi]

; 59   : 
; 60   :     ReleaseMutex(hdTh);

  0006f	56		 push	 esi
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4

; 61   :     CloseHandle(hdTh);

  00076	56		 push	 esi
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 62   : 
; 63   :     return iRetVal;
; 64   : }

  0007d	8b 4c 24 6c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+112]
  00081	5e		 pop	 esi
  00082	8b c7		 mov	 eax, edi
  00084	5f		 pop	 edi
  00085	33 cc		 xor	 ecx, esp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	83 c4 68	 add	 esp, 104		; 00000068H
  0008f	c3		 ret	 0
?_thGetInt@@YAHPAH@Z ENDP				; _thGetInt
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?_thSetInt@@YAXPAHH@Z				; _thSetInt
; Function compile flags: /Ogtpy
;	COMDAT ?_thSetInt@@YAXPAHH@Z
_TEXT	SEGMENT
_sMember$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
_iValue$ = 8						; size = 4
?_thSetInt@@YAXPAHH@Z PROC				; _thSetInt, COMDAT
; _piProtectedVar$ = edi

; 26   : {

  00000	83 ec 68	 sub	 esp, 104		; 00000068H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	33 c4		 xor	 eax, esp
  0000a	89 44 24 64	 mov	 DWORD PTR __$ArrayPad$[esp+104], eax

; 27   :     char sMember[100]={0};

  0000e	6a 63		 push	 99			; 00000063H
  00010	8d 44 24 05	 lea	 eax, DWORD PTR _sMember$[esp+109]
  00014	6a 00		 push	 0
  00016	50		 push	 eax
  00017	c6 44 24 0c 00	 mov	 BYTE PTR _sMember$[esp+116], 0
  0001c	e8 00 00 00 00	 call	 _memset
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH

; 28   :     HANDLE hdTh =0;
; 29   : 
; 30   :     if (!piProtectedVar)

  00024	85 ff		 test	 edi, edi
  00026	74 45		 je	 SHORT $LN2@thSetInt
  00028	56		 push	 esi

; 31   :         return;
; 32   : 
; 33   :     _snprintf(sMember,sizeof(sMember)-1,"%p",(int)piProtectedVar);

  00029	57		 push	 edi
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_02BBAHNLBA@?$CFp?$AA@
  0002f	8d 4c 24 0c	 lea	 ecx, DWORD PTR _sMember$[esp+116]
  00033	6a 63		 push	 99			; 00000063H
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 __snprintf
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 34   :     hdTh = CreateMutex(NULL,FALSE,sMember);

  0003e	8d 54 24 04	 lea	 edx, DWORD PTR _sMember$[esp+108]
  00042	52		 push	 edx
  00043	6a 00		 push	 0
  00045	6a 00		 push	 0
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMutexA@12
  0004d	8b f0		 mov	 esi, eax

; 35   :     WaitForSingleObject(hdTh,INFINITE);

  0004f	6a ff		 push	 -1
  00051	56		 push	 esi
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 36   : 
; 37   :     *piProtectedVar = iValue;

  00058	8b 44 24 70	 mov	 eax, DWORD PTR _iValue$[esp+104]

; 38   : 
; 39   :     ReleaseMutex(hdTh);

  0005c	56		 push	 esi
  0005d	89 07		 mov	 DWORD PTR [edi], eax
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4

; 40   :     CloseHandle (hdTh);

  00065	56		 push	 esi
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
  0006c	5e		 pop	 esi
$LN2@thSetInt:

; 41   : }

  0006d	8b 4c 24 64	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+104]
  00071	33 cc		 xor	 ecx, esp
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	83 c4 68	 add	 esp, 104		; 00000068H
  0007b	c3		 ret	 0
?_thSetInt@@YAXPAHH@Z ENDP				; _thSetInt
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\monitorips.h
_TEXT	ENDS
;	COMDAT ?IsChanged@MonitorIPs@@QAE_NXZ
_TEXT	SEGMENT
?IsChanged@MonitorIPs@@QAE_NXZ PROC			; MonitorIPs::IsChanged, COMDAT
; _this$ = esi

; 52   :         WaitForSingleObject(m_hSync,MINUTE);

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	53		 push	 ebx
  00003	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00008	50		 push	 eax
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 53   : 
; 54   :         bool ret = m_changed;
; 55   :         m_changed = false;
; 56   : 
; 57   :         ReleaseMutex(m_hSync);

  0000f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00011	8a 5e 34	 mov	 bl, BYTE PTR [esi+52]
  00014	51		 push	 ecx
  00015	c6 46 34 00	 mov	 BYTE PTR [esi+52], 0
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4

; 58   :         return ret;

  0001f	8a c3		 mov	 al, bl
  00021	5b		 pop	 ebx

; 59   :     }

  00022	c3		 ret	 0
?IsChanged@MonitorIPs@@QAE_NXZ ENDP			; MonitorIPs::IsChanged
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\usb.h
_TEXT	ENDS
;	COMDAT ?GetVendorString@USB@@SAPADG@Z
_TEXT	SEGMENT
?GetVendorString@USB@@SAPADG@Z PROC			; USB::GetVendorString, COMDAT
; _idVendor$ = edx

; 133  :         PUSBVENDORID vendorID;
; 134  : 
; 135  :         if (idVendor != 0x0000)

  00000	66 85 d2	 test	 dx, dx
  00003	74 24		 je	 SHORT $LN2@GetVendorS

; 136  :         {
; 137  :             vendorID = USBVendorIDs;
; 138  :             while (vendorID->usVendorID != 0x0000)

  00005	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _USBVendorIDs
  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET _USBVendorIDs
  00010	66 85 c0	 test	 ax, ax
  00013	74 14		 je	 SHORT $LN2@GetVendorS
  00015	0f b7 c0	 movzx	 eax, ax
$LL3@GetVendorS:

; 139  :             {
; 140  :                 if (vendorID->usVendorID == idVendor)

  00018	66 3b c2	 cmp	 ax, dx
  0001b	74 0f		 je	 SHORT $LN8@GetVendorS
  0001d	0f b7 41 08	 movzx	 eax, WORD PTR [ecx+8]

; 143  :                 }
; 144  :                 vendorID++;

  00021	83 c1 08	 add	 ecx, 8
  00024	66 85 c0	 test	 ax, ax
  00027	75 ef		 jne	 SHORT $LL3@GetVendorS
$LN2@GetVendorS:

; 145  :             }
; 146  :         }
; 147  :         return NULL;

  00029	33 c0		 xor	 eax, eax

; 148  :     }

  0002b	c3		 ret	 0
$LN8@GetVendorS:

; 141  :                 {
; 142  :                     return (vendorID->szVendor);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 148  :     }

  0002f	c3		 ret	 0
?GetVendorString@USB@@SAPADG@Z ENDP			; USB::GetVendorString
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.h
_TEXT	ENDS
;	COMDAT ?_clear@PBuffer@@QAEXXZ
_TEXT	SEGMENT
?_clear@PBuffer@@QAEXXZ PROC				; PBuffer::_clear, COMDAT
; _this$ = esi

; 137  :         if(pMem)

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	74 0f		 je	 SHORT $LN4@clear

; 138  :         {
; 139  :             delete [] pMem;

  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0000c	83 c4 04	 add	 esp, 4

; 140  :             pMem = NULL;

  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@clear:

; 141  :         }
; 142  :         lMem = 0;

  00015	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 143  :     }

  0001c	c3		 ret	 0
?_clear@PBuffer@@QAEXXZ ENDP				; PBuffer::_clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?_allocMem@PBuffer@@QAEPAEH@Z
_TEXT	SEGMENT
?_allocMem@PBuffer@@QAEPAEH@Z PROC			; PBuffer::_allocMem, COMDAT
; _this$ = esi
; _len$ = edi

; 98   :         if(len > lMem)

  00000	3b 7e 04	 cmp	 edi, DWORD PTR [esi+4]

; 99   :         {
; 100  :             if(pMem)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	7e 29		 jle	 SHORT $LN2@allocMem
  00007	85 c0		 test	 eax, eax
  00009	74 09		 je	 SHORT $LN1@allocMem

; 101  :                 delete [] pMem;

  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00011	83 c4 04	 add	 esp, 4
$LN1@allocMem:

; 102  :             lMem = len;
; 103  :             pMem = new BYTE[lMem];

  00014	57		 push	 edi
  00015	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00018	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]

; 104  :             memset(pMem,0x00,lMem);

  0001d	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00020	51		 push	 ecx
  00021	6a 00		 push	 0
  00023	50		 push	 eax
  00024	89 06		 mov	 DWORD PTR [esi], eax
  00026	e8 00 00 00 00	 call	 _memset

; 105  :         }
; 106  :         return pMem;

  0002b	8b 06		 mov	 eax, DWORD PTR [esi]
  0002d	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@allocMem:

; 107  :     };

  00030	c3		 ret	 0
?_allocMem@PBuffer@@QAEPAEH@Z ENDP			; PBuffer::_allocMem
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??1PBuffer@@QAE@XZ
_TEXT	SEGMENT
??1PBuffer@@QAE@XZ PROC					; PBuffer::~PBuffer, COMDAT
; _this$ = esi

; 93   :         _clear();

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	74 0f		 je	 SHORT $LN6@PBuffer
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0000c	83 c4 04	 add	 esp, 4
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN6@PBuffer:
  00015	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 94   :     };

  0001c	c3		 ret	 0
??1PBuffer@@QAE@XZ ENDP					; PBuffer::~PBuffer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0PBuffer@@QAE@XZ
_TEXT	SEGMENT
??0PBuffer@@QAE@XZ PROC					; PBuffer::PBuffer, COMDAT
; _this$ = eax

; 87   :     {
; 88   :         pMem = NULL;

  00000	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 89   :         lMem = 0;

  00006	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 90   :     };

  0000d	c3		 ret	 0
??0PBuffer@@QAE@XZ ENDP					; PBuffer::PBuffer
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
??1_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::~_Container_base_aux, COMDAT

; 403  : 		// Do nothing: ~_Container_base_aux_alloc_real() previously destroyed the aux object.
; 404  : 		}

  00000	c3		 ret	 0
??1_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::~_Container_base_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::_Container_base_aux, COMDAT
; _this$ = eax

; 380  : 		{
; 381  : 		// Do nothing: _Container_base_aux_alloc_real() will construct the aux object.
; 382  : 		}

  00000	c3		 ret	 0
??0_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::_Container_base_aux
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z PROC	; std::_Aux_cont::_Aux_cont, COMDAT
; _this$ = eax
; __Pcont$ = ecx

; 364  : 	explicit _Aux_cont(const _Container_base_aux * const _Pcont)

  00000	89 08		 mov	 DWORD PTR [eax], ecx
  00002	c3		 ret	 0
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ENDP	; std::_Aux_cont::_Aux_cont
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\string.h
_TEXT	ENDS
;	COMDAT ?strstr@@YAPADPADPBD@Z
_TEXT	SEGMENT
?strstr@@YAPADPADPBD@Z PROC				; strstr, COMDAT
; __Str$ = ecx
; __SubStr$ = eax

; 190  : 	{ return (char*)strstr((const char*)_Str, _SubStr); }

  00000	50		 push	 eax
  00001	51		 push	 ecx
  00002	e8 00 00 00 00	 call	 _strstr
  00007	83 c4 08	 add	 esp, 8
  0000a	c3		 ret	 0
?strstr@@YAPADPADPBD@Z ENDP				; strstr
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; __Str$ = ecx
; __Ch$ = eax

; 184  : 	{ return (char*)strchr((const char*)_Str, _Ch); }

  00000	50		 push	 eax
  00001	51		 push	 ecx
  00002	e8 00 00 00 00	 call	 _strchr
  00007	83 c4 08	 add	 esp, 8
  0000a	c3		 ret	 0
?strchr@@YAPADPADH@Z ENDP				; strchr
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z
_TEXT	SEGMENT
??$unchecked_uninitialized_copy@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<void * *,void * *,std::allocator<void *> >, COMDAT
; __First$ = edi
; __Last$ = eax
; __Dest$ = edx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

  00000	2b c7		 sub	 eax, edi
  00002	c1 f8 02	 sar	 eax, 2
  00005	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000c	56		 push	 esi
  0000d	8d 34 11	 lea	 esi, DWORD PTR [ecx+edx]
  00010	85 c0		 test	 eax, eax
  00012	76 0c		 jbe	 SHORT $LN16@unchecked_@33
  00014	51		 push	 ecx
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _memmove_s
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@unchecked_@33:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi

; 823  : 	}

  00023	c3		 ret	 0
??$unchecked_uninitialized_copy@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<void * *,void * *,std::allocator<void *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 1
??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<void * *,unsigned int,void *>, COMDAT
; __First$ = ecx
; __Count$ = eax
; __Val$ = edx

; 3251 : 		// if _OutIt is checked, this will ensure we have enough space
; 3252 : 		_OutIt _Last = _First + _Count; (_Last);
; 3253 : 		_Fill_n(_CHECKED_BASE(_First), _Count, _Val,
; 3254 : 			_Range_checked_iterator_tag());

  00000	85 c0		 test	 eax, eax
  00002	76 0e		 jbe	 SHORT $LN7@Fill_n@18
  00004	56		 push	 esi
$LL9@Fill_n@18:
  00005	8b 32		 mov	 esi, DWORD PTR [edx]
  00007	89 31		 mov	 DWORD PTR [ecx], esi
  00009	48		 dec	 eax
  0000a	83 c1 04	 add	 ecx, 4
  0000d	85 c0		 test	 eax, eax
  0000f	77 f4		 ja	 SHORT $LL9@Fill_n@18
  00011	5e		 pop	 esi
$LN7@Fill_n@18:

; 3255 : 	}

  00012	c3		 ret	 0
??$_Fill_n@PAPAXIPAX@std@@YAXPAPAXIABQAXUrandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<void * *,unsigned int,void *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$_Uninit_move@PAPAXPAPAXV?$allocator@PAX@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 1
??$_Uninit_move@PAPAXPAPAXV?$allocator@PAX@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<void * *,void * *,std::allocator<void *>,std::_Undefined_move_tag>, COMDAT
; __First$ = edi
; __Last$ = eax
; __Dest$ = edx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

  00000	2b c7		 sub	 eax, edi
  00002	c1 f8 02	 sar	 eax, 2
  00005	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000c	56		 push	 esi
  0000d	8d 34 11	 lea	 esi, DWORD PTR [ecx+edx]
  00010	85 c0		 test	 eax, eax
  00012	76 0c		 jbe	 SHORT $LN18@Uninit_mov@8
  00014	51		 push	 ecx
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _memmove_s
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
$LN18@Uninit_mov@8:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi

; 208  : 	}

  00023	c3		 ret	 0
??$_Uninit_move@PAPAXPAPAXV?$allocator@PAX@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00AAV?$allocator@PAX@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<void * *,void * *,std::allocator<void *>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$unchecked_fill_n@PAPAXIPAX@stdext@@YAXPAPAXIABQAX@Z
_TEXT	SEGMENT
??$unchecked_fill_n@PAPAXIPAX@stdext@@YAXPAPAXIABQAX@Z PROC ; stdext::unchecked_fill_n<void * *,unsigned int,void *>, COMDAT
; __First$ = ecx
; __Count$ = eax
; __Val$ = edx

; 3721 : 		_STD _Fill_n(_First, _Count, _Val, _STD _Iter_cat(_First), _STD _Range_checked_iterator_tag());

  00000	85 c0		 test	 eax, eax
  00002	76 0e		 jbe	 SHORT $LN11@unchecked_@34
  00004	56		 push	 esi
$LL13@unchecked_@34:
  00005	8b 32		 mov	 esi, DWORD PTR [edx]
  00007	89 31		 mov	 DWORD PTR [ecx], esi
  00009	48		 dec	 eax
  0000a	83 c1 04	 add	 ecx, 4
  0000d	85 c0		 test	 eax, eax
  0000f	77 f4		 ja	 SHORT $LL13@unchecked_@34
  00011	5e		 pop	 esi
$LN11@unchecked_@34:

; 3722 : 	}

  00012	c3		 ret	 0
??$unchecked_fill_n@PAPAXIPAX@stdext@@YAXPAPAXIABQAX@Z ENDP ; stdext::unchecked_fill_n<void * *,unsigned int,void *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Move_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First_dest_cat$ = 8					; size = 1
___formal$ = 12						; size = 1
___formal$ = 16						; size = 1
??$_Move_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<void * *,void * *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT
; __First$ = edi
; __Last$ = eax
; __Dest$ = ecx

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

  00000	2b c7		 sub	 eax, edi
  00002	c1 f8 02	 sar	 eax, 2
  00005	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  0000c	2b ca		 sub	 ecx, edx
  0000e	56		 push	 esi
  0000f	8b f1		 mov	 esi, ecx
  00011	85 c0		 test	 eax, eax
  00013	7e 0c		 jle	 SHORT $LN8@Move_backw@8
  00015	52		 push	 edx
  00016	57		 push	 edi
  00017	52		 push	 edx
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 _memmove_s
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@Move_backw@8:
  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi

; 2755 : 	}

  00024	c3		 ret	 0
??$_Move_backward_opt@PAPAXPAPAXUrandom_access_iterator_tag@std@@U_Undefined_move_tag@2@@std@@YAPAPAXPAPAX00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<void * *,void * *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$_Unchecked_uninitialized_move@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z
_TEXT	SEGMENT
??$_Unchecked_uninitialized_move@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<void * *,void * *,std::allocator<void *> >, COMDAT
; __First$ = edi
; __Last$ = eax
; __Dest$ = edx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

  00000	2b c7		 sub	 eax, edi
  00002	c1 f8 02	 sar	 eax, 2
  00005	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000c	56		 push	 esi
  0000d	8d 34 11	 lea	 esi, DWORD PTR [ecx+edx]
  00010	85 c0		 test	 eax, eax
  00012	76 0c		 jbe	 SHORT $LN30@Unchecked_@15
  00014	51		 push	 ecx
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _memmove_s
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
$LN30@Unchecked_@15:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi

; 865  : 	}

  00023	c3		 ret	 0
??$_Unchecked_uninitialized_move@PAPAXPAPAXV?$allocator@PAX@std@@@stdext@@YAPAPAXPAPAX00AAV?$allocator@PAX@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<void * *,void * *,std::allocator<void *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@std@@YAXPAPAXIABQAXAAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
___formal$ = 12						; size = 1
??$_Uninit_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@std@@YAXPAPAXIABQAXAAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<void * *,unsigned int,void *,std::allocator<void *> >, COMDAT
; __First$ = ecx
; __Count$ = eax
; __Val$ = edx

; 419  : 		_STDEXT unchecked_fill_n(_First, _Count, _Val);

  00000	85 c0		 test	 eax, eax
  00002	76 0e		 jbe	 SHORT $LN13@Uninit_fil@9
  00004	56		 push	 esi
$LL15@Uninit_fil@9:
  00005	8b 32		 mov	 esi, DWORD PTR [edx]
  00007	89 31		 mov	 DWORD PTR [ecx], esi
  00009	48		 dec	 eax
  0000a	83 c1 04	 add	 ecx, 4
  0000d	85 c0		 test	 eax, eax
  0000f	77 f4		 ja	 SHORT $LL15@Uninit_fil@9
  00011	5e		 pop	 esi
$LN13@Uninit_fil@9:

; 420  : 	}

  00012	c3		 ret	 0
??$_Uninit_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@std@@YAXPAPAXIABQAXAAV?$allocator@PAX@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<void * *,unsigned int,void *,std::allocator<void *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z
_TEXT	SEGMENT
$T179018 = -12						; size = 12
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z PROC ; std::_Allocate<std::_Aux_cont>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

  00000	83 c8 ff	 or	 eax, -1
  00003	33 d2		 xor	 edx, edx
  00005	f7 f1		 div	 ecx
  00007	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000a	83 f8 04	 cmp	 eax, 4
  0000d	73 1a		 jae	 SHORT $LN1@Allocate@9

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

  0000f	6a 00		 push	 0
  00011	8d 4c 24 04	 lea	 ecx, DWORD PTR $T179018[esp+16]
  00015	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  0001a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0001f	8d 44 24 04	 lea	 eax, DWORD PTR $T179018[esp+16]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN11@Allocate@9:
$LN1@Allocate@9:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

  00029	03 c9		 add	 ecx, ecx
  0002b	03 c9		 add	 ecx, ecx
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00033	83 c4 04	 add	 esp, 4

; 44   : 	}

  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	c3		 ret	 0
$LN10@Allocate@9:
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Aux_cont>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAX@std@@YAPAPAXIPAPAX@Z
_TEXT	SEGMENT
$T179028 = -12						; size = 12
??$_Allocate@PAX@std@@YAPAPAXIPAPAX@Z PROC		; std::_Allocate<void *>, COMDAT
; __Count$ = ecx

; 37   : 	if (_Count <= 0)
; 38   : 		_Count = 0;
; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

  00000	83 c8 ff	 or	 eax, -1
  00003	33 d2		 xor	 edx, edx
  00005	f7 f1		 div	 ecx
  00007	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000a	83 f8 04	 cmp	 eax, 4
  0000d	73 1a		 jae	 SHORT $LN1@Allocate@10

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

  0000f	6a 00		 push	 0
  00011	8d 4c 24 04	 lea	 ecx, DWORD PTR $T179028[esp+16]
  00015	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  0001a	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0001f	8d 44 24 04	 lea	 eax, DWORD PTR $T179028[esp+16]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN11@Allocate@10:
$LN1@Allocate@10:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

  00029	03 c9		 add	 ecx, ecx
  0002b	03 c9		 add	 ecx, ecx
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00033	83 c4 04	 add	 esp, 4

; 44   : 	}

  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	c3		 ret	 0
$LN10@Allocate@10:
??$_Allocate@PAX@std@@YAPAPAXIPAPAX@Z ENDP		; std::_Allocate<void *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??$_Unchecked_move_backward@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z
_TEXT	SEGMENT
??$_Unchecked_move_backward@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z PROC ; stdext::_Unchecked_move_backward<void * *,void * *>, COMDAT
; __First$ = edi
; __Last$ = eax
; __Dest$ = ecx

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

  00000	2b c7		 sub	 eax, edi
  00002	c1 f8 02	 sar	 eax, 2
  00005	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  0000c	2b ca		 sub	 ecx, edx
  0000e	56		 push	 esi
  0000f	8b f1		 mov	 esi, ecx
  00011	85 c0		 test	 eax, eax
  00013	7e 0c		 jle	 SHORT $LN22@Unchecked_@16
  00015	52		 push	 edx
  00016	57		 push	 edi
  00017	52		 push	 edx
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 _memmove_s
  0001e	83 c4 10	 add	 esp, 16			; 00000010H
$LN22@Unchecked_@16:
  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi

; 3697 : 	}

  00024	c3		 ret	 0
??$_Unchecked_move_backward@PAPAXPAPAX@stdext@@YAPAPAXPAPAX00@Z ENDP ; stdext::_Unchecked_move_backward<void * *,void * *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z
_TEXT	SEGMENT
??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z PROC ; std::vector<void *,std::allocator<void *> >::_Umove<void * *>, COMDAT
; __First$ = edi
; __Last$ = eax
; __Ptr$ = edx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

  00000	2b c7		 sub	 eax, edi
  00002	c1 f8 02	 sar	 eax, 2
  00005	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000c	56		 push	 esi
  0000d	8d 34 11	 lea	 esi, DWORD PTR [ecx+edx]
  00010	85 c0		 test	 eax, eax
  00012	76 0c		 jbe	 SHORT $LN32@Umove@8
  00014	51		 push	 ecx
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 _memmove_s
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
$LN32@Umove@8:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi

; 1149 : 		}

  00023	c3		 ret	 0
??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Umove<void * *>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@stdext@@YAXPAPAXIABQAXAAV?$allocator@PAX@std@@@Z
_TEXT	SEGMENT
??$unchecked_uninitialized_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@stdext@@YAXPAPAXIABQAXAAV?$allocator@PAX@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<void * *,unsigned int,void *,std::allocator<void *> >, COMDAT
; __First$ = ecx
; __Count$ = eax
; __Val$ = edx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

  00000	85 c0		 test	 eax, eax
  00002	76 0e		 jbe	 SHORT $LN17@unchecked_@35
  00004	56		 push	 esi
$LL19@unchecked_@35:
  00005	8b 32		 mov	 esi, DWORD PTR [edx]
  00007	89 31		 mov	 DWORD PTR [ecx], esi
  00009	48		 dec	 eax
  0000a	83 c1 04	 add	 ecx, 4
  0000d	85 c0		 test	 eax, eax
  0000f	77 f4		 ja	 SHORT $LL19@unchecked_@35
  00011	5e		 pop	 esi
$LN17@unchecked_@35:

; 943  : 	}

  00012	c3		 ret	 0
??$unchecked_uninitialized_fill_n@PAPAXIPAXV?$allocator@PAX@std@@@stdext@@YAXPAPAXIABQAXAAV?$allocator@PAX@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<void * *,unsigned int,void *,std::allocator<void *> >
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAXHPBQAXABQAXV_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAXHPBQAXABQAXV_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>, COMDAT
; _this$ = eax
  00000	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00006	c3		 ret	 0
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAXHPBQAXABQAXV_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,void *,int,void * const *,void * const &,std::_Iterator_base_aux>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Ranit@PAXHPBQAXABQAX@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Ranit@PAXHPBQAXABQAX@std@@QAE@XZ PROC		; std::_Ranit<void *,int,void * const *,void * const &>::_Ranit<void *,int,void * const *,void * const &>, COMDAT
; _this$ = eax
  00000	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00006	c3		 ret	 0
??0?$_Ranit@PAXHPBQAXABQAX@std@@QAE@XZ ENDP		; std::_Ranit<void *,int,void * const *,void * const &>::_Ranit<void *,int,void * const *,void * const &>
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??8?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator==, COMDAT
; _this$ = edi
; __Right$ = esi

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

  00000	8b 07		 mov	 eax, DWORD PTR [edi]
  00002	85 c0		 test	 eax, eax
  00004	74 04		 je	 SHORT $LN4@operator@25
  00006	3b 06		 cmp	 eax, DWORD PTR [esi]
  00008	74 05		 je	 SHORT $LN3@operator@25
$LN4@operator@25:
  0000a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN3@operator@25:

; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	33 c9		 xor	 ecx, ecx
  00014	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00017	0f 94 c1	 sete	 cl
  0001a	8a c1		 mov	 al, cl

; 212  : 		}

  0001c	c3		 ret	 0
??8?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
??0?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z PROC ; std::_Vector_const_iterator<void *,std::allocator<void *> >::_Vector_const_iterator<void *,std::allocator<void *> >, COMDAT
; _this$ = esi
; __Ptr$ = edi

; 76   : 	_Vector_const_iterator(_Tptr _Ptr, const _Container_base *_Pvector)

  00000	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 77   : 		{	// construct with pointer _Ptr
; 78   : 		_SCL_SECURE_VALIDATE(_Pvector != NULL && ((_Myvec *)_Pvector)->_Myfirst <= _Ptr && _Ptr <= ((_Myvec *)_Pvector)->_Mylast);

  00006	39 3d 0c 00 00
	00		 cmp	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, edi
  0000c	77 08		 ja	 SHORT $LN4@Vector_con@8
  0000e	3b 3d 10 00 00
	00		 cmp	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00014	76 05		 jbe	 SHORT $LN3@Vector_con@8
$LN4@Vector_con@8:
  00016	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN3@Vector_con@8:

; 79   : 		this->_Set_container(_Pvector);

  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00020	89 06		 mov	 DWORD PTR [esi], eax

; 80   : 		_Myptr = _Ptr;

  00022	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 81   : 		}

  00025	8b c6		 mov	 eax, esi
  00027	c3		 ret	 0
??0?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z ENDP ; std::_Vector_const_iterator<void *,std::allocator<void *> >::_Vector_const_iterator<void *,std::allocator<void *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::allocate, COMDAT

; 145  : 		return (_Allocate(_Count, (pointer)0));

  00000	6a 04		 push	 4
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 146  : 		}

  0000a	c3		 ret	 0
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::allocate
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
??9?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator!=, COMDAT
; _this$ = edi
; __Right$ = esi

; 216  : 		return (!(*this == _Right));

  00000	8b 07		 mov	 eax, DWORD PTR [edi]
  00002	85 c0		 test	 eax, eax
  00004	74 04		 je	 SHORT $LN6@operator@26
  00006	3b 06		 cmp	 eax, DWORD PTR [esi]
  00008	74 05		 je	 SHORT $LN5@operator@26
$LN6@operator@26:
  0000a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN5@operator@26:
  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	33 c9		 xor	 ecx, ecx
  00014	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00017	0f 95 c1	 setne	 cl
  0001a	8a c1		 mov	 al, cl

; 217  : 		}

  0001c	c3		 ret	 0
??9?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator!=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??G?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
??G?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator-, COMDAT
; _this$ = edi
; __Right$ = esi

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

  00000	8b 07		 mov	 eax, DWORD PTR [edi]
  00002	85 c0		 test	 eax, eax
  00004	74 04		 je	 SHORT $LN4@operator@27
  00006	3b 06		 cmp	 eax, DWORD PTR [esi]
  00008	74 05		 je	 SHORT $LN3@operator@27
$LN4@operator@27:
  0000a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN3@operator@27:

; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

  0000f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00012	2b 46 04	 sub	 eax, DWORD PTR [esi+4]
  00015	c1 f8 02	 sar	 eax, 2

; 195  : 		}

  00018	c3		 ret	 0
??G?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
??0?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z PROC ; std::_Vector_iterator<void *,std::allocator<void *> >::_Vector_iterator<void *,std::allocator<void *> >, COMDAT
; _this$ = esi
; __Ptr$ = edi

; 327  : 		{	// construct with pointer _Ptr

  00000	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00006	39 3d 0c 00 00
	00		 cmp	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, edi
  0000c	77 08		 ja	 SHORT $LN6@Vector_ite@8
  0000e	3b 3d 10 00 00
	00		 cmp	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00014	76 05		 jbe	 SHORT $LN5@Vector_ite@8
$LN6@Vector_ite@8:
  00016	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN5@Vector_ite@8:
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00020	89 06		 mov	 DWORD PTR [esi], eax
  00022	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 328  : 		}

  00025	8b c6		 mov	 eax, esi
  00027	c3		 ret	 0
??0?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAE@PAPAXPBV_Container_base_aux@1@@Z ENDP ; std::_Vector_iterator<void *,std::allocator<void *> >::_Vector_iterator<void *,std::allocator<void *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAX@std@@QAEPAPAXI@Z
_TEXT	SEGMENT
$T179501 = -12						; size = 12
?allocate@?$allocator@PAX@std@@QAEPAPAXI@Z PROC		; std::allocator<void *>::allocate, COMDAT
; __Count$ = ecx

; 144  : 		{	// allocate array of _Count elements

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 145  : 		return (_Allocate(_Count, (pointer)0));

  00003	85 c9		 test	 ecx, ecx
  00005	77 13		 ja	 SHORT $LN5@allocate@9
  00007	33 c9		 xor	 ecx, ecx
$LN3@allocate@9:
  00009	03 c9		 add	 ecx, ecx
  0000b	03 c9		 add	 ecx, ecx
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00013	83 c4 04	 add	 esp, 4

; 146  : 		}

  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	c3		 ret	 0

; 145  : 		return (_Allocate(_Count, (pointer)0));

$LN5@allocate@9:
  0001a	83 c8 ff	 or	 eax, -1
  0001d	33 d2		 xor	 edx, edx
  0001f	f7 f1		 div	 ecx
  00021	83 f8 04	 cmp	 eax, 4
  00024	73 e3		 jae	 SHORT $LN3@allocate@9
  00026	6a 00		 push	 0
  00028	8d 4c 24 04	 lea	 ecx, DWORD PTR $T179501[esp+16]
  0002c	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  00031	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00036	8d 44 24 04	 lea	 eax, DWORD PTR $T179501[esp+16]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@allocate@9:
$LN9@allocate@9:
  00040	cc		 int	 3
?allocate@?$allocator@PAX@std@@QAEPAPAXI@Z ENDP		; std::allocator<void *>::allocate
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z$0
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::_Container_base_aux_alloc_real<std::allocator<void *> >, COMDAT

; 419  : 		{

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c4		 xor	 eax, esp
  00015	50		 push	 eax
  00016	8d 44 24 04	 lea	 eax, DWORD PTR __$EHRec$[esp+16]
  0001a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	83 c4 04	 add	 esp, 4
  0002a	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 0
  00032	85 c0		 test	 eax, eax
  00034	74 08		 je	 SHORT $LN3@Container_
  00036	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A ; PendingThreads
  0003c	eb 02		 jmp	 SHORT $LN4@Container_
$LN3@Container_:
  0003e	33 c0		 xor	 eax, eax
$LN4@Container_:
  00040	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  00048	a3 00 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A, eax

; 421  : 		}

  0004d	b8 00 00 00 00	 mov	 eax, OFFSET ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A ; PendingThreads
  00052	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00056	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005d	59		 pop	 ecx
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z$0:
  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX0@Z		; operator delete
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z:
  00005	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00009	8d 02		 lea	 eax, DWORD PTR [edx]
  0000b	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000e	33 c8		 xor	 ecx, eax
  00010	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00015	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
  0001a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::_Container_base_aux_alloc_real<std::allocator<void *> >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@PAXV?$allocator@PAX@std@@@std@@QBE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 8
?_Make_iter@?$vector@PAXV?$allocator@PAX@std@@@std@@QBE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@@Z PROC ; std::vector<void *,std::allocator<void *> >::_Make_iter, COMDAT
; ___$ReturnUdt$ = esi

; 661  : 		return (iterator(_Where._Myptr, this));

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Where$[esp]
  00004	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0000a	39 05 0c 00 00
	00		 cmp	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, eax
  00010	77 08		 ja	 SHORT $LN8@Make_iter@8
  00012	3b 05 10 00 00
	00		 cmp	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00018	76 09		 jbe	 SHORT $LN7@Make_iter@8
$LN8@Make_iter@8:
  0001a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0001f	8b 44 24 08	 mov	 eax, DWORD PTR __Where$[esp]
$LN7@Make_iter@8:
  00023	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00029	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0002c	89 0e		 mov	 DWORD PTR [esi], ecx
  0002e	8b c6		 mov	 eax, esi

; 662  : 		}

  00030	c2 08 00	 ret	 8
?_Make_iter@?$vector@PAXV?$allocator@PAX@std@@@std@@QBE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Make_iter
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = esi

; 419  : 		{

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c4		 xor	 eax, esp
  00015	50		 push	 eax
  00016	8d 44 24 04	 lea	 eax, DWORD PTR __$EHRec$[esp+16]
  0001a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 420  : 		_Myownedaux = new (_Alaux.allocate(1)) _Aux_cont(this);

  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	83 c4 04	 add	 esp, 4
  0002a	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+24], 0
  00032	85 c0		 test	 eax, eax
  00034	74 04		 je	 SHORT $LN3@Container_@2
  00036	89 30		 mov	 DWORD PTR [eax], esi
  00038	eb 02		 jmp	 SHORT $LN4@Container_@2
$LN3@Container_@2:
  0003a	33 c0		 xor	 eax, eax
$LN4@Container_@2:
  0003c	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  00044	89 06		 mov	 DWORD PTR [esi], eax

; 421  : 		}

  00046	8b c6		 mov	 eax, esi
  00048	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z$0:
  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX0@Z		; operator delete
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z:
  00005	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00009	8d 02		 lea	 eax, DWORD PTR [edx]
  0000b	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000e	33 c8		 xor	 ecx, eax
  00010	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00015	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
  0001a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::~_Container_base_aux_alloc_real<std::allocator<void *> >, COMDAT

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000b	59		 pop	 ecx

; 440  : 		}

  0000c	c3		 ret	 0
??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::~_Container_base_aux_alloc_real<std::allocator<void *> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z$0
__ehfuncinfo$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
_TEXT	SEGMENT
$T179674 = -16						; size = 4
$T179669 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z PROC ; std::_Vector_val<void *,std::allocator<void *> >::_Vector_val<void *,std::allocator<void *> >, COMDAT

; 425  : 		{	// construct allocator from _Al

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00014	33 c4		 xor	 eax, esp
  00016	50		 push	 eax
  00017	8d 44 24 08	 lea	 eax, DWORD PTR __$EHRec$[esp+20]
  0001b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00021	51		 push	 ecx
  00022	89 64 24 08	 mov	 DWORD PTR $T179669[esp+24], esp
  00026	89 64 24 08	 mov	 DWORD PTR $T179674[esp+24], esp
  0002a	e8 00 00 00 00	 call	 ??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::_Container_base_aux_alloc_real<std::allocator<void *> >

; 426  : 		}

  0002f	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00037	b8 00 00 00 00	 mov	 eax, OFFSET ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A ; PendingThreads
  0003c	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z$0:
  00000	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::~_Container_base_aux_alloc_real<std::allocator<void *> >
__ehhandler$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z:
  00005	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00009	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
  0000c	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000f	33 c8		 xor	 ecx, eax
  00011	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00016	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z ENDP ; std::_Vector_val<void *,std::allocator<void *> >::_Vector_val<void *,std::allocator<void *> >
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAXIABQAX@Z
_TEXT	SEGMENT
?_Ufill@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAXIABQAX@Z PROC ; std::vector<void *,std::allocator<void *> >::_Ufill, COMDAT
; __Ptr$ = edi
; __Count$ = esi
; __Val$ = edx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00000	8b c6		 mov	 eax, esi
  00002	8b cf		 mov	 ecx, edi
  00004	85 f6		 test	 esi, esi
  00006	76 15		 jbe	 SHORT $LN26@Ufill@8
  00008	53		 push	 ebx
  00009	8d a4 24 00 00
	00 00		 npad	 7
$LL21@Ufill@8:
  00010	8b 1a		 mov	 ebx, DWORD PTR [edx]
  00012	89 19		 mov	 DWORD PTR [ecx], ebx
  00014	48		 dec	 eax
  00015	83 c1 04	 add	 ecx, 4
  00018	85 c0		 test	 eax, eax
  0001a	77 f4		 ja	 SHORT $LL21@Ufill@8
  0001c	5b		 pop	 ebx
$LN26@Ufill@8:

; 1255 : 		return (_Ptr + _Count);

  0001d	8d 04 b7	 lea	 eax, DWORD PTR [edi+esi*4]

; 1256 : 		}

  00020	c3		 ret	 0
?_Ufill@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAXIABQAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Ufill
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?erase@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@0@Z
_TEXT	SEGMENT
__First_arg$ = 8					; size = 8
__Last_arg$ = 16					; size = 8
?erase@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@0@Z PROC ; std::vector<void *,std::allocator<void *> >::erase, COMDAT
; ___$ReturnUdt$ = edi

; 1029 : 		iterator _First = _Make_iter(_First_arg);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR __First_arg$[esp]
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0000c	39 0d 0c 00 00
	00		 cmp	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, ecx
  00012	77 09		 ja	 SHORT $LN11@erase@8
  00014	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00019	3b c8		 cmp	 ecx, eax
  0001b	76 0e		 jbe	 SHORT $LN10@erase@8
$LN11@erase@8:
  0001d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00022	8b 4c 24 10	 mov	 ecx, DWORD PTR __First_arg$[esp+8]
  00026	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
$LN10@erase@8:

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

  0002b	8b 74 24 18	 mov	 esi, DWORD PTR __Last_arg$[esp+8]
  0002f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00035	89 17		 mov	 DWORD PTR [edi], edx
  00037	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  0003a	39 35 0c 00 00
	00		 cmp	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, esi
  00040	77 04		 ja	 SHORT $LN30@erase@8
  00042	3b f0		 cmp	 esi, eax
  00044	76 0e		 jbe	 SHORT $LN29@erase@8
$LN30@erase@8:
  00046	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0004b	8b 74 24 18	 mov	 esi, DWORD PTR __Last_arg$[esp+8]
  0004f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
$LN29@erase@8:

; 1031 : 
; 1032 : 		if (_First != _Last)

  00054	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00056	85 c9		 test	 ecx, ecx
  00058	74 08		 je	 SHORT $LN47@erase@8
  0005a	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00060	74 0a		 je	 SHORT $LN46@erase@8
$LN47@erase@8:
  00062	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00067	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
$LN46@erase@8:
  0006c	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0006f	3b d6		 cmp	 edx, esi
  00071	74 25		 je	 SHORT $LN72@erase@8

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

  00073	2b c6		 sub	 eax, esi
  00075	c1 f8 02	 sar	 eax, 2
  00078	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0007f	8d 1c 11	 lea	 ebx, DWORD PTR [ecx+edx]
  00082	85 c0		 test	 eax, eax
  00084	7e 0c		 jle	 SHORT $LN69@erase@8
  00086	51		 push	 ecx
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	52		 push	 edx
  0008a	e8 00 00 00 00	 call	 _memmove_s
  0008f	83 c4 10	 add	 esp, 16			; 00000010H
$LN69@erase@8:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

  00092	89 1d 10 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, ebx
$LN72@erase@8:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);
; 1055 : #endif
; 1056 : 		}

  00098	5e		 pop	 esi
  00099	8b c7		 mov	 eax, edi
  0009b	5b		 pop	 ebx
  0009c	c2 10 00	 ret	 16			; 00000010H
?erase@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@0@Z ENDP ; std::vector<void *,std::allocator<void *> >::erase
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ
_TEXT	SEGMENT
?end@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ PROC ; std::vector<void *,std::allocator<void *> >::end, COMDAT
; ___$ReturnUdt$ = esi

; 651  : 		return (iterator(_Mylast, this));

  00000	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00005	57		 push	 edi
  00006	8b f8		 mov	 edi, eax
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0000e	39 05 0c 00 00
	00		 cmp	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, eax
  00014	76 05		 jbe	 SHORT $LN7@end@9
  00016	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN7@end@9:
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00020	89 06		 mov	 DWORD PTR [esi], eax
  00022	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00025	8b c6		 mov	 eax, esi
  00027	5f		 pop	 edi

; 652  : 		}

  00028	c3		 ret	 0
?end@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ ENDP ; std::vector<void *,std::allocator<void *> >::end
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ
_TEXT	SEGMENT
?begin@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ PROC ; std::vector<void *,std::allocator<void *> >::begin, COMDAT
; ___$ReturnUdt$ = esi

; 641  : 		return (iterator(_Myfirst, this));

  00000	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00005	57		 push	 edi
  00006	8b f8		 mov	 edi, eax
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0000e	3b 05 10 00 00
	00		 cmp	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00014	76 05		 jbe	 SHORT $LN7@begin@9
  00016	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN7@begin@9:
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00020	89 06		 mov	 DWORD PTR [esi], eax
  00022	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00025	8b c6		 mov	 eax, esi
  00027	5f		 pop	 edi

; 642  : 		}

  00028	c3		 ret	 0
?begin@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@XZ ENDP ; std::vector<void *,std::allocator<void *> >::begin
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = eax

; 437  : 		_Myownedaux->~_Aux_cont();
; 438  : 
; 439  : 		_Alaux.deallocate(_Myownedaux, 1);

  00000	8b 08		 mov	 ecx, DWORD PTR [eax]
  00002	51		 push	 ecx
  00003	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00008	59		 pop	 ecx

; 440  : 		}

  00009	c3		 ret	 0
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
$T180200 = -16						; size = 4
$T180195 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 425  : 		{	// construct allocator from _Al

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	56		 push	 esi
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	50		 push	 eax
  00018	8d 44 24 0c	 lea	 eax, DWORD PTR __$EHRec$[esp+24]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	8b 74 24 1c	 mov	 esi, DWORD PTR _this$[esp+20]
  00026	51		 push	 ecx
  00027	89 64 24 0c	 mov	 DWORD PTR $T180195[esp+28], esp
  0002b	89 64 24 0c	 mov	 DWORD PTR $T180200[esp+28], esp
  0002f	e8 00 00 00 00	 call	 ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 426  : 		}

  00034	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  0003c	8b c6		 mov	 eax, esi
  0003e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5e		 pop	 esi
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 f8	 lea	 eax, DWORD PTR [edx-8]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ PROC ; std::_Vector_val<void *,std::allocator<void *> >::~_Vector_val<void *,std::allocator<void *> >, COMDAT
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c4		 xor	 eax, esp
  00015	50		 push	 eax
  00016	8d 44 24 04	 lea	 eax, DWORD PTR __$EHRec$[esp+16]
  0001a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00020	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00033	83 c4 04	 add	 esp, 4
  00036	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0003a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00041	59		 pop	 ecx
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
  00045	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$0:
  00000	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::~_Container_base_aux_alloc_real<std::allocator<void *> >
__ehhandler$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ:
  00005	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00009	8d 02		 lea	 eax, DWORD PTR [edx]
  0000b	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000e	33 c8		 xor	 ecx, eax
  00010	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00015	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
  0001a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<void *,std::allocator<void *> >::~_Vector_val<void *,std::allocator<void *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c4		 xor	 eax, esp
  00015	50		 push	 eax
  00016	8d 44 24 04	 lea	 eax, DWORD PTR __$EHRec$[esp+16]
  0001a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00020	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  00028	8b 44 24 14	 mov	 eax, DWORD PTR _this$[esp+12]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00034	83 c4 04	 add	 esp, 4
  00037	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0003b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00042	59		 pop	 ecx
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 02		 lea	 eax, DWORD PTR [edx]
  0000e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00011	33 c8		 xor	 ecx, eax
  00013	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00018	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  0001d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T180265 = -12						; size = 8
?clear@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXXZ PROC ; std::vector<void *,std::allocator<void *> >::clear, COMDAT

; 1060 : 		erase(begin(), end());

  00000	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00006	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  0000b	83 ec 10	 sub	 esp, 16			; 00000010H
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b d9		 mov	 ebx, ecx
  00013	3b c1		 cmp	 eax, ecx
  00015	76 10		 jbe	 SHORT $LN9@clear@9
  00017	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0001c	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00022	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
$LN9@clear@9:
  00027	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  0002d	8b f8		 mov	 edi, eax
  0002f	3b c1		 cmp	 eax, ecx
  00031	76 05		 jbe	 SHORT $LN28@clear@9
  00033	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN28@clear@9:
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  0003d	53		 push	 ebx
  0003e	56		 push	 esi
  0003f	57		 push	 edi
  00040	50		 push	 eax
  00041	8d 7c 24 20	 lea	 edi, DWORD PTR $T180265[esp+44]
  00045	e8 00 00 00 00	 call	 ?erase@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@0@Z ; std::vector<void *,std::allocator<void *> >::erase

; 1061 : 		}

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
  00050	c3		 ret	 0
?clear@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXXZ ENDP ; std::vector<void *,std::allocator<void *> >::clear
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$1
__ehfuncinfo$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ PROC	; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >, COMDAT

; 558  : 		{	// destroy the object

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	56		 push	 esi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00014	33 c4		 xor	 eax, esp
  00016	50		 push	 eax
  00017	8d 44 24 08	 lea	 eax, DWORD PTR __$EHRec$[esp+20]
  0001b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00021	33 f6		 xor	 esi, esi
  00023	89 74 24 10	 mov	 DWORD PTR __$EHRec$[esp+28], esi

; 559  : 		_Tidy();

  00027	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  0002c	3b c6		 cmp	 eax, esi
  0002e	74 09		 je	 SHORT $LN7@vector@8
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00036	83 c4 04	 add	 esp, 4
$LN7@vector@8:
  00039	89 35 0c 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, esi
  0003f	89 35 10 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, esi
  00045	89 35 14 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20, esi

; 560  : 		}

  0004b	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0005e	83 c4 04	 add	 esp, 4
  00061	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	5e		 pop	 esi
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00071	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$0:
  00000	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
__unwindfunclet$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$1:
  00005	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::~_Container_base_aux_alloc_real<std::allocator<void *> >
__ehhandler$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
  00011	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ENDP	; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
PUBLIC	__$ArrayPad$
PUBLIC	?Log@@YAXHHPBDZZ				; Log
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
;	COMDAT ?Log@@YAXHHPBDZZ
_TEXT	SEGMENT
_stLocalTime$144479 = -6100				; size = 16
_dwBytesWritten$144484 = -6084				; size = 4
_logFile$144485 = -6080					; size = 1024
_buffer$ = -5056					; size = 2048
_message$ = -3008					; size = 3000
__$ArrayPad$ = -4					; size = 4
_type$ = 8						; size = 4
_id$ = 12						; size = 4
_format$ = 16						; size = 4
?Log@@YAXHHPBDZZ PROC					; Log, COMDAT

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	b8 d4 17 00 00	 mov	 eax, 6100		; 000017d4H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	89 84 24 d0 17
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+6100], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi

; 150  :     char message[3000] = {0};

  00021	33 db		 xor	 ebx, ebx
  00023	68 b7 0b 00 00	 push	 2999			; 00000bb7H
  00028	8d 84 24 25 0c
	00 00		 lea	 eax, DWORD PTR _message$[esp+6117]
  0002f	53		 push	 ebx
  00030	50		 push	 eax
  00031	88 9c 24 2c 0c
	00 00		 mov	 BYTE PTR _message$[esp+6124], bl
  00038	e8 00 00 00 00	 call	 _memset
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 151  :     char buffer[2048] = {0};

  00040	68 ff 07 00 00	 push	 2047			; 000007ffH
  00045	8d 8c 24 25 04
	00 00		 lea	 ecx, DWORD PTR _buffer$[esp+6117]
  0004c	53		 push	 ebx
  0004d	51		 push	 ecx
  0004e	88 9c 24 2c 04
	00 00		 mov	 BYTE PTR _buffer$[esp+6124], bl
  00055	e8 00 00 00 00	 call	 _memset
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 152  :     va_list	argptr;
; 153  : 
; 154  :     HANDLE hdTh = CreateMutex(NULL,FALSE,"SysStatus_Log");

  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FHDHJHFN@SysStatus_Log?$AA@
  00062	53		 push	 ebx
  00063	53		 push	 ebx
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMutexA@12
  0006a	8b f8		 mov	 edi, eax

; 155  :     WaitForSingleObject(hdTh,INFINITE);

  0006c	6a ff		 push	 -1
  0006e	57		 push	 edi
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 156  : 
; 157  :     //Format the message to be logged
; 158  :     va_start(argptr,format);
; 159  :     _vsnprintf(buffer,sizeof(buffer)-1,format,argptr);

  00075	8b 45 10	 mov	 eax, DWORD PTR _format$[ebp]
  00078	8d 55 14	 lea	 edx, DWORD PTR _format$[ebp+4]
  0007b	52		 push	 edx
  0007c	50		 push	 eax
  0007d	8d 8c 24 28 04
	00 00		 lea	 ecx, DWORD PTR _buffer$[esp+6120]
  00084	68 ff 07 00 00	 push	 2047			; 000007ffH
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 __vsnprintf

; 160  :     va_end(argptr);
; 161  : 
; 162  :     //Format log string according to the type
; 163  :     if(type==LOG_HEADER)

  0008f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00092	83 c4 10	 add	 esp, 16			; 00000010H
  00095	83 f8 02	 cmp	 eax, 2
  00098	0f 85 85 00 00
	00		 jne	 $LN4@Log

; 164  :     {
; 165  :         SYSTEMTIME stLocalTime = {0};

  0009e	33 c0		 xor	 eax, eax
  000a0	89 44 24 0e	 mov	 DWORD PTR _stLocalTime$144479[esp+6114], eax
  000a4	89 44 24 12	 mov	 DWORD PTR _stLocalTime$144479[esp+6118], eax
  000a8	89 44 24 16	 mov	 DWORD PTR _stLocalTime$144479[esp+6122], eax
  000ac	66 89 44 24 1a	 mov	 WORD PTR _stLocalTime$144479[esp+6126], ax

; 166  :         GetLocalTime( &stLocalTime );

  000b1	8d 44 24 0c	 lea	 eax, DWORD PTR _stLocalTime$144479[esp+6112]
  000b5	33 d2		 xor	 edx, edx
  000b7	50		 push	 eax
  000b8	66 89 54 24 10	 mov	 WORD PTR _stLocalTime$144479[esp+6116], dx
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 167  : 
; 168  :         _snprintf(message,sizeof(message),"\r\n%.4d-%.2d-%.2d %.2d:%.2d:%.2d.%.3d PID %.5u TID %.5u ID %.5u\r\n%s\r\n",
; 169  :                   stLocalTime.wYear,stLocalTime.wMonth,stLocalTime.wDay,stLocalTime.wHour,
; 170  :                   stLocalTime.wMinute,stLocalTime.wSecond,stLocalTime.wMilliseconds,
; 171  :                   GetCurrentProcessId(),GetCurrentThreadId(),id,buffer);

  000c3	8b 55 0c	 mov	 edx, DWORD PTR _id$[ebp]
  000c6	8d 8c 24 20 04
	00 00		 lea	 ecx, DWORD PTR _buffer$[esp+6112]
  000cd	51		 push	 ecx
  000ce	52		 push	 edx
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  000d5	50		 push	 eax
  000d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  000dc	0f b7 4c 24 24	 movzx	 ecx, WORD PTR _stLocalTime$144479[esp+6136]
  000e1	0f b7 54 24 22	 movzx	 edx, WORD PTR _stLocalTime$144479[esp+6134]
  000e6	50		 push	 eax
  000e7	0f b7 44 24 2a	 movzx	 eax, WORD PTR _stLocalTime$144479[esp+6142]
  000ec	50		 push	 eax
  000ed	0f b7 44 24 28	 movzx	 eax, WORD PTR _stLocalTime$144479[esp+6140]
  000f2	51		 push	 ecx
  000f3	0f b7 4c 24 2a	 movzx	 ecx, WORD PTR _stLocalTime$144479[esp+6142]
  000f8	52		 push	 edx
  000f9	0f b7 54 24 2a	 movzx	 edx, WORD PTR _stLocalTime$144479[esp+6142]
  000fe	50		 push	 eax
  000ff	0f b7 44 24 2c	 movzx	 eax, WORD PTR _stLocalTime$144479[esp+6144]
  00104	51		 push	 ecx
  00105	52		 push	 edx
  00106	50		 push	 eax
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BJCOJGPD@?$AN?6?$CF?44d?9?$CF?42d?9?$CF?42d?5?$CF?42d?3?$CF?42d?3?$CF?42d?4@
  0010c	8d 8c 24 50 0c
	00 00		 lea	 ecx, DWORD PTR _message$[esp+6160]
  00113	68 b8 0b 00 00	 push	 3000			; 00000bb8H
  00118	51		 push	 ecx
  00119	e8 00 00 00 00	 call	 __snprintf
  0011e	83 c4 38	 add	 esp, 56			; 00000038H

; 172  :     }
; 173  :     if(type==LOG_MESSAGE)

  00121	eb 27		 jmp	 SHORT $LN3@Log
$LN4@Log:
  00123	83 f8 01	 cmp	 eax, 1
  00126	75 22		 jne	 SHORT $LN3@Log

; 174  :     {
; 175  : 
; 176  :         _snprintf(message,sizeof(message),"\t%s\r\n",buffer);

  00128	8d 94 24 20 04
	00 00		 lea	 edx, DWORD PTR _buffer$[esp+6112]
  0012f	52		 push	 edx
  00130	68 00 00 00 00	 push	 OFFSET ??_C@_05OLKONLEL@?7?$CFs?$AN?6?$AA@
  00135	8d 84 24 28 0c
	00 00		 lea	 eax, DWORD PTR _message$[esp+6120]
  0013c	68 b8 0b 00 00	 push	 3000			; 00000bb8H
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 __snprintf
  00147	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@Log:

; 177  :     }
; 178  : 
; 179  :     //if not debug, trace in the file
; 180  :     if(!(type&LOG_DEBUG_ALL))

  0014a	f6 45 08 70	 test	 BYTE PTR _type$[ebp], 112 ; 00000070H
  0014e	0f 85 94 00 00
	00		 jne	 $LN1@Log

; 181  :     {
; 182  : 	    DWORD dwBytesWritten = 0;
; 183  :         char logFile[1024] = {0};

  00154	68 ff 03 00 00	 push	 1023			; 000003ffH
  00159	8d 4c 24 25	 lea	 ecx, DWORD PTR _logFile$144485[esp+6117]
  0015d	53		 push	 ebx
  0015e	51		 push	 ecx
  0015f	89 5c 24 28	 mov	 DWORD PTR _dwBytesWritten$144484[esp+6124], ebx
  00163	88 5c 24 2c	 mov	 BYTE PTR _logFile$144485[esp+6124], bl
  00167	e8 00 00 00 00	 call	 _memset
  0016c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 184  :         _snprintf(logFile,sizeof(logFile),"%s.log",gszLogFilePrefix);

  0016f	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_06BEJGOBHG@?$CFs?4log?$AA@
  00179	8d 54 24 28	 lea	 edx, DWORD PTR _logFile$144485[esp+6120]
  0017d	68 00 04 00 00	 push	 1024			; 00000400H
  00182	52		 push	 edx
  00183	e8 00 00 00 00	 call	 __snprintf
  00188	83 c4 10	 add	 esp, 16			; 00000010H

; 185  :         HANDLE hTraceFile = CreateFile(logFile,
; 186  :                                        GENERIC_READ|GENERIC_WRITE,
; 187  :                                        FILE_SHARE_READ|FILE_SHARE_WRITE,
; 188  :                                        NULL,
; 189  :                                        OPEN_ALWAYS,
; 190  :                                        FILE_ATTRIBUTE_NORMAL,
; 191  :                                        NULL);

  0018b	53		 push	 ebx
  0018c	68 80 00 00 00	 push	 128			; 00000080H
  00191	6a 04		 push	 4
  00193	53		 push	 ebx
  00194	6a 03		 push	 3
  00196	68 00 00 00 c0	 push	 -1073741824		; c0000000H
  0019b	8d 44 24 38	 lea	 eax, DWORD PTR _logFile$144485[esp+6136]
  0019f	50		 push	 eax
  001a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  001a6	8b f0		 mov	 esi, eax

; 192  : 	    if(hTraceFile!=INVALID_HANDLE_VALUE)

  001a8	83 fe ff	 cmp	 esi, -1
  001ab	74 3b		 je	 SHORT $LN1@Log

; 193  : 	    {
; 194  :             //Set position o the end of the file
; 195  :             SetFilePointer(hTraceFile,0,NULL,FILE_END);

  001ad	6a 02		 push	 2
  001af	53		 push	 ebx
  001b0	53		 push	 ebx
  001b1	56		 push	 esi
  001b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFilePointer@16

; 196  : 		    WriteFile(hTraceFile,message,strlen(message),&dwBytesWritten,NULL); 

  001b8	8d 84 24 20 0c
	00 00		 lea	 eax, DWORD PTR _message$[esp+6112]
  001bf	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL7@Log:
  001c2	8a 08		 mov	 cl, BYTE PTR [eax]
  001c4	40		 inc	 eax
  001c5	3a cb		 cmp	 cl, bl
  001c7	75 f9		 jne	 SHORT $LL7@Log
  001c9	53		 push	 ebx
  001ca	8d 4c 24 20	 lea	 ecx, DWORD PTR _dwBytesWritten$144484[esp+6116]
  001ce	51		 push	 ecx
  001cf	2b c2		 sub	 eax, edx
  001d1	50		 push	 eax
  001d2	8d 94 24 2c 0c
	00 00		 lea	 edx, DWORD PTR _message$[esp+6124]
  001d9	52		 push	 edx
  001da	56		 push	 esi
  001db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WriteFile@20

; 197  : 		    CloseHandle(hTraceFile);

  001e1	56		 push	 esi
  001e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN1@Log:

; 198  : 	    }
; 199  :     }
; 200  :     _snprintf(message,sizeof(message),"TID %.5u ID %.5u %s\r\n",GetCurrentThreadId(),id,buffer);

  001e8	8b 4d 0c	 mov	 ecx, DWORD PTR _id$[ebp]
  001eb	8d 84 24 20 04
	00 00		 lea	 eax, DWORD PTR _buffer$[esp+6112]
  001f2	50		 push	 eax
  001f3	51		 push	 ecx
  001f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  001fa	50		 push	 eax
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EELIKDKI@TID?5?$CF?45u?5ID?5?$CF?45u?5?$CFs?$AN?6?$AA@
  00200	8d 94 24 30 0c
	00 00		 lea	 edx, DWORD PTR _message$[esp+6128]
  00207	68 b8 0b 00 00	 push	 3000			; 00000bb8H
  0020c	52		 push	 edx
  0020d	e8 00 00 00 00	 call	 __snprintf
  00212	83 c4 18	 add	 esp, 24			; 00000018H

; 201  : 
; 202  :     ReleaseMutex(hdTh);

  00215	57		 push	 edi
  00216	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4

; 203  :     CloseHandle(hdTh);

  0021c	57		 push	 edi
  0021d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 204  : 
; 205  :     //Trace on debug view
; 206  :     DebugStringToFile(message,type);

  00223	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00226	50		 push	 eax
  00227	8d 8c 24 24 0c
	00 00		 lea	 ecx, DWORD PTR _message$[esp+6116]
  0022e	51		 push	 ecx
  0022f	e8 00 00 00 00	 call	 ?DebugStringToFile@@YAXPADH@Z ; DebugStringToFile

; 207  : }

  00234	8b 8c 24 e4 17
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+6120]
  0023b	83 c4 08	 add	 esp, 8
  0023e	5f		 pop	 edi
  0023f	5e		 pop	 esi
  00240	5b		 pop	 ebx
  00241	33 cc		 xor	 ecx, esp
  00243	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00248	8b e5		 mov	 esp, ebp
  0024a	5d		 pop	 ebp
  0024b	c3		 ret	 0
?Log@@YAXHHPBDZZ ENDP					; Log
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator+=, COMDAT
; _this$ = esi

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	75 0b		 jne	 SHORT $LN26@operator@57
  00006	e8 00 00 00 00	 call	 __invalid_parameter_noinfo

; 161  : 		_SCL_SECURE_VALIDATE_RANGE(

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	85 c0		 test	 eax, eax
  0000f	74 04		 je	 SHORT $LN16@operator@57
$LN26@operator@57:
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	eb 02		 jmp	 SHORT $LN17@operator@57
$LN16@operator@57:
  00015	33 d2		 xor	 edx, edx
$LN17@operator@57:
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	57		 push	 edi
  0001b	8b 7c 24 08	 mov	 edi, DWORD PTR __Off$[esp]
  0001f	03 ff		 add	 edi, edi
  00021	03 ff		 add	 edi, edi
  00023	03 cf		 add	 ecx, edi
  00025	3b 4a 10	 cmp	 ecx, DWORD PTR [edx+16]
  00028	77 0f		 ja	 SHORT $LN4@operator@57
  0002a	85 c0		 test	 eax, eax
  0002c	74 04		 je	 SHORT $LN22@operator@57
  0002e	8b 00		 mov	 eax, DWORD PTR [eax]
  00030	eb 02		 jmp	 SHORT $LN23@operator@57
$LN22@operator@57:
  00032	33 c0		 xor	 eax, eax
$LN23@operator@57:
  00034	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00037	73 05		 jae	 SHORT $LN27@operator@57
$LN4@operator@57:

; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);

  00039	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN27@operator@57:

; 164  : 		_Myptr += _Off;

  0003e	01 7e 04	 add	 DWORD PTR [esi+4], edi

; 165  : 		return (*this);

  00041	8b c6		 mov	 eax, esi
  00043	5f		 pop	 edi

; 166  : 		}

  00044	c2 04 00	 ret	 4
??Y?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ PROC ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator*, COMDAT
; _this$ = esi

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	75 0b		 jne	 SHORT $LN19@operator@58
  00006	e8 00 00 00 00	 call	 __invalid_parameter_noinfo

; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	85 c0		 test	 eax, eax
  0000f	74 04		 je	 SHORT $LN15@operator@58
$LN19@operator@58:
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	eb 02		 jmp	 SHORT $LN16@operator@58
$LN15@operator@58:
  00015	33 c0		 xor	 eax, eax
$LN16@operator@58:
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001d	72 09		 jb	 SHORT $LN20@operator@58
  0001f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo

; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 107  : 		}

  00027	c3		 ret	 0
$LN20@operator@58:

; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

  00028	8b c1		 mov	 eax, ecx

; 107  : 		}

  0002a	c3		 ret	 0
??D?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@std@@QBEABQAXXZ ENDP ; std::_Vector_const_iterator<void *,std::allocator<void *> >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<void *,std::allocator<void *> >::operator+=, COMDAT
; _this$ = esi

; 375  : 		(*(_Mybase *)this) += _Off;

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	75 0b		 jne	 SHORT $LN28@operator@59
  00006	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	85 c0		 test	 eax, eax
  0000f	74 04		 je	 SHORT $LN18@operator@59
$LN28@operator@59:
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	eb 02		 jmp	 SHORT $LN19@operator@59
$LN18@operator@59:
  00015	33 d2		 xor	 edx, edx
$LN19@operator@59:
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	57		 push	 edi
  0001b	8b 7c 24 08	 mov	 edi, DWORD PTR __Off$[esp]
  0001f	03 ff		 add	 edi, edi
  00021	03 ff		 add	 edi, edi
  00023	03 cf		 add	 ecx, edi
  00025	3b 4a 10	 cmp	 ecx, DWORD PTR [edx+16]
  00028	77 0f		 ja	 SHORT $LN6@operator@59
  0002a	85 c0		 test	 eax, eax
  0002c	74 04		 je	 SHORT $LN24@operator@59
  0002e	8b 00		 mov	 eax, DWORD PTR [eax]
  00030	eb 02		 jmp	 SHORT $LN25@operator@59
$LN24@operator@59:
  00032	33 c0		 xor	 eax, eax
$LN25@operator@59:
  00034	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00037	73 05		 jae	 SHORT $LN29@operator@59
$LN6@operator@59:
  00039	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN29@operator@59:
  0003e	01 7e 04	 add	 DWORD PTR [esi+4], edi

; 376  : 		return (*this);

  00041	8b c6		 mov	 eax, esi
  00043	5f		 pop	 edi

; 377  : 		}

  00044	c2 04 00	 ret	 4
??Y?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<void *,std::allocator<void *> >::operator+=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*, COMDAT
; _this$ = esi

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	75 0b		 jne	 SHORT $LN19@operator@60
  00006	e8 00 00 00 00	 call	 __invalid_parameter_noinfo

; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	85 c0		 test	 eax, eax
  0000f	74 04		 je	 SHORT $LN15@operator@60
$LN19@operator@60:
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	eb 02		 jmp	 SHORT $LN16@operator@60
$LN15@operator@60:
  00015	33 c0		 xor	 eax, eax
$LN16@operator@60:
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001d	72 09		 jb	 SHORT $LN20@operator@60
  0001f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo

; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 107  : 		}

  00027	c3		 ret	 0
$LN20@operator@60:

; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

  00028	8b c1		 mov	 eax, ecx

; 107  : 		}

  0002a	c3		 ret	 0
??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??H?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??H?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<void *,std::allocator<void *> >::operator+, COMDAT
; _this$ = eax
; ___$ReturnUdt$ = ebx

; 380  : 		{	// return this + integer

  00000	56		 push	 esi

; 381  : 		_Myt _Tmp = *this;

  00001	8b 30		 mov	 esi, DWORD PTR [eax]
  00003	57		 push	 edi
  00004	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 382  : 		return (_Tmp += _Off);

  00007	85 f6		 test	 esi, esi
  00009	75 1b		 jne	 SHORT $LN30@operator@61
  0000b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00010	33 c0		 xor	 eax, eax
$LN21@operator@61:
  00012	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Off$[esp+4]
  00016	8d 3c 8f	 lea	 edi, DWORD PTR [edi+ecx*4]
  00019	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
  0001c	77 13		 ja	 SHORT $LN8@operator@61
  0001e	85 f6		 test	 esi, esi
  00020	74 08		 je	 SHORT $LN26@operator@61
  00022	8b 06		 mov	 eax, DWORD PTR [esi]
  00024	eb 06		 jmp	 SHORT $LN27@operator@61
$LN30@operator@61:
  00026	8b 06		 mov	 eax, DWORD PTR [esi]
  00028	eb e8		 jmp	 SHORT $LN21@operator@61
$LN26@operator@61:
  0002a	33 c0		 xor	 eax, eax
$LN27@operator@61:
  0002c	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  0002f	73 05		 jae	 SHORT $LN7@operator@61
$LN8@operator@61:
  00031	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN7@operator@61:
  00036	89 7b 04	 mov	 DWORD PTR [ebx+4], edi

; 383  : 		}

  00039	5f		 pop	 edi
  0003a	89 33		 mov	 DWORD PTR [ebx], esi
  0003c	8b c3		 mov	 eax, ebx
  0003e	5e		 pop	 esi
  0003f	c2 04 00	 ret	 4
??H?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<void *,std::allocator<void *> >::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ
_TEXT	SEGMENT
??D?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ PROC ; std::_Vector_iterator<void *,std::allocator<void *> >::operator*, COMDAT
; _this$ = esi

; 339  : 		return ((reference)**(_Mybase *)this);

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	75 0b		 jne	 SHORT $LN21@operator@62
  00006	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	85 c0		 test	 eax, eax
  0000f	74 04		 je	 SHORT $LN17@operator@62
$LN21@operator@62:
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	eb 02		 jmp	 SHORT $LN18@operator@62
$LN17@operator@62:
  00015	33 c0		 xor	 eax, eax
$LN18@operator@62:
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001d	72 09		 jb	 SHORT $LN22@operator@62
  0001f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 340  : 		}

  00027	c3		 ret	 0
$LN22@operator@62:

; 339  : 		return ((reference)**(_Mybase *)this);

  00028	8b c1		 mov	 eax, ecx

; 340  : 		}

  0002a	c3		 ret	 0
??D?$_Vector_iterator@PAXV?$allocator@PAX@std@@@std@@QBEAAPAXXZ ENDP ; std::_Vector_iterator<void *,std::allocator<void *> >::operator*
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*, COMDAT
; _this$ = esi

; 339  : 		return ((reference)**(_Mybase *)this);

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	85 c0		 test	 eax, eax
  00004	75 0b		 jne	 SHORT $LN21@operator@63
  00006	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	85 c0		 test	 eax, eax
  0000f	74 04		 je	 SHORT $LN17@operator@63
$LN21@operator@63:
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	eb 02		 jmp	 SHORT $LN18@operator@63
$LN17@operator@63:
  00015	33 c0		 xor	 eax, eax
$LN18@operator@63:
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0001d	72 09		 jb	 SHORT $LN22@operator@63
  0001f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 340  : 		}

  00027	c3		 ret	 0
$LN22@operator@63:

; 339  : 		return ((reference)**(_Mybase *)this);

  00028	8b c1		 mov	 eax, ecx

; 340  : 		}

  0002a	c3		 ret	 0
??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
_TEXT	ENDS
PUBLIC	_PortName$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z ; GetMediaTypeList
;	COMDAT xdata$x
; File e:\tools\sysstatus\sysstatus.h
xdata$x	SEGMENT
__unwindtable$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z$0
__ehfuncinfo$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z
_TEXT	SEGMENT
_B$ = -312						; size = 8
_pList$ = -304						; size = 4
$T185739 = -300						; size = 4
_mediaTypes$ = -300					; size = 4
_PortName$GSCopy$ = -296				; size = 4
_size$145572 = -292					; size = 4
_szLastError$ = -288					; size = 260
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z PROC ; GetMediaTypeList, COMDAT
; _PrinterName$ = ecx
; _PortName$ = edx

; 2107 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c4		 xor	 eax, esp
  00021	89 84 24 28 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+316], eax
  00028	53		 push	 ebx
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c4		 xor	 eax, esp
  00032	50		 push	 eax
  00033	8d 84 24 40 01
	00 00		 lea	 eax, DWORD PTR __$EHRec$[esp+332]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2108 :     int l = 0, n = 0, i = 0, mediaTypes = 0;

  00040	33 ff		 xor	 edi, edi
  00042	8b f2		 mov	 esi, edx

; 2109 :     LP_PTRDATA_INFO_LIST pList = NULL;
; 2110 : 
; 2111 :     DWORD *pdw = NULL;
; 2112 :     BYTE *ppi = NULL;
; 2113 :     PBuffer B;

  00044	89 7c 24 14	 mov	 DWORD PTR _B$[esp+332], edi
  00048	8b d9		 mov	 ebx, ecx
  0004a	89 74 24 24	 mov	 DWORD PTR _PortName$GSCopy$[esp+332], esi
  0004e	89 7c 24 20	 mov	 DWORD PTR _mediaTypes$[esp+332], edi
  00052	89 7c 24 1c	 mov	 DWORD PTR _pList$[esp+332], edi
  00056	89 7c 24 18	 mov	 DWORD PTR _B$[esp+336], edi
  0005a	89 bc 24 48 01
	00 00		 mov	 DWORD PTR __$EHRec$[esp+340], edi

; 2114 : 
; 2115 :     DWORD dwLastError = 0;
; 2116 :     char szLastError[_MAX_PATH] = {0};

  00061	68 03 01 00 00	 push	 259			; 00000103H
  00066	8d 44 24 31	 lea	 eax, DWORD PTR _szLastError$[esp+337]
  0006a	57		 push	 edi
  0006b	50		 push	 eax
  0006c	c6 44 24 38 00	 mov	 BYTE PTR _szLastError$[esp+344], 0
  00071	e8 00 00 00 00	 call	 _memset

; 2117 : 
; 2118 :     Log(LOG_DEBUG,__LINE__,">> GetMediaTypeList, Name %s, Port %s",PrinterName,PortName);

  00076	56		 push	 esi
  00077	53		 push	 ebx
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@PBHDOEPC@?$DO?$DO?5GetMediaTypeList?0?5Name?5?$CFs?0?5Po@
  0007d	68 46 08 00 00	 push	 2118			; 00000846H
  00082	6a 10		 push	 16			; 00000010H
  00084	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00089	83 c4 20	 add	 esp, 32			; 00000020H

; 2119 : 
; 2120 :     if ((l = DeviceCapabilities(PrinterName, PortName, DC_MEDIATYPES, NULL, NULL)) <= 0)

  0008c	57		 push	 edi
  0008d	57		 push	 edi
  0008e	6a 23		 push	 35			; 00000023H
  00090	56		 push	 esi
  00091	53		 push	 ebx
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00098	8b f0		 mov	 esi, eax
  0009a	85 f6		 test	 esi, esi
  0009c	7f 44		 jg	 SHORT $LN17@GetMediaTy

; 2121 :     {
; 2122 :         dwLastError = GetLastError();

  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000a4	8b d8		 mov	 ebx, eax

; 2123 :         GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  000a6	68 03 01 00 00	 push	 259			; 00000103H
  000ab	8d 74 24 30	 lea	 esi, DWORD PTR _szLastError$[esp+336]
  000af	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2124 :         Log(LOG_DEBUG,__LINE__,"<< GetMediaTypeList, DeviceCapabilities(DC_MEDIATYPES, null) Err %d Msg %s",dwLastError,szLastError);

  000b4	8b ce		 mov	 ecx, esi
  000b6	51		 push	 ecx
  000b7	53		 push	 ebx
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@HJFPMCKK@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@
  000bd	68 4c 08 00 00	 push	 2124			; 0000084cH
  000c2	6a 10		 push	 16			; 00000010H
  000c4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000c9	83 c4 18	 add	 esp, 24			; 00000018H

; 2125 :         return NULL;

  000cc	c7 84 24 48 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+340], -1
  000d7	89 7c 24 18	 mov	 DWORD PTR _B$[esp+336], edi
  000db	33 c0		 xor	 eax, eax
  000dd	e9 60 02 00 00	 jmp	 $LN18@GetMediaTy
$LN17@GetMediaTy:

; 2126 :     }
; 2127 :     else
; 2128 :     {
; 2129 :         ppi = B._allocMem(l*sizeof(DWORD));

  000e2	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]
  000e9	85 c0		 test	 eax, eax
  000eb	7e 27		 jle	 SHORT $LN55@GetMediaTy
  000ed	50		 push	 eax
  000ee	89 44 24 1c	 mov	 DWORD PTR _B$[esp+340], eax
  000f2	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000f7	8b f8		 mov	 edi, eax
  000f9	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]
  00100	50		 push	 eax
  00101	6a 00		 push	 0
  00103	57		 push	 edi
  00104	89 7c 24 24	 mov	 DWORD PTR _B$[esp+348], edi
  00108	e8 00 00 00 00	 call	 _memset
  0010d	83 c4 10	 add	 esp, 16			; 00000010H

; 2130 :         if (!ppi)

  00110	85 ff		 test	 edi, edi
  00112	75 1a		 jne	 SHORT $LN15@GetMediaTy
$LN55@GetMediaTy:

; 2131 :         {
; 2132 :             Log(LOG_DEBUG,__LINE__,"-- GetMediaTypeList, <%s> new DC_MEDIATYPES mem null",PrinterName);

  00114	53		 push	 ebx
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@EKPICGIC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@
  0011a	68 54 08 00 00	 push	 2132			; 00000854H
  0011f	6a 10		 push	 16			; 00000010H
  00121	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00126	83 c4 10	 add	 esp, 16			; 00000010H

; 2133 :         }
; 2134 :         else

  00129	e9 08 01 00 00	 jmp	 $LN8@GetMediaTy
$LN15@GetMediaTy:

; 2135 :         {
; 2136 :             mediaTypes = l;
; 2137 :             size_t size = sizeof(PTRDATA_INFO_LIST)+((l-1)*sizeof(PTRDATA_INFO));

  0012e	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00131	69 c0 10 01 00
	00		 imul	 eax, 272		; 00000110H
  00137	05 14 01 00 00	 add	 eax, 276		; 00000114H

; 2138 :             pList = (LP_PTRDATA_INFO_LIST)new BYTE[size];

  0013c	50		 push	 eax
  0013d	89 74 24 24	 mov	 DWORD PTR _mediaTypes$[esp+336], esi
  00141	89 44 24 2c	 mov	 DWORD PTR _size$145572[esp+336], eax
  00145	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0014a	83 c4 04	 add	 esp, 4
  0014d	89 44 24 1c	 mov	 DWORD PTR _pList$[esp+332], eax

; 2139 :             if (!pList)

  00151	85 c0		 test	 eax, eax
  00153	75 35		 jne	 SHORT $LN13@GetMediaTy

; 2140 :             {
; 2141 :                 Log(LOG_DEBUG,__LINE__,"<< GetMediaTypeList, <%s> new PTRDATA_INFO_LIST mem null",PrinterName);

  00155	53		 push	 ebx
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@IAEPPFOH@?$DM?$DM?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5PT@
  0015b	68 5d 08 00 00	 push	 2141			; 0000085dH
  00160	6a 10		 push	 16			; 00000010H
  00162	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2142 :                 return NULL;

  00167	c7 84 24 58 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+356], -1
  00172	57		 push	 edi
  00173	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00178	83 c4 14	 add	 esp, 20			; 00000014H
  0017b	33 c0		 xor	 eax, eax
  0017d	89 44 24 14	 mov	 DWORD PTR _B$[esp+332], eax
  00181	89 44 24 18	 mov	 DWORD PTR _B$[esp+336], eax
  00185	e9 b8 01 00 00	 jmp	 $LN18@GetMediaTy
$LN13@GetMediaTy:

; 2143 :             }
; 2144 :             memset(pList,0x00,size);

  0018a	8b 54 24 28	 mov	 edx, DWORD PTR _size$145572[esp+332]
  0018e	52		 push	 edx
  0018f	6a 00		 push	 0
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 _memset

; 2145 :             pList->num = mediaTypes;
; 2146 : 
; 2147 :             if ((n = DeviceCapabilities(PrinterName, PortName, DC_MEDIATYPES, (LPSTR)ppi, NULL)) != l)

  00197	8b 4c 24 30	 mov	 ecx, DWORD PTR _PortName$GSCopy$[esp+344]
  0019b	8b 44 24 28	 mov	 eax, DWORD PTR _pList$[esp+344]
  0019f	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a2	6a 00		 push	 0
  001a4	57		 push	 edi
  001a5	6a 23		 push	 35			; 00000023H
  001a7	51		 push	 ecx
  001a8	53		 push	 ebx
  001a9	89 30		 mov	 DWORD PTR [eax], esi
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  001b1	3b c6		 cmp	 eax, esi
  001b3	74 59		 je	 SHORT $LN12@GetMediaTy

; 2148 :             {
; 2149 :                 dwLastError = GetLastError();

  001b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001bb	8b d8		 mov	 ebx, eax

; 2150 :                 GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  001bd	68 03 01 00 00	 push	 259			; 00000103H
  001c2	8d 74 24 30	 lea	 esi, DWORD PTR _szLastError$[esp+336]
  001c6	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2151 :                 Log(LOG_DEBUG,__LINE__,"<< GetMediaTypeList, DeviceCapabilities(DC_MEDIATYPES, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  001cb	8b d6		 mov	 edx, esi
  001cd	52		 push	 edx
  001ce	53		 push	 ebx
  001cf	57		 push	 edi
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@PFOHCMBM@?$DM?$DM?5GetMediaTypeList?0?5DeviceCapab@
  001d5	68 67 08 00 00	 push	 2151			; 00000867H
  001da	6a 10		 push	 16			; 00000010H
  001dc	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2152 :                 delete [] pList;

  001e1	8b 44 24 38	 mov	 eax, DWORD PTR _pList$[esp+360]
  001e5	50		 push	 eax
  001e6	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 2153 :                 return NULL;

  001eb	c7 84 24 68 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+372], -1
  001f6	57		 push	 edi
  001f7	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  001fc	83 c4 24	 add	 esp, 36			; 00000024H
  001ff	33 c0		 xor	 eax, eax
  00201	89 44 24 14	 mov	 DWORD PTR _B$[esp+332], eax
  00205	89 44 24 18	 mov	 DWORD PTR _B$[esp+336], eax
  00209	e9 34 01 00 00	 jmp	 $LN18@GetMediaTy
$LN12@GetMediaTy:

; 2154 :             }
; 2155 :             else
; 2156 :             {
; 2157 :                 for (i=0, pdw=(DWORD *)ppi; i<n; i++, pdw++)

  0020e	85 c0		 test	 eax, eax
  00210	7e 20		 jle	 SHORT $LN56@GetMediaTy
  00212	8b 4c 24 1c	 mov	 ecx, DWORD PTR _pList$[esp+332]
  00216	83 c1 04	 add	 ecx, 4
  00219	8d a4 24 00 00
	00 00		 npad	 7
$LL10@GetMediaTy:

; 2158 :                 {
; 2159 :                     pList->PtrDataInfo[i].id = *pdw;

  00220	8b 17		 mov	 edx, DWORD PTR [edi]
  00222	89 11		 mov	 DWORD PTR [ecx], edx
  00224	81 c1 10 01 00
	00		 add	 ecx, 272		; 00000110H
  0022a	83 c7 04	 add	 edi, 4
  0022d	83 e8 01	 sub	 eax, 1
  00230	75 ee		 jne	 SHORT $LL10@GetMediaTy
$LN56@GetMediaTy:

; 2154 :             }
; 2155 :             else
; 2156 :             {
; 2157 :                 for (i=0, pdw=(DWORD *)ppi; i<n; i++, pdw++)

  00232	8b 7c 24 14	 mov	 edi, DWORD PTR _B$[esp+332]
$LN8@GetMediaTy:

; 2160 :                 }
; 2161 :             }
; 2162 :         }
; 2163 :     }
; 2164 : 
; 2165 :     // *** media type names
; 2166 :     ppi = B._allocMem(mediaTypes*sizeof(NAME_64BYTES));

  00236	8b 44 24 20	 mov	 eax, DWORD PTR _mediaTypes$[esp+332]
  0023a	c1 e0 06	 shl	 eax, 6
  0023d	3b 44 24 18	 cmp	 eax, DWORD PTR _B$[esp+336]
  00241	89 44 24 20	 mov	 DWORD PTR $T185739[esp+332], eax
  00245	7e 33		 jle	 SHORT $LN43@GetMediaTy
  00247	85 ff		 test	 edi, edi
  00249	74 0d		 je	 SHORT $LN42@GetMediaTy
  0024b	57		 push	 edi
  0024c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00251	8b 44 24 24	 mov	 eax, DWORD PTR $T185739[esp+336]
  00255	83 c4 04	 add	 esp, 4
$LN42@GetMediaTy:
  00258	50		 push	 eax
  00259	89 44 24 1c	 mov	 DWORD PTR _B$[esp+340], eax
  0025d	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00262	8b 4c 24 24	 mov	 ecx, DWORD PTR $T185739[esp+336]
  00266	51		 push	 ecx
  00267	6a 00		 push	 0
  00269	50		 push	 eax
  0026a	89 44 24 24	 mov	 DWORD PTR _B$[esp+348], eax
  0026e	e8 00 00 00 00	 call	 _memset
  00273	8b 7c 24 24	 mov	 edi, DWORD PTR _B$[esp+348]
  00277	83 c4 10	 add	 esp, 16			; 00000010H
$LN43@GetMediaTy:

; 2167 :     if (!ppi)

  0027a	85 ff		 test	 edi, edi
  0027c	75 17		 jne	 SHORT $LN7@GetMediaTy

; 2168 :     {
; 2169 :         Log(LOG_DEBUG,__LINE__,"-- GetMediaTypeList, <%s> new DC_MEDIATYPENAMES mem null",PrinterName);

  0027e	53		 push	 ebx
  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@CAKMLHPC@?9?9?5GetMediaTypeList?0?5?$DM?$CFs?$DO?5new?5DC@
  00284	68 79 08 00 00	 push	 2169			; 00000879H
  00289	6a 10		 push	 16			; 00000010H
  0028b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00290	83 c4 10	 add	 esp, 16			; 00000010H

; 2170 :     }
; 2171 :     else

  00293	eb 70		 jmp	 SHORT $LN1@GetMediaTy
$LN7@GetMediaTy:

; 2172 :     {
; 2173 :         if ((n = DeviceCapabilities(PrinterName, PortName, DC_MEDIATYPENAMES, (LPSTR)ppi, NULL)) != l)

  00295	8b 54 24 24	 mov	 edx, DWORD PTR _PortName$GSCopy$[esp+332]
  00299	6a 00		 push	 0
  0029b	57		 push	 edi
  0029c	6a 22		 push	 34			; 00000022H
  0029e	52		 push	 edx
  0029f	53		 push	 ebx
  002a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  002a6	3b c6		 cmp	 eax, esi
  002a8	74 31		 je	 SHORT $LN5@GetMediaTy

; 2174 :         {
; 2175 :             dwLastError = GetLastError();

  002aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  002b0	8b d8		 mov	 ebx, eax

; 2176 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  002b2	68 03 01 00 00	 push	 259			; 00000103H
  002b7	8d 74 24 30	 lea	 esi, DWORD PTR _szLastError$[esp+336]
  002bb	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2177 :             Log(LOG_DEBUG,__LINE__,"-- GetMediaTypeList, DeviceCapabilities(DC_MEDIATYPENAMES, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  002c0	8b c6		 mov	 eax, esi
  002c2	50		 push	 eax
  002c3	53		 push	 ebx
  002c4	57		 push	 edi
  002c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@LODPGLOM@?9?9?5GetMediaTypeList?0?5DeviceCapab@
  002ca	68 81 08 00 00	 push	 2177			; 00000881H
  002cf	6a 10		 push	 16			; 00000010H
  002d1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002d6	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2178 :         }
; 2179 :         else

  002d9	eb 2a		 jmp	 SHORT $LN1@GetMediaTy
$LN5@GetMediaTy:

; 2180 :         {
; 2181 :             NAME_64BYTES *pn64 = NULL;
; 2182 :             for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  002db	8b df		 mov	 ebx, edi
  002dd	85 c0		 test	 eax, eax
  002df	7e 24		 jle	 SHORT $LN1@GetMediaTy
  002e1	8b 54 24 1c	 mov	 edx, DWORD PTR _pList$[esp+332]
  002e5	83 c2 08	 add	 edx, 8
$LN3@GetMediaTy:

; 2183 :             {
; 2184 :                 memcpy(pList->PtrDataInfo[i].name,pn64->name,sizeof(NAME_64BYTES));

  002e8	8b f3		 mov	 esi, ebx
  002ea	8b fa		 mov	 edi, edx
  002ec	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002f1	81 c2 10 01 00
	00		 add	 edx, 272		; 00000110H
  002f7	83 c3 40	 add	 ebx, 64			; 00000040H
  002fa	83 e8 01	 sub	 eax, 1
  002fd	f3 a5		 rep movsd
  002ff	75 e7		 jne	 SHORT $LN3@GetMediaTy

; 2180 :         {
; 2181 :             NAME_64BYTES *pn64 = NULL;
; 2182 :             for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  00301	8b 7c 24 14	 mov	 edi, DWORD PTR _B$[esp+332]
$LN1@GetMediaTy:

; 2185 :             }
; 2186 :         }
; 2187 :     }
; 2188 : 
; 2189 :     Log(LOG_DEBUG,__LINE__,"<< GetMediaTypeList, List %p",pList);

  00305	8b 74 24 1c	 mov	 esi, DWORD PTR _pList$[esp+332]
  00309	56		 push	 esi
  0030a	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IBLEBHCE@?$DM?$DM?5GetMediaTypeList?0?5List?5?$CFp?$AA@
  0030f	68 8d 08 00 00	 push	 2189			; 0000088dH
  00314	6a 10		 push	 16			; 00000010H
  00316	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0031b	83 c4 10	 add	 esp, 16			; 00000010H

; 2190 :     return pList;

  0031e	c7 84 24 48 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+340], -1
  00329	33 db		 xor	 ebx, ebx
  0032b	3b fb		 cmp	 edi, ebx
  0032d	74 0d		 je	 SHORT $LN48@GetMediaTy
  0032f	57		 push	 edi
  00330	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00335	83 c4 04	 add	 esp, 4
  00338	89 5c 24 14	 mov	 DWORD PTR _B$[esp+332], ebx
$LN48@GetMediaTy:
  0033c	89 5c 24 18	 mov	 DWORD PTR _B$[esp+336], ebx
  00340	8b c6		 mov	 eax, esi
$LN18@GetMediaTy:

; 2191 : }

  00342	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+332]
  00349	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00350	59		 pop	 ecx
  00351	5f		 pop	 edi
  00352	5e		 pop	 esi
  00353	5b		 pop	 ebx
  00354	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+316]
  0035b	33 cc		 xor	 ecx, esp
  0035d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00362	8b e5		 mov	 esp, ebp
  00364	5d		 pop	 ebp
  00365	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z$0:
  00000	8d b5 c8 fe ff
	ff		 lea	 esi, DWORD PTR _B$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1PBuffer@@QAE@XZ	; PBuffer::~PBuffer
__ehhandler$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 82 c4 fe ff
	ff		 lea	 eax, DWORD PTR [edx-316]
  00015	8b 8a c0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-320]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	83 c0 0c	 add	 eax, 12			; 0000000cH
  00025	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z ENDP ; GetMediaTypeList
PUBLIC	_PortName$GSCopy$
PUBLIC	_PrinterName$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z	; GetPaperList
;	COMDAT xdata$x
; File e:\tools\sysstatus\sysstatus.h
xdata$x	SEGMENT
__unwindtable$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z$0
__ehfuncinfo$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z
_TEXT	SEGMENT
_B$ = -312						; size = 8
_PrinterName$GSCopy$ = -304				; size = 4
_pList$ = -300						; size = 4
_PortName$GSCopy$ = -296				; size = 4
_l$ = -292						; size = 4
_szLastError$ = -288					; size = 260
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z PROC	; GetPaperList, COMDAT
; _PrinterName$ = ecx
; _PortName$ = edx

; 1994 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c4		 xor	 eax, esp
  00021	89 84 24 28 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+316], eax
  00028	53		 push	 ebx
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c4		 xor	 eax, esp
  00032	50		 push	 eax
  00033	8d 84 24 40 01
	00 00		 lea	 eax, DWORD PTR __$EHRec$[esp+332]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1995 :     int l = 0, n = 0, i = 0, papers = 0;
; 1996 :     LP_PTRDATA_INFO_LIST pList = NULL;
; 1997 : 
; 1998 :     WORD *pw = NULL;
; 1999 :     BYTE *ppi = NULL;
; 2000 :     POINT *pp = NULL;
; 2001 :     PBuffer B;

  00040	33 f6		 xor	 esi, esi
  00042	8b f9		 mov	 edi, ecx
  00044	8b da		 mov	 ebx, edx

; 2002 : 
; 2003 :     DWORD dwLastError = 0;
; 2004 :     char szLastError[_MAX_PATH] = {0};
; 2005 : 
; 2006 :     Log(LOG_DEBUG,__LINE__,">> GetPaperList, Name %s, Port %s",PrinterName,PortName);
; 2007 : 
; 2008 :     // *** papers
; 2009 :     if ((l = DeviceCapabilities(PrinterName, PortName, DC_PAPERS, NULL, NULL)) <= 0)

  00046	89 7c 24 1c	 mov	 DWORD PTR _PrinterName$GSCopy$[esp+332], edi
  0004a	89 5c 24 24	 mov	 DWORD PTR _PortName$GSCopy$[esp+332], ebx
  0004e	89 74 24 14	 mov	 DWORD PTR _B$[esp+332], esi
  00052	89 74 24 18	 mov	 DWORD PTR _B$[esp+336], esi
  00056	89 b4 24 48 01
	00 00		 mov	 DWORD PTR __$EHRec$[esp+340], esi
  0005d	68 03 01 00 00	 push	 259			; 00000103H
  00062	8d 44 24 31	 lea	 eax, DWORD PTR _szLastError$[esp+337]
  00066	56		 push	 esi
  00067	50		 push	 eax
  00068	c6 44 24 38 00	 mov	 BYTE PTR _szLastError$[esp+344], 0
  0006d	e8 00 00 00 00	 call	 _memset
  00072	53		 push	 ebx
  00073	57		 push	 edi
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@ONAFHJDF@?$DO?$DO?5GetPaperList?0?5Name?5?$CFs?0?5Port?5?$CF@
  00079	68 d6 07 00 00	 push	 2006			; 000007d6H
  0007e	6a 10		 push	 16			; 00000010H
  00080	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00085	83 c4 20	 add	 esp, 32			; 00000020H
  00088	56		 push	 esi
  00089	56		 push	 esi
  0008a	6a 02		 push	 2
  0008c	53		 push	 ebx
  0008d	57		 push	 edi
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00094	8b d8		 mov	 ebx, eax
  00096	3b de		 cmp	 ebx, esi
  00098	89 5c 24 28	 mov	 DWORD PTR _l$[esp+332], ebx
  0009c	7f 48		 jg	 SHORT $LN24@GetPaperLi

; 2010 :     {
; 2011 :         dwLastError = GetLastError();

  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000a4	8b d8		 mov	 ebx, eax

; 2012 :         GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  000a6	68 03 01 00 00	 push	 259			; 00000103H
  000ab	8d 74 24 30	 lea	 esi, DWORD PTR _szLastError$[esp+336]
  000af	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2013 :         Log(LOG_DEBUG,__LINE__,"<< GetPaperList, DeviceCapabilities(DC_PAPERS, null) Err %d Msg %s",dwLastError,szLastError);

  000b4	8b ce		 mov	 ecx, esi
  000b6	51		 push	 ecx
  000b7	53		 push	 ebx
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@BJPJPBDI@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@
  000bd	68 dd 07 00 00	 push	 2013			; 000007ddH
  000c2	6a 10		 push	 16			; 00000010H
  000c4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000c9	83 c4 18	 add	 esp, 24			; 00000018H
$LN80@GetPaperLi:

; 2014 :         return NULL;

  000cc	c7 84 24 48 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+340], -1
  000d7	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _B$[esp+336], 0
  000df	33 c0		 xor	 eax, eax
  000e1	e9 0a 03 00 00	 jmp	 $LN25@GetPaperLi
$LN24@GetPaperLi:

; 2015 :     }
; 2016 :     else
; 2017 :     {
; 2018 :         ppi = B._allocMem(l*sizeof(WORD));

  000e6	8d 34 1b	 lea	 esi, DWORD PTR [ebx+ebx]
  000e9	85 f6		 test	 esi, esi
  000eb	7e 24		 jle	 SHORT $LN73@GetPaperLi
  000ed	56		 push	 esi
  000ee	89 74 24 1c	 mov	 DWORD PTR _B$[esp+340], esi
  000f2	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000f7	56		 push	 esi
  000f8	8b f8		 mov	 edi, eax
  000fa	6a 00		 push	 0
  000fc	57		 push	 edi
  000fd	89 7c 24 24	 mov	 DWORD PTR _B$[esp+348], edi
  00101	e8 00 00 00 00	 call	 _memset
  00106	83 c4 10	 add	 esp, 16			; 00000010H

; 2019 :         if (!ppi)

  00109	85 ff		 test	 edi, edi
  0010b	75 1b		 jne	 SHORT $LN22@GetPaperLi
  0010d	8b 7c 24 1c	 mov	 edi, DWORD PTR _PrinterName$GSCopy$[esp+332]
$LN73@GetPaperLi:

; 2020 :         {
; 2021 :             Log(LOG_DEBUG,__LINE__,"<< GetPaperList, <%s> new DC_PAPERS mem null",PrinterName);

  00111	57		 push	 edi
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@BIOGLDPF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@
  00117	68 e5 07 00 00	 push	 2021			; 000007e5H
  0011c	6a 10		 push	 16			; 00000010H
  0011e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00123	83 c4 10	 add	 esp, 16			; 00000010H

; 2022 :             return NULL;

  00126	eb a4		 jmp	 SHORT $LN80@GetPaperLi
$LN22@GetPaperLi:

; 2023 :         }
; 2024 :         else
; 2025 :         {
; 2026 :             papers = l;
; 2027 :             size_t size = sizeof(PTRDATA_INFO_LIST)+((l-1)*sizeof(PTRDATA_INFO));

  00128	8d 73 ff	 lea	 esi, DWORD PTR [ebx-1]
  0012b	69 f6 10 01 00
	00		 imul	 esi, 272		; 00000110H
  00131	81 c6 14 01 00
	00		 add	 esi, 276		; 00000114H

; 2028 :             pList = (LP_PTRDATA_INFO_LIST)new BYTE[size];

  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0013d	83 c4 04	 add	 esp, 4
  00140	89 44 24 20	 mov	 DWORD PTR _pList$[esp+332], eax

; 2029 :             if (!pList)

  00144	85 c0		 test	 eax, eax
  00146	75 39		 jne	 SHORT $LN20@GetPaperLi

; 2030 :             {
; 2031 :                 Log(LOG_DEBUG,__LINE__,"<< GetPaperList, <%s> new PTRDATA_INFO_LIST mem null",PrinterName);

  00148	8b 54 24 1c	 mov	 edx, DWORD PTR _PrinterName$GSCopy$[esp+332]
  0014c	52		 push	 edx
  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@MINJLAHF@?$DM?$DM?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5PTRDAT@
  00152	68 ef 07 00 00	 push	 2031			; 000007efH
  00157	6a 10		 push	 16			; 00000010H
  00159	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2032 :                 return NULL;

  0015e	c7 84 24 58 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+356], -1
  00169	57		 push	 edi
  0016a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0016f	83 c4 14	 add	 esp, 20			; 00000014H
  00172	33 c0		 xor	 eax, eax
  00174	89 44 24 14	 mov	 DWORD PTR _B$[esp+332], eax
  00178	89 44 24 18	 mov	 DWORD PTR _B$[esp+336], eax
  0017c	e9 6f 02 00 00	 jmp	 $LN25@GetPaperLi
$LN20@GetPaperLi:

; 2033 :             }
; 2034 :             memset(pList,0x00,size);

  00181	56		 push	 esi
  00182	6a 00		 push	 0
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 _memset

; 2035 :             pList->num = papers;
; 2036 : 
; 2037 :             if ((n = DeviceCapabilities(PrinterName, PortName, DC_PAPERS, (LPSTR)ppi, NULL)) != l)

  0018a	8b 44 24 30	 mov	 eax, DWORD PTR _PortName$GSCopy$[esp+344]
  0018e	8b 4c 24 28	 mov	 ecx, DWORD PTR _PrinterName$GSCopy$[esp+344]
  00192	8b 74 24 2c	 mov	 esi, DWORD PTR _pList$[esp+344]
  00196	83 c4 0c	 add	 esp, 12			; 0000000cH
  00199	6a 00		 push	 0
  0019b	57		 push	 edi
  0019c	6a 02		 push	 2
  0019e	50		 push	 eax
  0019f	51		 push	 ecx
  001a0	89 1e		 mov	 DWORD PTR [esi], ebx
  001a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  001a8	3b c3		 cmp	 eax, ebx
  001aa	74 59		 je	 SHORT $LN19@GetPaperLi

; 2038 :             {
; 2039 :                 dwLastError = GetLastError();

  001ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001b2	8b d8		 mov	 ebx, eax

; 2040 :                 GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  001b4	68 03 01 00 00	 push	 259			; 00000103H
  001b9	8d 74 24 30	 lea	 esi, DWORD PTR _szLastError$[esp+336]
  001bd	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2041 :                 Log(LOG_DEBUG,__LINE__,"<< GetPaperList, DeviceCapabilities(DC_PAPERS, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  001c2	8b d6		 mov	 edx, esi
  001c4	52		 push	 edx
  001c5	53		 push	 ebx
  001c6	57		 push	 edi
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@CEGPPGMD@?$DM?$DM?5GetPaperList?0?5DeviceCapabilit@
  001cc	68 f9 07 00 00	 push	 2041			; 000007f9H
  001d1	6a 10		 push	 16			; 00000010H
  001d3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2042 :                 delete [] pList;

  001d8	8b 44 24 3c	 mov	 eax, DWORD PTR _pList$[esp+360]
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 2043 :                 return NULL;

  001e2	c7 84 24 68 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+372], -1
  001ed	57		 push	 edi
  001ee	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  001f3	83 c4 24	 add	 esp, 36			; 00000024H
  001f6	33 c0		 xor	 eax, eax
  001f8	89 44 24 14	 mov	 DWORD PTR _B$[esp+332], eax
  001fc	89 44 24 18	 mov	 DWORD PTR _B$[esp+336], eax
  00200	e9 eb 01 00 00	 jmp	 $LN25@GetPaperLi
$LN19@GetPaperLi:

; 2044 :             }
; 2045 :             else
; 2046 :             {
; 2047 :                 for (i=0, pw=(WORD *)ppi; i<n; i++, pw++)

  00205	8b d7		 mov	 edx, edi
  00207	85 c0		 test	 eax, eax
  00209	7e 18		 jle	 SHORT $LN15@GetPaperLi
  0020b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0020e	8b ff		 npad	 2
$LL17@GetPaperLi:

; 2048 :                 {
; 2049 :                     pList->PtrDataInfo[i].id = *pw;

  00210	0f b7 32	 movzx	 esi, WORD PTR [edx]
  00213	89 31		 mov	 DWORD PTR [ecx], esi
  00215	81 c1 10 01 00
	00		 add	 ecx, 272		; 00000110H
  0021b	83 c2 02	 add	 edx, 2
  0021e	83 e8 01	 sub	 eax, 1
  00221	75 ed		 jne	 SHORT $LL17@GetPaperLi
$LN15@GetPaperLi:

; 2050 :                 }
; 2051 :             }
; 2052 :         }
; 2053 :     }
; 2054 : 
; 2055 :     // *** paper sizes
; 2056 :     ppi = B._allocMem(papers*sizeof(POINT));

  00223	8d 34 dd 00 00
	00 00		 lea	 esi, DWORD PTR [ebx*8]
  0022a	8d 04 1b	 lea	 eax, DWORD PTR [ebx+ebx]
  0022d	3b f0		 cmp	 esi, eax
  0022f	7e 20		 jle	 SHORT $LN76@GetPaperLi
  00231	57		 push	 edi
  00232	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00237	56		 push	 esi
  00238	89 74 24 20	 mov	 DWORD PTR _B$[esp+344], esi
  0023c	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00241	56		 push	 esi
  00242	6a 00		 push	 0
  00244	50		 push	 eax
  00245	89 44 24 28	 mov	 DWORD PTR _B$[esp+352], eax
  00249	e8 00 00 00 00	 call	 _memset
  0024e	83 c4 14	 add	 esp, 20			; 00000014H
$LN76@GetPaperLi:
  00251	8b 7c 24 14	 mov	 edi, DWORD PTR _B$[esp+332]

; 2057 :     if (!ppi)

  00255	85 ff		 test	 edi, edi
  00257	75 1b		 jne	 SHORT $LN14@GetPaperLi

; 2058 :     {
; 2059 :         Log(LOG_DEBUG,__LINE__,"-- GetPaperList, <%s> new DC_PAPERSIZE mem null",PrinterName);

  00259	8b 4c 24 1c	 mov	 ecx, DWORD PTR _PrinterName$GSCopy$[esp+332]
  0025d	51		 push	 ecx
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@NJCIHNJI@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@
  00263	68 0b 08 00 00	 push	 2059			; 0000080bH
  00268	6a 10		 push	 16			; 00000010H
  0026a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0026f	83 c4 10	 add	 esp, 16			; 00000010H

; 2060 :     }
; 2061 :     else

  00272	eb 76		 jmp	 SHORT $LN8@GetPaperLi
$LN14@GetPaperLi:

; 2062 :     {
; 2063 :         if ((n = DeviceCapabilities(PrinterName, PortName, DC_PAPERSIZE, (LPSTR)ppi, NULL)) != l)

  00274	8b 54 24 24	 mov	 edx, DWORD PTR _PortName$GSCopy$[esp+332]
  00278	8b 44 24 1c	 mov	 eax, DWORD PTR _PrinterName$GSCopy$[esp+332]
  0027c	6a 00		 push	 0
  0027e	57		 push	 edi
  0027f	6a 03		 push	 3
  00281	52		 push	 edx
  00282	50		 push	 eax
  00283	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00289	3b c3		 cmp	 eax, ebx
  0028b	74 35		 je	 SHORT $LN12@GetPaperLi

; 2064 :         {
; 2065 :             dwLastError = GetLastError();

  0028d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00293	8b d8		 mov	 ebx, eax

; 2066 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00295	68 03 01 00 00	 push	 259			; 00000103H
  0029a	8d 74 24 30	 lea	 esi, DWORD PTR _szLastError$[esp+336]
  0029e	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2067 :             Log(LOG_DEBUG,__LINE__,"-- GetPaperList, DeviceCapabilities(DC_PAPERSIZE, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  002a3	8b ce		 mov	 ecx, esi
  002a5	51		 push	 ecx
  002a6	53		 push	 ebx
  002a7	57		 push	 edi
  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@PHEGEMLJ@?9?9?5GetPaperList?0?5DeviceCapabilit@
  002ad	68 13 08 00 00	 push	 2067			; 00000813H
  002b2	6a 10		 push	 16			; 00000010H
  002b4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2068 :         }
; 2069 :         else

  002b9	8b 5c 24 44	 mov	 ebx, DWORD PTR _l$[esp+360]
  002bd	83 c4 1c	 add	 esp, 28			; 0000001cH
  002c0	eb 28		 jmp	 SHORT $LN8@GetPaperLi
$LN12@GetPaperLi:

; 2070 :         {
; 2071 :             for (i=0, pp=(POINT *)ppi; i<n; i++, pp++)

  002c2	8b d7		 mov	 edx, edi
  002c4	85 c0		 test	 eax, eax
  002c6	7e 22		 jle	 SHORT $LN8@GetPaperLi
  002c8	8b 4c 24 20	 mov	 ecx, DWORD PTR _pList$[esp+332]
  002cc	81 c1 10 01 00
	00		 add	 ecx, 272		; 00000110H
$LL10@GetPaperLi:

; 2072 :             {
; 2073 :                 pList->PtrDataInfo[i].x = pp->x;

  002d2	8b 32		 mov	 esi, DWORD PTR [edx]
  002d4	89 71 fc	 mov	 DWORD PTR [ecx-4], esi

; 2074 :                 pList->PtrDataInfo[i].y = pp->y;

  002d7	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  002da	89 31		 mov	 DWORD PTR [ecx], esi
  002dc	81 c1 10 01 00
	00		 add	 ecx, 272		; 00000110H
  002e2	83 c2 08	 add	 edx, 8
  002e5	83 e8 01	 sub	 eax, 1
  002e8	75 e8		 jne	 SHORT $LL10@GetPaperLi
$LN8@GetPaperLi:

; 2075 :             }
; 2076 :         }
; 2077 :     }
; 2078 : 
; 2079 :     // *** paper names
; 2080 :     ppi = B._allocMem(papers*sizeof(NAME_64BYTES));

  002ea	8b f3		 mov	 esi, ebx
  002ec	c1 e6 06	 shl	 esi, 6
  002ef	3b 74 24 18	 cmp	 esi, DWORD PTR _B$[esp+336]
  002f3	7e 2b		 jle	 SHORT $LN59@GetPaperLi
  002f5	85 ff		 test	 edi, edi
  002f7	74 09		 je	 SHORT $LN58@GetPaperLi
  002f9	57		 push	 edi
  002fa	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  002ff	83 c4 04	 add	 esp, 4
$LN58@GetPaperLi:
  00302	56		 push	 esi
  00303	89 74 24 1c	 mov	 DWORD PTR _B$[esp+340], esi
  00307	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0030c	56		 push	 esi
  0030d	6a 00		 push	 0
  0030f	50		 push	 eax
  00310	89 44 24 24	 mov	 DWORD PTR _B$[esp+348], eax
  00314	e8 00 00 00 00	 call	 _memset
  00319	8b 7c 24 24	 mov	 edi, DWORD PTR _B$[esp+348]
  0031d	83 c4 10	 add	 esp, 16			; 00000010H
$LN59@GetPaperLi:

; 2081 :     if (!ppi)

  00320	85 ff		 test	 edi, edi
  00322	75 1b		 jne	 SHORT $LN7@GetPaperLi

; 2082 :     {
; 2083 :         Log(LOG_DEBUG,__LINE__,"-- GetPaperList, <%s> new DC_PAPERNAMES mem null",PrinterName);

  00324	8b 54 24 1c	 mov	 edx, DWORD PTR _PrinterName$GSCopy$[esp+332]
  00328	52		 push	 edx
  00329	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@DLBCIEDL@?9?9?5GetPaperList?0?5?$DM?$CFs?$DO?5new?5DC_PAP@
  0032e	68 23 08 00 00	 push	 2083			; 00000823H
  00333	6a 10		 push	 16			; 00000010H
  00335	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0033a	83 c4 10	 add	 esp, 16			; 00000010H

; 2084 :     }
; 2085 :     else

  0033d	eb 74		 jmp	 SHORT $LN1@GetPaperLi
$LN7@GetPaperLi:

; 2086 :     {
; 2087 :         if ((n = DeviceCapabilities(PrinterName, PortName, DC_PAPERNAMES, (LPSTR)ppi, NULL)) != l)

  0033f	8b 44 24 24	 mov	 eax, DWORD PTR _PortName$GSCopy$[esp+332]
  00343	8b 4c 24 1c	 mov	 ecx, DWORD PTR _PrinterName$GSCopy$[esp+332]
  00347	6a 00		 push	 0
  00349	57		 push	 edi
  0034a	6a 10		 push	 16			; 00000010H
  0034c	50		 push	 eax
  0034d	51		 push	 ecx
  0034e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00354	3b c3		 cmp	 eax, ebx
  00356	74 31		 je	 SHORT $LN5@GetPaperLi

; 2088 :         {
; 2089 :             dwLastError = GetLastError();

  00358	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0035e	8b d8		 mov	 ebx, eax

; 2090 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00360	68 03 01 00 00	 push	 259			; 00000103H
  00365	8d 74 24 30	 lea	 esi, DWORD PTR _szLastError$[esp+336]
  00369	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2091 :             Log(LOG_DEBUG,__LINE__,"-- GetPaperList, DeviceCapabilities(DC_PAPERNAMES, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  0036e	8b d6		 mov	 edx, esi
  00370	52		 push	 edx
  00371	53		 push	 ebx
  00372	57		 push	 edi
  00373	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@EEKEBLFH@?9?9?5GetPaperList?0?5DeviceCapabilit@
  00378	68 2b 08 00 00	 push	 2091			; 0000082bH
  0037d	6a 10		 push	 16			; 00000010H
  0037f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00384	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2092 :         }
; 2093 :         else

  00387	eb 2a		 jmp	 SHORT $LN1@GetPaperLi
$LN5@GetPaperLi:

; 2094 :         {
; 2095 :             NAME_64BYTES *pn64 = NULL;
; 2096 :             for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  00389	8b df		 mov	 ebx, edi
  0038b	85 c0		 test	 eax, eax
  0038d	7e 24		 jle	 SHORT $LN1@GetPaperLi
  0038f	8b 54 24 20	 mov	 edx, DWORD PTR _pList$[esp+332]
  00393	83 c2 08	 add	 edx, 8
$LN3@GetPaperLi:

; 2097 :             {
; 2098 :                 memcpy(pList->PtrDataInfo[i].name,pn64->name,sizeof(NAME_64BYTES));

  00396	8b f3		 mov	 esi, ebx
  00398	8b fa		 mov	 edi, edx
  0039a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0039f	81 c2 10 01 00
	00		 add	 edx, 272		; 00000110H
  003a5	83 c3 40	 add	 ebx, 64			; 00000040H
  003a8	83 e8 01	 sub	 eax, 1
  003ab	f3 a5		 rep movsd
  003ad	75 e7		 jne	 SHORT $LN3@GetPaperLi

; 2094 :         {
; 2095 :             NAME_64BYTES *pn64 = NULL;
; 2096 :             for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  003af	8b 7c 24 14	 mov	 edi, DWORD PTR _B$[esp+332]
$LN1@GetPaperLi:

; 2099 :             }
; 2100 :         }
; 2101 :     }
; 2102 : 
; 2103 :     Log(LOG_DEBUG,__LINE__,"<< GetPaperList, List %p",pList);

  003b3	8b 74 24 20	 mov	 esi, DWORD PTR _pList$[esp+332]
  003b7	56		 push	 esi
  003b8	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGBNGAMD@?$DM?$DM?5GetPaperList?0?5List?5?$CFp?$AA@
  003bd	68 37 08 00 00	 push	 2103			; 00000837H
  003c2	6a 10		 push	 16			; 00000010H
  003c4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003c9	83 c4 10	 add	 esp, 16			; 00000010H

; 2104 :     return pList;

  003cc	c7 84 24 48 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+340], -1
  003d7	33 db		 xor	 ebx, ebx
  003d9	3b fb		 cmp	 edi, ebx
  003db	74 0d		 je	 SHORT $LN64@GetPaperLi
  003dd	57		 push	 edi
  003de	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  003e3	83 c4 04	 add	 esp, 4
  003e6	89 5c 24 14	 mov	 DWORD PTR _B$[esp+332], ebx
$LN64@GetPaperLi:
  003ea	89 5c 24 18	 mov	 DWORD PTR _B$[esp+336], ebx
  003ee	8b c6		 mov	 eax, esi
$LN25@GetPaperLi:

; 2105 : }

  003f0	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+332]
  003f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003fe	59		 pop	 ecx
  003ff	5f		 pop	 edi
  00400	5e		 pop	 esi
  00401	5b		 pop	 ebx
  00402	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+316]
  00409	33 cc		 xor	 ecx, esp
  0040b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00410	8b e5		 mov	 esp, ebp
  00412	5d		 pop	 ebp
  00413	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z$0:
  00000	8d b5 c8 fe ff
	ff		 lea	 esi, DWORD PTR _B$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1PBuffer@@QAE@XZ	; PBuffer::~PBuffer
__ehhandler$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 82 c4 fe ff
	ff		 lea	 eax, DWORD PTR [edx-316]
  00015	8b 8a c0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-320]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	83 c0 0c	 add	 eax, 12			; 0000000cH
  00025	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z ENDP	; GetPaperList
PUBLIC	_PortName$GSCopy$
PUBLIC	_PrinterName$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z	; GetBinList
;	COMDAT xdata$x
; File e:\tools\sysstatus\sysstatus.h
xdata$x	SEGMENT
__unwindtable$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z$0
__ehfuncinfo$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z
_TEXT	SEGMENT
_B$ = -308						; size = 8
_PrinterName$GSCopy$ = -300				; size = 4
_pList$ = -296						; size = 4
_PortName$GSCopy$ = -292				; size = 4
_szLastError$ = -288					; size = 260
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z PROC	; GetBinList, COMDAT
; _PrinterName$ = ecx
; _PortName$ = edx

; 1906 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c4		 xor	 eax, esp
  00021	89 84 24 20 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+308], eax
  00028	53		 push	 ebx
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c4		 xor	 eax, esp
  00032	50		 push	 eax
  00033	8d 84 24 38 01
	00 00		 lea	 eax, DWORD PTR __$EHRec$[esp+324]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1907 :     int l = 0, n = 0, i = 0, bins = 0;
; 1908 :     LP_PTRDATA_INFO_LIST pList = NULL;
; 1909 : 
; 1910 :     WORD *pw = NULL;
; 1911 :     BYTE *ppi = NULL;
; 1912 :     PBuffer B;

  00040	33 db		 xor	 ebx, ebx
  00042	8b f9		 mov	 edi, ecx
  00044	8b f2		 mov	 esi, edx

; 1944 :             }
; 1945 :             memset(pList,0x00,size);

  00046	89 7c 24 18	 mov	 DWORD PTR _PrinterName$GSCopy$[esp+324], edi
  0004a	89 74 24 20	 mov	 DWORD PTR _PortName$GSCopy$[esp+324], esi
  0004e	89 5c 24 10	 mov	 DWORD PTR _B$[esp+324], ebx
  00052	89 5c 24 14	 mov	 DWORD PTR _B$[esp+328], ebx
  00056	89 9c 24 40 01
	00 00		 mov	 DWORD PTR __$EHRec$[esp+332], ebx
  0005d	68 03 01 00 00	 push	 259			; 00000103H
  00062	8d 44 24 29	 lea	 eax, DWORD PTR _szLastError$[esp+329]
  00066	53		 push	 ebx
  00067	50		 push	 eax
  00068	88 5c 24 30	 mov	 BYTE PTR _szLastError$[esp+336], bl
  0006c	e8 00 00 00 00	 call	 _memset
  00071	56		 push	 esi
  00072	57		 push	 edi
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MEDOMPCD@?$DO?$DO?5GetBinList?0?5Name?5?$CFs?0?5Port?5?$CFs?$AA@
  00078	68 7d 07 00 00	 push	 1917			; 0000077dH
  0007d	6a 10		 push	 16			; 00000010H
  0007f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00084	83 c4 20	 add	 esp, 32			; 00000020H
  00087	53		 push	 ebx
  00088	53		 push	 ebx
  00089	6a 06		 push	 6
  0008b	56		 push	 esi
  0008c	57		 push	 edi
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00093	8b f0		 mov	 esi, eax
  00095	3b f3		 cmp	 esi, ebx
  00097	7f 48		 jg	 SHORT $LN17@GetBinList
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0009f	8b d8		 mov	 ebx, eax
  000a1	68 03 01 00 00	 push	 259			; 00000103H
  000a6	8d 74 24 28	 lea	 esi, DWORD PTR _szLastError$[esp+328]
  000aa	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage
  000af	8b ce		 mov	 ecx, esi
  000b1	51		 push	 ecx
  000b2	53		 push	 ebx
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@ODPFIDLO@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@
  000b8	68 84 07 00 00	 push	 1924			; 00000784H
  000bd	6a 10		 push	 16			; 00000010H
  000bf	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000c4	83 c4 18	 add	 esp, 24			; 00000018H
$LN64@GetBinList:
  000c7	c7 84 24 40 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+332], -1
  000d2	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR _B$[esp+328], 0
  000da	33 c0		 xor	 eax, eax
  000dc	e9 60 02 00 00	 jmp	 $LN18@GetBinList
$LN17@GetBinList:

; 1913 : 
; 1914 :     DWORD dwLastError = 0;
; 1915 :     char szLastError[_MAX_PATH] = {0};
; 1916 : 
; 1917 :     Log(LOG_DEBUG,__LINE__,">> GetBinList, Name %s, Port %s",PrinterName,PortName);
; 1918 : 
; 1919 :     // *** bins
; 1920 :     if ((l = DeviceCapabilities(PrinterName, PortName, DC_BINS, NULL, NULL)) <= 0)
; 1921 :     {
; 1922 :         dwLastError = GetLastError();
; 1923 :         GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);
; 1924 :         Log(LOG_DEBUG,__LINE__,"<< GetBinList, DeviceCapabilities(DC_BINS, null) Err %d Msg %s",dwLastError,szLastError);
; 1925 :         return NULL;
; 1926 :     }
; 1927 :     else
; 1928 :     {
; 1929 :         ppi = B._allocMem(l*sizeof(WORD));

  000e1	8d 1c 36	 lea	 ebx, DWORD PTR [esi+esi]
  000e4	85 db		 test	 ebx, ebx
  000e6	7e 24		 jle	 SHORT $LN60@GetBinList
  000e8	53		 push	 ebx
  000e9	89 5c 24 18	 mov	 DWORD PTR _B$[esp+332], ebx
  000ed	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000f2	53		 push	 ebx
  000f3	8b f8		 mov	 edi, eax
  000f5	6a 00		 push	 0
  000f7	57		 push	 edi
  000f8	89 7c 24 20	 mov	 DWORD PTR _B$[esp+340], edi
  000fc	e8 00 00 00 00	 call	 _memset
  00101	83 c4 10	 add	 esp, 16			; 00000010H

; 1930 :         if (!ppi)

  00104	85 ff		 test	 edi, edi
  00106	75 1b		 jne	 SHORT $LN15@GetBinList
  00108	8b 7c 24 18	 mov	 edi, DWORD PTR _PrinterName$GSCopy$[esp+324]
$LN60@GetBinList:

; 1931 :         {
; 1932 :             Log(LOG_DEBUG,__LINE__,"<< GetBinList, <%s> new DC_BINS mem null",PrinterName);

  0010c	57		 push	 edi
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@MFGEJMEH@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINS?5@
  00112	68 8c 07 00 00	 push	 1932			; 0000078cH
  00117	6a 10		 push	 16			; 00000010H
  00119	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0011e	83 c4 10	 add	 esp, 16			; 00000010H

; 1933 :             return NULL;

  00121	eb a4		 jmp	 SHORT $LN64@GetBinList
$LN15@GetBinList:

; 1934 :         }
; 1935 :         else
; 1936 :         {
; 1937 :             bins = l;
; 1938 :             size_t size = sizeof(PTRDATA_INFO_LIST)+((l-1)*sizeof(PTRDATA_INFO));

  00123	8d 5e ff	 lea	 ebx, DWORD PTR [esi-1]
  00126	69 db 10 01 00
	00		 imul	 ebx, 272		; 00000110H
  0012c	81 c3 14 01 00
	00		 add	 ebx, 276		; 00000114H

; 1939 :             pList = (LP_PTRDATA_INFO_LIST)new BYTE[size];

  00132	53		 push	 ebx
  00133	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00138	83 c4 04	 add	 esp, 4
  0013b	89 44 24 1c	 mov	 DWORD PTR _pList$[esp+324], eax

; 1940 :             if (!pList)

  0013f	85 c0		 test	 eax, eax
  00141	75 39		 jne	 SHORT $LN13@GetBinList

; 1941 :             {
; 1942 :                 Log(LOG_DEBUG,__LINE__,"<< GetBinList, <%s> new PTRDATA_INFO_LIST mem null",PrinterName);

  00143	8b 54 24 18	 mov	 edx, DWORD PTR _PrinterName$GSCopy$[esp+324]
  00147	52		 push	 edx
  00148	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@GBLOLICC@?$DM?$DM?5GetBinList?0?5?$DM?$CFs?$DO?5new?5PTRDATA_@
  0014d	68 96 07 00 00	 push	 1942			; 00000796H
  00152	6a 10		 push	 16			; 00000010H
  00154	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1943 :                 return NULL;

  00159	c7 84 24 50 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+348], -1
  00164	57		 push	 edi
  00165	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0016a	83 c4 14	 add	 esp, 20			; 00000014H
  0016d	33 c0		 xor	 eax, eax
  0016f	89 44 24 10	 mov	 DWORD PTR _B$[esp+324], eax
  00173	89 44 24 14	 mov	 DWORD PTR _B$[esp+328], eax
  00177	e9 c5 01 00 00	 jmp	 $LN18@GetBinList
$LN13@GetBinList:

; 1944 :             }
; 1945 :             memset(pList,0x00,size);

  0017c	53		 push	 ebx
  0017d	6a 00		 push	 0
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 _memset

; 1946 :             pList->num = bins;
; 1947 : 
; 1948 :             if ((n = DeviceCapabilities(PrinterName, PortName, DC_BINS, (LPSTR)ppi, NULL)) != l)

  00185	8b 44 24 2c	 mov	 eax, DWORD PTR _PortName$GSCopy$[esp+336]
  00189	8b 4c 24 24	 mov	 ecx, DWORD PTR _PrinterName$GSCopy$[esp+336]
  0018d	8b 5c 24 28	 mov	 ebx, DWORD PTR _pList$[esp+336]
  00191	83 c4 0c	 add	 esp, 12			; 0000000cH
  00194	6a 00		 push	 0
  00196	57		 push	 edi
  00197	6a 06		 push	 6
  00199	50		 push	 eax
  0019a	51		 push	 ecx
  0019b	89 33		 mov	 DWORD PTR [ebx], esi
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  001a3	3b c6		 cmp	 eax, esi
  001a5	74 59		 je	 SHORT $LN12@GetBinList

; 1949 :             {
; 1950 :                 dwLastError = GetLastError();

  001a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001ad	8b d8		 mov	 ebx, eax

; 1951 :                 GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  001af	68 03 01 00 00	 push	 259			; 00000103H
  001b4	8d 74 24 28	 lea	 esi, DWORD PTR _szLastError$[esp+328]
  001b8	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1952 :                 Log(LOG_DEBUG,__LINE__,"<< GetBinList, DeviceCapabilities(DC_BINS, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  001bd	8b d6		 mov	 edx, esi
  001bf	52		 push	 edx
  001c0	53		 push	 ebx
  001c1	57		 push	 edi
  001c2	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@NNGIOEEB@?$DM?$DM?5GetBinList?0?5DeviceCapabilitie@
  001c7	68 a0 07 00 00	 push	 1952			; 000007a0H
  001cc	6a 10		 push	 16			; 00000010H
  001ce	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1953 :                 delete [] pList;

  001d3	8b 44 24 38	 mov	 eax, DWORD PTR _pList$[esp+352]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 1954 :                 return NULL;

  001dd	c7 84 24 60 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+364], -1
  001e8	57		 push	 edi
  001e9	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  001ee	83 c4 24	 add	 esp, 36			; 00000024H
  001f1	33 c0		 xor	 eax, eax
  001f3	89 44 24 10	 mov	 DWORD PTR _B$[esp+324], eax
  001f7	89 44 24 14	 mov	 DWORD PTR _B$[esp+328], eax
  001fb	e9 41 01 00 00	 jmp	 $LN18@GetBinList
$LN12@GetBinList:

; 1955 :             }
; 1956 :             else
; 1957 :             {
; 1958 :                 for (i=0, pw=(WORD *)ppi; i<n; i++, pw++)

  00200	8b d7		 mov	 edx, edi
  00202	85 c0		 test	 eax, eax
  00204	7e 1d		 jle	 SHORT $LN8@GetBinList
  00206	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00209	8d a4 24 00 00
	00 00		 npad	 7
$LL10@GetBinList:

; 1959 :                 {
; 1960 :                     pList->PtrDataInfo[i].id = *pw;

  00210	0f b7 1a	 movzx	 ebx, WORD PTR [edx]
  00213	89 19		 mov	 DWORD PTR [ecx], ebx
  00215	81 c1 10 01 00
	00		 add	 ecx, 272		; 00000110H
  0021b	83 c2 02	 add	 edx, 2
  0021e	83 e8 01	 sub	 eax, 1
  00221	75 ed		 jne	 SHORT $LL10@GetBinList
$LN8@GetBinList:

; 1961 :                 }
; 1962 :             }
; 1963 :         }
; 1964 :     }
; 1965 : 
; 1966 :     // *** binnames
; 1967 :     ppi = B._allocMem(bins*sizeof(NAME_24BYTES));

  00223	8d 1c 76	 lea	 ebx, DWORD PTR [esi+esi*2]
  00226	03 db		 add	 ebx, ebx
  00228	03 db		 add	 ebx, ebx
  0022a	03 db		 add	 ebx, ebx
  0022c	8d 04 36	 lea	 eax, DWORD PTR [esi+esi]
  0022f	3b d8		 cmp	 ebx, eax
  00231	7e 24		 jle	 SHORT $LN62@GetBinList
  00233	57		 push	 edi
  00234	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00239	53		 push	 ebx
  0023a	89 5c 24 1c	 mov	 DWORD PTR _B$[esp+336], ebx
  0023e	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00243	53		 push	 ebx
  00244	8b f8		 mov	 edi, eax
  00246	6a 00		 push	 0
  00248	50		 push	 eax
  00249	89 7c 24 24	 mov	 DWORD PTR _B$[esp+344], edi
  0024d	e8 00 00 00 00	 call	 _memset
  00252	83 c4 14	 add	 esp, 20			; 00000014H
  00255	eb 04		 jmp	 SHORT $LN48@GetBinList
$LN62@GetBinList:
  00257	8b 7c 24 10	 mov	 edi, DWORD PTR _B$[esp+324]
$LN48@GetBinList:

; 1968 :     if (!ppi)

  0025b	85 ff		 test	 edi, edi
  0025d	75 1e		 jne	 SHORT $LN7@GetBinList

; 1969 :     {
; 1970 :         Log(LOG_DEBUG,__LINE__,"-- GetBinList, <%s> new DC_BINNAMES mem null",PrinterName);

  0025f	8b 4c 24 18	 mov	 ecx, DWORD PTR _PrinterName$GSCopy$[esp+324]
  00263	51		 push	 ecx
  00264	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@HGGHLGCE@?9?9?5GetBinList?0?5?$DM?$CFs?$DO?5new?5DC_BINNA@
  00269	68 b2 07 00 00	 push	 1970			; 000007b2H
  0026e	6a 10		 push	 16			; 00000010H
  00270	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00275	83 c4 10	 add	 esp, 16			; 00000010H

; 1971 :     }
; 1972 :     else

  00278	e9 87 00 00 00	 jmp	 $LN1@GetBinList
$LN7@GetBinList:

; 1973 :     {
; 1974 :         if ((n = DeviceCapabilities(PrinterName, PortName, DC_BINNAMES, (LPSTR)ppi, NULL)) != l)

  0027d	8b 54 24 20	 mov	 edx, DWORD PTR _PortName$GSCopy$[esp+324]
  00281	8b 44 24 18	 mov	 eax, DWORD PTR _PrinterName$GSCopy$[esp+324]
  00285	6a 00		 push	 0
  00287	57		 push	 edi
  00288	6a 0c		 push	 12			; 0000000cH
  0028a	52		 push	 edx
  0028b	50		 push	 eax
  0028c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00292	3b c6		 cmp	 eax, esi
  00294	74 31		 je	 SHORT $LN5@GetBinList

; 1975 :         {
; 1976 :             dwLastError = GetLastError();

  00296	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0029c	8b d8		 mov	 ebx, eax

; 1977 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  0029e	68 03 01 00 00	 push	 259			; 00000103H
  002a3	8d 74 24 28	 lea	 esi, DWORD PTR _szLastError$[esp+328]
  002a7	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1978 :             Log(LOG_DEBUG,__LINE__,"-- GetBinList, DeviceCapabilities(DC_BINNAMES, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  002ac	8b ce		 mov	 ecx, esi
  002ae	51		 push	 ecx
  002af	53		 push	 ebx
  002b0	57		 push	 edi
  002b1	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@NDHMGLE@?9?9?5GetBinList?0?5DeviceCapabilitie@
  002b6	68 ba 07 00 00	 push	 1978			; 000007baH
  002bb	6a 10		 push	 16			; 00000010H
  002bd	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002c2	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1979 :         }
; 1980 :         else

  002c5	eb 3d		 jmp	 SHORT $LN1@GetBinList
$LN5@GetBinList:

; 1981 :         {
; 1982 :             NAME_24BYTES *pn24 = NULL;
; 1983 :             for (i=0, pn24=(NAME_24BYTES *)ppi; i<n; i++, pn24++)

  002c7	8b d7		 mov	 edx, edi
  002c9	85 c0		 test	 eax, eax
  002cb	7e 37		 jle	 SHORT $LN1@GetBinList
  002cd	8b 4c 24 1c	 mov	 ecx, DWORD PTR _pList$[esp+324]
  002d1	83 c1 08	 add	 ecx, 8
$LL3@GetBinList:

; 1984 :             {
; 1985 :                 memcpy(pList->PtrDataInfo[i].name,pn24->name,sizeof(NAME_24BYTES));

  002d4	8b 32		 mov	 esi, DWORD PTR [edx]
  002d6	89 31		 mov	 DWORD PTR [ecx], esi
  002d8	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  002db	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  002de	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  002e1	89 71 08	 mov	 DWORD PTR [ecx+8], esi
  002e4	8b 72 0c	 mov	 esi, DWORD PTR [edx+12]
  002e7	89 71 0c	 mov	 DWORD PTR [ecx+12], esi
  002ea	8b 72 10	 mov	 esi, DWORD PTR [edx+16]
  002ed	89 71 10	 mov	 DWORD PTR [ecx+16], esi
  002f0	8b 72 14	 mov	 esi, DWORD PTR [edx+20]
  002f3	89 71 14	 mov	 DWORD PTR [ecx+20], esi
  002f6	81 c1 10 01 00
	00		 add	 ecx, 272		; 00000110H
  002fc	83 c2 18	 add	 edx, 24			; 00000018H
  002ff	83 e8 01	 sub	 eax, 1
  00302	75 d0		 jne	 SHORT $LL3@GetBinList
$LN1@GetBinList:

; 1986 :             }
; 1987 :         }
; 1988 :     }
; 1989 : 
; 1990 :     Log(LOG_DEBUG,__LINE__,"<< GetBinList, List %p",pList);

  00304	8b 74 24 1c	 mov	 esi, DWORD PTR _pList$[esp+324]
  00308	56		 push	 esi
  00309	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@CEPOJCOE@?$DM?$DM?5GetBinList?0?5List?5?$CFp?$AA@
  0030e	68 c6 07 00 00	 push	 1990			; 000007c6H
  00313	6a 10		 push	 16			; 00000010H
  00315	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0031a	83 c4 10	 add	 esp, 16			; 00000010H

; 1991 :     return pList;

  0031d	c7 84 24 40 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+332], -1
  00328	33 db		 xor	 ebx, ebx
  0032a	3b fb		 cmp	 edi, ebx
  0032c	74 0d		 je	 SHORT $LN53@GetBinList
  0032e	57		 push	 edi
  0032f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00334	83 c4 04	 add	 esp, 4
  00337	89 5c 24 10	 mov	 DWORD PTR _B$[esp+324], ebx
$LN53@GetBinList:
  0033b	89 5c 24 14	 mov	 DWORD PTR _B$[esp+328], ebx
  0033f	8b c6		 mov	 eax, esi
$LN18@GetBinList:

; 1992 : }

  00341	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+324]
  00348	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0034f	59		 pop	 ecx
  00350	5f		 pop	 edi
  00351	5e		 pop	 esi
  00352	5b		 pop	 ebx
  00353	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+308]
  0035a	33 cc		 xor	 ecx, esp
  0035c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00361	8b e5		 mov	 esp, ebp
  00363	5d		 pop	 ebp
  00364	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z$0:
  00000	8d b5 cc fe ff
	ff		 lea	 esi, DWORD PTR _B$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1PBuffer@@QAE@XZ	; PBuffer::~PBuffer
__ehhandler$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 82 cc fe ff
	ff		 lea	 eax, DWORD PTR [edx-308]
  00015	8b 8a c8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-312]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	83 c0 0c	 add	 eax, 12			; 0000000cH
  00025	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z ENDP	; GetBinList
PUBLIC	__$ArrayPad$
PUBLIC	?GetPrintersList@@YAHXZ				; GetPrintersList
;	COMDAT xdata$x
; File e:\tools\sysstatus\sysstatus.h
xdata$x	SEGMENT
__unwindtable$?GetPrintersList@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPrintersList@@YAHXZ$0
__ehfuncinfo$?GetPrintersList@@YAHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPrintersList@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetPrintersList@@YAHXZ
_TEXT	SEGMENT
_n$ = -308						; size = 4
_l$ = -304						; size = 4
_B$ = -300						; size = 8
$T186053 = -292						; size = 4
_szLastError$ = -288					; size = 260
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
?GetPrintersList@@YAHXZ PROC				; GetPrintersList, COMDAT

; 1820 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?GetPrintersList@@YAHXZ
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c4		 xor	 eax, esp
  00021	89 84 24 20 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+308], eax
  00028	53		 push	 ebx
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c4		 xor	 eax, esp
  00032	50		 push	 eax
  00033	8d 84 24 38 01
	00 00		 lea	 eax, DWORD PTR __$EHRec$[esp+324]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1821 :     int l = 0, n = 0;

  00040	33 db		 xor	 ebx, ebx

; 1822 :     DWORD dwLastError = 0;
; 1823 :     char szLastError[_MAX_PATH] = {0};

  00042	68 03 01 00 00	 push	 259			; 00000103H
  00047	8d 44 24 29	 lea	 eax, DWORD PTR _szLastError$[esp+329]
  0004b	53		 push	 ebx
  0004c	50		 push	 eax
  0004d	89 5c 24 20	 mov	 DWORD PTR _l$[esp+336], ebx
  00051	89 5c 24 1c	 mov	 DWORD PTR _n$[esp+336], ebx
  00055	88 5c 24 30	 mov	 BYTE PTR _szLastError$[esp+336], bl
  00059	e8 00 00 00 00	 call	 _memset

; 1824 :     PRINTER_INFO_2 *pi2 = NULL;
; 1825 :     PBuffer B;

  0005e	89 5c 24 24	 mov	 DWORD PTR _B$[esp+336], ebx
  00062	89 5c 24 28	 mov	 DWORD PTR _B$[esp+340], ebx
  00066	89 9c 24 4c 01
	00 00		 mov	 DWORD PTR __$EHRec$[esp+344], ebx

; 1826 : 
; 1827 :     Log(LOG_DEBUG,__LINE__,">> GetPtrsList");

  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CKNBFJNB@?$DO?$DO?5GetPtrsList?$AA@
  00072	68 23 07 00 00	 push	 1827			; 00000723H
  00077	6a 10		 push	 16			; 00000010H
  00079	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1828 : 
; 1829 :     //release printer info list
; 1830 :     if(gpPrinterInfoList)

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  00083	83 c4 18	 add	 esp, 24			; 00000018H
  00086	3b c3		 cmp	 eax, ebx
  00088	74 0f		 je	 SHORT $LN8@GetPrinter

; 1831 :     {
; 1832 :         delete [] gpPrinterInfoList;

  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00090	83 c4 04	 add	 esp, 4

; 1833 :         gpPrinterInfoList = NULL;

  00093	89 1d 00 00 00
	00		 mov	 DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A, ebx ; gpPrinterInfoList
$LN8@GetPrinter:

; 1834 :     }
; 1835 : 
; 1836 :     //get number of printers
; 1837 :     EnumPrinters(PRINTER_ENUM_LOCAL|PRINTER_ENUM_CONNECTIONS,NULL,2,NULL,l,(DWORD*)&l,(DWORD*)&n);

  00099	8b 44 24 14	 mov	 eax, DWORD PTR _l$[esp+324]
  0009d	8d 4c 24 10	 lea	 ecx, DWORD PTR _n$[esp+324]
  000a1	51		 push	 ecx
  000a2	8d 54 24 18	 lea	 edx, DWORD PTR _l$[esp+328]
  000a6	52		 push	 edx
  000a7	50		 push	 eax
  000a8	53		 push	 ebx
  000a9	6a 02		 push	 2
  000ab	53		 push	 ebx
  000ac	6a 06		 push	 6
  000ae	e8 00 00 00 00	 call	 _EnumPrintersA@28

; 1838 :     if(l==0)

  000b3	8b 44 24 14	 mov	 eax, DWORD PTR _l$[esp+324]
  000b7	3b c3		 cmp	 eax, ebx
  000b9	75 26		 jne	 SHORT $LN7@GetPrinter

; 1839 :     {
; 1840 :         Log(LOG_DEBUG,__LINE__,"<< GetPtrsList, No Printer");

  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CMACENMK@?$DM?$DM?5GetPtrsList?0?5No?5Printer?$AA@
  000c0	68 30 07 00 00	 push	 1840			; 00000730H
  000c5	6a 10		 push	 16			; 00000010H
  000c7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1841 :         return 0;

  000cf	c7 84 24 40 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+332], -1
  000da	33 c0		 xor	 eax, eax
  000dc	e9 2e 02 00 00	 jmp	 $LN50@GetPrinter
$LN7@GetPrinter:

; 1842 :     }
; 1843 :     n = 0;
; 1844 :     LPBYTE lpbPtrInfo  = B._allocMem(l);

  000e1	3b c3		 cmp	 eax, ebx
  000e3	89 5c 24 10	 mov	 DWORD PTR _n$[esp+324], ebx
  000e7	7e 25		 jle	 SHORT $LN47@GetPrinter
  000e9	8b f0		 mov	 esi, eax
  000eb	50		 push	 eax
  000ec	89 74 24 20	 mov	 DWORD PTR _B$[esp+332], esi
  000f0	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000f5	8b f8		 mov	 edi, eax
  000f7	56		 push	 esi
  000f8	53		 push	 ebx
  000f9	57		 push	 edi
  000fa	89 7c 24 30	 mov	 DWORD PTR $T186053[esp+340], edi
  000fe	89 7c 24 28	 mov	 DWORD PTR _B$[esp+340], edi
  00102	e8 00 00 00 00	 call	 _memset
  00107	83 c4 10	 add	 esp, 16			; 00000010H

; 1845 :     if (!lpbPtrInfo)

  0010a	3b fb		 cmp	 edi, ebx
  0010c	75 28		 jne	 SHORT $LN6@GetPrinter
$LN47@GetPrinter:

; 1846 :     {
; 1847 :         Log(LOG_DEBUG,__LINE__,"<< GetPtrsList, new PtrInfo null");

  0010e	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@CEENFMON@?$DM?$DM?5GetPtrsList?0?5new?5PtrInfo?5null@
  00113	68 37 07 00 00	 push	 1847			; 00000737H
  00118	6a 10		 push	 16			; 00000010H
  0011a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1848 :         return l;

  0011f	8b 44 24 20	 mov	 eax, DWORD PTR _l$[esp+336]
  00123	83 c4 0c	 add	 esp, 12			; 0000000cH
  00126	c7 84 24 40 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+332], -1
  00131	e9 d9 01 00 00	 jmp	 $LN50@GetPrinter
$LN6@GetPrinter:

; 1849 :     }
; 1850 : 
; 1851 :     //get the printer list information
; 1852 :     if (!EnumPrinters(PRINTER_ENUM_LOCAL|PRINTER_ENUM_CONNECTIONS,NULL,2,lpbPtrInfo,l,(DWORD*)&l,(DWORD*)&n))

  00136	8b 44 24 14	 mov	 eax, DWORD PTR _l$[esp+324]
  0013a	8d 4c 24 10	 lea	 ecx, DWORD PTR _n$[esp+324]
  0013e	51		 push	 ecx
  0013f	8d 54 24 18	 lea	 edx, DWORD PTR _l$[esp+328]
  00143	52		 push	 edx
  00144	50		 push	 eax
  00145	57		 push	 edi
  00146	6a 02		 push	 2
  00148	53		 push	 ebx
  00149	6a 06		 push	 6
  0014b	e8 00 00 00 00	 call	 _EnumPrintersA@28
  00150	85 c0		 test	 eax, eax
  00152	75 50		 jne	 SHORT $LN5@GetPrinter

; 1853 :     {
; 1854 :         dwLastError = GetLastError();

  00154	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0015a	8b d8		 mov	 ebx, eax

; 1855 :         GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  0015c	68 03 01 00 00	 push	 259			; 00000103H
  00161	8d 74 24 28	 lea	 esi, DWORD PTR _szLastError$[esp+328]
  00165	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1856 :         Log(LOG_DEBUG,__LINE__,"<< GetPtrsList, EnumPrinters Err %d Msg %s",dwLastError,szLastError);

  0016a	8b ce		 mov	 ecx, esi
  0016c	51		 push	 ecx
  0016d	53		 push	 ebx
  0016e	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@CMLCIBBP@?$DM?$DM?5GetPtrsList?0?5EnumPrinters?5Err@
  00173	68 40 07 00 00	 push	 1856			; 00000740H
  00178	6a 10		 push	 16			; 00000010H
  0017a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1857 :         return (int)dwLastError;

  0017f	c7 84 24 58 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+356], -1
  0018a	57		 push	 edi
  0018b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00190	83 c4 1c	 add	 esp, 28			; 0000001cH
  00193	33 c0		 xor	 eax, eax
  00195	89 44 24 18	 mov	 DWORD PTR _B$[esp+324], eax
  00199	89 44 24 1c	 mov	 DWORD PTR _B$[esp+328], eax
  0019d	8b c3		 mov	 eax, ebx
  0019f	e9 6f 01 00 00	 jmp	 $LN9@GetPrinter
$LN5@GetPrinter:

; 1858 :     }
; 1859 : 
; 1860 :     //create list of printer info
; 1861 :     size_t size = sizeof(PRINTER_INFO_LIST)+((n-1)*sizeof(PRINTER_INFO));

  001a4	8b 74 24 10	 mov	 esi, DWORD PTR _n$[esp+324]
  001a8	4e		 dec	 esi
  001a9	69 f6 0c 03 00
	00		 imul	 esi, 780		; 0000030cH
  001af	81 c6 10 03 00
	00		 add	 esi, 784		; 00000310H

; 1862 :     gpPrinterInfoList = (LP_PRINTER_INFO_LIST)new BYTE[size];

  001b5	56		 push	 esi
  001b6	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  001bb	83 c4 04	 add	 esp, 4
  001be	a3 00 00 00 00	 mov	 DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A, eax ; gpPrinterInfoList

; 1863 :     if(!gpPrinterInfoList)

  001c3	3b c3		 cmp	 eax, ebx
  001c5	75 16		 jne	 SHORT $LN4@GetPrinter

; 1864 :     {
; 1865 :         Log(LOG_DEBUG,__LINE__,"<< GetPtrsList, new PrtInfoList null");

  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@POBEDBNN@?$DM?$DM?5GetPtrsList?0?5new?5PrtInfoList?5@
  001cc	68 49 07 00 00	 push	 1865			; 00000749H
  001d1	6a 10		 push	 16			; 00000010H
  001d3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1866 :         return size;

  001d8	e9 18 01 00 00	 jmp	 $LN51@GetPrinter
$LN4@GetPrinter:

; 1867 :     }
; 1868 :     memset(gpPrinterInfoList,0x00,size);

  001dd	56		 push	 esi
  001de	53		 push	 ebx
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 _memset

; 1869 : 
; 1870 :     Log(LOG_HEADER,__LINE__,"Printers Information (%d):",n);

  001e5	8b 54 24 1c	 mov	 edx, DWORD PTR _n$[esp+336]
  001e9	52		 push	 edx
  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DODNOLI@Printers?5Information?5?$CI?$CFd?$CJ?3?$AA@
  001ef	68 4e 07 00 00	 push	 1870			; 0000074eH
  001f4	6a 02		 push	 2
  001f6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1871 :     pi2 = (PRINTER_INFO_2*)lpbPtrInfo;
; 1872 :     Log(LOG_MESSAGE,__LINE__,">     Printer, Port, Driver, Processor, Status, Priority, Location, Share, Comment");

  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@LPLLHANM@?$DO?5?5?5?5?5Printer?0?5Port?0?5Driver?0?5Pro@
  00200	68 50 07 00 00	 push	 1872			; 00000750H
  00205	6a 01		 push	 1
  00207	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0020c	83 c4 28	 add	 esp, 40			; 00000028H

; 1873 :     for (int i=0; i<n; i++)

  0020f	33 c0		 xor	 eax, eax
  00211	39 5c 24 10	 cmp	 DWORD PTR _n$[esp+324], ebx
  00215	0f 8e c1 00 00
	00		 jle	 $LN1@GetPrinter

; 1867 :     }
; 1868 :     memset(gpPrinterInfoList,0x00,size);

  0021b	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
$LN3@GetPrinter:

; 1874 :     {
; 1875 :         Log(LOG_MESSAGE,__LINE__,"> %.2d: \\\\%s\\%s,  %s, %s, %s, %u, %u, %s, %s, %s",i+1,
; 1876 :                      pi2->pServerName ? pi2->pServerName : "<LocalPrinter>",pi2->pPrinterName,
; 1877 :                      pi2->pPortName,pi2->pDriverName,pi2->pPrintProcessor,pi2->Status,
; 1878 :                      pi2->Priority,pi2->pLocation,pi2->pShareName,pi2->pComment);

  0021e	8b 4e f8	 mov	 ecx, DWORD PTR [esi-8]
  00221	85 c9		 test	 ecx, ecx
  00223	75 05		 jne	 SHORT $LN12@GetPrinter
  00225	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0P@EABBNIJO@?$DMLocalPrinter?$DO?$AA@
$LN12@GetPrinter:
  0022a	8b 16		 mov	 edx, DWORD PTR [esi]
  0022c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0022f	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00232	50		 push	 eax
  00233	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00236	52		 push	 edx
  00237	8b 56 30	 mov	 edx, DWORD PTR [esi+48]
  0023a	50		 push	 eax
  0023b	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  0023e	52		 push	 edx
  0023f	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  00242	50		 push	 eax
  00243	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00246	52		 push	 edx
  00247	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0024a	50		 push	 eax
  0024b	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  0024e	52		 push	 edx
  0024f	50		 push	 eax
  00250	51		 push	 ecx
  00251	57		 push	 edi
  00252	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@OBDCAEAF@?$DO?5?$CF?42d?3?5?2?2?$CFs?2?$CFs?0?5?5?$CFs?0?5?$CFs?0?5?$CFs?0?5?$CFu@
  00257	68 53 07 00 00	 push	 1875			; 00000753H
  0025c	6a 01		 push	 1
  0025e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1879 : 
; 1880 :         strncpy(gpPrinterInfoList->PrinterInfo[i].PrinterName,pi2->pPrinterName,_MAX_PATH-1);

  00263	8b 4e fc	 mov	 ecx, DWORD PTR [esi-4]
  00266	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  0026c	68 03 01 00 00	 push	 259			; 00000103H
  00271	51		 push	 ecx
  00272	8d 44 13 04	 lea	 eax, DWORD PTR [ebx+edx+4]
  00276	50		 push	 eax
  00277	e8 00 00 00 00	 call	 _strncpy

; 1881 :         strncpy(gpPrinterInfoList->PrinterInfo[i].PortName,pi2->pPortName,_MAX_PATH-1);

  0027c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0027f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  00285	83 c4 44	 add	 esp, 68			; 00000044H
  00288	68 03 01 00 00	 push	 259			; 00000103H
  0028d	51		 push	 ecx
  0028e	8d 84 13 08 01
	00 00		 lea	 eax, DWORD PTR [ebx+edx+264]
  00295	50		 push	 eax
  00296	e8 00 00 00 00	 call	 _strncpy

; 1882 :         strncpy(gpPrinterInfoList->PrinterInfo[i].DriverName,pi2->pDriverName,_MAX_PATH-1);

  0029b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0029e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  002a4	68 03 01 00 00	 push	 259			; 00000103H
  002a9	51		 push	 ecx
  002aa	8d 84 13 0c 02
	00 00		 lea	 eax, DWORD PTR [ebx+edx+524]
  002b1	50		 push	 eax
  002b2	e8 00 00 00 00	 call	 _strncpy

; 1883 :         gpPrinterInfoList->num++;

  002b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  002bc	ff 00		 inc	 DWORD PTR [eax]
  002be	8b c7		 mov	 eax, edi
  002c0	83 c4 18	 add	 esp, 24			; 00000018H

; 1884 :         pi2++;

  002c3	83 c6 54	 add	 esi, 84			; 00000054H
  002c6	81 c3 0c 03 00
	00		 add	 ebx, 780		; 0000030cH
  002cc	3b 44 24 10	 cmp	 eax, DWORD PTR _n$[esp+324]
  002d0	0f 8c 48 ff ff
	ff		 jl	 $LN3@GetPrinter
  002d6	8b 7c 24 20	 mov	 edi, DWORD PTR $T186053[esp+324]
  002da	33 db		 xor	 ebx, ebx
$LN1@GetPrinter:

; 1885 :     }
; 1886 : 
; 1887 :     Log(LOG_DEBUG,__LINE__,"<< GetPtrsList");

  002dc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GDDJCMON@?$DM?$DM?5GetPtrsList?$AA@
  002e1	68 5f 07 00 00	 push	 1887			; 0000075fH
  002e6	6a 10		 push	 16			; 00000010H
  002e8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1888 :     return gpPrinterInfoList->num;

  002ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  002f3	8b 31		 mov	 esi, DWORD PTR [ecx]
$LN51@GetPrinter:
  002f5	c7 84 24 4c 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+344], -1
  00300	57		 push	 edi
  00301	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00306	8b c6		 mov	 eax, esi
  00308	89 5c 24 28	 mov	 DWORD PTR _B$[esp+340], ebx
  0030c	83 c4 10	 add	 esp, 16			; 00000010H
$LN50@GetPrinter:
  0030f	89 5c 24 1c	 mov	 DWORD PTR _B$[esp+328], ebx
$LN9@GetPrinter:

; 1889 : }

  00313	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+324]
  0031a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00321	59		 pop	 ecx
  00322	5f		 pop	 edi
  00323	5e		 pop	 esi
  00324	5b		 pop	 ebx
  00325	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+308]
  0032c	33 cc		 xor	 ecx, esp
  0032e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00333	8b e5		 mov	 esp, ebp
  00335	5d		 pop	 ebp
  00336	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPrintersList@@YAHXZ$0:
  00000	8d b5 d4 fe ff
	ff		 lea	 esi, DWORD PTR _B$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1PBuffer@@QAE@XZ	; PBuffer::~PBuffer
__ehhandler$?GetPrintersList@@YAHXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 82 cc fe ff
	ff		 lea	 eax, DWORD PTR [edx-308]
  00015	8b 8a c8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-312]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	83 c0 0c	 add	 eax, 12			; 0000000cH
  00025	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00028	33 c8		 xor	 ecx, eax
  0002a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetPrintersList@@YAHXZ
  00034	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetPrintersList@@YAHXZ ENDP				; GetPrintersList
PUBLIC	?CurrentProcessorNumber@@YAKXZ			; CurrentProcessorNumber
; Function compile flags: /Ogtpy
;	COMDAT ?CurrentProcessorNumber@@YAKXZ
_TEXT	SEGMENT
?CurrentProcessorNumber@@YAKXZ PROC			; CurrentProcessorNumber, COMDAT

; 1285 : {

  00000	56		 push	 esi

; 1286 :     DWORD processor = 1;
; 1287 :     LPFN_GCPN gcpn = (LPFN_GCPN)GetProcAddress(GetModuleHandle("kernel32"),"GetCurrentProcessorNumber");

  00001	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DFNBACLA@GetCurrentProcessorNumber?$AA@
  00006	68 00 00 00 00	 push	 OFFSET ??_C@_08PNLNEKOB@kernel32?$AA@
  0000b	be 01 00 00 00	 mov	 esi, 1
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  00016	50		 push	 eax
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8

; 1288 :     if (NULL == gcpn) 

  0001d	85 c0		 test	 eax, eax
  0001f	75 18		 jne	 SHORT $LN2@CurrentPro

; 1289 :     {
; 1290 :         Log(LOG_DEBUG,__LINE__,"-- CurrentProcessorNumber, GetCurrentProcessorNumber is not supported.");

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@HJFNKFOJ@?9?9?5CurrentProcessorNumber?0?5GetCu@
  00026	68 0a 05 00 00	 push	 1290			; 0000050aH
  0002b	6a 10		 push	 16			; 00000010H
  0002d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1295 :     }
; 1296 :     return processor;

  00035	8b c6		 mov	 eax, esi

; 1297 : }

  00037	5e		 pop	 esi
  00038	c3		 ret	 0
$LN2@CurrentPro:
  00039	5e		 pop	 esi

; 1291 :     }
; 1292 :     else
; 1293 :     {
; 1294 :         processor = gcpn();

  0003a	ff e0		 jmp	 eax
?CurrentProcessorNumber@@YAKXZ ENDP			; CurrentProcessorNumber
_TEXT	ENDS
PUBLIC	?EndPendingThread@@YAXPAX@Z			; EndPendingThread
; Function compile flags: /Ogtpy
;	COMDAT ?EndPendingThread@@YAXPAX@Z
_TEXT	SEGMENT
_exitCode$ = -4						; size = 4
?EndPendingThread@@YAXPAX@Z PROC			; EndPendingThread, COMDAT
; _hThread$ = esi

; 759  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	57		 push	 edi

; 760  :     Log(LOG_DEBUG,__LINE__,">> EndPendgThrd, Hndl %p",hThread);

  00003	56		 push	 esi
  00004	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JJOKMIHG@?$DO?$DO?5EndPendgThrd?0?5Hndl?5?$CFp?$AA@
  00009	68 f8 02 00 00	 push	 760			; 000002f8H
  0000e	6a 10		 push	 16			; 00000010H
  00010	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00015	83 c4 10	 add	 esp, 16			; 00000010H

; 761  : 
; 762  :     DWORD exitCode = 0;
; 763  :     GetExitCodeThread(hThread,&exitCode);

  00018	8d 44 24 08	 lea	 eax, DWORD PTR _exitCode$[esp+12]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR _exitCode$[esp+20], 0
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetExitCodeThread@8

; 764  : 
; 765  :     //Release thread stack
; 766  : 
; 767  : #if(WINVER<=0x0600)     //WinXP or older
; 768  : 
; 769  :     Log(LOG_DEBUG,__LINE__,">> RlsThrdStck, Hndl %p",hThread);

  0002c	56		 push	 esi
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LKAHEPCO@?$DO?$DO?5RlsThrdStck?0?5Hndl?5?$CFp?$AA@
  00032	68 01 03 00 00	 push	 769			; 00000301H
  00037	6a 10		 push	 16			; 00000010H
  00039	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 770  : 
; 771  :     //Used to release the thread stacker
; 772  :     typedef	VOID (WINAPI *PRtlFreeUserThreadStack)(HANDLE hProcess, HANDLE hThread);
; 773  :     PRtlFreeUserThreadStack RtlFreeUserThreadStack = NULL;
; 774  :      
; 775  :     HMODULE NTLibrary = GetModuleHandleW(L"ntdll.dll");

  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1BE@GJOFHIHD@?$AAn?$AAt?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleW@4
  0004c	8b f8		 mov	 edi, eax

; 776  :     if(NTLibrary)

  0004e	85 ff		 test	 edi, edi
  00050	74 23		 je	 SHORT $LN1@EndPending

; 777  :     {
; 778  :         RtlFreeUserThreadStack = (PRtlFreeUserThreadStack)GetProcAddress(NTLibrary, "RtlFreeUserThreadStack");

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FCCILLCE@RtlFreeUserThreadStack?$AA@
  00057	57		 push	 edi
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0005e	8b d8		 mov	 ebx, eax

; 779  :     }
; 780  : 
; 781  :     //Release thread stacker
; 782  :     if(RtlFreeUserThreadStack != NULL)

  00060	85 db		 test	 ebx, ebx
  00062	74 0a		 je	 SHORT $LN2@EndPending

; 783  :         RtlFreeUserThreadStack(GetCurrentProcess(),hThread);

  00064	56		 push	 esi
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcess@0
  0006b	50		 push	 eax
  0006c	ff d3		 call	 ebx
$LN2@EndPending:

; 784  : 
; 785  :     if(NTLibrary)
; 786  :     {
; 787  :         FreeLibrary(NTLibrary);

  0006e	57		 push	 edi
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN1@EndPending:

; 788  :         NTLibrary = NULL;
; 789  :     }
; 790  : #endif
; 791  : 
; 792  :     TerminateThread(hThread,exitCode);

  00075	8b 4c 24 08	 mov	 ecx, DWORD PTR _exitCode$[esp+12]
  00079	51		 push	 ecx
  0007a	56		 push	 esi
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TerminateThread@8

; 793  :     Log(LOG_DEBUG,__LINE__,"<< EndPendgThrd");

  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OFOICJDM@?$DM?$DM?5EndPendgThrd?$AA@
  00086	68 19 03 00 00	 push	 793			; 00000319H
  0008b	6a 10		 push	 16			; 00000010H
  0008d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH

; 794  : }

  00095	5f		 pop	 edi
  00096	5b		 pop	 ebx
  00097	59		 pop	 ecx
  00098	c3		 ret	 0
?EndPendingThread@@YAXPAX@Z ENDP			; EndPendingThread
_TEXT	ENDS
PUBLIC	?SetThreadName@@YAXPBDK@Z			; SetThreadName
EXTRN	__except_handler4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$?SetThreadName@@YAXPBDK@Z DD 0fffffffeH
	DD	00H
	DD	0ffffffc8H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:$LN5@SetThreadN
	DD	FLAT:$LN6@SetThreadN
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?SetThreadName@@YAXPBDK@Z
_TEXT	SEGMENT
_info$ = -40						; size = 16
__$SEHRec$ = -24					; size = 24
?SetThreadName@@YAXPBDK@Z PROC				; SetThreadName, COMDAT
; _threadName$ = edx
; _dwThreadID$ = ecx

; 676  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a fe		 push	 -2			; fffffffeH
  00005	68 00 00 00 00	 push	 OFFSET __sehtable$?SetThreadName@@YAXPBDK@Z
  0000a	68 00 00 00 00	 push	 OFFSET __except_handler4
  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00015	50		 push	 eax
  00016	83 ec 18	 sub	 esp, 24			; 00000018H
  00019	53		 push	 ebx
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00021	31 45 f8	 xor	 DWORD PTR __$SEHRec$[ebp+16], eax
  00024	33 c5		 xor	 eax, ebp
  00026	50		 push	 eax
  00027	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  0002a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00030	89 65 e8	 mov	 DWORD PTR __$SEHRec$[ebp], esp

; 677  :     THREADNAME_INFO info = {0};

  00033	33 f6		 xor	 esi, esi
  00035	33 c0		 xor	 eax, eax
  00037	89 45 dc	 mov	 DWORD PTR _info$[ebp+4], eax
  0003a	89 45 e0	 mov	 DWORD PTR _info$[ebp+8], eax
  0003d	89 45 e4	 mov	 DWORD PTR _info$[ebp+12], eax

; 678  :     info.dwType = 0x1000;

  00040	c7 45 d8 00 10
	00 00		 mov	 DWORD PTR _info$[ebp], 4096 ; 00001000H

; 679  :     info.szName = threadName;

  00047	89 55 dc	 mov	 DWORD PTR _info$[ebp+4], edx

; 680  :     info.dwThreadID = dwThreadID;

  0004a	89 4d e0	 mov	 DWORD PTR _info$[ebp+8], ecx

; 681  :     info.dwFlags = 0;

  0004d	89 75 e4	 mov	 DWORD PTR _info$[ebp+12], esi

; 682  : 
; 683  :     Log(LOG_DEBUG,__LINE__,"-- SetThrdName, Tp %p, Name %s, Id %u, Flags %p",info.dwType,info.szName,info.dwThreadID,info.dwFlags);

  00050	56		 push	 esi
  00051	51		 push	 ecx
  00052	52		 push	 edx
  00053	68 00 10 00 00	 push	 4096			; 00001000H
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@DAMKDCLP@?9?9?5SetThrdName?0?5Tp?5?$CFp?0?5Name?5?$CFs?0?5@
  0005d	68 ab 02 00 00	 push	 683			; 000002abH
  00062	6a 10		 push	 16			; 00000010H
  00064	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00069	83 c4 1c	 add	 esp, 28			; 0000001cH

; 684  : 
; 685  :     __try

  0006c	89 75 fc	 mov	 DWORD PTR __$SEHRec$[ebp+20], esi

; 686  :     {
; 687  :         RaiseException( MS_VC_EXCEPTION, 0, sizeof(info)/sizeof(ULONG_PTR), (ULONG_PTR*)&info );

  0006f	8d 45 d8	 lea	 eax, DWORD PTR _info$[ebp]
  00072	50		 push	 eax
  00073	6a 04		 push	 4
  00075	56		 push	 esi
  00076	68 88 13 6d 40	 push	 1080890248		; 406d1388H
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RaiseException@16

; 688  :     }

  00081	eb 09		 jmp	 SHORT $LN10@SetThreadN
$LN5@SetThreadN:
$LN11@SetThreadN:

; 689  :     __except(EXCEPTION_EXECUTE_HANDLER)

  00083	b8 01 00 00 00	 mov	 eax, 1
$LN9@SetThreadN:
$LN7@SetThreadN:
  00088	c3		 ret	 0
$LN6@SetThreadN:
  00089	8b 65 e8	 mov	 esp, DWORD PTR __$SEHRec$[ebp]
$LN10@SetThreadN:

; 690  :     {
; 691  :     }

  0008c	c7 45 fc fe ff
	ff ff		 mov	 DWORD PTR __$SEHRec$[ebp+20], -2 ; fffffffeH

; 692  : }

  00093	8b 4d f0	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  00096	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009d	59		 pop	 ecx
  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
?SetThreadName@@YAXPBDK@Z ENDP				; SetThreadName
_TEXT	ENDS
PUBLIC	?LogElapsedTime@@YAXK_KPAD@Z			; LogElapsedTime
; Function compile flags: /Ogtpy
;	COMDAT ?LogElapsedTime@@YAXK_KPAD@Z
_TEXT	SEGMENT
_seconds$ = -16						; size = 4
_timeElapsed$ = -12					; size = 4
_tickEnd$ = -8						; size = 8
_tickStart$ = 8						; size = 8
?LogElapsedTime@@YAXK_KPAD@Z PROC			; LogElapsedTime, COMDAT
; _line$ = edi
; _lpszAdditionalMsg$ = ebx

; 645  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H

; 646  :     unsigned __int64 tickEnd;
; 647  :     float timeElapsed;
; 648  :     unsigned long seconds;
; 649  :     CalcElapsedTime(tickStart,tickEnd,timeElapsed,seconds);

  00006	8b 55 0c	 mov	 edx, DWORD PTR _tickStart$[ebp+4]
  00009	83 ec 3c	 sub	 esp, 60			; 0000003cH
  0000c	56		 push	 esi
  0000d	8d 44 24 30	 lea	 eax, DWORD PTR _seconds$[esp+64]
  00011	50		 push	 eax
  00012	8b 45 08	 mov	 eax, DWORD PTR _tickStart$[ebp]
  00015	8d 4c 24 38	 lea	 ecx, DWORD PTR _timeElapsed$[esp+68]
  00019	51		 push	 ecx
  0001a	52		 push	 edx
  0001b	50		 push	 eax
  0001c	8d 74 24 48	 lea	 esi, DWORD PTR _tickEnd$[esp+80]
  00020	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime

; 650  :     if(lpszAdditionalMsg)
; 651  :     {
; 652  :         Log(LOG_HEADER,line,"%s, %02d:%02d:%02d, %f s",lpszAdditionalMsg,seconds/3600,(seconds % 3600)/60,seconds % 60,timeElapsed);

  00025	d9 44 24 44	 fld	 DWORD PTR _timeElapsed$[esp+80]
  00029	8b 4c 24 40	 mov	 ecx, DWORD PTR _seconds$[esp+80]
  0002d	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  00032	f7 e1		 mul	 ecx
  00034	8b f2		 mov	 esi, edx
  00036	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0003b	f7 e1		 mul	 ecx
  0003d	c1 ea 05	 shr	 edx, 5
  00040	8b c2		 mov	 eax, edx
  00042	c1 e0 04	 shl	 eax, 4
  00045	2b c2		 sub	 eax, edx
  00047	03 c0		 add	 eax, eax
  00049	03 c0		 add	 eax, eax
  0004b	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  0004e	8b d1		 mov	 edx, ecx
  00050	2b d0		 sub	 edx, eax
  00052	8b c6		 mov	 eax, esi
  00054	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	83 ec 08	 sub	 esp, 8
  00060	2b c8		 sub	 ecx, eax
  00062	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00067	dd 1c 24	 fstp	 QWORD PTR [esp]
  0006a	52		 push	 edx
  0006b	f7 e1		 mul	 ecx
  0006d	c1 ea 05	 shr	 edx, 5
  00070	52		 push	 edx
  00071	56		 push	 esi
  00072	85 db		 test	 ebx, ebx
  00074	74 16		 je	 SHORT $LN2@LogElapsed
  00076	53		 push	 ebx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PPCHIOMP@?$CFs?0?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  0007c	57		 push	 edi
  0007d	6a 02		 push	 2
  0007f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00084	83 c4 24	 add	 esp, 36			; 00000024H

; 657  :     }
; 658  : }

  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
$LN2@LogElapsed:

; 653  :     }
; 654  :     else
; 655  :     {
; 656  :         Log(LOG_MESSAGE,line,"%02d:%02d:%02d, %f s",seconds/3600,(seconds % 3600)/60,seconds % 60,timeElapsed);

  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  00091	57		 push	 edi
  00092	6a 01		 push	 1
  00094	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00099	83 c4 20	 add	 esp, 32			; 00000020H

; 657  :     }
; 658  : }

  0009c	5e		 pop	 esi
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
?LogElapsedTime@@YAXK_KPAD@Z ENDP			; LogElapsedTime
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CreateMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z	; CreateMiniDump
; Function compile flags: /Ogtpy
;	COMDAT ?CreateMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z
_TEXT	SEGMENT
_stLocalTime$ = -1592					; size = 16
_stMDEI$144637 = -1576					; size = 12
_szModName$ = -1564					; size = 260
_chFileName$ = -1300					; size = 260
_szLastError$144644 = -1036				; size = 1024
__$ArrayPad$ = -8					; size = 4
?CreateMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z PROC	; CreateMiniDump, COMDAT
; _pExceptionInfo$ = ecx

; 507  : {

  00000	81 ec 3c 06 00
	00		 sub	 esp, 1596		; 0000063cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c4		 xor	 eax, esp
  0000d	89 84 24 34 06
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1596], eax
  00014	53		 push	 ebx
  00015	55		 push	 ebp
  00016	56		 push	 esi
  00017	57		 push	 edi

; 508  :     char szModName[MAX_PATH] = {0};

  00018	33 db		 xor	 ebx, ebx
  0001a	68 03 01 00 00	 push	 259			; 00000103H
  0001f	8d 44 24 35	 lea	 eax, DWORD PTR _szModName$[esp+1617]
  00023	53		 push	 ebx
  00024	50		 push	 eax
  00025	8b f1		 mov	 esi, ecx
  00027	88 5c 24 3c	 mov	 BYTE PTR _szModName$[esp+1624], bl
  0002b	e8 00 00 00 00	 call	 _memset

; 509  :     char chFileName[MAX_PATH] = {0};

  00030	68 03 01 00 00	 push	 259			; 00000103H
  00035	8d 8c 24 49 01
	00 00		 lea	 ecx, DWORD PTR _chFileName$[esp+1629]
  0003c	53		 push	 ebx
  0003d	51		 push	 ecx
  0003e	88 9c 24 50 01
	00 00		 mov	 BYTE PTR _chFileName$[esp+1636], bl
  00045	e8 00 00 00 00	 call	 _memset

; 510  :     SYSTEMTIME stLocalTime = {0};

  0004a	33 c0		 xor	 eax, eax
  0004c	89 44 24 2e	 mov	 DWORD PTR _stLocalTime$[esp+1638], eax
  00050	89 44 24 32	 mov	 DWORD PTR _stLocalTime$[esp+1642], eax
  00054	89 44 24 36	 mov	 DWORD PTR _stLocalTime$[esp+1646], eax
  00058	66 89 44 24 3a	 mov	 WORD PTR _stLocalTime$[esp+1650], ax
  0005d	83 c4 18	 add	 esp, 24			; 00000018H

; 511  : 	GetLocalTime( &stLocalTime );

  00060	8d 44 24 14	 lea	 eax, DWORD PTR _stLocalTime$[esp+1612]
  00064	33 d2		 xor	 edx, edx
  00066	50		 push	 eax
  00067	66 89 54 24 18	 mov	 WORD PTR _stLocalTime$[esp+1616], dx
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocalTime@4

; 512  : 
; 513  : 	if (GetModuleBaseName(GetCurrentProcess(), NULL, szModName, sizeof(szModName)) > 0)

  00072	8b 2d 00 00 00
	00		 mov	 ebp, DWORD PTR __imp__GetCurrentProcess@0
  00078	68 04 01 00 00	 push	 260			; 00000104H
  0007d	8d 4c 24 34	 lea	 ecx, DWORD PTR _szModName$[esp+1616]
  00081	51		 push	 ecx
  00082	53		 push	 ebx
  00083	ff d5		 call	 ebp
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 _GetModuleBaseNameA@16
  0008b	85 c0		 test	 eax, eax
  0008d	76 0d		 jbe	 SHORT $LN6@CreateMini

; 514  : 	{
; 515  : 		// Remove extension
; 516  : 		PathRemoveExtension(szModName);

  0008f	8d 54 24 30	 lea	 edx, DWORD PTR _szModName$[esp+1612]
  00093	52		 push	 edx
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PathRemoveExtensionA@4

; 517  : 	}
; 518  : 	else

  0009a	eb 1f		 jmp	 SHORT $LN5@CreateMini
$LN6@CreateMini:

; 519  : 	{
; 520  : 		// Copy default name
; 521  : 		strcpy(szModName,"SysStatus");

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_09KECABMHK@SysStatus?$AA@
  000a1	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_09KECABMHK@SysStatus?$AA@+4
  000a7	66 8b 15 08 00
	00 00		 mov	 dx, WORD PTR ??_C@_09KECABMHK@SysStatus?$AA@+8
  000ae	89 44 24 30	 mov	 DWORD PTR _szModName$[esp+1612], eax
  000b2	89 4c 24 34	 mov	 DWORD PTR _szModName$[esp+1616], ecx
  000b6	66 89 54 24 38	 mov	 WORD PTR _szModName$[esp+1620], dx
$LN5@CreateMini:

; 522  : 	}
; 523  : 
; 524  : 	_snprintf(chFileName,sizeof(chFileName)-1,"%s_%.4d-%.2d-%.2d_%.2d-%.2d-%.2d.dmp",szModName,
; 525  :                         stLocalTime.wYear,stLocalTime.wMonth,stLocalTime.wDay,
; 526  :                         stLocalTime.wHour,stLocalTime.wMinute,stLocalTime.wSecond );

  000bb	0f b7 44 24 20	 movzx	 eax, WORD PTR _stLocalTime$[esp+1624]
  000c0	0f b7 4c 24 1e	 movzx	 ecx, WORD PTR _stLocalTime$[esp+1622]
  000c5	0f b7 54 24 1c	 movzx	 edx, WORD PTR _stLocalTime$[esp+1620]
  000ca	50		 push	 eax
  000cb	0f b7 44 24 1e	 movzx	 eax, WORD PTR _stLocalTime$[esp+1622]
  000d0	51		 push	 ecx
  000d1	0f b7 4c 24 1e	 movzx	 ecx, WORD PTR _stLocalTime$[esp+1622]
  000d6	52		 push	 edx
  000d7	0f b7 54 24 20	 movzx	 edx, WORD PTR _stLocalTime$[esp+1624]
  000dc	50		 push	 eax
  000dd	51		 push	 ecx
  000de	52		 push	 edx
  000df	8d 44 24 48	 lea	 eax, DWORD PTR _szModName$[esp+1636]
  000e3	50		 push	 eax
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@MLLEOGPJ@?$CFs_?$CF?44d?9?$CF?42d?9?$CF?42d_?$CF?42d?9?$CF?42d?9?$CF?42d@
  000e9	8d 8c 24 58 01
	00 00		 lea	 ecx, DWORD PTR _chFileName$[esp+1644]
  000f0	68 03 01 00 00	 push	 259			; 00000103H
  000f5	51		 push	 ecx
  000f6	e8 00 00 00 00	 call	 __snprintf
  000fb	83 c4 28	 add	 esp, 40			; 00000028H

; 527  : 
; 528  :     // Create the file first.
; 529  :     HANDLE hFile = CreateFile ( chFileName, GENERIC_READ | GENERIC_WRITE,
; 530  : 		0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL );

  000fe	53		 push	 ebx
  000ff	68 80 00 00 00	 push	 128			; 00000080H
  00104	6a 02		 push	 2
  00106	53		 push	 ebx
  00107	53		 push	 ebx
  00108	68 00 00 00 c0	 push	 -1073741824		; c0000000H
  0010d	8d 94 24 50 01
	00 00		 lea	 edx, DWORD PTR _chFileName$[esp+1636]
  00114	52		 push	 edx
  00115	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  0011b	8b f8		 mov	 edi, eax

; 531  : 
; 532  :     if ( hFile != INVALID_HANDLE_VALUE )

  0011d	83 ff ff	 cmp	 edi, -1
  00120	0f 84 bc 00 00
	00		 je	 $LN4@CreateMini

; 533  :     {
; 534  :         MINIDUMP_EXCEPTION_INFORMATION stMDEI = {0};

  00126	33 c0		 xor	 eax, eax
  00128	89 5c 24 24	 mov	 DWORD PTR _stMDEI$144637[esp+1612], ebx
  0012c	89 44 24 28	 mov	 DWORD PTR _stMDEI$144637[esp+1616], eax
  00130	89 44 24 2c	 mov	 DWORD PTR _stMDEI$144637[esp+1620], eax

; 535  :         MINIDUMP_EXCEPTION_INFORMATION * pMDEI = NULL;
; 536  : 
; 537  :         if ( pExceptionInfo != NULL )

  00134	3b f3		 cmp	 esi, ebx
  00136	74 1a		 je	 SHORT $LN3@CreateMini

; 538  :         {
; 539  :             stMDEI.ThreadId = GetCurrentThreadId();

  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  0013e	89 44 24 24	 mov	 DWORD PTR _stMDEI$144637[esp+1612], eax

; 540  :             stMDEI.ExceptionPointers = pExceptionInfo;

  00142	89 74 24 28	 mov	 DWORD PTR _stMDEI$144637[esp+1616], esi

; 541  :             stMDEI.ClientPointers = TRUE;

  00146	c7 44 24 2c 01
	00 00 00	 mov	 DWORD PTR _stMDEI$144637[esp+1620], 1

; 542  : 			pMDEI = &stMDEI;

  0014e	8d 44 24 24	 lea	 eax, DWORD PTR _stMDEI$144637[esp+1612]
$LN3@CreateMini:

; 543  :         }
; 544  : 
; 545  :         // Got the file open.  Write it.
; 546  :         BOOL bRet = MiniDumpWriteDump(GetCurrentProcess(), GetCurrentProcessId(),
; 547  : 			hFile, MiniDumpWithPrivateReadWriteMemory, pMDEI, NULL, NULL);

  00152	53		 push	 ebx
  00153	53		 push	 ebx
  00154	50		 push	 eax
  00155	68 00 02 00 00	 push	 512			; 00000200H
  0015a	57		 push	 edi
  0015b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcessId@0
  00161	50		 push	 eax
  00162	ff d5		 call	 ebp
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 _MiniDumpWriteDump@28

; 548  : 
; 549  :         if ( TRUE == bRet )

  0016a	83 f8 01	 cmp	 eax, 1
  0016d	75 1e		 jne	 SHORT $LN2@CreateMini

; 550  :         {
; 551  : 			Log(LOG_HEADER,__LINE__,"CreateMiniDump, Created MiniDump file located at %s",chFileName);

  0016f	8d 84 24 38 01
	00 00		 lea	 eax, DWORD PTR _chFileName$[esp+1612]
  00176	50		 push	 eax
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@KOKEPHBJ@CreateMiniDump?0?5Created?5MiniDump@
  0017c	68 27 02 00 00	 push	 551			; 00000227H
  00181	6a 02		 push	 2
  00183	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00188	83 c4 10	 add	 esp, 16			; 00000010H

; 552  :         }
; 553  :         else

  0018b	eb 4e		 jmp	 SHORT $LN1@CreateMini
$LN2@CreateMini:

; 554  :         {
; 555  :             char szLastError[1024] = {0};

  0018d	68 ff 03 00 00	 push	 1023			; 000003ffH
  00192	8d 8c 24 45 02
	00 00		 lea	 ecx, DWORD PTR _szLastError$144644[esp+1617]
  00199	53		 push	 ebx
  0019a	51		 push	 ecx
  0019b	88 9c 24 4c 02
	00 00		 mov	 BYTE PTR _szLastError$144644[esp+1624], bl
  001a2	e8 00 00 00 00	 call	 _memset
  001a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 556  :             DWORD dwLastError = GetLastError();

  001aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  001b0	8b d8		 mov	 ebx, eax

; 557  :             GetLastErrorMessage(dwLastError,szLastError,sizeof(szLastError));

  001b2	68 00 04 00 00	 push	 1024			; 00000400H
  001b7	8d b4 24 44 02
	00 00		 lea	 esi, DWORD PTR _szLastError$144644[esp+1616]
  001be	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 558  :             Log(LOG_HEADER,__LINE__,"CreateMiniDump, Failed to create MiniDump file. Last Error: %d, %s", dwLastError,szLastError);

  001c3	8b d6		 mov	 edx, esi
  001c5	52		 push	 edx
  001c6	53		 push	 ebx
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@NLNOIJDN@CreateMiniDump?0?5Failed?5to?5create@
  001cc	68 2e 02 00 00	 push	 558			; 0000022eH
  001d1	6a 02		 push	 2
  001d3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001d8	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@CreateMini:

; 559  :         }
; 560  : 
; 561  :         // Close the open file.
; 562  :         CloseHandle ( hFile );

  001db	57		 push	 edi
  001dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN4@CreateMini:

; 563  :     }
; 564  : }

  001e2	8b 8c 24 44 06
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1612]
  001e9	5f		 pop	 edi
  001ea	5e		 pop	 esi
  001eb	5d		 pop	 ebp
  001ec	5b		 pop	 ebx
  001ed	33 cc		 xor	 ecx, esp
  001ef	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f4	81 c4 3c 06 00
	00		 add	 esp, 1596		; 0000063cH
  001fa	c3		 ret	 0
?CreateMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z ENDP	; CreateMiniDump
_TEXT	ENDS
PUBLIC	?USBTraceInfo@@YAXPAD0@Z			; USBTraceInfo
; Function compile flags: /Ogtpy
;	COMDAT ?USBTraceInfo@@YAXPAD0@Z
_TEXT	SEGMENT
_pSerial$ = -12						; size = 4
_pProductID$ = -8					; size = 4
_pName$ = -4						; size = 4
_StartString$ = 8					; size = 4
?USBTraceInfo@@YAXPAD0@Z PROC				; USBTraceInfo, COMDAT
; _DeviceInterfaceName$ = eax

; 348  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	56		 push	 esi

; 349  : 	PCHAR	pVendorID = NULL;
; 350  : 	PCHAR	pProductID = NULL;
; 351  : 	PCHAR	pSerial = NULL;

  00006	33 db		 xor	 ebx, ebx
  00008	57		 push	 edi
  00009	8b f0		 mov	 esi, eax
  0000b	89 5c 24 10	 mov	 DWORD PTR _pSerial$[esp+28], ebx

; 352  : 	PCHAR	pName = NULL;
; 353  : 	PCHAR	pTmp = NULL;
; 354  : 
; 355  : 	pName = (PCHAR)malloc(strlen(DeviceInterfaceName)+1);

  0000f	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL36@USBTraceIn:
  00012	8a 08		 mov	 cl, BYTE PTR [eax]
  00014	40		 inc	 eax
  00015	84 c9		 test	 cl, cl
  00017	75 f9		 jne	 SHORT $LL36@USBTraceIn
  00019	2b c2		 sub	 eax, edx
  0001b	40		 inc	 eax
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _malloc
  00022	8b f8		 mov	 edi, eax
  00024	83 c4 04	 add	 esp, 4
  00027	89 7c 24 18	 mov	 DWORD PTR _pName$[esp+28], edi

; 356  :     if(pName)

  0002b	3b fb		 cmp	 edi, ebx
  0002d	0f 84 31 01 00
	00		 je	 $LN12@USBTraceIn

; 357  :     {
; 358  :         memset(pName,0x00,(strlen(DeviceInterfaceName)+1));

  00033	8b c6		 mov	 eax, esi
  00035	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL37@USBTraceIn:
  00038	8a 08		 mov	 cl, BYTE PTR [eax]
  0003a	40		 inc	 eax
  0003b	84 c9		 test	 cl, cl
  0003d	75 f9		 jne	 SHORT $LL37@USBTraceIn
  0003f	2b c2		 sub	 eax, edx
  00041	40		 inc	 eax
  00042	50		 push	 eax
  00043	53		 push	 ebx
  00044	57		 push	 edi
  00045	e8 00 00 00 00	 call	 _memset

; 359  : 	    strcpy(pName,DeviceInterfaceName);

  0004a	8b d7		 mov	 edx, edi
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	8b c6		 mov	 eax, esi
  00051	2b d6		 sub	 edx, esi
$LL15@USBTraceIn:
  00053	8a 08		 mov	 cl, BYTE PTR [eax]
  00055	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00058	40		 inc	 eax
  00059	84 c9		 test	 cl, cl
  0005b	75 f6		 jne	 SHORT $LL15@USBTraceIn

; 360  :     		
; 361  : 	    // Get Vid value
; 362  : 	    if (pVendorID = strchr (pName, 'V'))

  0005d	6a 56		 push	 86			; 00000056H
  0005f	57		 push	 edi
  00060	e8 00 00 00 00	 call	 _strchr
  00065	8b e8		 mov	 ebp, eax
  00067	83 c4 08	 add	 esp, 8
  0006a	3b eb		 cmp	 ebp, ebx
  0006c	0f 84 06 01 00
	00		 je	 $LN1@USBTraceIn

; 363  : 	    {
; 364  : 		    pVendorID += 4;

  00072	83 c5 04	 add	 ebp, 4

; 365  :     		
; 366  : 		    // Get Pid value
; 367  : 		    if (pProductID = strchr (pVendorID, 'P'))

  00075	6a 50		 push	 80			; 00000050H
  00077	55		 push	 ebp
  00078	e8 00 00 00 00	 call	 _strchr
  0007d	83 c4 08	 add	 esp, 8
  00080	89 44 24 14	 mov	 DWORD PTR _pProductID$[esp+28], eax
  00084	3b c3		 cmp	 eax, ebx
  00086	74 34		 je	 SHORT $LN9@USBTraceIn

; 368  : 		    {
; 369  : 			    pProductID += 4;

  00088	83 c0 04	 add	 eax, 4

; 370  : 	            pTmp = pVendorID+4;
; 371  : 			    *pTmp = 0;
; 372  :     	
; 373  : 			    //Get SerialId value
; 374  : 			    if (pSerial = strchr (pProductID, '#'))

  0008b	6a 23		 push	 35			; 00000023H
  0008d	50		 push	 eax
  0008e	89 44 24 1c	 mov	 DWORD PTR _pProductID$[esp+36], eax
  00092	88 5d 04	 mov	 BYTE PTR [ebp+4], bl
  00095	e8 00 00 00 00	 call	 _strchr
  0009a	83 c4 08	 add	 esp, 8
  0009d	89 44 24 10	 mov	 DWORD PTR _pSerial$[esp+28], eax
  000a1	3b c3		 cmp	 eax, ebx
  000a3	74 17		 je	 SHORT $LN9@USBTraceIn

; 375  : 			    {
; 376  : 				    *pSerial = 0;

  000a5	88 18		 mov	 BYTE PTR [eax], bl

; 377  : 				    pTmp = ++pSerial;

  000a7	40		 inc	 eax
  000a8	89 44 24 10	 mov	 DWORD PTR _pSerial$[esp+28], eax

; 378  : 				    while((*pTmp) && (*pTmp != '#'))

  000ac	38 18		 cmp	 BYTE PTR [eax], bl
  000ae	74 0a		 je	 SHORT $LN7@USBTraceIn
$LL8@USBTraceIn:
  000b0	80 38 23	 cmp	 BYTE PTR [eax], 35	; 00000023H
  000b3	74 05		 je	 SHORT $LN7@USBTraceIn

; 379  : 					    pTmp++;

  000b5	40		 inc	 eax
  000b6	38 18		 cmp	 BYTE PTR [eax], bl
  000b8	75 f6		 jne	 SHORT $LL8@USBTraceIn
$LN7@USBTraceIn:

; 380  : 				    *pTmp = 0;

  000ba	88 18		 mov	 BYTE PTR [eax], bl
$LN9@USBTraceIn:

; 381  : 			    }
; 382  : 		    }
; 383  :             USHORT vendorId = 0;

  000bc	8b fd		 mov	 edi, ebp
  000be	be 0c 00 00 00	 mov	 esi, 12			; 0000000cH
$LL6@USBTraceIn:

; 384  :             for(int x=0;x<4;x++)
; 385  :             {
; 386  :                 USHORT us = 0;
; 387  :                 if(isdigit(pVendorID[x]))

  000c3	0f be 07	 movsx	 eax, BYTE PTR [edi]
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 _isdigit
  000cc	83 c4 04	 add	 esp, 4
  000cf	85 c0		 test	 eax, eax
  000d1	74 0d		 je	 SHORT $LN3@USBTraceIn

; 388  :                     us = (USHORT)(pVendorID[x]-0x30);

  000d3	66 0f be 0f	 movsx	 cx, BYTE PTR [edi]
  000d7	66 83 e9 30	 sub	 cx, 48			; 00000030H
  000db	0f b7 c1	 movzx	 eax, cx

; 389  :                 else

  000de	eb 0b		 jmp	 SHORT $LN2@USBTraceIn
$LN3@USBTraceIn:

; 390  :                     us = (USHORT)(pVendorID[x]-0x37);

  000e0	66 0f be 17	 movsx	 dx, BYTE PTR [edi]
  000e4	66 83 ea 37	 sub	 dx, 55			; 00000037H
  000e8	0f b7 c2	 movzx	 eax, dx
$LN2@USBTraceIn:

; 391  :                 vendorId += (USHORT)(us<<(3-x)*4);

  000eb	8b ce		 mov	 ecx, esi
  000ed	d3 e0		 shl	 eax, cl
  000ef	83 ee 04	 sub	 esi, 4
  000f2	47		 inc	 edi
  000f3	03 d8		 add	 ebx, eax
  000f5	83 fe fc	 cmp	 esi, -4			; fffffffcH
  000f8	7f c9		 jg	 SHORT $LL6@USBTraceIn

; 392  :             }
; 393  :             Log(LOG_MESSAGE,__LINE__,"%s [VID:%s PID:%s SN:%s] %s",StartString, pVendorID, pProductID, pSerial, USB::GetVendorString(vendorId));

  000fa	66 85 db	 test	 bx, bx
  000fd	74 24		 je	 SHORT $LN23@USBTraceIn
  000ff	66 a1 00 00 00
	00		 mov	 ax, WORD PTR _USBVendorIDs
  00105	b9 00 00 00 00	 mov	 ecx, OFFSET _USBVendorIDs
  0010a	66 85 c0	 test	 ax, ax
  0010d	74 14		 je	 SHORT $LN23@USBTraceIn
  0010f	0f b7 c0	 movzx	 eax, ax
$LL24@USBTraceIn:
  00112	66 3b c3	 cmp	 ax, bx
  00115	74 48		 je	 SHORT $LN32@USBTraceIn
  00117	0f b7 41 08	 movzx	 eax, WORD PTR [ecx+8]
  0011b	83 c1 08	 add	 ecx, 8
  0011e	66 85 c0	 test	 ax, ax
  00121	75 ef		 jne	 SHORT $LL24@USBTraceIn
$LN23@USBTraceIn:
  00123	33 c9		 xor	 ecx, ecx
$LN26@USBTraceIn:
  00125	8b 44 24 10	 mov	 eax, DWORD PTR _pSerial$[esp+28]
  00129	8b 54 24 20	 mov	 edx, DWORD PTR _StartString$[esp+24]
  0012d	51		 push	 ecx
  0012e	8b 4c 24 18	 mov	 ecx, DWORD PTR _pProductID$[esp+32]
  00132	50		 push	 eax
  00133	51		 push	 ecx
  00134	55		 push	 ebp
  00135	52		 push	 edx
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GCCDOOIB@?$CFs?5?$FLVID?3?$CFs?5PID?3?$CFs?5SN?3?$CFs?$FN?5?$CFs?$AA@
  0013b	68 89 01 00 00	 push	 393			; 00000189H
  00140	6a 01		 push	 1
  00142	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 394  : 	    }
; 395  :     }
; 396  :     else

  00147	8b 7c 24 38	 mov	 edi, DWORD PTR _pName$[esp+60]
  0014b	83 c4 20	 add	 esp, 32			; 00000020H

; 399  :     }
; 400  : 	free(pName);

  0014e	57		 push	 edi
  0014f	e8 00 00 00 00	 call	 _free
  00154	83 c4 04	 add	 esp, 4

; 401  : }

  00157	5f		 pop	 edi
  00158	5e		 pop	 esi
  00159	5d		 pop	 ebp
  0015a	5b		 pop	 ebx
  0015b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0015e	c3		 ret	 0
$LN32@USBTraceIn:

; 392  :             }
; 393  :             Log(LOG_MESSAGE,__LINE__,"%s [VID:%s PID:%s SN:%s] %s",StartString, pVendorID, pProductID, pSerial, USB::GetVendorString(vendorId));

  0015f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00162	eb c1		 jmp	 SHORT $LN26@USBTraceIn
$LN12@USBTraceIn:

; 397  :     {
; 398  :         Log(LOG_DEBUG,__LINE__,"New DeviceName null");

  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@ENHKCHAG@New?5DeviceName?5null?$AA@
  00169	68 8e 01 00 00	 push	 398			; 0000018eH
  0016e	6a 10		 push	 16			; 00000010H
  00170	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00175	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@USBTraceIn:

; 399  :     }
; 400  : 	free(pName);

  00178	57		 push	 edi
  00179	e8 00 00 00 00	 call	 _free
  0017e	83 c4 04	 add	 esp, 4

; 401  : }

  00181	5f		 pop	 edi
  00182	5e		 pop	 esi
  00183	5d		 pop	 ebp
  00184	5b		 pop	 ebx
  00185	83 c4 0c	 add	 esp, 12			; 0000000cH
  00188	c3		 ret	 0
?USBTraceInfo@@YAXPAD0@Z ENDP				; USBTraceInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CheckLogFileSize@@YAXK@Z			; CheckLogFileSize
; Function compile flags: /Ogtpy
;	COMDAT ?CheckLogFileSize@@YAXK@Z
_TEXT	SEGMENT
_hdTh$ = -1832						; size = 4
_newFile$144523 = -1828					; size = 260
_oldFile$144524 = -1564					; size = 260
_temp$144513 = -1300					; size = 260
_logFile$144500 = -1036					; size = 1024
__$ArrayPad$ = -8					; size = 4
?CheckLogFileSize@@YAXK@Z PROC				; CheckLogFileSize, COMDAT
; _dwMaxSize$ = ecx

; 213  : {

  00000	81 ec 2c 07 00
	00		 sub	 esp, 1836		; 0000072cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c4		 xor	 eax, esp
  0000d	89 84 24 24 07
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1836], eax
  00014	53		 push	 ebx
  00015	55		 push	 ebp
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx

; 214  :     HANDLE hTraceFile = NULL;
; 215  :     DWORD dwFileSize = 0;
; 216  : 
; 217  :     Log(LOG_DEBUG,__LINE__,">> ChkLogFileSz, %u",dwMaxSize);

  0001a	57		 push	 edi
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GIEOINGB@?$DO?$DO?5ChkLogFileSz?0?5?$CFu?$AA@
  00020	68 d9 00 00 00	 push	 217			; 000000d9H
  00025	6a 10		 push	 16			; 00000010H
  00027	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0002c	83 c4 10	 add	 esp, 16			; 00000010H

; 218  : 
; 219  :     HANDLE hdTh = CreateMutex(NULL,FALSE,"SysStatus_Log");

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FHDHJHFN@SysStatus_Log?$AA@
  00034	6a 00		 push	 0
  00036	6a 00		 push	 0
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMutexA@12
  0003e	8b d8		 mov	 ebx, eax

; 220  :     WaitForSingleObject(hdTh,INFINITE);

  00040	6a ff		 push	 -1
  00042	53		 push	 ebx
  00043	89 5c 24 1c	 mov	 DWORD PTR _hdTh$[esp+1860], ebx
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 221  : 
; 222  :     if(dwMaxSize>0)

  0004d	8b 2d 00 00 00
	00		 mov	 ebp, DWORD PTR __imp__CreateFileA@28
  00053	85 ff		 test	 edi, edi
  00055	0f 86 bd 00 00
	00		 jbe	 $LN26@CheckLogFi

; 223  :     {
; 224  :         char logFile[1024] = {0};

  0005b	68 ff 03 00 00	 push	 1023			; 000003ffH
  00060	8d 84 24 35 03
	00 00		 lea	 eax, DWORD PTR _logFile$144500[esp+1857]
  00067	6a 00		 push	 0
  00069	50		 push	 eax
  0006a	c6 84 24 3c 03
	00 00 00	 mov	 BYTE PTR _logFile$144500[esp+1864], 0
  00072	e8 00 00 00 00	 call	 _memset

; 225  :         _snprintf(logFile,sizeof(logFile),"%s.log",gszLogFilePrefix);

  00077	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_06BEJGOBHG@?$CFs?4log?$AA@
  00081	8d 8c 24 44 03
	00 00		 lea	 ecx, DWORD PTR _logFile$144500[esp+1872]
  00088	68 00 04 00 00	 push	 1024			; 00000400H
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 __snprintf

; 226  : 
; 227  :         DWORD dwBytesWritten = 0;
; 228  :         Log(LOG_DEBUG,__LINE__,"-- ChkLogFileSz, Opng %s",logFile);

  00093	8d 94 24 4c 03
	00 00		 lea	 edx, DWORD PTR _logFile$144500[esp+1880]
  0009a	52		 push	 edx
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LGJHGBPF@?9?9?5ChkLogFileSz?0?5Opng?5?$CFs?$AA@
  000a0	68 e4 00 00 00	 push	 228			; 000000e4H
  000a5	6a 10		 push	 16			; 00000010H
  000a7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000ac	83 c4 2c	 add	 esp, 44			; 0000002cH

; 229  :         hTraceFile = CreateFile(logFile,
; 230  :                                 GENERIC_READ|GENERIC_WRITE,
; 231  :                                 FILE_SHARE_READ|FILE_SHARE_WRITE,
; 232  :                                 NULL,
; 233  :                                 OPEN_EXISTING,
; 234  :                                 FILE_ATTRIBUTE_NORMAL,
; 235  :                                 NULL);

  000af	6a 00		 push	 0
  000b1	68 80 00 00 00	 push	 128			; 00000080H
  000b6	6a 03		 push	 3
  000b8	6a 00		 push	 0
  000ba	6a 03		 push	 3
  000bc	68 00 00 00 c0	 push	 -1073741824		; c0000000H
  000c1	8d 84 24 48 03
	00 00		 lea	 eax, DWORD PTR _logFile$144500[esp+1876]
  000c8	50		 push	 eax
  000c9	ff d5		 call	 ebp
  000cb	8b f0		 mov	 esi, eax

; 236  :         if(hTraceFile!=INVALID_HANDLE_VALUE)

  000cd	83 fe ff	 cmp	 esi, -1
  000d0	74 44		 je	 SHORT $LN20@CheckLogFi

; 237  :         {
; 238  :             //Set position o the end of the file
; 239  :             SetFilePointer(hTraceFile,0,NULL,FILE_END);

  000d2	6a 02		 push	 2
  000d4	6a 00		 push	 0
  000d6	6a 00		 push	 0
  000d8	56		 push	 esi
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetFilePointer@16

; 240  : 	        dwFileSize = GetFileSize(hTraceFile,NULL);

  000df	6a 00		 push	 0
  000e1	56		 push	 esi
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFileSize@8
  000e8	8b d8		 mov	 ebx, eax

; 241  :             Log(LOG_DEBUG,__LINE__,"-- ChkLogFileSz, %s Sz %u",logFile,dwFileSize);

  000ea	53		 push	 ebx
  000eb	8d 8c 24 34 03
	00 00		 lea	 ecx, DWORD PTR _logFile$144500[esp+1856]
  000f2	51		 push	 ecx
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HOHICOFN@?9?9?5ChkLogFileSz?0?5?$CFs?5Sz?5?$CFu?$AA@
  000f8	68 f1 00 00 00	 push	 241			; 000000f1H
  000fd	6a 10		 push	 16			; 00000010H
  000ff	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00104	83 c4 14	 add	 esp, 20			; 00000014H

; 242  : 	        CloseHandle(hTraceFile);

  00107	56		 push	 esi
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 243  :             hTraceFile = NULL;
; 244  :         }
; 245  :     }
; 246  :     
; 247  :     //check whether the file size reached the limit
; 248  :     //or it is inicialization - to start new run in new file
; 249  :     if(dwFileSize>dwMaxSize || dwMaxSize==0)

  0010e	3b df		 cmp	 ebx, edi
  00110	8b 5c 24 14	 mov	 ebx, DWORD PTR _hdTh$[esp+1852]
  00114	77 08		 ja	 SHORT $LN9@CheckLogFi
$LN20@CheckLogFi:
  00116	85 ff		 test	 edi, edi
$LN26@CheckLogFi:
  00118	0f 85 fc 01 00
	00		 jne	 $LN10@CheckLogFi
$LN9@CheckLogFi:

; 250  :     {
; 251  :         //find the last file
; 252  :         int x;
; 253  :         for(x=999;x>=0;x--)

  0011e	be e7 03 00 00	 mov	 esi, 999		; 000003e7H
  00123	eb 0b 8d a4 24
	00 00 00 00 8d
	64 24 00	 npad	 13
$LL8@CheckLogFi:

; 254  :         {
; 255  :             char temp[_MAX_PATH] = {0};

  00130	68 03 01 00 00	 push	 259			; 00000103H
  00135	8d 94 24 2d 02
	00 00		 lea	 edx, DWORD PTR _temp$144513[esp+1857]
  0013c	6a 00		 push	 0
  0013e	52		 push	 edx
  0013f	c6 84 24 34 02
	00 00 00	 mov	 BYTE PTR _temp$144513[esp+1864], 0
  00147	e8 00 00 00 00	 call	 _memset

; 256  :             _snprintf(temp,sizeof(temp),"%s.%.3d",gszLogFilePrefix,x);

  0014c	56		 push	 esi
  0014d	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  00152	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBNGPEH@?$CFs?4?$CF?43d?$AA@
  00157	8d 84 24 40 02
	00 00		 lea	 eax, DWORD PTR _temp$144513[esp+1876]
  0015e	68 04 01 00 00	 push	 260			; 00000104H
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 __snprintf

; 257  :             Log(LOG_DEBUG,__LINE__,"-- ChkLogFileSz, Trying opng %s",temp);

  00169	8d 8c 24 48 02
	00 00		 lea	 ecx, DWORD PTR _temp$144513[esp+1884]
  00170	51		 push	 ecx
  00171	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MGCLJDML@?9?9?5ChkLogFileSz?0?5Trying?5opng?5?$CFs?$AA@
  00176	68 01 01 00 00	 push	 257			; 00000101H
  0017b	6a 10		 push	 16			; 00000010H
  0017d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00182	83 c4 30	 add	 esp, 48			; 00000030H

; 258  :             hTraceFile = CreateFile(temp,GENERIC_READ|GENERIC_WRITE,
; 259  :                                           FILE_SHARE_READ|FILE_SHARE_WRITE,
; 260  :                                           NULL,
; 261  :                                           OPEN_EXISTING,
; 262  :                                           FILE_ATTRIBUTE_NORMAL,
; 263  :                                           NULL);

  00185	6a 00		 push	 0
  00187	68 80 00 00 00	 push	 128			; 00000080H
  0018c	6a 03		 push	 3
  0018e	6a 00		 push	 0
  00190	6a 03		 push	 3
  00192	68 00 00 00 c0	 push	 -1073741824		; c0000000H
  00197	8d 94 24 40 02
	00 00		 lea	 edx, DWORD PTR _temp$144513[esp+1876]
  0019e	52		 push	 edx
  0019f	ff d5		 call	 ebp
  001a1	8b f8		 mov	 edi, eax

; 264  :             if(hTraceFile!=INVALID_HANDLE_VALUE)

  001a3	83 ff ff	 cmp	 edi, -1
  001a6	75 07		 jne	 SHORT $LN17@CheckLogFi

; 250  :     {
; 251  :         //find the last file
; 252  :         int x;
; 253  :         for(x=999;x>=0;x--)

  001a8	83 ee 01	 sub	 esi, 1
  001ab	79 83		 jns	 SHORT $LL8@CheckLogFi

; 264  :             if(hTraceFile!=INVALID_HANDLE_VALUE)

  001ad	eb 54		 jmp	 SHORT $LN4@CheckLogFi
$LN17@CheckLogFi:

; 265  :             {
; 266  :                 Log(LOG_DEBUG,__LINE__,"-- ChkLogFileSz, Last file fnd: %s",temp);

  001af	8d 84 24 28 02
	00 00		 lea	 eax, DWORD PTR _temp$144513[esp+1852]
  001b6	50		 push	 eax
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@DNFINAJK@?9?9?5ChkLogFileSz?0?5Last?5file?5fnd?3?5@
  001bc	68 0a 01 00 00	 push	 266			; 0000010aH
  001c1	6a 10		 push	 16			; 00000010H
  001c3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001c8	83 c4 10	 add	 esp, 16			; 00000010H

; 267  :                 CloseHandle(hTraceFile);

  001cb	57		 push	 edi
  001cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 268  :                 hTraceFile = NULL;
; 269  : 
; 270  :                 //all file were filled, removed the last one
; 271  :                 if(x==999) {

  001d2	81 fe e7 03 00
	00		 cmp	 esi, 999		; 000003e7H
  001d8	75 29		 jne	 SHORT $LN4@CheckLogFi

; 272  :                     Log(LOG_DEBUG,__LINE__,"-- ChkLogFileSz, Removing %s - oldest file",temp);

  001da	8d 8c 24 28 02
	00 00		 lea	 ecx, DWORD PTR _temp$144513[esp+1852]
  001e1	51		 push	 ecx
  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@JDMPMEKE@?9?9?5ChkLogFileSz?0?5Removing?5?$CFs?5?9?5o@
  001e7	68 10 01 00 00	 push	 272			; 00000110H
  001ec	6a 10		 push	 16			; 00000010H
  001ee	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 273  :                     remove((char*)temp);

  001f3	8d 94 24 38 02
	00 00		 lea	 edx, DWORD PTR _temp$144513[esp+1868]
  001fa	52		 push	 edx
  001fb	e8 00 00 00 00	 call	 _remove
  00200	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@CheckLogFi:

; 274  :                 }
; 275  : 
; 276  :                 break;      //last one was found
; 277  :             }
; 278  :         }
; 279  : 
; 280  :         //rename the last one to the previous
; 281  :         char newFile[_MAX_PATH] = {0};

  00203	68 03 01 00 00	 push	 259			; 00000103H
  00208	8d 44 24 1d	 lea	 eax, DWORD PTR _newFile$144523[esp+1857]
  0020c	6a 00		 push	 0
  0020e	50		 push	 eax
  0020f	c6 44 24 24 00	 mov	 BYTE PTR _newFile$144523[esp+1864], 0
  00214	e8 00 00 00 00	 call	 _memset

; 282  :         char oldFile[_MAX_PATH] = {0};

  00219	68 03 01 00 00	 push	 259			; 00000103H
  0021e	8d 8c 24 31 01
	00 00		 lea	 ecx, DWORD PTR _oldFile$144524[esp+1869]
  00225	6a 00		 push	 0
  00227	51		 push	 ecx
  00228	c6 84 24 38 01
	00 00 00	 mov	 BYTE PTR _oldFile$144524[esp+1876], 0
  00230	e8 00 00 00 00	 call	 _memset
  00235	83 c4 18	 add	 esp, 24			; 00000018H

; 283  :         for(;x>=0;x--)

  00238	85 f6		 test	 esi, esi
  0023a	7c 76		 jl	 SHORT $LN1@CheckLogFi
  0023c	8d 64 24 00	 npad	 4
$LL3@CheckLogFi:
  00240	8d 56 01	 lea	 edx, DWORD PTR [esi+1]

; 284  :         {
; 285  :             _snprintf(newFile,sizeof(newFile),"%s.%.3d",gszLogFilePrefix,x+1);

  00243	52		 push	 edx
  00244	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  00249	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBNGPEH@?$CFs?4?$CF?43d?$AA@
  0024e	8d 44 24 24	 lea	 eax, DWORD PTR _newFile$144523[esp+1864]
  00252	68 04 01 00 00	 push	 260			; 00000104H
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 __snprintf

; 286  :             _snprintf(oldFile,sizeof(oldFile),"%s.%.3d",gszLogFilePrefix,x);

  0025d	56		 push	 esi
  0025e	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  00263	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBNGPEH@?$CFs?4?$CF?43d?$AA@
  00268	8d 8c 24 40 01
	00 00		 lea	 ecx, DWORD PTR _oldFile$144524[esp+1884]
  0026f	68 04 01 00 00	 push	 260			; 00000104H
  00274	51		 push	 ecx
  00275	e8 00 00 00 00	 call	 __snprintf

; 287  : 
; 288  :             Log(LOG_DEBUG,__LINE__,"-- ChkLogFileSz, Renaming %s -> %s",oldFile,newFile);

  0027a	8d 54 24 40	 lea	 edx, DWORD PTR _newFile$144523[esp+1892]
  0027e	52		 push	 edx
  0027f	8d 84 24 4c 01
	00 00		 lea	 eax, DWORD PTR _oldFile$144524[esp+1896]
  00286	50		 push	 eax
  00287	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@KIGAJNDH@?9?9?5ChkLogFileSz?0?5Renaming?5?$CFs?5?9?$DO?5@
  0028c	68 20 01 00 00	 push	 288			; 00000120H
  00291	6a 10		 push	 16			; 00000010H
  00293	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 289  :             rename((const char*)oldFile,(const char*)newFile);

  00298	8d 4c 24 54	 lea	 ecx, DWORD PTR _newFile$144523[esp+1912]
  0029c	51		 push	 ecx
  0029d	8d 94 24 60 01
	00 00		 lea	 edx, DWORD PTR _oldFile$144524[esp+1916]
  002a4	52		 push	 edx
  002a5	e8 00 00 00 00	 call	 _rename
  002aa	83 c4 44	 add	 esp, 68			; 00000044H
  002ad	83 ee 01	 sub	 esi, 1
  002b0	79 8e		 jns	 SHORT $LL3@CheckLogFi
$LN1@CheckLogFi:

; 290  :         }
; 291  :         //rename the log to 000
; 292  :         _snprintf(newFile,sizeof(newFile),"%s.000",gszLogFilePrefix);

  002b2	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  002b7	68 00 00 00 00	 push	 OFFSET ??_C@_06HFHPDHC@?$CFs?4000?$AA@
  002bc	8d 44 24 20	 lea	 eax, DWORD PTR _newFile$144523[esp+1860]
  002c0	68 04 01 00 00	 push	 260			; 00000104H
  002c5	50		 push	 eax
  002c6	e8 00 00 00 00	 call	 __snprintf

; 293  :         _snprintf(oldFile,sizeof(oldFile),"%s.log",gszLogFilePrefix);

  002cb	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  002d0	68 00 00 00 00	 push	 OFFSET ??_C@_06BEJGOBHG@?$CFs?4log?$AA@
  002d5	8d 8c 24 38 01
	00 00		 lea	 ecx, DWORD PTR _oldFile$144524[esp+1876]
  002dc	68 04 01 00 00	 push	 260			; 00000104H
  002e1	51		 push	 ecx
  002e2	e8 00 00 00 00	 call	 __snprintf

; 294  :         Log(LOG_DEBUG,__LINE__,"-- ChkLogFileSz, Remaning %s -> %s",oldFile,newFile);

  002e7	8d 54 24 38	 lea	 edx, DWORD PTR _newFile$144523[esp+1884]
  002eb	52		 push	 edx
  002ec	8d 84 24 44 01
	00 00		 lea	 eax, DWORD PTR _oldFile$144524[esp+1888]
  002f3	50		 push	 eax
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@PNMJAMBO@?9?9?5ChkLogFileSz?0?5Remaning?5?$CFs?5?9?$DO?5@
  002f9	68 26 01 00 00	 push	 294			; 00000126H
  002fe	6a 10		 push	 16			; 00000010H
  00300	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 295  :         rename((const char*)oldFile,(const char*)newFile);

  00305	8d 4c 24 4c	 lea	 ecx, DWORD PTR _newFile$144523[esp+1904]
  00309	51		 push	 ecx
  0030a	8d 94 24 58 01
	00 00		 lea	 edx, DWORD PTR _oldFile$144524[esp+1908]
  00311	52		 push	 edx
  00312	e8 00 00 00 00	 call	 _rename
  00317	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN10@CheckLogFi:

; 296  :     }
; 297  : 
; 298  :     ReleaseMutex(hdTh);

  0031a	53		 push	 ebx
  0031b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4

; 299  :     CloseHandle(hdTh);

  00321	53		 push	 ebx
  00322	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 300  :     Log(LOG_DEBUG,__LINE__,"<< ChkLogFileSz");

  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GCOGCGED@?$DM?$DM?5ChkLogFileSz?$AA@
  0032d	68 2c 01 00 00	 push	 300			; 0000012cH
  00332	6a 10		 push	 16			; 00000010H
  00334	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 301  : }

  00339	8b 8c 24 40 07
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1864]
  00340	83 c4 0c	 add	 esp, 12			; 0000000cH
  00343	5f		 pop	 edi
  00344	5e		 pop	 esi
  00345	5d		 pop	 ebp
  00346	5b		 pop	 ebx
  00347	33 cc		 xor	 ecx, esp
  00349	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034e	81 c4 2c 07 00
	00		 add	 esp, 1836		; 0000072cH
  00354	c3		 ret	 0
?CheckLogFileSize@@YAXK@Z ENDP				; CheckLogFileSize
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$??1out_of_range@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1out_of_range@std@@UAE@XZ$0
__ehfuncinfo$??1out_of_range@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1out_of_range@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 133  : 		{	// destroy the object

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1out_of_range@std@@UAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00014	33 c4		 xor	 eax, esp
  00016	50		 push	 eax
  00017	8d 44 24 08	 lea	 eax, DWORD PTR __$EHRec$[esp+20]
  0001b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00021	89 4c 24 04	 mov	 DWORD PTR _this$[esp+20], ecx
  00025	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@

; 134  : 		}

  0002b	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00033	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00038	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0003c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00043	59		 pop	 ecx
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1out_of_range@std@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
__ehhandler$??1out_of_range@std@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1out_of_range@std@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$191881 = -4					; size = 1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = esi

; 1123 : 		{	// free all storage

  00000	51		 push	 ecx

; 1124 : 		if (_Myfirst != 0)

  00001	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00004	85 c0		 test	 eax, eax
  00006	74 1a		 je	 SHORT $LN10@Tidy@10

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

  00008	8b 0c 24	 mov	 ecx, DWORD PTR __Cat$191881[esp+4]
  0000b	57		 push	 edi
  0000c	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  00015	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001e	83 c4 08	 add	 esp, 8
  00021	5f		 pop	 edi
$LN10@Tidy@10:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00022	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00029	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00030	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1135 : 		}

  00037	59		 pop	 ecx
  00038	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$1
__ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Cat$191934 = 8					; size = 1
_this$ = 8						; size = 4
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 558  : 		{	// destroy the object

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c4		 xor	 eax, esp
  00018	50		 push	 eax
  00019	8d 44 24 10	 lea	 eax, DWORD PTR __$EHRec$[esp+28]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b 74 24 20	 mov	 esi, DWORD PTR _this$[esp+24]
  00027	33 db		 xor	 ebx, ebx
  00029	89 5c 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], ebx

; 559  : 		_Tidy();

  0002d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00030	3b c3		 cmp	 eax, ebx
  00032	74 19		 je	 SHORT $LN13@vector@9
  00034	8b 4c 24 20	 mov	 ecx, DWORD PTR __Cat$191934[esp+24]
  00038	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00041	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004a	83 c4 08	 add	 esp, 8
$LN13@vector@9:
  0004d	89 5e 0c	 mov	 DWORD PTR [esi+12], ebx
  00050	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  00053	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 560  : 		}

  00056	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0005e	8b 16		 mov	 edx, DWORD PTR [esi]
  00060	52		 push	 edx
  00061	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00066	83 c4 04	 add	 esp, 4
  00069	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  00009	c3		 ret	 0
__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$1:
  0000a	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  0000d	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 f4	 lea	 eax, DWORD PTR [edx-12]
  00019	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	__$ArrayPad$
PUBLIC	?PrinterInfo@@YGIPAX@Z				; PrinterInfo
;	COMDAT xdata$x
; File e:\tools\sysstatus\sysstatus.h
xdata$x	SEGMENT
__unwindtable$?PrinterInfo@@YGIPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrinterInfo@@YGIPAX@Z$6
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$?PrinterInfo@@YGIPAX@Z$7 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?PrinterInfo@@YGIPAX@Z$0
__catchsym$?PrinterInfo@@YGIPAX@Z$8 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?PrinterInfo@@YGIPAX@Z$2
__catchsym$?PrinterInfo@@YGIPAX@Z$9 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?PrinterInfo@@YGIPAX@Z$4
__tryblocktable$?PrinterInfo@@YGIPAX@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?PrinterInfo@@YGIPAX@Z$7
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?PrinterInfo@@YGIPAX@Z$8
	DD	05H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$?PrinterInfo@@YGIPAX@Z$9
__ehfuncinfo$?PrinterInfo@@YGIPAX@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?PrinterInfo@@YGIPAX@Z
	DD	03H
	DD	FLAT:__tryblocktable$?PrinterInfo@@YGIPAX@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?PrinterInfo@@YGIPAX@Z
_TEXT	SEGMENT
_tickStart$ = -1120					; size = 8
_printerCnt$145634 = -1112				; size = 4
_hPrinter$145789 = -1108				; size = 4
_i$ = -1104						; size = 4
_ppi$ = -1100						; size = 4
tv1881 = -1096						; size = 4
_dwFormatFlags$192049 = -1096				; size = 4
_iBufferSize$145880 = -1096				; size = 4
_pdw$ = -1096						; size = 4
_l$ = -1096						; size = 4
_B$ = -1092						; size = 8
_hGdi$145878 = -1084					; size = 4
_dwLastError$ = -1084					; size = 4
_n$ = -1084						; size = 4
_DriverName$ = -1080					; size = 260
_PortName$ = -816					; size = 260
_PrinterName$ = -552					; size = 260
_szLastError$ = -288					; size = 260
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_lpData$ = 8						; size = 4
?PrinterInfo@@YGIPAX@Z PROC				; PrinterInfo, COMDAT

; 2193 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?PrinterInfo@@YGIPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 54 04 00
	00		 sub	 esp, 1108		; 00000454H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 2194 :     int l = 0, n = 0, i = 0;
; 2195 :     DWORD *pdw = NULL;
; 2196 :     WORD *pw = NULL;
; 2197 :     BYTE *ppi = NULL;

  00031	33 f6		 xor	 esi, esi
  00033	89 b5 b4 fb ff
	ff		 mov	 DWORD PTR _ppi$[ebp], esi

; 2198 :     POINT *pp = NULL;
; 2199 :     PBuffer B;

  00039	89 b5 bc fb ff
	ff		 mov	 DWORD PTR _B$[ebp], esi
  0003f	89 b5 c0 fb ff
	ff		 mov	 DWORD PTR _B$[ebp+4], esi
  00045	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+12], esi

; 2200 : 
; 2201 :     char PrinterName[_MAX_PATH] = {0};

  00048	c6 85 d8 fd ff
	ff 00		 mov	 BYTE PTR _PrinterName$[ebp], 0
  0004f	68 03 01 00 00	 push	 259			; 00000103H
  00054	56		 push	 esi
  00055	8d 85 d9 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp+1]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 _memset

; 2202 :     char DriverName[_MAX_PATH] = {0};

  00061	c6 85 c8 fb ff
	ff 00		 mov	 BYTE PTR _DriverName$[ebp], 0
  00068	68 03 01 00 00	 push	 259			; 00000103H
  0006d	56		 push	 esi
  0006e	8d 8d c9 fb ff
	ff		 lea	 ecx, DWORD PTR _DriverName$[ebp+1]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _memset

; 2203 :     char PortName[_MAX_PATH] = {0};

  0007a	c6 85 d0 fc ff
	ff 00		 mov	 BYTE PTR _PortName$[ebp], 0
  00081	68 03 01 00 00	 push	 259			; 00000103H
  00086	56		 push	 esi
  00087	8d 95 d1 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp+1]
  0008d	52		 push	 edx
  0008e	e8 00 00 00 00	 call	 _memset

; 2204 : 
; 2205 :     DWORD dwLastError = 0;
; 2206 :     char szLastError[_MAX_PATH] = {0};

  00093	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szLastError$[ebp], 0
  0009a	68 03 01 00 00	 push	 259			; 00000103H
  0009f	56		 push	 esi
  000a0	8d 85 e1 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp+1]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 _memset
  000ac	83 c4 30	 add	 esp, 48			; 00000030H

; 2207 : 
; 2208 :     NAME_32BYTES *pn32 = NULL;
; 2209 :     NAME_64BYTES *pn64 = NULL;
; 2210 : 
; 2211 :     unsigned __int64 tickStart = SysTick;

  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  000b5	89 85 a0 fb ff
	ff		 mov	 DWORD PTR _tickStart$[ebp], eax
  000bb	89 b5 a4 fb ff
	ff		 mov	 DWORD PTR _tickStart$[ebp+4], esi

; 2212 : 
; 2213 :     Log(LOG_DEBUG,__LINE__,">> PtrInfo");

  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DBGBMPOH@?$DO?$DO?5PtrInfo?$AA@
  000c6	68 a5 08 00 00	 push	 2213			; 000008a5H
  000cb	6a 10		 push	 16			; 00000010H
  000cd	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2214 :     if(GetPrintersList()==0)

  000d5	e8 00 00 00 00	 call	 ?GetPrintersList@@YAHXZ	; GetPrintersList
  000da	85 c0		 test	 eax, eax
  000dc	75 26		 jne	 SHORT $LN76@PrinterInf

; 2215 :     {
; 2216 :         Log(LOG_DEBUG,__LINE__,"<< PtrInfo, No Printer");

  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ENEDNFCI@?$DM?$DM?5PtrInfo?0?5No?5Printer?$AA@
  000e3	68 a8 08 00 00	 push	 2216			; 000008a8H
  000e8	6a 10		 push	 16			; 00000010H
  000ea	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2217 :         _endthreadex(0);

  000ef	56		 push	 esi
  000f0	e8 00 00 00 00	 call	 __endthreadex
  000f5	83 c4 10	 add	 esp, 16			; 00000010H

; 2218 :         return 0;

  000f8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ff	e9 36 1b 00 00	 jmp	 $LN184@PrinterInf
$LN76@PrinterInf:

; 2219 :     }
; 2220 : 
; 2221 :     if(!gpPrinterInfoList)

  00104	39 35 00 00 00
	00		 cmp	 DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A, esi ; gpPrinterInfoList
  0010a	75 2c		 jne	 SHORT $LN75@PrinterInf

; 2222 :     {
; 2223 :         Log(LOG_DEBUG,__LINE__,"<< PtrInfo, PtrInfoList null");

  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HOILGMMA@?$DM?$DM?5PtrInfo?0?5PtrInfoList?5null?$AA@
  00111	68 af 08 00 00	 push	 2223			; 000008afH
  00116	6a 10		 push	 16			; 00000010H
  00118	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2224 :         _endthreadex(ERROR_OUTOFMEMORY);

  0011d	6a 0e		 push	 14			; 0000000eH
  0011f	e8 00 00 00 00	 call	 __endthreadex
  00124	83 c4 10	 add	 esp, 16			; 00000010H

; 2225 :         return ERROR_OUTOFMEMORY;

  00127	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0012e	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  00133	e9 04 1b 00 00	 jmp	 $LN233@PrinterInf
$LN75@PrinterInf:

; 2226 :     }
; 2227 : 
; 2228 :     for(int printerCnt=0;printerCnt<gpPrinterInfoList->num;printerCnt++)

  00138	89 b5 a8 fb ff
	ff		 mov	 DWORD PTR _printerCnt$145634[ebp], esi
  0013e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetDeviceCaps@8
  00144	eb 0a 8d a4 24
	00 00 00 00 8d
	49 00		 npad	 12
$LL74@PrinterInf:
  00150	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  00156	3b 31		 cmp	 esi, DWORD PTR [ecx]
  00158	0f 8d 70 1a 00
	00		 jge	 $LN72@PrinterInf

; 2229 :     {
; 2230 :         memset(PrinterName,0x00,sizeof(PrinterName));

  0015e	68 04 01 00 00	 push	 260			; 00000104H
  00163	6a 00		 push	 0
  00165	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]
  0016b	52		 push	 edx
  0016c	e8 00 00 00 00	 call	 _memset

; 2231 :         memset(PortName,0x00,sizeof(PortName));

  00171	68 04 01 00 00	 push	 260			; 00000104H
  00176	6a 00		 push	 0
  00178	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  0017e	50		 push	 eax
  0017f	e8 00 00 00 00	 call	 _memset

; 2232 :         memset(DriverName,0x00,sizeof(DriverName));

  00184	68 04 01 00 00	 push	 260			; 00000104H
  00189	6a 00		 push	 0
  0018b	8d 8d c8 fb ff
	ff		 lea	 ecx, DWORD PTR _DriverName$[ebp]
  00191	51		 push	 ecx
  00192	e8 00 00 00 00	 call	 _memset

; 2233 : 
; 2234 :         strncpy(PrinterName,gpPrinterInfoList->PrinterInfo[printerCnt].PrinterName,_MAX_PATH-1);

  00197	8b de		 mov	 ebx, esi
  00199	69 db 0c 03 00
	00		 imul	 ebx, 780		; 0000030cH
  0019f	68 03 01 00 00	 push	 259			; 00000103H
  001a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  001aa	8d 44 13 04	 lea	 eax, DWORD PTR [ebx+edx+4]
  001ae	50		 push	 eax
  001af	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  001b5	51		 push	 ecx
  001b6	e8 00 00 00 00	 call	 _strncpy

; 2235 :         strncpy(PortName,gpPrinterInfoList->PrinterInfo[printerCnt].PortName,_MAX_PATH-1);

  001bb	68 03 01 00 00	 push	 259			; 00000103H
  001c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  001c6	8d 84 13 08 01
	00 00		 lea	 eax, DWORD PTR [ebx+edx+264]
  001cd	50		 push	 eax
  001ce	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _PortName$[ebp]
  001d4	51		 push	 ecx
  001d5	e8 00 00 00 00	 call	 _strncpy

; 2236 :         strncpy(DriverName,gpPrinterInfoList->PrinterInfo[printerCnt].DriverName,_MAX_PATH-1);

  001da	68 03 01 00 00	 push	 259			; 00000103H
  001df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  001e5	8d 84 13 0c 02
	00 00		 lea	 eax, DWORD PTR [ebx+edx+524]
  001ec	50		 push	 eax
  001ed	8d 8d c8 fb ff
	ff		 lea	 ecx, DWORD PTR _DriverName$[ebp]
  001f3	51		 push	 ecx
  001f4	e8 00 00 00 00	 call	 _strncpy
  001f9	83 c4 48	 add	 esp, 72			; 00000048H

; 2237 : 
; 2238 :         Log(LOG_HEADER,__LINE__,"Info from %s, Port %s, Driver %s (%d)",PrinterName,PortName,DriverName,printerCnt);

  001fc	56		 push	 esi
  001fd	8d 95 c8 fb ff
	ff		 lea	 edx, DWORD PTR _DriverName$[ebp]
  00203	52		 push	 edx
  00204	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  0020a	50		 push	 eax
  0020b	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  00211	51		 push	 ecx
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@GNJLFBNH@Info?5from?5?$CFs?0?5Port?5?$CFs?0?5Driver?5?$CFs@
  00217	68 be 08 00 00	 push	 2238			; 000008beH
  0021c	6a 02		 push	 2
  0021e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00223	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2239 : 
; 2240 :         //GET PRINTER CAPABILITIES
; 2241 :         // *** resolution(s)
; 2242 :         if ((l = DeviceCapabilities(PrinterName,PortName,DC_ENUMRESOLUTIONS,NULL,NULL)) <= 0)

  00226	6a 00		 push	 0
  00228	6a 00		 push	 0
  0022a	6a 0d		 push	 13			; 0000000dH
  0022c	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00232	52		 push	 edx
  00233	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  00239	50		 push	 eax
  0023a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00240	8b d8		 mov	 ebx, eax
  00242	85 db		 test	 ebx, ebx
  00244	7f 35		 jg	 SHORT $LN71@PrinterInf

; 2243 :         {
; 2244 :             dwLastError = GetLastError();

  00246	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0024c	8b d8		 mov	 ebx, eax

; 2245 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  0024e	68 03 01 00 00	 push	 259			; 00000103H
  00253	8d b5 e0 fe ff
	ff		 lea	 esi, DWORD PTR _szLastError$[ebp]
  00259	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2246 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_ENUMRESOLUTIONS, null) Err %d Msg %s",dwLastError,szLastError);

  0025e	8b ce		 mov	 ecx, esi
  00260	51		 push	 ecx
  00261	53		 push	 ebx
  00262	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@EFLGGGFH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  00267	68 c6 08 00 00	 push	 2246			; 000008c6H
  0026c	6a 10		 push	 16			; 00000010H
  0026e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00273	83 c4 18	 add	 esp, 24			; 00000018H

; 2247 :         }
; 2248 :         else

  00276	e9 12 01 00 00	 jmp	 $LN63@PrinterInf
$LN71@PrinterInf:

; 2249 :         {
; 2250 :             ppi = B._allocMem(l*sizeof(POINT));

  0027b	8d 34 dd 00 00
	00 00		 lea	 esi, DWORD PTR [ebx*8]
  00282	3b b5 c0 fb ff
	ff		 cmp	 esi, DWORD PTR _B$[ebp+4]
  00288	7e 31		 jle	 SHORT $LN105@PrinterInf
  0028a	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  00290	85 c0		 test	 eax, eax
  00292	74 09		 je	 SHORT $LN104@PrinterInf
  00294	50		 push	 eax
  00295	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0029a	83 c4 04	 add	 esp, 4
$LN104@PrinterInf:
  0029d	89 b5 c0 fb ff
	ff		 mov	 DWORD PTR _B$[ebp+4], esi
  002a3	56		 push	 esi
  002a4	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  002a9	89 85 bc fb ff
	ff		 mov	 DWORD PTR _B$[ebp], eax
  002af	56		 push	 esi
  002b0	6a 00		 push	 0
  002b2	50		 push	 eax
  002b3	e8 00 00 00 00	 call	 _memset
  002b8	83 c4 10	 add	 esp, 16			; 00000010H
$LN105@PrinterInf:
  002bb	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  002c1	89 85 b4 fb ff
	ff		 mov	 DWORD PTR _ppi$[ebp], eax

; 2252 :             {
; 2253 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_ENUMRESOLUTIONS mem null",PrinterName);

  002c7	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]

; 2251 :             if (!ppi)

  002cd	85 c0		 test	 eax, eax
  002cf	75 1a		 jne	 SHORT $LN69@PrinterInf

; 2252 :             {
; 2253 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_ENUMRESOLUTIONS mem null",PrinterName);

  002d1	52		 push	 edx
  002d2	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@OINKGGOI@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_ENUMRESO@
  002d7	68 cd 08 00 00	 push	 2253			; 000008cdH
  002dc	6a 10		 push	 16			; 00000010H
  002de	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002e3	83 c4 10	 add	 esp, 16			; 00000010H

; 2254 :             }
; 2255 :             else

  002e6	e9 a2 00 00 00	 jmp	 $LN63@PrinterInf
$LN69@PrinterInf:

; 2256 :             {
; 2257 :                 if ((n = DeviceCapabilities(PrinterName, PortName, DC_ENUMRESOLUTIONS, (LPSTR)ppi, NULL)) != l)

  002eb	6a 00		 push	 0
  002ed	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  002f3	50		 push	 eax
  002f4	6a 0d		 push	 13			; 0000000dH
  002f6	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _PortName$[ebp]
  002fc	51		 push	 ecx
  002fd	52		 push	 edx
  002fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00304	8b f0		 mov	 esi, eax
  00306	3b f3		 cmp	 esi, ebx
  00308	74 39		 je	 SHORT $LN67@PrinterInf

; 2258 :                 {
; 2259 :                     dwLastError = GetLastError();

  0030a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00310	8b d8		 mov	 ebx, eax

; 2260 :                     GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00312	68 03 01 00 00	 push	 259			; 00000103H
  00317	8d b5 e0 fe ff
	ff		 lea	 esi, DWORD PTR _szLastError$[ebp]
  0031d	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2261 :                     Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_ENUMRESOLUTIONS, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  00322	8b c6		 mov	 eax, esi
  00324	50		 push	 eax
  00325	53		 push	 ebx
  00326	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR _B$[ebp]
  0032c	51		 push	 ecx
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@GAIMDBJI@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  00332	68 d5 08 00 00	 push	 2261			; 000008d5H
  00337	6a 10		 push	 16			; 00000010H
  00339	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0033e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2262 :                 }
; 2263 :                 else

  00341	eb 4a		 jmp	 SHORT $LN63@PrinterInf
$LN67@PrinterInf:

; 2264 :                 {
; 2265 :                     Log(LOG_MESSAGE,__LINE__,"DC_ENUMRESOLUTIONS (%d):",n);

  00343	56		 push	 esi
  00344	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PLJPAGFI@DC_ENUMRESOLUTIONS?5?$CI?$CFd?$CJ?3?$AA@
  00349	68 d9 08 00 00	 push	 2265			; 000008d9H
  0034e	6a 01		 push	 1
  00350	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00355	83 c4 10	 add	 esp, 16			; 00000010H

; 2266 :                     for(i=0, pdw=(DWORD*)ppi;i<n;i++)

  00358	33 c0		 xor	 eax, eax
  0035a	85 f6		 test	 esi, esi
  0035c	7e 2f		 jle	 SHORT $LN63@PrinterInf
  0035e	8b ff		 npad	 2
$LL65@PrinterInf:

; 2267 :                     {
; 2268 :                         Log(LOG_MESSAGE,__LINE__,">%.2d: %u x %u",i+1,pdw[i*2],pdw[i*2+1]);

  00360	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
  00363	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR _B$[ebp]
  00369	8b 54 c1 04	 mov	 edx, DWORD PTR [ecx+eax*8+4]
  0036d	52		 push	 edx
  0036e	8b 04 c1	 mov	 eax, DWORD PTR [ecx+eax*8]
  00371	50		 push	 eax
  00372	53		 push	 ebx
  00373	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OBKMFCDP@?$DO?$CF?42d?3?5?$CFu?5x?5?$CFu?$AA@
  00378	68 dc 08 00 00	 push	 2268			; 000008dcH
  0037d	6a 01		 push	 1
  0037f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00384	83 c4 18	 add	 esp, 24			; 00000018H

; 2266 :                     for(i=0, pdw=(DWORD*)ppi;i<n;i++)

  00387	8b c3		 mov	 eax, ebx
  00389	3b c6		 cmp	 eax, esi
  0038b	7c d3		 jl	 SHORT $LL65@PrinterInf
$LN63@PrinterInf:

; 2269 :                     }
; 2270 :                 }
; 2271 :             }
; 2272 :         }
; 2273 : 
; 2274 :         // *** bins & binnames
; 2275 :         try
; 2276 :         {

  0038d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 2277 :             LP_PTRDATA_INFO_LIST pBinList = GetBinList(PrinterName,PortName);

  00391	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00397	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  0039d	e8 00 00 00 00	 call	 ?GetBinList@@YAPAU_ptrdata_info_list_@@PBD0@Z ; GetBinList
  003a2	8b d8		 mov	 ebx, eax

; 2278 :             if(pBinList)

  003a4	85 db		 test	 ebx, ebx
  003a6	74 5b		 je	 SHORT $LN61@PrinterInf

; 2279 :             {
; 2280 :                 Log(LOG_MESSAGE,__LINE__,"DC_BINS, DC_BINNAMES (%d):",pBinList->num);

  003a8	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  003aa	51		 push	 ecx
  003ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@IBIADDJ@DC_BINS?0?5DC_BINNAMES?5?$CI?$CFd?$CJ?3?$AA@
  003b0	68 e8 08 00 00	 push	 2280			; 000008e8H
  003b5	6a 01		 push	 1
  003b7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003bc	83 c4 10	 add	 esp, 16			; 00000010H

; 2281 :                 for(i=0;i<pBinList->num;i++)

  003bf	33 c0		 xor	 eax, eax
$LN234@PrinterInf:
  003c1	89 85 b0 fb ff
	ff		 mov	 DWORD PTR _i$[ebp], eax
  003c7	3b 03		 cmp	 eax, DWORD PTR [ebx]
  003c9	7d 2f		 jge	 SHORT $LN58@PrinterInf

; 2282 :                 {
; 2283 :                     Log(LOG_MESSAGE,__LINE__,">%.2d: %u, %s",i+1,pBinList->PtrDataInfo[i].id,pBinList->PtrDataInfo[i].name);

  003cb	8b d0		 mov	 edx, eax
  003cd	69 d2 10 01 00
	00		 imul	 edx, 272		; 00000110H
  003d3	8d 0c 1a	 lea	 ecx, DWORD PTR [edx+ebx]
  003d6	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  003d9	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  003dc	50		 push	 eax
  003dd	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  003e0	51		 push	 ecx
  003e1	56		 push	 esi
  003e2	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KDMGFAIN@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?$AA@
  003e7	68 eb 08 00 00	 push	 2283			; 000008ebH
  003ec	6a 01		 push	 1
  003ee	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003f3	83 c4 18	 add	 esp, 24			; 00000018H

; 2281 :                 for(i=0;i<pBinList->num;i++)

  003f6	8b c6		 mov	 eax, esi
  003f8	eb c7		 jmp	 SHORT $LN234@PrinterInf
$LN58@PrinterInf:

; 2284 :                 }
; 2285 :                 delete [] pBinList;

  003fa	53		 push	 ebx
  003fb	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00400	83 c4 04	 add	 esp, 4
$LN61@PrinterInf:
  00403	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0040a	eb 27		 jmp	 SHORT $LN87@PrinterInf
__catch$?PrinterInfo@@YGIPAX@Z$0:

; 2286 :                 pBinList = NULL;
; 2287 :             }
; 2288 :         }
; 2289 :         catch(...)
; 2290 :         {
; 2291 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, Catch unhndld excpetion on BinList");

  0040c	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@BNOBPGPC@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@
  00411	68 f3 08 00 00	 push	 2291			; 000008f3H
  00416	6a 10		 push	 16			; 00000010H
  00418	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0041d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2292 :         }

  00420	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00427	b8 00 00 00 00	 mov	 eax, $LN216@PrinterInf
  0042c	c3		 ret	 0
$LN216@PrinterInf:
  0042d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetDeviceCaps@8
$LN87@PrinterInf:

; 2293 : 
; 2294 :         // *** papers & paper names & paper sizes
; 2295 :         try
; 2296 :         {

  00433	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3

; 2297 :             LP_PTRDATA_INFO_LIST pPaperList = GetPaperList(PrinterName,PortName);

  00437	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  0043d	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  00443	e8 00 00 00 00	 call	 ?GetPaperList@@YAPAU_ptrdata_info_list_@@PBD0@Z ; GetPaperList
  00448	8b d8		 mov	 ebx, eax

; 2298 :             if(pPaperList)

  0044a	85 db		 test	 ebx, ebx
  0044c	74 68		 je	 SHORT $LN56@PrinterInf

; 2299 :             {
; 2300 :                 Log(LOG_MESSAGE,__LINE__,"DC_PAPERS, DC_PAPERNAMES, DC_PAPERSIZE (%d):",pPaperList->num);

  0044e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00450	52		 push	 edx
  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@GKNAEPGN@DC_PAPERS?0?5DC_PAPERNAMES?0?5DC_PAP@
  00456	68 fc 08 00 00	 push	 2300			; 000008fcH
  0045b	6a 01		 push	 1
  0045d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00462	83 c4 10	 add	 esp, 16			; 00000010H

; 2301 :                 for(i=0;i<pPaperList->num;i++)

  00465	33 c9		 xor	 ecx, ecx
$LN235@PrinterInf:
  00467	89 8d b0 fb ff
	ff		 mov	 DWORD PTR _i$[ebp], ecx
  0046d	3b 0b		 cmp	 ecx, DWORD PTR [ebx]
  0046f	7d 3c		 jge	 SHORT $LN53@PrinterInf

; 2302 :                 {
; 2303 :                     Log(LOG_MESSAGE,__LINE__,">%.2d: %u, %s, %.5d %.5d",i+1,pPaperList->PtrDataInfo[i].id,pPaperList->PtrDataInfo[i].name,pPaperList->PtrDataInfo[i].x,pPaperList->PtrDataInfo[i].y);

  00471	8b c1		 mov	 eax, ecx
  00473	69 c0 10 01 00
	00		 imul	 eax, 272		; 00000110H
  00479	03 c3		 add	 eax, ebx
  0047b	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0047e	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  00484	51		 push	 ecx
  00485	8b 90 0c 01 00
	00		 mov	 edx, DWORD PTR [eax+268]
  0048b	52		 push	 edx
  0048c	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  0048f	51		 push	 ecx
  00490	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00493	52		 push	 edx
  00494	56		 push	 esi
  00495	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ENBLCNAO@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?0?5?$CF?45d?5?$CF?45d?$AA@
  0049a	68 ff 08 00 00	 push	 2303			; 000008ffH
  0049f	6a 01		 push	 1
  004a1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  004a6	83 c4 20	 add	 esp, 32			; 00000020H

; 2301 :                 for(i=0;i<pPaperList->num;i++)

  004a9	8b ce		 mov	 ecx, esi
  004ab	eb ba		 jmp	 SHORT $LN235@PrinterInf
$LN53@PrinterInf:

; 2304 :                 }
; 2305 :                 delete [] pPaperList;

  004ad	53		 push	 ebx
  004ae	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  004b3	83 c4 04	 add	 esp, 4
$LN56@PrinterInf:
  004b6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  004bd	eb 27		 jmp	 SHORT $LN236@PrinterInf
__catch$?PrinterInfo@@YGIPAX@Z$2:

; 2306 :                 pPaperList = NULL;
; 2307 :             }
; 2308 :         }
; 2309 :         catch(...)
; 2310 :         {
; 2311 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, Catch unhndld excpetion on PaperList");

  004bf	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@CMDEFNNK@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@
  004c4	68 07 09 00 00	 push	 2311			; 00000907H
  004c9	6a 10		 push	 16			; 00000010H
  004cb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  004d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2312 :         }

  004d3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  004da	b8 00 00 00 00	 mov	 eax, $LN217@PrinterInf
  004df	c3		 ret	 0
$LN217@PrinterInf:
  004e0	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetDeviceCaps@8
$LN236@PrinterInf:
  004e6	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DeviceCapabilitiesA@20
  004ec	8b b5 b4 fb ff
	ff		 mov	 esi, DWORD PTR _ppi$[ebp]

; 2313 : 
; 2314 :         // *** portrait - landscape
; 2315 :         l = DeviceCapabilities(PrinterName, PortName, DC_ORIENTATION, (LPSTR)ppi, NULL);

  004f2	6a 00		 push	 0
  004f4	56		 push	 esi
  004f5	6a 11		 push	 17			; 00000011H
  004f7	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  004fd	50		 push	 eax
  004fe	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  00504	51		 push	 ecx
  00505	ff d3		 call	 ebx

; 2316 :         Log(LOG_MESSAGE,__LINE__,"DC_ORIENTATION %d",l);

  00507	50		 push	 eax
  00508	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NAFPPPIH@DC_ORIENTATION?5?$CFd?$AA@
  0050d	68 0c 09 00 00	 push	 2316			; 0000090cH
  00512	6a 01		 push	 1
  00514	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00519	83 c4 10	 add	 esp, 16			; 00000010H

; 2317 : 
; 2318 :         // *** maximum number of copies supported
; 2319 :         l = DeviceCapabilities(PrinterName, PortName, DC_COPIES, (LPSTR)ppi, NULL);

  0051c	6a 00		 push	 0
  0051e	56		 push	 esi
  0051f	6a 12		 push	 18			; 00000012H
  00521	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00527	52		 push	 edx
  00528	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  0052e	50		 push	 eax
  0052f	ff d3		 call	 ebx

; 2320 :         Log(LOG_MESSAGE,__LINE__,"DC_COPIES %d",l);

  00531	50		 push	 eax
  00532	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GOBEBGOJ@DC_COPIES?5?$CFd?$AA@
  00537	68 10 09 00 00	 push	 2320			; 00000910H
  0053c	6a 01		 push	 1
  0053e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00543	83 c4 10	 add	 esp, 16			; 00000010H

; 2321 : 
; 2322 :         // *** collate
; 2323 :         l = DeviceCapabilities(PrinterName, PortName, DC_COLLATE, (LPSTR)ppi, NULL);

  00546	6a 00		 push	 0
  00548	56		 push	 esi
  00549	6a 16		 push	 22			; 00000016H
  0054b	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _PortName$[ebp]
  00551	51		 push	 ecx
  00552	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]
  00558	52		 push	 edx
  00559	ff d3		 call	 ebx

; 2324 :         Log(LOG_MESSAGE,__LINE__,"DC_COLLATE %d",l);

  0055b	50		 push	 eax
  0055c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CECDKEDL@DC_COLLATE?5?$CFd?$AA@
  00561	68 14 09 00 00	 push	 2324			; 00000914H
  00566	6a 01		 push	 1
  00568	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0056d	83 c4 10	 add	 esp, 16			; 00000010H

; 2325 : 
; 2326 :         // *** color support
; 2327 :         l = DeviceCapabilities(PrinterName, PortName, DC_COLORDEVICE, (LPSTR)ppi, NULL);

  00570	6a 00		 push	 0
  00572	56		 push	 esi
  00573	6a 20		 push	 32			; 00000020H
  00575	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  0057b	50		 push	 eax
  0057c	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  00582	51		 push	 ecx
  00583	ff d3		 call	 ebx

; 2328 :         Log(LOG_MESSAGE,__LINE__,"DC_COLORDEVICE %d",l);

  00585	50		 push	 eax
  00586	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CPGDDBNJ@DC_COLORDEVICE?5?$CFd?$AA@
  0058b	68 18 09 00 00	 push	 2328			; 00000918H
  00590	6a 01		 push	 1
  00592	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00597	83 c4 10	 add	 esp, 16			; 00000010H

; 2329 : 
; 2330 :         // *** duplex support
; 2331 :         l = DeviceCapabilities(PrinterName, PortName, DC_DUPLEX, (LPSTR)ppi, NULL);

  0059a	6a 00		 push	 0
  0059c	56		 push	 esi
  0059d	6a 07		 push	 7
  0059f	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  005a5	52		 push	 edx
  005a6	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  005ac	50		 push	 eax
  005ad	ff d3		 call	 ebx

; 2332 :         Log(LOG_MESSAGE,__LINE__,"DC_DUPLEX %d",l);

  005af	50		 push	 eax
  005b0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JAMONLMJ@DC_DUPLEX?5?$CFd?$AA@
  005b5	68 1c 09 00 00	 push	 2332			; 0000091cH
  005ba	6a 01		 push	 1
  005bc	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  005c1	83 c4 10	 add	 esp, 16			; 00000010H

; 2333 : 
; 2334 :         // *** driver version
; 2335 :         l = DeviceCapabilities(PrinterName, PortName, DC_DRIVER, (LPSTR)ppi, NULL);

  005c4	6a 00		 push	 0
  005c6	56		 push	 esi
  005c7	6a 0b		 push	 11			; 0000000bH
  005c9	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _PortName$[ebp]
  005cf	51		 push	 ecx
  005d0	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]
  005d6	52		 push	 edx
  005d7	ff d3		 call	 ebx

; 2336 :         Log(LOG_MESSAGE,__LINE__,"DC_DRIVER %d",l);

  005d9	50		 push	 eax
  005da	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BOEFEHCB@DC_DRIVER?5?$CFd?$AA@
  005df	68 20 09 00 00	 push	 2336			; 00000920H
  005e4	6a 01		 push	 1
  005e6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  005eb	83 c4 10	 add	 esp, 16			; 00000010H

; 2337 : 
; 2338 :         // *** spec driver version
; 2339 :         l = DeviceCapabilities(PrinterName, PortName, DC_VERSION, (LPSTR)ppi, NULL);

  005ee	6a 00		 push	 0
  005f0	56		 push	 esi
  005f1	6a 0a		 push	 10			; 0000000aH
  005f3	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  005f9	50		 push	 eax
  005fa	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  00600	51		 push	 ecx
  00601	ff d3		 call	 ebx

; 2340 :         Log(LOG_MESSAGE,__LINE__,"DC_VERSION %d",l);

  00603	50		 push	 eax
  00604	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BHGLDB@DC_VERSION?5?$CFd?$AA@
  00609	68 24 09 00 00	 push	 2340			; 00000924H
  0060e	6a 01		 push	 1
  00610	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00615	83 c4 10	 add	 esp, 16			; 00000010H

; 2341 : 
; 2342 :         // *** fields
; 2343 :         l = DeviceCapabilities(PrinterName, PortName, DC_FIELDS, (LPSTR)ppi, NULL);

  00618	6a 00		 push	 0
  0061a	56		 push	 esi
  0061b	6a 01		 push	 1
  0061d	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00623	52		 push	 edx
  00624	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  0062a	50		 push	 eax
  0062b	ff d3		 call	 ebx

; 2344 :         Log(LOG_MESSAGE,__LINE__,"DC_FIELDS %u",l);

  0062d	50		 push	 eax
  0062e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FMBEEHK@DC_FIELDS?5?$CFu?$AA@
  00633	68 28 09 00 00	 push	 2344			; 00000928H
  00638	6a 01		 push	 1
  0063a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0063f	83 c4 10	 add	 esp, 16			; 00000010H

; 2345 : 
; 2346 :         // *** maximum paper size
; 2347 :         l = DeviceCapabilities(PrinterName, PortName, DC_MAXEXTENT, (LPSTR)ppi, NULL);

  00642	6a 00		 push	 0
  00644	56		 push	 esi
  00645	6a 05		 push	 5
  00647	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _PortName$[ebp]
  0064d	51		 push	 ecx
  0064e	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]
  00654	52		 push	 edx
  00655	ff d3		 call	 ebx

; 2348 :         Log(LOG_MESSAGE,__LINE__,"DC_MAXEXTENT: Lenght %u, Width %u",HIWORD((DWORD)l),LOWORD((DWORD)l));

  00657	0f b7 c8	 movzx	 ecx, ax
  0065a	51		 push	 ecx
  0065b	c1 e8 10	 shr	 eax, 16			; 00000010H
  0065e	50		 push	 eax
  0065f	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@DHNLPIEG@DC_MAXEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@
  00664	68 2c 09 00 00	 push	 2348			; 0000092cH
  00669	6a 01		 push	 1
  0066b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00670	83 c4 14	 add	 esp, 20			; 00000014H

; 2349 : 
; 2350 :         // *** minimum paper size
; 2351 :         l = DeviceCapabilities(PrinterName, PortName, DC_MINEXTENT, (LPSTR)ppi, NULL);

  00673	6a 00		 push	 0
  00675	56		 push	 esi
  00676	6a 04		 push	 4
  00678	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  0067e	52		 push	 edx
  0067f	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  00685	50		 push	 eax
  00686	ff d3		 call	 ebx

; 2352 :         Log(LOG_MESSAGE,__LINE__,"DC_MINEXTENT: Lenght %u, Width %u",HIWORD((DWORD)l),LOWORD((DWORD)l));

  00688	0f b7 c8	 movzx	 ecx, ax
  0068b	51		 push	 ecx
  0068c	c1 e8 10	 shr	 eax, 16			; 00000010H
  0068f	50		 push	 eax
  00690	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@BIAELLNL@DC_MINEXTENT?3?5Lenght?5?$CFu?0?5Width?5?$CF@
  00695	68 30 09 00 00	 push	 2352			; 00000930H
  0069a	6a 01		 push	 1
  0069c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  006a1	83 c4 14	 add	 esp, 20			; 00000014H

; 2353 : 
; 2354 :         // *** size
; 2355 :         l = DeviceCapabilities(PrinterName, PortName, DC_SIZE, (LPSTR)ppi, NULL);

  006a4	6a 00		 push	 0
  006a6	56		 push	 esi
  006a7	6a 08		 push	 8
  006a9	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  006af	52		 push	 edx
  006b0	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  006b6	50		 push	 eax
  006b7	ff d3		 call	 ebx

; 2356 :         Log(LOG_MESSAGE,__LINE__,"DC_SIZE %d",l);

  006b9	50		 push	 eax
  006ba	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ICJGKLML@DC_SIZE?5?$CFd?$AA@
  006bf	68 34 09 00 00	 push	 2356			; 00000934H
  006c4	6a 01		 push	 1
  006c6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  006cb	83 c4 10	 add	 esp, 16			; 00000010H

; 2357 : 
; 2358 :         // *** staple
; 2359 :         l = DeviceCapabilities(PrinterName, PortName, DC_STAPLE, (LPSTR)ppi, NULL);

  006ce	6a 00		 push	 0
  006d0	56		 push	 esi
  006d1	6a 1e		 push	 30			; 0000001eH
  006d3	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _PortName$[ebp]
  006d9	51		 push	 ecx
  006da	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]
  006e0	52		 push	 edx
  006e1	ff d3		 call	 ebx

; 2360 :         Log(LOG_MESSAGE,__LINE__,"DC_STAPLE %d",l);

  006e3	50		 push	 eax
  006e4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ONNHJAOP@DC_STAPLE?5?$CFd?$AA@
  006e9	68 38 09 00 00	 push	 2360			; 00000938H
  006ee	6a 01		 push	 1
  006f0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  006f5	83 c4 10	 add	 esp, 16			; 00000010H

; 2361 : 
; 2362 :         // *** TrueType
; 2363 :         l = DeviceCapabilities(PrinterName, PortName, DC_TRUETYPE, (LPSTR)ppi, NULL);

  006f8	6a 00		 push	 0
  006fa	56		 push	 esi
  006fb	6a 0f		 push	 15			; 0000000fH
  006fd	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  00703	50		 push	 eax
  00704	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  0070a	51		 push	 ecx
  0070b	ff d3		 call	 ebx

; 2364 :         Log(LOG_MESSAGE,__LINE__,"DC_TRUETYPE %d",l);

  0070d	50		 push	 eax
  0070e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MLIHNHLK@DC_TRUETYPE?5?$CFd?$AA@
  00713	68 3c 09 00 00	 push	 2364			; 0000093cH
  00718	6a 01		 push	 1
  0071a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0071f	83 c4 10	 add	 esp, 16			; 00000010H

; 2365 : 
; 2366 :         // *** multiple document pages per printed page
; 2367 :         if ((l = DeviceCapabilities(PrinterName, PortName, DC_NUP, NULL, NULL)) <= 0)

  00722	6a 00		 push	 0
  00724	6a 00		 push	 0
  00726	6a 21		 push	 33			; 00000021H
  00728	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  0072e	52		 push	 edx
  0072f	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  00735	50		 push	 eax
  00736	ff d3		 call	 ebx
  00738	8b f0		 mov	 esi, eax
  0073a	85 f6		 test	 esi, esi
  0073c	7f 3b		 jg	 SHORT $LN52@PrinterInf

; 2368 :         {
; 2369 :             dwLastError = GetLastError();

  0073e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00744	8b d8		 mov	 ebx, eax

; 2370 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00746	68 03 01 00 00	 push	 259			; 00000103H
  0074b	8d b5 e0 fe ff
	ff		 lea	 esi, DWORD PTR _szLastError$[ebp]
  00751	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2371 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_NUP, null) Err %d Msg %s",dwLastError,szLastError);

  00756	8b ce		 mov	 ecx, esi
  00758	51		 push	 ecx
  00759	53		 push	 ebx
  0075a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@BCBOOPNM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  0075f	68 43 09 00 00	 push	 2371			; 00000943H
  00764	6a 10		 push	 16			; 00000010H
  00766	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0076b	83 c4 18	 add	 esp, 24			; 00000018H

; 2372 :         }
; 2373 :         else

  0076e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DeviceCapabilitiesA@20
  00774	e9 3b 01 00 00	 jmp	 $LN44@PrinterInf
$LN52@PrinterInf:

; 2374 :         {
; 2375 :             ppi = B._allocMem(l*sizeof(DWORD));

  00779	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]
  00780	3b 85 c0 fb ff
	ff		 cmp	 eax, DWORD PTR _B$[ebp+4]
  00786	7e 3f		 jle	 SHORT $LN109@PrinterInf
  00788	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  0078e	85 c0		 test	 eax, eax
  00790	74 09		 je	 SHORT $LN108@PrinterInf
  00792	50		 push	 eax
  00793	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00798	83 c4 04	 add	 esp, 4
$LN108@PrinterInf:
  0079b	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]
  007a2	89 85 c0 fb ff
	ff		 mov	 DWORD PTR _B$[ebp+4], eax
  007a8	50		 push	 eax
  007a9	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  007ae	89 85 bc fb ff
	ff		 mov	 DWORD PTR _B$[ebp], eax
  007b4	8d 0c b5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*4]
  007bb	51		 push	 ecx
  007bc	6a 00		 push	 0
  007be	50		 push	 eax
  007bf	e8 00 00 00 00	 call	 _memset
  007c4	83 c4 10	 add	 esp, 16			; 00000010H
$LN109@PrinterInf:
  007c7	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  007cd	89 85 b4 fb ff
	ff		 mov	 DWORD PTR _ppi$[ebp], eax

; 2377 :             {
; 2378 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_NUP mem null",PrinterName);

  007d3	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]

; 2376 :             if (!ppi)

  007d9	85 c0		 test	 eax, eax
  007db	75 1a		 jne	 SHORT $LN50@PrinterInf

; 2377 :             {
; 2378 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_NUP mem null",PrinterName);

  007dd	52		 push	 edx
  007de	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@DGNIMKMD@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_NUP?5mem?5@
  007e3	68 4a 09 00 00	 push	 2378			; 0000094aH
  007e8	6a 10		 push	 16			; 00000010H
  007ea	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  007ef	83 c4 10	 add	 esp, 16			; 00000010H

; 2379 :             }
; 2380 :             else

  007f2	e9 bd 00 00 00	 jmp	 $LN44@PrinterInf
$LN50@PrinterInf:

; 2381 :             {
; 2382 :                 if ((n = DeviceCapabilities(PrinterName, PortName, DC_NUP, (LPSTR)ppi, NULL)) != l)

  007f7	6a 00		 push	 0
  007f9	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  007ff	50		 push	 eax
  00800	6a 21		 push	 33			; 00000021H
  00802	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _PortName$[ebp]
  00808	51		 push	 ecx
  00809	52		 push	 edx
  0080a	ff d3		 call	 ebx
  0080c	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _n$[ebp], eax
  00812	3b c6		 cmp	 eax, esi
  00814	74 3f		 je	 SHORT $LN48@PrinterInf

; 2383 :                 {
; 2384 :                     dwLastError = GetLastError();

  00816	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0081c	8b d8		 mov	 ebx, eax

; 2385 :                     GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  0081e	68 03 01 00 00	 push	 259			; 00000103H
  00823	8d b5 e0 fe ff
	ff		 lea	 esi, DWORD PTR _szLastError$[ebp]
  00829	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2386 :                     Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_NUP, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  0082e	8b c6		 mov	 eax, esi
  00830	50		 push	 eax
  00831	53		 push	 ebx
  00832	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR _B$[ebp]
  00838	51		 push	 ecx
  00839	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@OGEOOIOH@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  0083e	68 52 09 00 00	 push	 2386			; 00000952H
  00843	6a 10		 push	 16			; 00000010H
  00845	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0084a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2387 :                 }
; 2388 :                 else

  0084d	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DeviceCapabilitiesA@20
  00853	eb 5f		 jmp	 SHORT $LN44@PrinterInf
$LN48@PrinterInf:

; 2389 :                 {
; 2390 :                     Log(LOG_MESSAGE,__LINE__,"DC_NUP (%d):",n);

  00855	8b b5 c4 fb ff
	ff		 mov	 esi, DWORD PTR _n$[ebp]
  0085b	56		 push	 esi
  0085c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EHIGBDLP@DC_NUP?5?$CI?$CFd?$CJ?3?$AA@
  00861	68 56 09 00 00	 push	 2390			; 00000956H
  00866	6a 01		 push	 1
  00868	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0086d	83 c4 10	 add	 esp, 16			; 00000010H

; 2391 :                     for (i=0, pdw=(DWORD *)ppi; i<n; i++, pdw++)

  00870	33 c0		 xor	 eax, eax
  00872	8b 95 bc fb ff
	ff		 mov	 edx, DWORD PTR _B$[ebp]
  00878	89 95 b8 fb ff
	ff		 mov	 DWORD PTR _pdw$[ebp], edx
  0087e	85 f6		 test	 esi, esi
  00880	7e 32		 jle	 SHORT $LN44@PrinterInf
$LL46@PrinterInf:

; 2392 :                     {
; 2393 :                         Log(LOG_MESSAGE,__LINE__,">%.2d: %u",i+1,*pdw);

  00882	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  00885	8b 85 b8 fb ff
	ff		 mov	 eax, DWORD PTR _pdw$[ebp]
  0088b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0088d	51		 push	 ecx
  0088e	56		 push	 esi
  0088f	68 00 00 00 00	 push	 OFFSET ??_C@_09MFCBGNBM@?$DO?$CF?42d?3?5?$CFu?$AA@
  00894	68 59 09 00 00	 push	 2393			; 00000959H
  00899	6a 01		 push	 1
  0089b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  008a0	83 c4 14	 add	 esp, 20			; 00000014H

; 2391 :                     for (i=0, pdw=(DWORD *)ppi; i<n; i++, pdw++)

  008a3	8b c6		 mov	 eax, esi
  008a5	83 85 b8 fb ff
	ff 04		 add	 DWORD PTR _pdw$[ebp], 4
  008ac	3b 85 c4 fb ff
	ff		 cmp	 eax, DWORD PTR _n$[ebp]
  008b2	7c ce		 jl	 SHORT $LL46@PrinterInf
$LN44@PrinterInf:

; 2394 :                     }
; 2395 :                 }
; 2396 :             }
; 2397 :         }
; 2398 : 
; 2399 :         // *** field dependencies
; 2400 :         if ((l = DeviceCapabilities(PrinterName, PortName, DC_FILEDEPENDENCIES, NULL, NULL)) <= 0)

  008b4	6a 00		 push	 0
  008b6	6a 00		 push	 0
  008b8	6a 0e		 push	 14			; 0000000eH
  008ba	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  008c0	52		 push	 edx
  008c1	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  008c7	50		 push	 eax
  008c8	ff d3		 call	 ebx
  008ca	89 85 b8 fb ff
	ff		 mov	 DWORD PTR _l$[ebp], eax
  008d0	85 c0		 test	 eax, eax
  008d2	0f 8f da 00 00
	00		 jg	 $LN43@PrinterInf

; 2401 :         {
; 2402 :             dwLastError = GetLastError();

  008d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  008de	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _dwLastError$[ebp], eax

; 2403 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  008e4	33 f6		 xor	 esi, esi
  008e6	c7 85 b8 fb ff
	ff 00 12 00 00	 mov	 DWORD PTR _dwFormatFlags$192049[ebp], 4608 ; 00001200H
  008f0	05 cc f7 ff ff	 add	 eax, -2100		; fffff7ccH
  008f5	3d 83 03 00 00	 cmp	 eax, 899		; 00000383H
  008fa	77 1e		 ja	 SHORT $LN117@PrinterInf
  008fc	6a 02		 push	 2
  008fe	56		 push	 esi
  008ff	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
  00904	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExA@12
  0090a	8b f0		 mov	 esi, eax
  0090c	85 f6		 test	 esi, esi
  0090e	74 0a		 je	 SHORT $LN117@PrinterInf
  00910	c7 85 b8 fb ff
	ff 00 1a 00 00	 mov	 DWORD PTR _dwFormatFlags$192049[ebp], 6656 ; 00001a00H
$LN117@PrinterInf:
  0091a	6a 00		 push	 0
  0091c	68 03 01 00 00	 push	 259			; 00000103H
  00921	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _szLastError$[ebp]
  00927	51		 push	 ecx
  00928	68 00 04 00 00	 push	 1024			; 00000400H
  0092d	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR _dwLastError$[ebp]
  00933	52		 push	 edx
  00934	56		 push	 esi
  00935	8b 85 b8 fb ff
	ff		 mov	 eax, DWORD PTR _dwFormatFlags$192049[ebp]
  0093b	50		 push	 eax
  0093c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  00942	85 c0		 test	 eax, eax
  00944	74 33		 je	 SHORT $LN116@PrinterInf
  00946	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  0094c	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0094f	90		 npad	 1
$LL204@PrinterInf:
  00950	8a 08		 mov	 cl, BYTE PTR [eax]
  00952	40		 inc	 eax
  00953	84 c9		 test	 cl, cl
  00955	75 f9		 jne	 SHORT $LL204@PrinterInf
  00957	2b c2		 sub	 eax, edx
  00959	83 f8 02	 cmp	 eax, 2
  0095c	76 1b		 jbe	 SHORT $LN116@PrinterInf
  0095e	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00964	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL205@PrinterInf:
  00967	8a 08		 mov	 cl, BYTE PTR [eax]
  00969	40		 inc	 eax
  0096a	84 c9		 test	 cl, cl
  0096c	75 f9		 jne	 SHORT $LL205@PrinterInf
  0096e	2b c2		 sub	 eax, edx
  00970	88 8c 05 de fe
	ff ff		 mov	 BYTE PTR _szLastError$[ebp+eax-2], cl
  00977	eb 07		 jmp	 SHORT $LN113@PrinterInf
$LN116@PrinterInf:
  00979	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szLastError$[ebp], 0
$LN113@PrinterInf:
  00980	85 f6		 test	 esi, esi
  00982	74 07		 je	 SHORT $LN112@PrinterInf
  00984	56		 push	 esi
  00985	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN112@PrinterInf:

; 2404 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_FILEDEPENDENCIES, null) Err %d Msg %s",dwLastError,szLastError);

  0098b	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _szLastError$[ebp]
  00991	51		 push	 ecx
  00992	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR _dwLastError$[ebp]
  00998	52		 push	 edx
  00999	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@JLEFIGNJ@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  0099e	68 64 09 00 00	 push	 2404			; 00000964H
  009a3	6a 10		 push	 16			; 00000010H
  009a5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  009aa	83 c4 14	 add	 esp, 20			; 00000014H

; 2405 :         }
; 2406 :         else

  009ad	e9 40 01 00 00	 jmp	 $LN35@PrinterInf
$LN43@PrinterInf:

; 2407 :         {
; 2408 :             ppi = B._allocMem(l*sizeof(NAME_64BYTES));

  009b2	8b b5 b8 fb ff
	ff		 mov	 esi, DWORD PTR _l$[ebp]
  009b8	c1 e6 06	 shl	 esi, 6
  009bb	3b b5 c0 fb ff
	ff		 cmp	 esi, DWORD PTR _B$[ebp+4]
  009c1	7e 36		 jle	 SHORT $LN122@PrinterInf
  009c3	83 bd bc fb ff
	ff 00		 cmp	 DWORD PTR _B$[ebp], 0
  009ca	74 0f		 je	 SHORT $LN121@PrinterInf
  009cc	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  009d2	50		 push	 eax
  009d3	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  009d8	83 c4 04	 add	 esp, 4
$LN121@PrinterInf:
  009db	89 b5 c0 fb ff
	ff		 mov	 DWORD PTR _B$[ebp+4], esi
  009e1	56		 push	 esi
  009e2	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  009e7	89 85 bc fb ff
	ff		 mov	 DWORD PTR _B$[ebp], eax
  009ed	56		 push	 esi
  009ee	6a 00		 push	 0
  009f0	50		 push	 eax
  009f1	e8 00 00 00 00	 call	 _memset
  009f6	83 c4 10	 add	 esp, 16			; 00000010H
$LN122@PrinterInf:
  009f9	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  009ff	89 85 b4 fb ff
	ff		 mov	 DWORD PTR _ppi$[ebp], eax

; 2410 :             {
; 2411 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_FILEDEPENDENCIES mem null",PrinterName);

  00a05	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]

; 2409 :             if (!ppi)

  00a0b	85 c0		 test	 eax, eax
  00a0d	75 1a		 jne	 SHORT $LN41@PrinterInf

; 2410 :             {
; 2411 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_FILEDEPENDENCIES mem null",PrinterName);

  00a0f	51		 push	 ecx
  00a10	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@MCOOCAIH@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_FILEDEPE@
  00a15	68 6b 09 00 00	 push	 2411			; 0000096bH
  00a1a	6a 10		 push	 16			; 00000010H
  00a1c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00a21	83 c4 10	 add	 esp, 16			; 00000010H

; 2412 :             }
; 2413 :             else

  00a24	e9 c9 00 00 00	 jmp	 $LN35@PrinterInf
$LN41@PrinterInf:

; 2414 :             {
; 2415 :                 if ((n = DeviceCapabilities(PrinterName, PortName, DC_FILEDEPENDENCIES, (LPSTR)ppi, NULL)) != l)

  00a29	6a 00		 push	 0
  00a2b	8b 95 bc fb ff
	ff		 mov	 edx, DWORD PTR _B$[ebp]
  00a31	52		 push	 edx
  00a32	6a 0e		 push	 14			; 0000000eH
  00a34	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  00a3a	50		 push	 eax
  00a3b	51		 push	 ecx
  00a3c	ff d3		 call	 ebx
  00a3e	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _n$[ebp], eax
  00a44	3b 85 b8 fb ff
	ff		 cmp	 eax, DWORD PTR _l$[ebp]
  00a4a	74 3f		 je	 SHORT $LN39@PrinterInf

; 2416 :                 {
; 2417 :                     dwLastError = GetLastError();

  00a4c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00a52	8b d8		 mov	 ebx, eax

; 2418 :                     GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00a54	68 03 01 00 00	 push	 259			; 00000103H
  00a59	8d b5 e0 fe ff
	ff		 lea	 esi, DWORD PTR _szLastError$[ebp]
  00a5f	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2419 :                     Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_FILEDEPENDENCIES, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  00a64	8b d6		 mov	 edx, esi
  00a66	52		 push	 edx
  00a67	53		 push	 ebx
  00a68	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  00a6e	50		 push	 eax
  00a6f	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@KMPBJHDP@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  00a74	68 73 09 00 00	 push	 2419			; 00000973H
  00a79	6a 10		 push	 16			; 00000010H
  00a7b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00a80	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2420 :                 }
; 2421 :                 else

  00a83	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DeviceCapabilitiesA@20
  00a89	eb 67		 jmp	 SHORT $LN35@PrinterInf
$LN39@PrinterInf:

; 2422 :                 {
; 2423 :                     pn64 = NULL;
; 2424 :                     Log(LOG_MESSAGE,__LINE__,"DC_FILEDEPENDENCIES (%d):",n);

  00a8b	8b 8d c4 fb ff
	ff		 mov	 ecx, DWORD PTR _n$[ebp]
  00a91	51		 push	 ecx
  00a92	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NAHDGPCH@DC_FILEDEPENDENCIES?5?$CI?$CFd?$CJ?3?$AA@
  00a97	68 78 09 00 00	 push	 2424			; 00000978H
  00a9c	6a 01		 push	 1
  00a9e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00aa3	83 c4 10	 add	 esp, 16			; 00000010H

; 2425 :                     for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  00aa6	33 c0		 xor	 eax, eax
  00aa8	8b b5 bc fb ff
	ff		 mov	 esi, DWORD PTR _B$[ebp]
  00aae	39 85 c4 fb ff
	ff		 cmp	 DWORD PTR _n$[ebp], eax
  00ab4	7e 3c		 jle	 SHORT $LN35@PrinterInf
  00ab6	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL37@PrinterInf:

; 2426 :                     {
; 2427 :                         pn64->name[63] = 0x00;      //avoid memory over-read if the whole buffer is filled

  00ac0	c6 46 3f 00	 mov	 BYTE PTR [esi+63], 0

; 2428 :                         Log(LOG_MESSAGE,__LINE__,">%.2d: %s",i+1,pn64->name);

  00ac4	40		 inc	 eax
  00ac5	89 85 b8 fb ff
	ff		 mov	 DWORD PTR tv1881[ebp], eax
  00acb	56		 push	 esi
  00acc	50		 push	 eax
  00acd	68 00 00 00 00	 push	 OFFSET ??_C@_09JDHLMKJK@?$DO?$CF?42d?3?5?$CFs?$AA@
  00ad2	68 7c 09 00 00	 push	 2428			; 0000097cH
  00ad7	6a 01		 push	 1
  00ad9	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00ade	83 c4 14	 add	 esp, 20			; 00000014H

; 2425 :                     for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  00ae1	8b 85 b8 fb ff
	ff		 mov	 eax, DWORD PTR tv1881[ebp]
  00ae7	83 c6 40	 add	 esi, 64			; 00000040H
  00aea	3b 85 c4 fb ff
	ff		 cmp	 eax, DWORD PTR _n$[ebp]
  00af0	7c ce		 jl	 SHORT $LL37@PrinterInf
$LN35@PrinterInf:

; 2429 :                     }
; 2430 :                 }
; 2431 :             }
; 2432 :         }
; 2433 : 
; 2434 :         // *** paper forms
; 2435 :         if ((l = DeviceCapabilities(PrinterName, PortName, DC_MEDIAREADY, NULL, NULL)) <= 0)

  00af2	6a 00		 push	 0
  00af4	6a 00		 push	 0
  00af6	6a 1d		 push	 29			; 0000001dH
  00af8	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00afe	52		 push	 edx
  00aff	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  00b05	50		 push	 eax
  00b06	ff d3		 call	 ebx
  00b08	89 85 b8 fb ff
	ff		 mov	 DWORD PTR _l$[ebp], eax
  00b0e	85 c0		 test	 eax, eax
  00b10	0f 8f cc 00 00
	00		 jg	 $LN34@PrinterInf

; 2436 :         {
; 2437 :             dwLastError = GetLastError();

  00b16	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00b1c	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _dwLastError$[ebp], eax

; 2438 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00b22	33 f6		 xor	 esi, esi
  00b24	bb 00 12 00 00	 mov	 ebx, 4608		; 00001200H
  00b29	05 cc f7 ff ff	 add	 eax, -2100		; fffff7ccH
  00b2e	3d 83 03 00 00	 cmp	 eax, 899		; 00000383H
  00b33	77 19		 ja	 SHORT $LN130@PrinterInf
  00b35	6a 02		 push	 2
  00b37	56		 push	 esi
  00b38	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
  00b3d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExA@12
  00b43	8b f0		 mov	 esi, eax
  00b45	85 f6		 test	 esi, esi
  00b47	74 05		 je	 SHORT $LN130@PrinterInf
  00b49	bb 00 1a 00 00	 mov	 ebx, 6656		; 00001a00H
$LN130@PrinterInf:
  00b4e	6a 00		 push	 0
  00b50	68 03 01 00 00	 push	 259			; 00000103H
  00b55	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _szLastError$[ebp]
  00b5b	51		 push	 ecx
  00b5c	68 00 04 00 00	 push	 1024			; 00000400H
  00b61	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR _dwLastError$[ebp]
  00b67	52		 push	 edx
  00b68	56		 push	 esi
  00b69	53		 push	 ebx
  00b6a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  00b70	85 c0		 test	 eax, eax
  00b72	74 35		 je	 SHORT $LN129@PrinterInf
  00b74	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00b7a	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00b7d	8d 49 00	 npad	 3
$LL206@PrinterInf:
  00b80	8a 08		 mov	 cl, BYTE PTR [eax]
  00b82	40		 inc	 eax
  00b83	84 c9		 test	 cl, cl
  00b85	75 f9		 jne	 SHORT $LL206@PrinterInf
  00b87	2b c2		 sub	 eax, edx
  00b89	83 f8 02	 cmp	 eax, 2
  00b8c	76 1b		 jbe	 SHORT $LN129@PrinterInf
  00b8e	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00b94	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL207@PrinterInf:
  00b97	8a 08		 mov	 cl, BYTE PTR [eax]
  00b99	40		 inc	 eax
  00b9a	84 c9		 test	 cl, cl
  00b9c	75 f9		 jne	 SHORT $LL207@PrinterInf
  00b9e	2b c2		 sub	 eax, edx
  00ba0	88 8c 05 de fe
	ff ff		 mov	 BYTE PTR _szLastError$[ebp+eax-2], cl
  00ba7	eb 07		 jmp	 SHORT $LN126@PrinterInf
$LN129@PrinterInf:
  00ba9	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szLastError$[ebp], 0
$LN126@PrinterInf:
  00bb0	85 f6		 test	 esi, esi
  00bb2	74 07		 je	 SHORT $LN125@PrinterInf
  00bb4	56		 push	 esi
  00bb5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN125@PrinterInf:

; 2439 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_MEDIAREADY, null) Err %d Msg %s",dwLastError,szLastError);

  00bbb	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00bc1	50		 push	 eax
  00bc2	8b 8d c4 fb ff
	ff		 mov	 ecx, DWORD PTR _dwLastError$[ebp]
  00bc8	51		 push	 ecx
  00bc9	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@NHFFPEJM@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  00bce	68 87 09 00 00	 push	 2439			; 00000987H
  00bd3	6a 10		 push	 16			; 00000010H
  00bd5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00bda	83 c4 14	 add	 esp, 20			; 00000014H

; 2440 :         }
; 2441 :         else

  00bdd	e9 1f 01 00 00	 jmp	 $LN26@PrinterInf
$LN34@PrinterInf:

; 2442 :         {
; 2443 :             ppi = B._allocMem(l*sizeof(NAME_64BYTES));

  00be2	8b b5 b8 fb ff
	ff		 mov	 esi, DWORD PTR _l$[ebp]
  00be8	c1 e6 06	 shl	 esi, 6
  00beb	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  00bf1	3b b5 c0 fb ff
	ff		 cmp	 esi, DWORD PTR _B$[ebp+4]
  00bf7	7e 31		 jle	 SHORT $LN135@PrinterInf
  00bf9	85 c0		 test	 eax, eax
  00bfb	74 09		 je	 SHORT $LN134@PrinterInf
  00bfd	50		 push	 eax
  00bfe	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00c03	83 c4 04	 add	 esp, 4
$LN134@PrinterInf:
  00c06	89 b5 c0 fb ff
	ff		 mov	 DWORD PTR _B$[ebp+4], esi
  00c0c	56		 push	 esi
  00c0d	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00c12	89 85 bc fb ff
	ff		 mov	 DWORD PTR _B$[ebp], eax
  00c18	56		 push	 esi
  00c19	6a 00		 push	 0
  00c1b	50		 push	 eax
  00c1c	e8 00 00 00 00	 call	 _memset
  00c21	83 c4 10	 add	 esp, 16			; 00000010H
  00c24	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
$LN135@PrinterInf:
  00c2a	89 85 b4 fb ff
	ff		 mov	 DWORD PTR _ppi$[ebp], eax

; 2444 :             if (!ppi)

  00c30	85 c0		 test	 eax, eax
  00c32	75 20		 jne	 SHORT $LN32@PrinterInf

; 2445 :             {
; 2446 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_MEDIAREADY mem null",PrinterName);

  00c34	8d 95 d8 fd ff
	ff		 lea	 edx, DWORD PTR _PrinterName$[ebp]
  00c3a	52		 push	 edx
  00c3b	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@KMOLCCC@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_MEDIAREA@
  00c40	68 8e 09 00 00	 push	 2446			; 0000098eH
  00c45	6a 10		 push	 16			; 00000010H
  00c47	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00c4c	83 c4 10	 add	 esp, 16			; 00000010H

; 2447 :             }
; 2448 :             else

  00c4f	e9 ad 00 00 00	 jmp	 $LN26@PrinterInf
$LN32@PrinterInf:

; 2449 :             {
; 2450 :                 if ((n = DeviceCapabilities(PrinterName, PortName, DC_MEDIAREADY, (LPSTR)ppi, NULL)) != l)

  00c54	6a 00		 push	 0
  00c56	50		 push	 eax
  00c57	6a 1d		 push	 29			; 0000001dH
  00c59	8d 85 d0 fc ff
	ff		 lea	 eax, DWORD PTR _PortName$[ebp]
  00c5f	50		 push	 eax
  00c60	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  00c66	51		 push	 ecx
  00c67	ff d3		 call	 ebx
  00c69	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _n$[ebp], eax
  00c6f	3b 85 b8 fb ff
	ff		 cmp	 eax, DWORD PTR _l$[ebp]
  00c75	74 39		 je	 SHORT $LN30@PrinterInf

; 2451 :                 {
; 2452 :                     dwLastError = GetLastError();

  00c77	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00c7d	8b d8		 mov	 ebx, eax

; 2453 :                     GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00c7f	68 03 01 00 00	 push	 259			; 00000103H
  00c84	8d b5 e0 fe ff
	ff		 lea	 esi, DWORD PTR _szLastError$[ebp]
  00c8a	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 2454 :                     Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_MEDIAREADY, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  00c8f	8b d6		 mov	 edx, esi
  00c91	52		 push	 edx
  00c92	53		 push	 ebx
  00c93	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  00c99	50		 push	 eax
  00c9a	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@BCFCBCDG@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  00c9f	68 96 09 00 00	 push	 2454			; 00000996H
  00ca4	6a 10		 push	 16			; 00000010H
  00ca6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00cab	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2455 :                 }
; 2456 :                 else

  00cae	eb 51		 jmp	 SHORT $LN26@PrinterInf
$LN30@PrinterInf:

; 2457 :                 {
; 2458 :                     pn64 = NULL;
; 2459 :                     Log(LOG_MESSAGE,__LINE__,"DC_MEDIAREADY (%d):",n);

  00cb0	8b 9d c4 fb ff
	ff		 mov	 ebx, DWORD PTR _n$[ebp]
  00cb6	53		 push	 ebx
  00cb7	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JHLOAEJA@DC_MEDIAREADY?5?$CI?$CFd?$CJ?3?$AA@
  00cbc	68 9b 09 00 00	 push	 2459			; 0000099bH
  00cc1	6a 01		 push	 1
  00cc3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00cc8	83 c4 10	 add	 esp, 16			; 00000010H

; 2460 :                     for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  00ccb	33 c0		 xor	 eax, eax
  00ccd	8b b5 bc fb ff
	ff		 mov	 esi, DWORD PTR _B$[ebp]
  00cd3	85 db		 test	 ebx, ebx
  00cd5	7e 2a		 jle	 SHORT $LN26@PrinterInf
$LL28@PrinterInf:

; 2461 :                     {
; 2462 :                         pn64->name[63] = 0x00;      //avoid memory over-read if the whole buffer is filled

  00cd7	c6 46 3f 00	 mov	 BYTE PTR [esi+63], 0

; 2463 :                         Log(LOG_MESSAGE,__LINE__,">%.2d: %s",i+1,pn64->name);

  00cdb	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
  00cde	56		 push	 esi
  00cdf	53		 push	 ebx
  00ce0	68 00 00 00 00	 push	 OFFSET ??_C@_09JDHLMKJK@?$DO?$CF?42d?3?5?$CFs?$AA@
  00ce5	68 9f 09 00 00	 push	 2463			; 0000099fH
  00cea	6a 01		 push	 1
  00cec	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00cf1	83 c4 14	 add	 esp, 20			; 00000014H

; 2460 :                     for (i=0, pn64=(NAME_64BYTES *)ppi; i<n; i++, pn64++)

  00cf4	8b c3		 mov	 eax, ebx
  00cf6	83 c6 40	 add	 esi, 64			; 00000040H
  00cf9	3b 85 c4 fb ff
	ff		 cmp	 eax, DWORD PTR _n$[ebp]
  00cff	7c d6		 jl	 SHORT $LL28@PrinterInf
$LN26@PrinterInf:

; 2464 :                     }
; 2465 :                 }
; 2466 :             }
; 2467 :         }
; 2468 : 
; 2469 : #if (WINVER > 0x0500)
; 2470 :         // *** media types & media type names
; 2471 :         try
; 2472 :         {

  00d01	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5

; 2473 :             LP_PTRDATA_INFO_LIST pMediaTypeList = GetMediaTypeList(PrinterName,PortName);

  00d05	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00d0b	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  00d11	e8 00 00 00 00	 call	 ?GetMediaTypeList@@YAPAU_ptrdata_info_list_@@PBD0@Z ; GetMediaTypeList
  00d16	8b d8		 mov	 ebx, eax

; 2474 :             if(pMediaTypeList)

  00d18	85 db		 test	 ebx, ebx
  00d1a	74 5b		 je	 SHORT $LN24@PrinterInf

; 2475 :             {
; 2476 :                 Log(LOG_MESSAGE,__LINE__,"DC_MEDIATYPES, DC_MEDIATYPENAMES (%d):",pMediaTypeList->num);

  00d1c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00d1e	51		 push	 ecx
  00d1f	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OFCLBKDH@DC_MEDIATYPES?0?5DC_MEDIATYPENAMES@
  00d24	68 ac 09 00 00	 push	 2476			; 000009acH
  00d29	6a 01		 push	 1
  00d2b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00d30	83 c4 10	 add	 esp, 16			; 00000010H

; 2477 :                 for(i=0;i<pMediaTypeList->num;i++)

  00d33	33 c0		 xor	 eax, eax
$LN237@PrinterInf:
  00d35	89 85 b0 fb ff
	ff		 mov	 DWORD PTR _i$[ebp], eax
  00d3b	3b 03		 cmp	 eax, DWORD PTR [ebx]
  00d3d	7d 2f		 jge	 SHORT $LN21@PrinterInf

; 2478 :                 {
; 2479 :                     Log(LOG_MESSAGE,__LINE__,">%.2d: %u, %s",i+1,pMediaTypeList->PtrDataInfo[i].id,pMediaTypeList->PtrDataInfo[i].name);

  00d3f	8b d0		 mov	 edx, eax
  00d41	69 d2 10 01 00
	00		 imul	 edx, 272		; 00000110H
  00d47	8d 0c 1a	 lea	 ecx, DWORD PTR [edx+ebx]
  00d4a	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  00d4d	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00d50	50		 push	 eax
  00d51	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00d54	51		 push	 ecx
  00d55	56		 push	 esi
  00d56	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KDMGFAIN@?$DO?$CF?42d?3?5?$CFu?0?5?$CFs?$AA@
  00d5b	68 af 09 00 00	 push	 2479			; 000009afH
  00d60	6a 01		 push	 1
  00d62	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00d67	83 c4 18	 add	 esp, 24			; 00000018H

; 2477 :                 for(i=0;i<pMediaTypeList->num;i++)

  00d6a	8b c6		 mov	 eax, esi
  00d6c	eb c7		 jmp	 SHORT $LN237@PrinterInf
$LN21@PrinterInf:

; 2480 :                 }
; 2481 :                 delete [] pMediaTypeList;

  00d6e	53		 push	 ebx
  00d6f	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00d74	83 c4 04	 add	 esp, 4
$LN24@PrinterInf:
  00d77	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00d7e	eb 27		 jmp	 SHORT $LN91@PrinterInf
__catch$?PrinterInfo@@YGIPAX@Z$4:

; 2482 :                 pMediaTypeList = NULL;
; 2483 :             }
; 2484 :         }
; 2485 :         catch(...)
; 2486 :         {
; 2487 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, Catch unhndld excpetion on MediaTypeList");

  00d80	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@CIBLFONP@?9?9?5PtrInfo?0?5Catch?5unhndld?5excpet@
  00d85	68 b7 09 00 00	 push	 2487			; 000009b7H
  00d8a	6a 10		 push	 16			; 00000010H
  00d8c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00d91	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2488 :         }

  00d94	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00d9b	b8 00 00 00 00	 mov	 eax, $LN218@PrinterInf
  00da0	c3		 ret	 0
$LN218@PrinterInf:
  00da1	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetDeviceCaps@8
$LN91@PrinterInf:

; 2489 : #endif
; 2490 : 
; 2491 :         // *** list of printer description languages supported
; 2492 :         if ((l = DeviceCapabilities(PrinterName, PortName, DC_PERSONALITY, NULL, NULL)) <= 0)

  00da7	6a 00		 push	 0
  00da9	6a 00		 push	 0
  00dab	6a 19		 push	 25			; 00000019H
  00dad	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00db3	52		 push	 edx
  00db4	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  00dba	50		 push	 eax
  00dbb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00dc1	8b f0		 mov	 esi, eax
  00dc3	85 f6		 test	 esi, esi
  00dc5	0f 8f d0 00 00
	00		 jg	 $LN20@PrinterInf

; 2493 :         {
; 2494 :             dwLastError = GetLastError();

  00dcb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00dd1	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _dwLastError$[ebp], eax

; 2495 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00dd7	33 f6		 xor	 esi, esi
  00dd9	bb 00 12 00 00	 mov	 ebx, 4608		; 00001200H
  00dde	05 cc f7 ff ff	 add	 eax, -2100		; fffff7ccH
  00de3	3d 83 03 00 00	 cmp	 eax, 899		; 00000383H
  00de8	77 19		 ja	 SHORT $LN143@PrinterInf
  00dea	6a 02		 push	 2
  00dec	56		 push	 esi
  00ded	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
  00df2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExA@12
  00df8	8b f0		 mov	 esi, eax
  00dfa	85 f6		 test	 esi, esi
  00dfc	74 05		 je	 SHORT $LN143@PrinterInf
  00dfe	bb 00 1a 00 00	 mov	 ebx, 6656		; 00001a00H
$LN143@PrinterInf:
  00e03	6a 00		 push	 0
  00e05	68 03 01 00 00	 push	 259			; 00000103H
  00e0a	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _szLastError$[ebp]
  00e10	51		 push	 ecx
  00e11	68 00 04 00 00	 push	 1024			; 00000400H
  00e16	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR _dwLastError$[ebp]
  00e1c	52		 push	 edx
  00e1d	56		 push	 esi
  00e1e	53		 push	 ebx
  00e1f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  00e25	85 c0		 test	 eax, eax
  00e27	74 39		 je	 SHORT $LN142@PrinterInf
  00e29	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00e2f	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL208@PrinterInf:
  00e32	8a 08		 mov	 cl, BYTE PTR [eax]
  00e34	40		 inc	 eax
  00e35	84 c9		 test	 cl, cl
  00e37	75 f9		 jne	 SHORT $LL208@PrinterInf
  00e39	2b c2		 sub	 eax, edx
  00e3b	83 f8 02	 cmp	 eax, 2
  00e3e	76 22		 jbe	 SHORT $LN142@PrinterInf
  00e40	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00e46	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00e49	8d a4 24 00 00
	00 00		 npad	 7
$LL209@PrinterInf:
  00e50	8a 08		 mov	 cl, BYTE PTR [eax]
  00e52	40		 inc	 eax
  00e53	84 c9		 test	 cl, cl
  00e55	75 f9		 jne	 SHORT $LL209@PrinterInf
  00e57	2b c2		 sub	 eax, edx
  00e59	88 8c 05 de fe
	ff ff		 mov	 BYTE PTR _szLastError$[ebp+eax-2], cl
  00e60	eb 07		 jmp	 SHORT $LN139@PrinterInf
$LN142@PrinterInf:
  00e62	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szLastError$[ebp], 0
$LN139@PrinterInf:
  00e69	85 f6		 test	 esi, esi
  00e6b	74 07		 je	 SHORT $LN138@PrinterInf
  00e6d	56		 push	 esi
  00e6e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN138@PrinterInf:

; 2496 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_PERSONALITY, null) Err %d Msg %s",dwLastError,szLastError);

  00e74	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00e7a	50		 push	 eax
  00e7b	8b 8d c4 fb ff
	ff		 mov	 ecx, DWORD PTR _dwLastError$[ebp]
  00e81	51		 push	 ecx
  00e82	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@IFJFLJEL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  00e87	68 c0 09 00 00	 push	 2496			; 000009c0H
  00e8c	6a 10		 push	 16			; 00000010H
  00e8e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00e93	83 c4 14	 add	 esp, 20			; 00000014H

; 2497 :         }
; 2498 :         else

  00e96	e9 b6 01 00 00	 jmp	 $LN12@PrinterInf
$LN20@PrinterInf:

; 2499 :         {
; 2500 :             ppi = B._allocMem(l*sizeof(NAME_32BYTES));

  00e9b	8b de		 mov	 ebx, esi
  00e9d	c1 e3 05	 shl	 ebx, 5
  00ea0	3b 9d c0 fb ff
	ff		 cmp	 ebx, DWORD PTR _B$[ebp+4]
  00ea6	7e 36		 jle	 SHORT $LN148@PrinterInf
  00ea8	83 bd bc fb ff
	ff 00		 cmp	 DWORD PTR _B$[ebp], 0
  00eaf	74 0f		 je	 SHORT $LN147@PrinterInf
  00eb1	8b 95 bc fb ff
	ff		 mov	 edx, DWORD PTR _B$[ebp]
  00eb7	52		 push	 edx
  00eb8	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00ebd	83 c4 04	 add	 esp, 4
$LN147@PrinterInf:
  00ec0	89 9d c0 fb ff
	ff		 mov	 DWORD PTR _B$[ebp+4], ebx
  00ec6	53		 push	 ebx
  00ec7	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00ecc	89 85 bc fb ff
	ff		 mov	 DWORD PTR _B$[ebp], eax
  00ed2	53		 push	 ebx
  00ed3	6a 00		 push	 0
  00ed5	50		 push	 eax
  00ed6	e8 00 00 00 00	 call	 _memset
  00edb	83 c4 10	 add	 esp, 16			; 00000010H
$LN148@PrinterInf:
  00ede	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  00ee4	89 85 b4 fb ff
	ff		 mov	 DWORD PTR _ppi$[ebp], eax

; 2501 :             if (!ppi)

  00eea	85 c0		 test	 eax, eax

; 2502 :             {
; 2503 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_PERSONALITY mem null",PrinterName);

  00eec	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]

; 2501 :             if (!ppi)

  00ef2	75 1a		 jne	 SHORT $LN18@PrinterInf

; 2502 :             {
; 2503 :                 Log(LOG_DEBUG,__LINE__,"-- PtrInfo, <%s> new DC_PERSONALITY mem null",PrinterName);

  00ef4	50		 push	 eax
  00ef5	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@FDCGHEM@?9?9?5PtrInfo?0?5?$DM?$CFs?$DO?5new?5DC_PERSONAL@
  00efa	68 c7 09 00 00	 push	 2503			; 000009c7H
  00eff	6a 10		 push	 16			; 00000010H
  00f01	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00f06	83 c4 10	 add	 esp, 16			; 00000010H

; 2504 :             }
; 2505 :             else

  00f09	e9 43 01 00 00	 jmp	 $LN12@PrinterInf
$LN18@PrinterInf:

; 2506 :             {
; 2507 :                 if ((n = DeviceCapabilities(PrinterName, PortName, DC_PERSONALITY, (LPSTR)ppi, NULL)) != l)

  00f0e	6a 00		 push	 0
  00f10	8b 8d bc fb ff
	ff		 mov	 ecx, DWORD PTR _B$[ebp]
  00f16	51		 push	 ecx
  00f17	6a 19		 push	 25			; 00000019H
  00f19	8d 95 d0 fc ff
	ff		 lea	 edx, DWORD PTR _PortName$[ebp]
  00f1f	52		 push	 edx
  00f20	50		 push	 eax
  00f21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeviceCapabilitiesA@20
  00f27	8b d8		 mov	 ebx, eax
  00f29	89 9d c4 fb ff
	ff		 mov	 DWORD PTR _n$[ebp], ebx
  00f2f	3b de		 cmp	 ebx, esi
  00f31	0f 84 cf 00 00
	00		 je	 $LN16@PrinterInf

; 2508 :                 {
; 2509 :                     dwLastError = GetLastError();

  00f37	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00f3d	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _dwLastError$[ebp], eax

; 2510 :                     GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  00f43	33 db		 xor	 ebx, ebx
  00f45	be 00 12 00 00	 mov	 esi, 4608		; 00001200H
  00f4a	05 cc f7 ff ff	 add	 eax, -2100		; fffff7ccH
  00f4f	3d 83 03 00 00	 cmp	 eax, 899		; 00000383H
  00f54	77 19		 ja	 SHORT $LN156@PrinterInf
  00f56	6a 02		 push	 2
  00f58	53		 push	 ebx
  00f59	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
  00f5e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExA@12
  00f64	8b d8		 mov	 ebx, eax
  00f66	85 db		 test	 ebx, ebx
  00f68	74 05		 je	 SHORT $LN156@PrinterInf
  00f6a	be 00 1a 00 00	 mov	 esi, 6656		; 00001a00H
$LN156@PrinterInf:
  00f6f	6a 00		 push	 0
  00f71	68 03 01 00 00	 push	 259			; 00000103H
  00f76	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _szLastError$[ebp]
  00f7c	51		 push	 ecx
  00f7d	68 00 04 00 00	 push	 1024			; 00000400H
  00f82	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR _dwLastError$[ebp]
  00f88	52		 push	 edx
  00f89	53		 push	 ebx
  00f8a	56		 push	 esi
  00f8b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  00f91	85 c0		 test	 eax, eax
  00f93	74 34		 je	 SHORT $LN155@PrinterInf
  00f95	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00f9b	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00f9e	8b ff		 npad	 2
$LL210@PrinterInf:
  00fa0	8a 08		 mov	 cl, BYTE PTR [eax]
  00fa2	40		 inc	 eax
  00fa3	84 c9		 test	 cl, cl
  00fa5	75 f9		 jne	 SHORT $LL210@PrinterInf
  00fa7	2b c2		 sub	 eax, edx
  00fa9	83 f8 02	 cmp	 eax, 2
  00fac	76 1b		 jbe	 SHORT $LN155@PrinterInf
  00fae	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00fb4	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL211@PrinterInf:
  00fb7	8a 08		 mov	 cl, BYTE PTR [eax]
  00fb9	40		 inc	 eax
  00fba	84 c9		 test	 cl, cl
  00fbc	75 f9		 jne	 SHORT $LL211@PrinterInf
  00fbe	2b c2		 sub	 eax, edx
  00fc0	88 8c 05 de fe
	ff ff		 mov	 BYTE PTR _szLastError$[ebp+eax-2], cl
  00fc7	eb 07		 jmp	 SHORT $LN152@PrinterInf
$LN155@PrinterInf:
  00fc9	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szLastError$[ebp], 0
$LN152@PrinterInf:
  00fd0	85 db		 test	 ebx, ebx
  00fd2	74 07		 je	 SHORT $LN151@PrinterInf
  00fd4	53		 push	 ebx
  00fd5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN151@PrinterInf:

; 2511 :                     Log(LOG_DEBUG,__LINE__,"-- PtrInfo, DeviceCapabilities(DC_PERSONALITY, %p) Err %d Msg %s",ppi,dwLastError,szLastError);

  00fdb	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  00fe1	50		 push	 eax
  00fe2	8b 8d c4 fb ff
	ff		 mov	 ecx, DWORD PTR _dwLastError$[ebp]
  00fe8	51		 push	 ecx
  00fe9	8b 95 bc fb ff
	ff		 mov	 edx, DWORD PTR _B$[ebp]
  00fef	52		 push	 edx
  00ff0	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@NKGMPEJL@?9?9?5PtrInfo?0?5DeviceCapabilities?$CID@
  00ff5	68 cf 09 00 00	 push	 2511			; 000009cfH
  00ffa	6a 10		 push	 16			; 00000010H
  00ffc	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01001	83 c4 18	 add	 esp, 24			; 00000018H

; 2512 :                 }
; 2513 :                 else

  01004	eb 4b		 jmp	 SHORT $LN12@PrinterInf
$LN16@PrinterInf:

; 2514 :                 {
; 2515 :                     pn32 = NULL;
; 2516 :                     Log(LOG_MESSAGE,__LINE__,"DC_PERSONALITY (%d):",n);

  01006	53		 push	 ebx
  01007	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JJAELOOF@DC_PERSONALITY?5?$CI?$CFd?$CJ?3?$AA@
  0100c	68 d4 09 00 00	 push	 2516			; 000009d4H
  01011	6a 01		 push	 1
  01013	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01018	83 c4 10	 add	 esp, 16			; 00000010H

; 2517 :                     for (i=0, pn32=(NAME_32BYTES *)ppi; i<n; i++, pn32++)

  0101b	33 c0		 xor	 eax, eax
  0101d	8b b5 bc fb ff
	ff		 mov	 esi, DWORD PTR _B$[ebp]
  01023	85 db		 test	 ebx, ebx
  01025	7e 2a		 jle	 SHORT $LN12@PrinterInf
$LL14@PrinterInf:

; 2518 :                     {
; 2519 :                         pn32->name[31] = 0x00;      //avoid memory over-read if the whole buffer is filled

  01027	c6 46 1f 00	 mov	 BYTE PTR [esi+31], 0

; 2520 :                         Log(LOG_MESSAGE,__LINE__,">%.2d: %s",i+1,pn32->name);

  0102b	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
  0102e	56		 push	 esi
  0102f	53		 push	 ebx
  01030	68 00 00 00 00	 push	 OFFSET ??_C@_09JDHLMKJK@?$DO?$CF?42d?3?5?$CFs?$AA@
  01035	68 d8 09 00 00	 push	 2520			; 000009d8H
  0103a	6a 01		 push	 1
  0103c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01041	83 c4 14	 add	 esp, 20			; 00000014H

; 2517 :                     for (i=0, pn32=(NAME_32BYTES *)ppi; i<n; i++, pn32++)

  01044	8b c3		 mov	 eax, ebx
  01046	83 c6 20	 add	 esi, 32			; 00000020H
  01049	3b 85 c4 fb ff
	ff		 cmp	 eax, DWORD PTR _n$[ebp]
  0104f	7c d6		 jl	 SHORT $LL14@PrinterInf
$LN12@PrinterInf:

; 2521 :                     }
; 2522 :                 }
; 2523 :             }
; 2524 :         }
; 2525 : 
; 2526 :         // *** document properties
; 2527 :         HANDLE hPrinter = NULL;

  01051	c7 85 ac fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _hPrinter$145789[ebp], 0

; 2528 :         if(OpenPrinter(PrinterName,&hPrinter,NULL))

  0105b	6a 00		 push	 0
  0105d	8d 85 ac fb ff
	ff		 lea	 eax, DWORD PTR _hPrinter$145789[ebp]
  01063	50		 push	 eax
  01064	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR _PrinterName$[ebp]
  0106a	51		 push	 ecx
  0106b	e8 00 00 00 00	 call	 _OpenPrinterA@12
  01070	85 c0		 test	 eax, eax
  01072	0f 84 5d 03 00
	00		 je	 $LN11@PrinterInf

; 2529 :         {
; 2530 :             l = DocumentProperties(NULL,hPrinter,DriverName,NULL,NULL,0);

  01078	6a 00		 push	 0
  0107a	6a 00		 push	 0
  0107c	6a 00		 push	 0
  0107e	8d 95 c8 fb ff
	ff		 lea	 edx, DWORD PTR _DriverName$[ebp]
  01084	52		 push	 edx
  01085	8b 85 ac fb ff
	ff		 mov	 eax, DWORD PTR _hPrinter$145789[ebp]
  0108b	50		 push	 eax
  0108c	6a 00		 push	 0
  0108e	e8 00 00 00 00	 call	 _DocumentPropertiesA@24
  01093	8b f0		 mov	 esi, eax

; 2531 :             DEVMODE *pdm = (DEVMODE *)new char[l];

  01095	56		 push	 esi
  01096	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0109b	83 c4 04	 add	 esp, 4
  0109e	8b d8		 mov	 ebx, eax

; 2532 :             if(pdm)

  010a0	85 db		 test	 ebx, ebx
  010a2	0f 84 1c 03 00
	00		 je	 $LN10@PrinterInf

; 2533 :             {
; 2534 :                 memset(pdm,0x00,sizeof(char)*l);

  010a8	56		 push	 esi
  010a9	6a 00		 push	 0
  010ab	53		 push	 ebx
  010ac	e8 00 00 00 00	 call	 _memset
  010b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2535 :                 DocumentProperties(NULL,hPrinter,DriverName,pdm,NULL,DM_OUT_BUFFER);

  010b4	6a 02		 push	 2
  010b6	6a 00		 push	 0
  010b8	53		 push	 ebx
  010b9	8d 8d c8 fb ff
	ff		 lea	 ecx, DWORD PTR _DriverName$[ebp]
  010bf	51		 push	 ecx
  010c0	8b 95 ac fb ff
	ff		 mov	 edx, DWORD PTR _hPrinter$145789[ebp]
  010c6	52		 push	 edx
  010c7	6a 00		 push	 0
  010c9	e8 00 00 00 00	 call	 _DocumentPropertiesA@24

; 2536 :                 Log(LOG_MESSAGE,__LINE__,"DEVMODE:");

  010ce	68 00 00 00 00	 push	 OFFSET ??_C@_08JFBLCBEM@DEVMODE?3?$AA@
  010d3	68 e8 09 00 00	 push	 2536			; 000009e8H
  010d8	6a 01		 push	 1
  010da	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2537 :                 Log(LOG_MESSAGE,__LINE__,"> DeviceName %s",pdm->dmDeviceName);

  010df	53		 push	 ebx
  010e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KDNAKNNN@?$DO?5DeviceName?5?$CFs?$AA@
  010e5	68 e9 09 00 00	 push	 2537			; 000009e9H
  010ea	6a 01		 push	 1
  010ec	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2538 :                 Log(LOG_MESSAGE,__LINE__,"> SpecVersion %d",pdm->dmSpecVersion);

  010f1	0f b7 43 20	 movzx	 eax, WORD PTR [ebx+32]
  010f5	50		 push	 eax
  010f6	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GFIGJBOF@?$DO?5SpecVersion?5?$CFd?$AA@
  010fb	68 ea 09 00 00	 push	 2538			; 000009eaH
  01100	6a 01		 push	 1
  01102	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2539 :                 Log(LOG_MESSAGE,__LINE__,"> DriverVersion %d",pdm->dmDriverVersion);

  01107	0f b7 4b 22	 movzx	 ecx, WORD PTR [ebx+34]
  0110b	51		 push	 ecx
  0110c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FHCKIAEA@?$DO?5DriverVersion?5?$CFd?$AA@
  01111	68 eb 09 00 00	 push	 2539			; 000009ebH
  01116	6a 01		 push	 1
  01118	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2540 :                 Log(LOG_MESSAGE,__LINE__,"> Size %d",pdm->dmSize);

  0111d	0f b7 53 24	 movzx	 edx, WORD PTR [ebx+36]
  01121	52		 push	 edx
  01122	68 00 00 00 00	 push	 OFFSET ??_C@_09EJHHAJLO@?$DO?5Size?5?$CFd?$AA@
  01127	68 ec 09 00 00	 push	 2540			; 000009ecH
  0112c	6a 01		 push	 1
  0112e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01133	83 c4 4c	 add	 esp, 76			; 0000004cH

; 2541 :                 Log(LOG_MESSAGE,__LINE__,"> DriverExtra %d",pdm->dmDriverExtra);

  01136	0f b7 43 26	 movzx	 eax, WORD PTR [ebx+38]
  0113a	50		 push	 eax
  0113b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NFLJLFB@?$DO?5DriverExtra?5?$CFd?$AA@
  01140	68 ed 09 00 00	 push	 2541			; 000009edH
  01145	6a 01		 push	 1
  01147	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2542 :                 Log(LOG_MESSAGE,__LINE__,"> DriverFields 0x%.8X",pdm->dmFields);

  0114c	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]
  0114f	51		 push	 ecx
  01150	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JDMKIO@?$DO?5DriverFields?50x?$CF?48X?$AA@
  01155	68 ee 09 00 00	 push	 2542			; 000009eeH
  0115a	6a 01		 push	 1
  0115c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2543 :                 Log(LOG_MESSAGE,__LINE__,"> Orient %d",pdm->dmOrientation);

  01161	0f bf 53 2c	 movsx	 edx, WORD PTR [ebx+44]
  01165	52		 push	 edx
  01166	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PJOJJBEC@?$DO?5Orient?5?$CFd?$AA@
  0116b	68 ef 09 00 00	 push	 2543			; 000009efH
  01170	6a 01		 push	 1
  01172	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2544 :                 Log(LOG_MESSAGE,__LINE__,"> PaperSize %d",pdm->dmPaperSize);

  01177	0f bf 43 2e	 movsx	 eax, WORD PTR [ebx+46]
  0117b	50		 push	 eax
  0117c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MIJBPCPJ@?$DO?5PaperSize?5?$CFd?$AA@
  01181	68 f0 09 00 00	 push	 2544			; 000009f0H
  01186	6a 01		 push	 1
  01188	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0118d	83 c4 40	 add	 esp, 64			; 00000040H

; 2545 :                 Log(LOG_MESSAGE,__LINE__,"> PaperLenght %d",pdm->dmPaperLength);

  01190	0f bf 4b 30	 movsx	 ecx, WORD PTR [ebx+48]
  01194	51		 push	 ecx
  01195	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@ECLINGE@?$DO?5PaperLenght?5?$CFd?$AA@
  0119a	68 f1 09 00 00	 push	 2545			; 000009f1H
  0119f	6a 01		 push	 1
  011a1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2546 :                 Log(LOG_MESSAGE,__LINE__,"> PaperWidth %d",pdm->dmPaperWidth);

  011a6	0f bf 53 32	 movsx	 edx, WORD PTR [ebx+50]
  011aa	52		 push	 edx
  011ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EJLKBGAF@?$DO?5PaperWidth?5?$CFd?$AA@
  011b0	68 f2 09 00 00	 push	 2546			; 000009f2H
  011b5	6a 01		 push	 1
  011b7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2547 :                 Log(LOG_MESSAGE,__LINE__,"> Scale %d",pdm->dmScale);

  011bc	0f bf 43 34	 movsx	 eax, WORD PTR [ebx+52]
  011c0	50		 push	 eax
  011c1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CIICACOJ@?$DO?5Scale?5?$CFd?$AA@
  011c6	68 f3 09 00 00	 push	 2547			; 000009f3H
  011cb	6a 01		 push	 1
  011cd	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2548 :                 Log(LOG_MESSAGE,__LINE__,"> Copies %d",pdm->dmCopies);

  011d2	0f bf 4b 36	 movsx	 ecx, WORD PTR [ebx+54]
  011d6	51		 push	 ecx
  011d7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MCOJLIEN@?$DO?5Copies?5?$CFd?$AA@
  011dc	68 f4 09 00 00	 push	 2548			; 000009f4H
  011e1	6a 01		 push	 1
  011e3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  011e8	83 c4 40	 add	 esp, 64			; 00000040H

; 2549 :                 Log(LOG_MESSAGE,__LINE__,"> DefaultSource %d",pdm->dmDefaultSource);

  011eb	0f bf 53 38	 movsx	 edx, WORD PTR [ebx+56]
  011ef	52		 push	 edx
  011f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PBLNKDE@?$DO?5DefaultSource?5?$CFd?$AA@
  011f5	68 f5 09 00 00	 push	 2549			; 000009f5H
  011fa	6a 01		 push	 1
  011fc	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2550 :                 Log(LOG_MESSAGE,__LINE__,"> PrintQulity %d",pdm->dmPrintQuality);

  01201	0f bf 43 3a	 movsx	 eax, WORD PTR [ebx+58]
  01205	50		 push	 eax
  01206	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FEEDGEPE@?$DO?5PrintQulity?5?$CFd?$AA@
  0120b	68 f6 09 00 00	 push	 2550			; 000009f6H
  01210	6a 01		 push	 1
  01212	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2551 :                 Log(LOG_MESSAGE,__LINE__,"> Color %d",pdm->dmColor);

  01217	0f bf 4b 3c	 movsx	 ecx, WORD PTR [ebx+60]
  0121b	51		 push	 ecx
  0121c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OGGOANCL@?$DO?5Color?5?$CFd?$AA@
  01221	68 f7 09 00 00	 push	 2551			; 000009f7H
  01226	6a 01		 push	 1
  01228	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2552 :                 Log(LOG_MESSAGE,__LINE__,"> Duplex %d",pdm->dmDuplex);

  0122d	0f bf 53 3e	 movsx	 edx, WORD PTR [ebx+62]
  01231	52		 push	 edx
  01232	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DMDDHFGN@?$DO?5Duplex?5?$CFd?$AA@
  01237	68 f8 09 00 00	 push	 2552			; 000009f8H
  0123c	6a 01		 push	 1
  0123e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01243	83 c4 40	 add	 esp, 64			; 00000040H

; 2553 :                 Log(LOG_MESSAGE,__LINE__,"> YResolution %d",pdm->dmYResolution);

  01246	0f bf 43 40	 movsx	 eax, WORD PTR [ebx+64]
  0124a	50		 push	 eax
  0124b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@ODANIHPJ@?$DO?5YResolution?5?$CFd?$AA@
  01250	68 f9 09 00 00	 push	 2553			; 000009f9H
  01255	6a 01		 push	 1
  01257	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2554 :                 Log(LOG_MESSAGE,__LINE__,"> TTOption %d",pdm->dmTTOption);

  0125c	0f bf 4b 42	 movsx	 ecx, WORD PTR [ebx+66]
  01260	51		 push	 ecx
  01261	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ODMOOLLN@?$DO?5TTOption?5?$CFd?$AA@
  01266	68 fa 09 00 00	 push	 2554			; 000009faH
  0126b	6a 01		 push	 1
  0126d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2555 :                 Log(LOG_MESSAGE,__LINE__,"> Collate %d",pdm->dmCollate);

  01272	0f bf 53 44	 movsx	 edx, WORD PTR [ebx+68]
  01276	52		 push	 edx
  01277	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DEPFBBGA@?$DO?5Collate?5?$CFd?$AA@
  0127c	68 fb 09 00 00	 push	 2555			; 000009fbH
  01281	6a 01		 push	 1
  01283	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2556 :                 Log(LOG_MESSAGE,__LINE__,"> FormName %s",pdm->dmFormName);

  01288	8d 43 46	 lea	 eax, DWORD PTR [ebx+70]
  0128b	50		 push	 eax
  0128c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NAFNONHG@?$DO?5FormName?5?$CFs?$AA@
  01291	68 fc 09 00 00	 push	 2556			; 000009fcH
  01296	6a 01		 push	 1
  01298	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0129d	83 c4 40	 add	 esp, 64			; 00000040H

; 2557 :                 Log(LOG_MESSAGE,__LINE__,"> LogPixels %d",pdm->dmLogPixels);

  012a0	0f b7 4b 66	 movzx	 ecx, WORD PTR [ebx+102]
  012a4	51		 push	 ecx
  012a5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HBAMONIO@?$DO?5LogPixels?5?$CFd?$AA@
  012aa	68 fd 09 00 00	 push	 2557			; 000009fdH
  012af	6a 01		 push	 1
  012b1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2558 :                 Log(LOG_MESSAGE,__LINE__,"> BitsPerPel %u",pdm->dmBitsPerPel);

  012b6	8b 53 68	 mov	 edx, DWORD PTR [ebx+104]
  012b9	52		 push	 edx
  012ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IJGBMLDF@?$DO?5BitsPerPel?5?$CFu?$AA@
  012bf	68 fe 09 00 00	 push	 2558			; 000009feH
  012c4	6a 01		 push	 1
  012c6	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2559 :                 Log(LOG_MESSAGE,__LINE__,"> PelsWidth %u",pdm->dmPelsWidth);

  012cb	8b 43 6c	 mov	 eax, DWORD PTR [ebx+108]
  012ce	50		 push	 eax
  012cf	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GJDEABGN@?$DO?5PelsWidth?5?$CFu?$AA@
  012d4	68 ff 09 00 00	 push	 2559			; 000009ffH
  012d9	6a 01		 push	 1
  012db	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2560 :                 Log(LOG_MESSAGE,__LINE__,"> PelsHeight %d",pdm->dmPelsHeight);

  012e0	8b 4b 70	 mov	 ecx, DWORD PTR [ebx+112]
  012e3	51		 push	 ecx
  012e4	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FJKIIKDN@?$DO?5PelsHeight?5?$CFd?$AA@
  012e9	68 00 0a 00 00	 push	 2560			; 00000a00H
  012ee	6a 01		 push	 1
  012f0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  012f5	83 c4 40	 add	 esp, 64			; 00000040H

; 2561 : #if(WINVER >= 0x0400)
; 2562 :                 Log(LOG_MESSAGE,__LINE__,"> ICMMethod %u",pdm->dmICMMethod);

  012f8	8b 53 7c	 mov	 edx, DWORD PTR [ebx+124]
  012fb	52		 push	 edx
  012fc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BALKIIFI@?$DO?5ICMMethod?5?$CFu?$AA@
  01301	68 02 0a 00 00	 push	 2562			; 00000a02H
  01306	6a 01		 push	 1
  01308	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2563 :                 Log(LOG_MESSAGE,__LINE__,"> ICMIntent %u",pdm->dmICMIntent);

  0130d	8b 83 80 00 00
	00		 mov	 eax, DWORD PTR [ebx+128]
  01313	50		 push	 eax
  01314	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FBGPJDBI@?$DO?5ICMIntent?5?$CFu?$AA@
  01319	68 03 0a 00 00	 push	 2563			; 00000a03H
  0131e	6a 01		 push	 1
  01320	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2564 :                 Log(LOG_MESSAGE,__LINE__,"> MediaType %u",pdm->dmMediaType);

  01325	8b 8b 84 00 00
	00		 mov	 ecx, DWORD PTR [ebx+132]
  0132b	51		 push	 ecx
  0132c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DGLLLDPA@?$DO?5MediaType?5?$CFu?$AA@
  01331	68 04 0a 00 00	 push	 2564			; 00000a04H
  01336	6a 01		 push	 1
  01338	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2565 :                 Log(LOG_MESSAGE,__LINE__,"> DitherType %u",pdm->dmDitherType);

  0133d	8b 93 88 00 00
	00		 mov	 edx, DWORD PTR [ebx+136]
  01343	52		 push	 edx
  01344	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IBDIEDAP@?$DO?5DitherType?5?$CFu?$AA@
  01349	68 05 0a 00 00	 push	 2565			; 00000a05H
  0134e	6a 01		 push	 1
  01350	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01355	83 c4 40	 add	 esp, 64			; 00000040H

; 2566 :                 Log(LOG_MESSAGE,__LINE__,"> Reserved1 %u",pdm->dmReserved1);

  01358	8b 83 8c 00 00
	00		 mov	 eax, DWORD PTR [ebx+140]
  0135e	50		 push	 eax
  0135f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ODIJDFHK@?$DO?5Reserved1?5?$CFu?$AA@
  01364	68 06 0a 00 00	 push	 2566			; 00000a06H
  01369	6a 01		 push	 1
  0136b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2567 :                 Log(LOG_MESSAGE,__LINE__,"> Reserved2 %u",pdm->dmReserved2);

  01370	8b 8b 90 00 00
	00		 mov	 ecx, DWORD PTR [ebx+144]
  01376	51		 push	 ecx
  01377	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KECJEPKK@?$DO?5Reserved2?5?$CFu?$AA@
  0137c	68 07 0a 00 00	 push	 2567			; 00000a07H
  01381	6a 01		 push	 1
  01383	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2568 : #if (WINVER >= 0x0500) || (_WIN32_WINNT >= _WIN32_WINNT_NT4)
; 2569 :                 Log(LOG_MESSAGE,__LINE__,"> PanningWidth %u",pdm->dmPanningWidth);

  01388	8b 93 94 00 00
	00		 mov	 edx, DWORD PTR [ebx+148]
  0138e	52		 push	 edx
  0138f	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ILEBHAGL@?$DO?5PanningWidth?5?$CFu?$AA@
  01394	68 09 0a 00 00	 push	 2569			; 00000a09H
  01399	6a 01		 push	 1
  0139b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2570 :                 Log(LOG_MESSAGE,__LINE__,"> PanningHeight %u",pdm->dmPanningHeight);

  013a0	8b 83 98 00 00
	00		 mov	 eax, DWORD PTR [ebx+152]
  013a6	50		 push	 eax
  013a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@ODPAHJGJ@?$DO?5PanningHeight?5?$CFu?$AA@
  013ac	68 0a 0a 00 00	 push	 2570			; 00000a0aH
  013b1	6a 01		 push	 1
  013b3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  013b8	83 c4 40	 add	 esp, 64			; 00000040H

; 2571 : #endif
; 2572 : #endif /* WINVER >= 0x0400 */
; 2573 : 
; 2574 :                 delete [] pdm;

  013bb	53		 push	 ebx
  013bc	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  013c1	83 c4 04	 add	 esp, 4
$LN10@PrinterInf:

; 2575 :                 pdm = NULL;
; 2576 :             }
; 2577 :             ClosePrinter(hPrinter);

  013c4	8b 8d ac fb ff
	ff		 mov	 ecx, DWORD PTR _hPrinter$145789[ebp]
  013ca	51		 push	 ecx
  013cb	e8 00 00 00 00	 call	 _ClosePrinter@4

; 2578 :         }
; 2579 :         else

  013d0	e9 c8 00 00 00	 jmp	 $LN9@PrinterInf
$LN11@PrinterInf:

; 2580 :         {
; 2581 :             dwLastError = GetLastError();

  013d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  013db	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _dwLastError$[ebp], eax

; 2582 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  013e1	33 f6		 xor	 esi, esi
  013e3	bb 00 12 00 00	 mov	 ebx, 4608		; 00001200H
  013e8	05 cc f7 ff ff	 add	 eax, -2100		; fffff7ccH
  013ed	3d 83 03 00 00	 cmp	 eax, 899		; 00000383H
  013f2	77 19		 ja	 SHORT $LN165@PrinterInf
  013f4	6a 02		 push	 2
  013f6	56		 push	 esi
  013f7	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
  013fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExA@12
  01402	8b f0		 mov	 esi, eax
  01404	85 f6		 test	 esi, esi
  01406	74 05		 je	 SHORT $LN165@PrinterInf
  01408	bb 00 1a 00 00	 mov	 ebx, 6656		; 00001a00H
$LN165@PrinterInf:
  0140d	6a 00		 push	 0
  0140f	68 03 01 00 00	 push	 259			; 00000103H
  01414	8d 95 e0 fe ff
	ff		 lea	 edx, DWORD PTR _szLastError$[ebp]
  0141a	52		 push	 edx
  0141b	68 00 04 00 00	 push	 1024			; 00000400H
  01420	8b 85 c4 fb ff
	ff		 mov	 eax, DWORD PTR _dwLastError$[ebp]
  01426	50		 push	 eax
  01427	56		 push	 esi
  01428	53		 push	 ebx
  01429	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  0142f	85 c0		 test	 eax, eax
  01431	74 36		 je	 SHORT $LN164@PrinterInf
  01433	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  01439	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0143c	8d 64 24 00	 npad	 4
$LL212@PrinterInf:
  01440	8a 08		 mov	 cl, BYTE PTR [eax]
  01442	40		 inc	 eax
  01443	84 c9		 test	 cl, cl
  01445	75 f9		 jne	 SHORT $LL212@PrinterInf
  01447	2b c2		 sub	 eax, edx
  01449	83 f8 02	 cmp	 eax, 2
  0144c	76 1b		 jbe	 SHORT $LN164@PrinterInf
  0144e	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  01454	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL213@PrinterInf:
  01457	8a 08		 mov	 cl, BYTE PTR [eax]
  01459	40		 inc	 eax
  0145a	84 c9		 test	 cl, cl
  0145c	75 f9		 jne	 SHORT $LL213@PrinterInf
  0145e	2b c2		 sub	 eax, edx
  01460	88 8c 05 de fe
	ff ff		 mov	 BYTE PTR _szLastError$[ebp+eax-2], cl
  01467	eb 07		 jmp	 SHORT $LN161@PrinterInf
$LN164@PrinterInf:
  01469	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szLastError$[ebp], 0
$LN161@PrinterInf:
  01470	85 f6		 test	 esi, esi
  01472	74 07		 je	 SHORT $LN160@PrinterInf
  01474	56		 push	 esi
  01475	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN160@PrinterInf:

; 2583 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, OpenPrinter Err %d Msg %s",dwLastError,szLastError);

  0147b	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _szLastError$[ebp]
  01481	51		 push	 ecx
  01482	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR _dwLastError$[ebp]
  01488	52		 push	 edx
  01489	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@GNEJHKAM@?9?9?5PtrInfo?0?5OpenPrinter?5Err?5?$CFd?5M@
  0148e	68 17 0a 00 00	 push	 2583			; 00000a17H
  01493	6a 10		 push	 16			; 00000010H
  01495	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0149a	83 c4 14	 add	 esp, 20			; 00000014H
$LN9@PrinterInf:

; 2584 :         }
; 2585 : 
; 2586 :         // *** fonts information
; 2587 :         HDC hdc = NULL;
; 2588 :         if(hdc = CreateIC(DriverName, PrinterName, NULL, NULL))

  0149d	6a 00		 push	 0
  0149f	6a 00		 push	 0
  014a1	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _PrinterName$[ebp]
  014a7	50		 push	 eax
  014a8	8d 8d c8 fb ff
	ff		 lea	 ecx, DWORD PTR _DriverName$[ebp]
  014ae	51		 push	 ecx
  014af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateICA@16
  014b5	8b d8		 mov	 ebx, eax
  014b7	85 db		 test	 ebx, ebx
  014b9	0f 84 39 06 00
	00		 je	 $LN8@PrinterInf

; 2589 :         {
; 2590 :             Log(LOG_MESSAGE,__LINE__,"DeviceCaps:");

  014bf	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CPAOAHIM@DeviceCaps?3?$AA@
  014c4	68 1e 0a 00 00	 push	 2590			; 00000a1eH
  014c9	6a 01		 push	 1
  014cb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  014d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2591 : 
; 2592 :             l = GetDeviceCaps(hdc,DRIVERVERSION);

  014d3	6a 00		 push	 0
  014d5	53		 push	 ebx
  014d6	ff d7		 call	 edi

; 2593 :             Log(LOG_MESSAGE,__LINE__,"> DRIVERVERSION %d",l);

  014d8	50		 push	 eax
  014d9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JDPBNNPN@?$DO?5DRIVERVERSION?5?$CFd?$AA@
  014de	68 21 0a 00 00	 push	 2593			; 00000a21H
  014e3	6a 01		 push	 1
  014e5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  014ea	83 c4 10	 add	 esp, 16			; 00000010H

; 2594 : 
; 2595 :             l = GetDeviceCaps(hdc,TECHNOLOGY);

  014ed	6a 02		 push	 2
  014ef	53		 push	 ebx
  014f0	ff d7		 call	 edi

; 2596 :             Log(LOG_MESSAGE,__LINE__,"> TECHNOLOGY %d",l);

  014f2	50		 push	 eax
  014f3	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KDKPJOH@?$DO?5TECHNOLOGY?5?$CFd?$AA@
  014f8	68 24 0a 00 00	 push	 2596			; 00000a24H
  014fd	6a 01		 push	 1
  014ff	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01504	83 c4 10	 add	 esp, 16			; 00000010H

; 2597 : 
; 2598 :             l = GetDeviceCaps(hdc,HORZSIZE);

  01507	6a 04		 push	 4
  01509	53		 push	 ebx
  0150a	ff d7		 call	 edi

; 2599 :             Log(LOG_MESSAGE,__LINE__,"> HORZSIZE %d",l);

  0150c	50		 push	 eax
  0150d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HMCMNAPC@?$DO?5HORZSIZE?5?$CFd?$AA@
  01512	68 27 0a 00 00	 push	 2599			; 00000a27H
  01517	6a 01		 push	 1
  01519	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0151e	83 c4 10	 add	 esp, 16			; 00000010H

; 2600 : 
; 2601 :             l = GetDeviceCaps(hdc,VERTSIZE);

  01521	6a 06		 push	 6
  01523	53		 push	 ebx
  01524	ff d7		 call	 edi

; 2602 :             Log(LOG_MESSAGE,__LINE__,"> VERTSIZE %d",l);

  01526	50		 push	 eax
  01527	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LDGIGNAG@?$DO?5VERTSIZE?5?$CFd?$AA@
  0152c	68 2a 0a 00 00	 push	 2602			; 00000a2aH
  01531	6a 01		 push	 1
  01533	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01538	83 c4 10	 add	 esp, 16			; 00000010H

; 2603 : 
; 2604 :             l = GetDeviceCaps(hdc,HORZRES);

  0153b	6a 08		 push	 8
  0153d	53		 push	 ebx
  0153e	ff d7		 call	 edi

; 2605 :             Log(LOG_MESSAGE,__LINE__,"> HORZRES %d",l);

  01540	50		 push	 eax
  01541	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IFBEPCKP@?$DO?5HORZRES?5?$CFd?$AA@
  01546	68 2d 0a 00 00	 push	 2605			; 00000a2dH
  0154b	6a 01		 push	 1
  0154d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01552	83 c4 10	 add	 esp, 16			; 00000010H

; 2606 : 
; 2607 :             l = GetDeviceCaps(hdc,VERTRES);

  01555	6a 0a		 push	 10			; 0000000aH
  01557	53		 push	 ebx
  01558	ff d7		 call	 edi

; 2608 :             Log(LOG_MESSAGE,__LINE__,"> VERTRES %d",l);

  0155a	50		 push	 eax
  0155b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HLDMJPJJ@?$DO?5VERTRES?5?$CFd?$AA@
  01560	68 30 0a 00 00	 push	 2608			; 00000a30H
  01565	6a 01		 push	 1
  01567	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0156c	83 c4 10	 add	 esp, 16			; 00000010H

; 2609 : 
; 2610 :             l = GetDeviceCaps(hdc,BITSPIXEL);

  0156f	6a 0c		 push	 12			; 0000000cH
  01571	53		 push	 ebx
  01572	ff d7		 call	 edi

; 2611 :             Log(LOG_MESSAGE,__LINE__,"> BITSPIXEL %d",l);

  01574	50		 push	 eax
  01575	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CHMKJDGJ@?$DO?5BITSPIXEL?5?$CFd?$AA@
  0157a	68 33 0a 00 00	 push	 2611			; 00000a33H
  0157f	6a 01		 push	 1
  01581	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01586	83 c4 10	 add	 esp, 16			; 00000010H

; 2612 : 
; 2613 :             l = GetDeviceCaps(hdc,PLANES);

  01589	6a 0e		 push	 14			; 0000000eH
  0158b	53		 push	 ebx
  0158c	ff d7		 call	 edi

; 2614 :             Log(LOG_MESSAGE,__LINE__,"> PLANES %d",l);

  0158e	50		 push	 eax
  0158f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DABMECAD@?$DO?5PLANES?5?$CFd?$AA@
  01594	68 36 0a 00 00	 push	 2614			; 00000a36H
  01599	6a 01		 push	 1
  0159b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  015a0	83 c4 10	 add	 esp, 16			; 00000010H

; 2615 : 
; 2616 :             l = GetDeviceCaps(hdc,NUMBRUSHES);

  015a3	6a 10		 push	 16			; 00000010H
  015a5	53		 push	 ebx
  015a6	ff d7		 call	 edi

; 2617 :             Log(LOG_MESSAGE,__LINE__,"> NUMBRUSHES %d",l);

  015a8	50		 push	 eax
  015a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GCBODPHK@?$DO?5NUMBRUSHES?5?$CFd?$AA@
  015ae	68 39 0a 00 00	 push	 2617			; 00000a39H
  015b3	6a 01		 push	 1
  015b5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  015ba	83 c4 10	 add	 esp, 16			; 00000010H

; 2618 : 
; 2619 :             l = GetDeviceCaps(hdc,NUMPENS);

  015bd	6a 12		 push	 18			; 00000012H
  015bf	53		 push	 ebx
  015c0	ff d7		 call	 edi

; 2620 :             Log(LOG_MESSAGE,__LINE__,"> NUMPENS %d",l);

  015c2	50		 push	 eax
  015c3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HHCKOKCG@?$DO?5NUMPENS?5?$CFd?$AA@
  015c8	68 3c 0a 00 00	 push	 2620			; 00000a3cH
  015cd	6a 01		 push	 1
  015cf	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  015d4	83 c4 10	 add	 esp, 16			; 00000010H

; 2621 : 
; 2622 :             l = GetDeviceCaps(hdc,NUMMARKERS);

  015d7	6a 14		 push	 20			; 00000014H
  015d9	53		 push	 ebx
  015da	ff d7		 call	 edi

; 2623 :             Log(LOG_MESSAGE,__LINE__,"> NUMMARKERS %d",l);

  015dc	50		 push	 eax
  015dd	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IJEEOFOD@?$DO?5NUMMARKERS?5?$CFd?$AA@
  015e2	68 3f 0a 00 00	 push	 2623			; 00000a3fH
  015e7	6a 01		 push	 1
  015e9	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  015ee	83 c4 10	 add	 esp, 16			; 00000010H

; 2624 : 
; 2625 :             l = GetDeviceCaps(hdc,NUMFONTS);

  015f1	6a 16		 push	 22			; 00000016H
  015f3	53		 push	 ebx
  015f4	ff d7		 call	 edi

; 2626 :             Log(LOG_MESSAGE,__LINE__,"> NUMFONTS %d",l);

  015f6	50		 push	 eax
  015f7	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HIAAJLOF@?$DO?5NUMFONTS?5?$CFd?$AA@
  015fc	68 42 0a 00 00	 push	 2626			; 00000a42H
  01601	6a 01		 push	 1
  01603	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01608	83 c4 10	 add	 esp, 16			; 00000010H

; 2627 : 
; 2628 :             l = GetDeviceCaps(hdc,NUMCOLORS);

  0160b	6a 18		 push	 24			; 00000018H
  0160d	53		 push	 ebx
  0160e	ff d7		 call	 edi

; 2629 :             Log(LOG_MESSAGE,__LINE__,"> NUMCOLORS %d",l);

  01610	50		 push	 eax
  01611	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CDPEOCLN@?$DO?5NUMCOLORS?5?$CFd?$AA@
  01616	68 45 0a 00 00	 push	 2629			; 00000a45H
  0161b	6a 01		 push	 1
  0161d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01622	83 c4 10	 add	 esp, 16			; 00000010H

; 2630 : 
; 2631 :             l = GetDeviceCaps(hdc,PDEVICESIZE);

  01625	6a 1a		 push	 26			; 0000001aH
  01627	53		 push	 ebx
  01628	ff d7		 call	 edi

; 2632 :             Log(LOG_MESSAGE,__LINE__,"> PDEVICESIZE %d",l);

  0162a	50		 push	 eax
  0162b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BIAFAHJC@?$DO?5PDEVICESIZE?5?$CFd?$AA@
  01630	68 48 0a 00 00	 push	 2632			; 00000a48H
  01635	6a 01		 push	 1
  01637	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0163c	83 c4 10	 add	 esp, 16			; 00000010H

; 2633 : 
; 2634 :             l = GetDeviceCaps(hdc,CURVECAPS);

  0163f	6a 1c		 push	 28			; 0000001cH
  01641	53		 push	 ebx
  01642	ff d7		 call	 edi

; 2635 :             Log(LOG_MESSAGE,__LINE__,"> CURVECAPS %d",l);

  01644	50		 push	 eax
  01645	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MJKILKAG@?$DO?5CURVECAPS?5?$CFd?$AA@
  0164a	68 4b 0a 00 00	 push	 2635			; 00000a4bH
  0164f	6a 01		 push	 1
  01651	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01656	83 c4 10	 add	 esp, 16			; 00000010H

; 2636 : 
; 2637 :             l = GetDeviceCaps(hdc,LINECAPS);

  01659	6a 1e		 push	 30			; 0000001eH
  0165b	53		 push	 ebx
  0165c	ff d7		 call	 edi

; 2638 :             Log(LOG_MESSAGE,__LINE__,"> LINECAPS %d",l);

  0165e	50		 push	 eax
  0165f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NIBLPDAA@?$DO?5LINECAPS?5?$CFd?$AA@
  01664	68 4e 0a 00 00	 push	 2638			; 00000a4eH
  01669	6a 01		 push	 1
  0166b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01670	83 c4 10	 add	 esp, 16			; 00000010H

; 2639 : 
; 2640 :             l = GetDeviceCaps(hdc,POLYGONALCAPS);

  01673	6a 20		 push	 32			; 00000020H
  01675	53		 push	 ebx
  01676	ff d7		 call	 edi

; 2641 :             Log(LOG_MESSAGE,__LINE__,"> POLYGONALCAPS %d",l);

  01678	50		 push	 eax
  01679	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NDEFMMIK@?$DO?5POLYGONALCAPS?5?$CFd?$AA@
  0167e	68 51 0a 00 00	 push	 2641			; 00000a51H
  01683	6a 01		 push	 1
  01685	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0168a	83 c4 10	 add	 esp, 16			; 00000010H

; 2642 : 
; 2643 :             l = GetDeviceCaps(hdc,TEXTCAPS);

  0168d	6a 22		 push	 34			; 00000022H
  0168f	53		 push	 ebx
  01690	ff d7		 call	 edi

; 2644 :             Log(LOG_MESSAGE,__LINE__,"> TEXTCAPS %d",l);

  01692	50		 push	 eax
  01693	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EJBOFNFI@?$DO?5TEXTCAPS?5?$CFd?$AA@
  01698	68 54 0a 00 00	 push	 2644			; 00000a54H
  0169d	6a 01		 push	 1
  0169f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  016a4	83 c4 10	 add	 esp, 16			; 00000010H

; 2645 : 
; 2646 :             l = GetDeviceCaps(hdc,CLIPCAPS);

  016a7	6a 24		 push	 36			; 00000024H
  016a9	53		 push	 ebx
  016aa	ff d7		 call	 edi

; 2647 :             Log(LOG_MESSAGE,__LINE__,"> CLIPCAPS %d",l);

  016ac	50		 push	 eax
  016ad	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NPFDNMHE@?$DO?5CLIPCAPS?5?$CFd?$AA@
  016b2	68 57 0a 00 00	 push	 2647			; 00000a57H
  016b7	6a 01		 push	 1
  016b9	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  016be	83 c4 10	 add	 esp, 16			; 00000010H

; 2648 : 
; 2649 :             l = GetDeviceCaps(hdc,RASTERCAPS);

  016c1	6a 26		 push	 38			; 00000026H
  016c3	53		 push	 ebx
  016c4	ff d7		 call	 edi

; 2650 :             Log(LOG_MESSAGE,__LINE__,"> RASTERCAPS %d",l);

  016c6	50		 push	 eax
  016c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OCKGHOJF@?$DO?5RASTERCAPS?5?$CFd?$AA@
  016cc	68 5a 0a 00 00	 push	 2650			; 00000a5aH
  016d1	6a 01		 push	 1
  016d3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  016d8	83 c4 10	 add	 esp, 16			; 00000010H

; 2651 : 
; 2652 :             l = GetDeviceCaps(hdc,ASPECTX);

  016db	6a 28		 push	 40			; 00000028H
  016dd	53		 push	 ebx
  016de	ff d7		 call	 edi

; 2653 :             Log(LOG_MESSAGE,__LINE__,"> ASPECTX %d",l);

  016e0	50		 push	 eax
  016e1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DGFFNBBI@?$DO?5ASPECTX?5?$CFd?$AA@
  016e6	68 5d 0a 00 00	 push	 2653			; 00000a5dH
  016eb	6a 01		 push	 1
  016ed	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  016f2	83 c4 10	 add	 esp, 16			; 00000010H

; 2654 : 
; 2655 :             l = GetDeviceCaps(hdc,ASPECTY);

  016f5	6a 2a		 push	 42			; 0000002aH
  016f7	53		 push	 ebx
  016f8	ff d7		 call	 edi

; 2656 :             Log(LOG_MESSAGE,__LINE__,"> ASPECTY %d",l);

  016fa	50		 push	 eax
  016fb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LDFPIKI@?$DO?5ASPECTY?5?$CFd?$AA@
  01700	68 60 0a 00 00	 push	 2656			; 00000a60H
  01705	6a 01		 push	 1
  01707	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0170c	83 c4 10	 add	 esp, 16			; 00000010H

; 2657 : 
; 2658 :             l = GetDeviceCaps(hdc,ASPECTXY);

  0170f	6a 2c		 push	 44			; 0000002cH
  01711	53		 push	 ebx
  01712	ff d7		 call	 edi

; 2659 :             Log(LOG_MESSAGE,__LINE__,"> ASPECTXY %d",l);

  01714	50		 push	 eax
  01715	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KAIPPGFP@?$DO?5ASPECTXY?5?$CFd?$AA@
  0171a	68 63 0a 00 00	 push	 2659			; 00000a63H
  0171f	6a 01		 push	 1
  01721	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01726	83 c4 10	 add	 esp, 16			; 00000010H

; 2660 : 
; 2661 :             l = GetDeviceCaps(hdc,LOGPIXELSX);

  01729	6a 58		 push	 88			; 00000058H
  0172b	53		 push	 ebx
  0172c	ff d7		 call	 edi

; 2662 :             Log(LOG_MESSAGE,__LINE__,"> LOGPIXELSX %d",l);

  0172e	50		 push	 eax
  0172f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NDEAPPCA@?$DO?5LOGPIXELSX?5?$CFd?$AA@
  01734	68 66 0a 00 00	 push	 2662			; 00000a66H
  01739	6a 01		 push	 1
  0173b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01740	83 c4 10	 add	 esp, 16			; 00000010H

; 2663 : 
; 2664 :             l = GetDeviceCaps(hdc,LOGPIXELSY);

  01743	6a 5a		 push	 90			; 0000005aH
  01745	53		 push	 ebx
  01746	ff d7		 call	 edi

; 2665 :             Log(LOG_MESSAGE,__LINE__,"> LOGPIXELSY %d",l);

  01748	50		 push	 eax
  01749	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OOCANGJA@?$DO?5LOGPIXELSY?5?$CFd?$AA@
  0174e	68 69 0a 00 00	 push	 2665			; 00000a69H
  01753	6a 01		 push	 1
  01755	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0175a	83 c4 10	 add	 esp, 16			; 00000010H

; 2666 : 
; 2667 :             l = GetDeviceCaps(hdc,SIZEPALETTE);

  0175d	6a 68		 push	 104			; 00000068H
  0175f	53		 push	 ebx
  01760	ff d7		 call	 edi

; 2668 :             Log(LOG_MESSAGE,__LINE__,"> SIZEPALETTE %d",l);

  01762	50		 push	 eax
  01763	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KNEJGJKJ@?$DO?5SIZEPALETTE?5?$CFd?$AA@
  01768	68 6c 0a 00 00	 push	 2668			; 00000a6cH
  0176d	6a 01		 push	 1
  0176f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01774	83 c4 10	 add	 esp, 16			; 00000010H

; 2669 : 
; 2670 :             l = GetDeviceCaps(hdc,NUMRESERVED);

  01777	6a 6a		 push	 106			; 0000006aH
  01779	53		 push	 ebx
  0177a	ff d7		 call	 edi

; 2671 :             Log(LOG_MESSAGE,__LINE__,"> NUMRESERVED %d",l);

  0177c	50		 push	 eax
  0177d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KMMENDMI@?$DO?5NUMRESERVED?5?$CFd?$AA@
  01782	68 6f 0a 00 00	 push	 2671			; 00000a6fH
  01787	6a 01		 push	 1
  01789	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0178e	83 c4 10	 add	 esp, 16			; 00000010H

; 2672 : 
; 2673 :             l = GetDeviceCaps(hdc,COLORRES);

  01791	6a 6c		 push	 108			; 0000006cH
  01793	53		 push	 ebx
  01794	ff d7		 call	 edi

; 2674 :             Log(LOG_MESSAGE,__LINE__,"> COLORRES %d",l);

  01796	50		 push	 eax
  01797	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GGNNNIFP@?$DO?5COLORRES?5?$CFd?$AA@
  0179c	68 72 0a 00 00	 push	 2674			; 00000a72H
  017a1	6a 01		 push	 1
  017a3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  017a8	83 c4 10	 add	 esp, 16			; 00000010H

; 2675 : 
; 2676 :             l = GetDeviceCaps(hdc,PHYSICALWIDTH);

  017ab	6a 6e		 push	 110			; 0000006eH
  017ad	53		 push	 ebx
  017ae	ff d7		 call	 edi

; 2677 :             Log(LOG_MESSAGE,__LINE__,"> PHYSICALWIDTH %d",l);

  017b0	50		 push	 eax
  017b1	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HDEIPKKB@?$DO?5PHYSICALWIDTH?5?$CFd?$AA@
  017b6	68 75 0a 00 00	 push	 2677			; 00000a75H
  017bb	6a 01		 push	 1
  017bd	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  017c2	83 c4 10	 add	 esp, 16			; 00000010H

; 2678 : 
; 2679 :             l = GetDeviceCaps(hdc,PHYSICALHEIGHT);

  017c5	6a 6f		 push	 111			; 0000006fH
  017c7	53		 push	 ebx
  017c8	ff d7		 call	 edi

; 2680 :             Log(LOG_MESSAGE,__LINE__,"> PHYSICALHEIGHT %d",l);

  017ca	50		 push	 eax
  017cb	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BHEFJOBO@?$DO?5PHYSICALHEIGHT?5?$CFd?$AA@
  017d0	68 78 0a 00 00	 push	 2680			; 00000a78H
  017d5	6a 01		 push	 1
  017d7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  017dc	83 c4 10	 add	 esp, 16			; 00000010H

; 2681 : 
; 2682 :             l = GetDeviceCaps(hdc,PHYSICALOFFSETX);

  017df	6a 70		 push	 112			; 00000070H
  017e1	53		 push	 ebx
  017e2	ff d7		 call	 edi

; 2683 :             Log(LOG_MESSAGE,__LINE__,"> PHYSICALOFFSETX %d",l);

  017e4	50		 push	 eax
  017e5	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PADOFFNF@?$DO?5PHYSICALOFFSETX?5?$CFd?$AA@
  017ea	68 7b 0a 00 00	 push	 2683			; 00000a7bH
  017ef	6a 01		 push	 1
  017f1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  017f6	83 c4 10	 add	 esp, 16			; 00000010H

; 2684 : 
; 2685 :             l = GetDeviceCaps(hdc,PHYSICALOFFSETY);

  017f9	6a 71		 push	 113			; 00000071H
  017fb	53		 push	 ebx
  017fc	ff d7		 call	 edi

; 2686 :             Log(LOG_MESSAGE,__LINE__,"> PHYSICALOFFSETY %d",l);

  017fe	50		 push	 eax
  017ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MNFOHMGF@?$DO?5PHYSICALOFFSETY?5?$CFd?$AA@
  01804	68 7e 0a 00 00	 push	 2686			; 00000a7eH
  01809	6a 01		 push	 1
  0180b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01810	83 c4 10	 add	 esp, 16			; 00000010H

; 2687 : 
; 2688 :             l = GetDeviceCaps(hdc,SCALINGFACTORX);

  01813	6a 72		 push	 114			; 00000072H
  01815	53		 push	 ebx
  01816	ff d7		 call	 edi

; 2689 :             Log(LOG_MESSAGE,__LINE__,"> SCALINGFACTORX %d",l);

  01818	50		 push	 eax
  01819	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LLMKMDFO@?$DO?5SCALINGFACTORX?5?$CFd?$AA@
  0181e	68 81 0a 00 00	 push	 2689			; 00000a81H
  01823	6a 01		 push	 1
  01825	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0182a	83 c4 10	 add	 esp, 16			; 00000010H

; 2690 : 
; 2691 :             l = GetDeviceCaps(hdc,SCALINGFACTORY);

  0182d	6a 73		 push	 115			; 00000073H
  0182f	53		 push	 ebx
  01830	ff d7		 call	 edi

; 2692 :             Log(LOG_MESSAGE,__LINE__,"> SCALINGFACTORY %d",l);

  01832	50		 push	 eax
  01833	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IGKKOKOO@?$DO?5SCALINGFACTORY?5?$CFd?$AA@
  01838	68 84 0a 00 00	 push	 2692			; 00000a84H
  0183d	6a 01		 push	 1
  0183f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01844	83 c4 10	 add	 esp, 16			; 00000010H

; 2693 : 
; 2694 :             l = GetDeviceCaps(hdc,VREFRESH);

  01847	6a 74		 push	 116			; 00000074H
  01849	53		 push	 ebx
  0184a	ff d7		 call	 edi

; 2695 :             Log(LOG_MESSAGE,__LINE__,"> VREFRESH %d",l);

  0184c	50		 push	 eax
  0184d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KHHELDLL@?$DO?5VREFRESH?5?$CFd?$AA@
  01852	68 87 0a 00 00	 push	 2695			; 00000a87H
  01857	6a 01		 push	 1
  01859	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0185e	83 c4 10	 add	 esp, 16			; 00000010H

; 2696 : 
; 2697 :             l = GetDeviceCaps(hdc,DESKTOPVERTRES);

  01861	6a 75		 push	 117			; 00000075H
  01863	53		 push	 ebx
  01864	ff d7		 call	 edi

; 2698 :             Log(LOG_MESSAGE,__LINE__,"> DESKTOPVERTRES %d",l);

  01866	50		 push	 eax
  01867	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@COAHGLLD@?$DO?5DESKTOPVERTRES?5?$CFd?$AA@
  0186c	68 8a 0a 00 00	 push	 2698			; 00000a8aH
  01871	6a 01		 push	 1
  01873	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01878	83 c4 10	 add	 esp, 16			; 00000010H

; 2699 : 
; 2700 :             l = GetDeviceCaps(hdc,DESKTOPHORZRES);

  0187b	6a 76		 push	 118			; 00000076H
  0187d	53		 push	 ebx
  0187e	ff d7		 call	 edi

; 2701 :             Log(LOG_MESSAGE,__LINE__,"> DESKTOPHORZRES %d",l);

  01880	50		 push	 eax
  01881	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NACPAGIF@?$DO?5DESKTOPHORZRES?5?$CFd?$AA@
  01886	68 8d 0a 00 00	 push	 2701			; 00000a8dH
  0188b	6a 01		 push	 1
  0188d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01892	83 c4 10	 add	 esp, 16			; 00000010H

; 2702 : 
; 2703 :             l = GetDeviceCaps(hdc,BLTALIGNMENT);

  01895	6a 77		 push	 119			; 00000077H
  01897	53		 push	 ebx
  01898	ff d7		 call	 edi

; 2704 :             Log(LOG_MESSAGE,__LINE__,"> BLTALIGNMENT %d",l);

  0189a	50		 push	 eax
  0189b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JFPGOKHF@?$DO?5BLTALIGNMENT?5?$CFd?$AA@
  018a0	68 90 0a 00 00	 push	 2704			; 00000a90H
  018a5	6a 01		 push	 1
  018a7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  018ac	83 c4 10	 add	 esp, 16			; 00000010H

; 2705 : 
; 2706 : #if(WINVER >= 0x0500)
; 2707 :             l = GetDeviceCaps(hdc,SHADEBLENDCAPS);

  018af	6a 78		 push	 120			; 00000078H
  018b1	53		 push	 ebx
  018b2	ff d7		 call	 edi

; 2708 :             Log(LOG_MESSAGE,__LINE__,"> SHADEBLENDCAPS %d",l);

  018b4	50		 push	 eax
  018b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BAMFBECL@?$DO?5SHADEBLENDCAPS?5?$CFd?$AA@
  018ba	68 94 0a 00 00	 push	 2708			; 00000a94H
  018bf	6a 01		 push	 1
  018c1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  018c6	83 c4 10	 add	 esp, 16			; 00000010H

; 2709 : 
; 2710 :             l = GetDeviceCaps(hdc,COLORMGMTCAPS);

  018c9	6a 79		 push	 121			; 00000079H
  018cb	53		 push	 ebx
  018cc	ff d7		 call	 edi

; 2711 :             Log(LOG_MESSAGE,__LINE__,"> COLORMGMTCAPS %d",l);

  018ce	50		 push	 eax
  018cf	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DKIEMMJN@?$DO?5COLORMGMTCAPS?5?$CFd?$AA@
  018d4	68 97 0a 00 00	 push	 2711			; 00000a97H
  018d9	6a 01		 push	 1
  018db	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  018e0	83 c4 10	 add	 esp, 16			; 00000010H

; 2712 : #endif /* WINVER >= 0x0500 */
; 2713 : 
; 2714 :             //*** device context layout
; 2715 :             DWORD dw = GetLayout(hdc);

  018e3	53		 push	 ebx
  018e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLayout@4

; 2716 :             Log(LOG_MESSAGE,__LINE__,"Layout %u",dw);

  018ea	50		 push	 eax
  018eb	68 00 00 00 00	 push	 OFFSET ??_C@_09IGELCPAM@Layout?5?$CFu?$AA@
  018f0	68 9c 0a 00 00	 push	 2716			; 00000a9cH
  018f5	6a 01		 push	 1
  018f7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  018fc	83 c4 10	 add	 esp, 16			; 00000010H

; 2717 : 
; 2718 :             //*** printer to the default FONT
; 2719 :             HGDIOBJ hGdi = NULL;
; 2720 :             if((hGdi = GetCurrentObject(hdc,OBJ_FONT))!= NULL)

  018ff	6a 06		 push	 6
  01901	53		 push	 ebx
  01902	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentObject@8
  01908	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _hGdi$145878[ebp], eax
  0190e	85 c0		 test	 eax, eax
  01910	0f 84 ca 01 00
	00		 je	 $LN3@PrinterInf

; 2721 :             {
; 2722 :                 int iBufferSize = 0;
; 2723 : 
; 2724 :                 if( iBufferSize = GetObject(hGdi,0,NULL))

  01916	6a 00		 push	 0
  01918	6a 00		 push	 0
  0191a	50		 push	 eax
  0191b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12
  01921	89 85 b8 fb ff
	ff		 mov	 DWORD PTR _iBufferSize$145880[ebp], eax
  01927	85 c0		 test	 eax, eax
  01929	0f 84 b1 01 00
	00		 je	 $LN3@PrinterInf

; 2725 :                 {
; 2726 :                     LOGFONT *pLogFont = (LOGFONT *)new char[iBufferSize];

  0192f	8b d0		 mov	 edx, eax
  01931	52		 push	 edx
  01932	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  01937	83 c4 04	 add	 esp, 4
  0193a	8b f0		 mov	 esi, eax

; 2727 :                     if(pLogFont)

  0193c	85 f6		 test	 esi, esi
  0193e	0f 84 88 01 00
	00		 je	 $LN5@PrinterInf

; 2728 :                     {
; 2729 :                         if(GetObject(hGdi,iBufferSize,pLogFont))

  01944	56		 push	 esi
  01945	8b 85 b8 fb ff
	ff		 mov	 eax, DWORD PTR _iBufferSize$145880[ebp]
  0194b	50		 push	 eax
  0194c	8b 8d c4 fb ff
	ff		 mov	 ecx, DWORD PTR _hGdi$145878[ebp]
  01952	51		 push	 ecx
  01953	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetObjectA@12
  01959	85 c0		 test	 eax, eax
  0195b	0f 84 4a 01 00
	00		 je	 $LN4@PrinterInf

; 2730 :                         {
; 2731 :                             Log(LOG_MESSAGE,__LINE__,"DEFAULT FONT:");

  01961	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FBFECABI@DEFAULT?5FONT?3?$AA@
  01966	68 ab 0a 00 00	 push	 2731			; 00000aabH
  0196b	6a 01		 push	 1
  0196d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2732 :                             Log(LOG_MESSAGE,__LINE__,"> Height %d",pLogFont->lfHeight);

  01972	8b 16		 mov	 edx, DWORD PTR [esi]
  01974	52		 push	 edx
  01975	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JCFCFHLH@?$DO?5Height?5?$CFd?$AA@
  0197a	68 ac 0a 00 00	 push	 2732			; 00000aacH
  0197f	6a 01		 push	 1
  01981	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2733 :                             Log(LOG_MESSAGE,__LINE__,"> Width %d",pLogFont->lfWidth);

  01986	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  01989	50		 push	 eax
  0198a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KBIDCEMN@?$DO?5Width?5?$CFd?$AA@
  0198f	68 ad 0a 00 00	 push	 2733			; 00000aadH
  01994	6a 01		 push	 1
  01996	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2734 :                             Log(LOG_MESSAGE,__LINE__,"> Escapment %d",pLogFont->lfEscapement);

  0199b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0199e	51		 push	 ecx
  0199f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DLDGLOB@?$DO?5Escapment?5?$CFd?$AA@
  019a4	68 ae 0a 00 00	 push	 2734			; 00000aaeH
  019a9	6a 01		 push	 1
  019ab	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2735 :                             Log(LOG_MESSAGE,__LINE__,"> Orientation %d",pLogFont->lfOrientation);

  019b0	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  019b3	52		 push	 edx
  019b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DFLFEINK@?$DO?5Orientation?5?$CFd?$AA@
  019b9	68 af 0a 00 00	 push	 2735			; 00000aafH
  019be	6a 01		 push	 1
  019c0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  019c5	83 c4 4c	 add	 esp, 76			; 0000004cH

; 2736 :                             Log(LOG_MESSAGE,__LINE__,"> Weight %d",pLogFont->lfWeight);

  019c8	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  019cb	50		 push	 eax
  019cc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EEPHINNC@?$DO?5Weight?5?$CFd?$AA@
  019d1	68 b0 0a 00 00	 push	 2736			; 00000ab0H
  019d6	6a 01		 push	 1
  019d8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2737 :                             Log(LOG_MESSAGE,__LINE__,"> Italic %.2Xh",pLogFont->lfItalic);

  019dd	0f b6 4e 14	 movzx	 ecx, BYTE PTR [esi+20]
  019e1	51		 push	 ecx
  019e2	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FOGJLDPM@?$DO?5Italic?5?$CF?42Xh?$AA@
  019e7	68 b1 0a 00 00	 push	 2737			; 00000ab1H
  019ec	6a 01		 push	 1
  019ee	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2738 :                             Log(LOG_MESSAGE,__LINE__,"> Underline %.2Xh",pLogFont->lfUnderline);

  019f3	0f b6 56 15	 movzx	 edx, BYTE PTR [esi+21]
  019f7	52		 push	 edx
  019f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IHAMIHEE@?$DO?5Underline?5?$CF?42Xh?$AA@
  019fd	68 b2 0a 00 00	 push	 2738			; 00000ab2H
  01a02	6a 01		 push	 1
  01a04	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2739 :                             Log(LOG_MESSAGE,__LINE__,"> StrikeOut %.2Xh",pLogFont->lfStrikeOut);

  01a09	0f b6 46 16	 movzx	 eax, BYTE PTR [esi+22]
  01a0d	50		 push	 eax
  01a0e	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MFABLFLO@?$DO?5StrikeOut?5?$CF?42Xh?$AA@
  01a13	68 b3 0a 00 00	 push	 2739			; 00000ab3H
  01a18	6a 01		 push	 1
  01a1a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01a1f	83 c4 40	 add	 esp, 64			; 00000040H

; 2740 :                             Log(LOG_MESSAGE,__LINE__,"> CharSet %.2Xh",pLogFont->lfCharSet);

  01a22	0f b6 4e 17	 movzx	 ecx, BYTE PTR [esi+23]
  01a26	51		 push	 ecx
  01a27	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CJMDNNAL@?$DO?5CharSet?5?$CF?42Xh?$AA@
  01a2c	68 b4 0a 00 00	 push	 2740			; 00000ab4H
  01a31	6a 01		 push	 1
  01a33	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2741 :                             Log(LOG_MESSAGE,__LINE__,"> OutPrecision %.2Xh",pLogFont->lfOutPrecision);

  01a38	0f b6 56 18	 movzx	 edx, BYTE PTR [esi+24]
  01a3c	52		 push	 edx
  01a3d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IIGPOAFP@?$DO?5OutPrecision?5?$CF?42Xh?$AA@
  01a42	68 b5 0a 00 00	 push	 2741			; 00000ab5H
  01a47	6a 01		 push	 1
  01a49	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2742 :                             Log(LOG_MESSAGE,__LINE__,"> ClipPrecision %.2Xh",pLogFont->lfClipPrecision);

  01a4e	0f b6 46 19	 movzx	 eax, BYTE PTR [esi+25]
  01a52	50		 push	 eax
  01a53	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FHJOGBNN@?$DO?5ClipPrecision?5?$CF?42Xh?$AA@
  01a58	68 b6 0a 00 00	 push	 2742			; 00000ab6H
  01a5d	6a 01		 push	 1
  01a5f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2743 :                             Log(LOG_MESSAGE,__LINE__,"> Quality %.2Xh",pLogFont->lfQuality);

  01a64	0f b6 4e 1a	 movzx	 ecx, BYTE PTR [esi+26]
  01a68	51		 push	 ecx
  01a69	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PONLFNLB@?$DO?5Quality?5?$CF?42Xh?$AA@
  01a6e	68 b7 0a 00 00	 push	 2743			; 00000ab7H
  01a73	6a 01		 push	 1
  01a75	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01a7a	83 c4 40	 add	 esp, 64			; 00000040H

; 2744 :                             Log(LOG_MESSAGE,__LINE__,"> PitchAndFamily %.2Xh",pLogFont->lfPitchAndFamily);

  01a7d	0f b6 56 1b	 movzx	 edx, BYTE PTR [esi+27]
  01a81	52		 push	 edx
  01a82	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FCEMNLND@?$DO?5PitchAndFamily?5?$CF?42Xh?$AA@
  01a87	68 b8 0a 00 00	 push	 2744			; 00000ab8H
  01a8c	6a 01		 push	 1
  01a8e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2745 :                             Log(LOG_MESSAGE,__LINE__,"> FaceName %s",pLogFont->lfFaceName);

  01a93	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  01a96	50		 push	 eax
  01a97	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PBJPIOLO@?$DO?5FaceName?5?$CFs?$AA@
  01a9c	68 b9 0a 00 00	 push	 2745			; 00000ab9H
  01aa1	6a 01		 push	 1
  01aa3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01aa8	83 c4 20	 add	 esp, 32			; 00000020H
$LN4@PrinterInf:

; 2746 :                         }
; 2747 :                         delete [] pLogFont;

  01aab	56		 push	 esi
  01aac	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  01ab1	83 c4 04	 add	 esp, 4

; 2752 :                     }
; 2753 :                 }
; 2754 :             }
; 2755 :             DeleteDC(hdc);

  01ab4	53		 push	 ebx
  01ab5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteDC@4

; 2226 :     }
; 2227 : 
; 2228 :     for(int printerCnt=0;printerCnt<gpPrinterInfoList->num;printerCnt++)

  01abb	ff 85 a8 fb ff
	ff		 inc	 DWORD PTR _printerCnt$145634[ebp]
  01ac1	8b b5 a8 fb ff
	ff		 mov	 esi, DWORD PTR _printerCnt$145634[ebp]
  01ac7	e9 84 e6 ff ff	 jmp	 $LL74@PrinterInf
$LN5@PrinterInf:

; 2748 :                     }
; 2749 :                     else
; 2750 :                     {
; 2751 :                         Log(LOG_DEBUG,__LINE__,"-- PtrInfo, new LOGFONT null");

  01acc	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@PNGCEDEF@?9?9?5PtrInfo?0?5new?5LOGFONT?5null?$AA@
  01ad1	68 bf 0a 00 00	 push	 2751			; 00000abfH
  01ad6	6a 10		 push	 16			; 00000010H
  01ad8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01add	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@PrinterInf:

; 2752 :                     }
; 2753 :                 }
; 2754 :             }
; 2755 :             DeleteDC(hdc);

  01ae0	53		 push	 ebx
  01ae1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteDC@4

; 2226 :     }
; 2227 : 
; 2228 :     for(int printerCnt=0;printerCnt<gpPrinterInfoList->num;printerCnt++)

  01ae7	ff 85 a8 fb ff
	ff		 inc	 DWORD PTR _printerCnt$145634[ebp]
  01aed	8b b5 a8 fb ff
	ff		 mov	 esi, DWORD PTR _printerCnt$145634[ebp]
  01af3	e9 58 e6 ff ff	 jmp	 $LL74@PrinterInf
$LN8@PrinterInf:

; 2756 :         }
; 2757 :         else
; 2758 :         {
; 2759 :             dwLastError = GetLastError();

  01af8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  01afe	89 85 c4 fb ff
	ff		 mov	 DWORD PTR _dwLastError$[ebp], eax

; 2760 :             GetLastErrorMessage(dwLastError,szLastError,_MAX_PATH-1);

  01b04	33 f6		 xor	 esi, esi
  01b06	bb 00 12 00 00	 mov	 ebx, 4608		; 00001200H
  01b0b	05 cc f7 ff ff	 add	 eax, -2100		; fffff7ccH
  01b10	3d 83 03 00 00	 cmp	 eax, 899		; 00000383H
  01b15	77 19		 ja	 SHORT $LN174@PrinterInf
  01b17	6a 02		 push	 2
  01b19	56		 push	 esi
  01b1a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MNPEAJCA@netmsg?4dll?$AA@
  01b1f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryExA@12
  01b25	8b f0		 mov	 esi, eax
  01b27	85 f6		 test	 esi, esi
  01b29	74 05		 je	 SHORT $LN174@PrinterInf
  01b2b	bb 00 1a 00 00	 mov	 ebx, 6656		; 00001a00H
$LN174@PrinterInf:
  01b30	6a 00		 push	 0
  01b32	68 03 01 00 00	 push	 259			; 00000103H
  01b37	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _szLastError$[ebp]
  01b3d	51		 push	 ecx
  01b3e	68 00 04 00 00	 push	 1024			; 00000400H
  01b43	8b 95 c4 fb ff
	ff		 mov	 edx, DWORD PTR _dwLastError$[ebp]
  01b49	52		 push	 edx
  01b4a	56		 push	 esi
  01b4b	53		 push	 ebx
  01b4c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FormatMessageA@28
  01b52	85 c0		 test	 eax, eax
  01b54	74 33		 je	 SHORT $LN173@PrinterInf
  01b56	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  01b5c	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  01b5f	90		 npad	 1
$LL214@PrinterInf:
  01b60	8a 08		 mov	 cl, BYTE PTR [eax]
  01b62	40		 inc	 eax
  01b63	84 c9		 test	 cl, cl
  01b65	75 f9		 jne	 SHORT $LL214@PrinterInf
  01b67	2b c2		 sub	 eax, edx
  01b69	83 f8 02	 cmp	 eax, 2
  01b6c	76 1b		 jbe	 SHORT $LN173@PrinterInf
  01b6e	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  01b74	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL215@PrinterInf:
  01b77	8a 08		 mov	 cl, BYTE PTR [eax]
  01b79	40		 inc	 eax
  01b7a	84 c9		 test	 cl, cl
  01b7c	75 f9		 jne	 SHORT $LL215@PrinterInf
  01b7e	2b c2		 sub	 eax, edx
  01b80	88 8c 05 de fe
	ff ff		 mov	 BYTE PTR _szLastError$[ebp+eax-2], cl
  01b87	eb 07		 jmp	 SHORT $LN170@PrinterInf
$LN173@PrinterInf:
  01b89	c6 85 e0 fe ff
	ff 00		 mov	 BYTE PTR _szLastError$[ebp], 0
$LN170@PrinterInf:
  01b90	85 f6		 test	 esi, esi
  01b92	74 07		 je	 SHORT $LN169@PrinterInf
  01b94	56		 push	 esi
  01b95	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
$LN169@PrinterInf:

; 2761 :             Log(LOG_DEBUG,__LINE__,"-- PtrInfo, CreateIC Err %d Msg %s",dwLastError,szLastError);

  01b9b	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _szLastError$[ebp]
  01ba1	50		 push	 eax
  01ba2	8b 8d c4 fb ff
	ff		 mov	 ecx, DWORD PTR _dwLastError$[ebp]
  01ba8	51		 push	 ecx
  01ba9	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@PFIFHLGI@?9?9?5PtrInfo?0?5CreateIC?5Err?5?$CFd?5Msg?5@
  01bae	68 c9 0a 00 00	 push	 2761			; 00000ac9H
  01bb3	6a 10		 push	 16			; 00000010H
  01bb5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  01bba	83 c4 14	 add	 esp, 20			; 00000014H

; 2226 :     }
; 2227 : 
; 2228 :     for(int printerCnt=0;printerCnt<gpPrinterInfoList->num;printerCnt++)

  01bbd	ff 85 a8 fb ff
	ff		 inc	 DWORD PTR _printerCnt$145634[ebp]
  01bc3	8b b5 a8 fb ff
	ff		 mov	 esi, DWORD PTR _printerCnt$145634[ebp]
  01bc9	e9 82 e5 ff ff	 jmp	 $LL74@PrinterInf
$LN72@PrinterInf:

; 2762 :         }
; 2763 :     }   //END: for(int printerCnt=0;printerCnt<gpPrinterInfoList->num;printerCnt++)
; 2764 : 
; 2765 :     //release printer info list
; 2766 :     if(gpPrinterInfoList)
; 2767 :     {
; 2768 :         delete [] gpPrinterInfoList;

  01bce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A ; gpPrinterInfoList
  01bd4	52		 push	 edx
  01bd5	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 2769 :         gpPrinterInfoList = NULL;

  01bda	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gpPrinterInfoList@@3PAU_printer_info_list_@@A, 0 ; gpPrinterInfoList

; 2770 :     }
; 2771 : 
; 2772 :     LogElapsedTime(__LINE__,tickStart);

  01be4	8b 85 a4 fb ff
	ff		 mov	 eax, DWORD PTR _tickStart$[ebp+4]
  01bea	50		 push	 eax
  01beb	8b 8d a0 fb ff
	ff		 mov	 ecx, DWORD PTR _tickStart$[ebp]
  01bf1	51		 push	 ecx
  01bf2	33 db		 xor	 ebx, ebx
  01bf4	bf d4 0a 00 00	 mov	 edi, 2772		; 00000ad4H
  01bf9	e8 00 00 00 00	 call	 ?LogElapsedTime@@YAXK_KPAD@Z ; LogElapsedTime

; 2773 : 
; 2774 :     Log(LOG_DEBUG,__LINE__,"<< PtrInfo");

  01bfe	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GNPIKGBL@?$DM?$DM?5PtrInfo?$AA@
  01c03	68 d6 0a 00 00	 push	 2774			; 00000ad6H
  01c08	6a 10		 push	 16			; 00000010H
  01c0a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2775 :     _endthreadex(0);

  01c0f	33 f6		 xor	 esi, esi
  01c11	56		 push	 esi
  01c12	e8 00 00 00 00	 call	 __endthreadex
  01c17	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2776 :     return 0;

  01c1a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  01c21	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR _B$[ebp]
  01c27	3b c6		 cmp	 eax, esi
  01c29	74 0f		 je	 SHORT $LN184@PrinterInf
  01c2b	50		 push	 eax
  01c2c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  01c31	83 c4 04	 add	 esp, 4
  01c34	89 b5 bc fb ff
	ff		 mov	 DWORD PTR _B$[ebp], esi
$LN184@PrinterInf:
  01c3a	33 c0		 xor	 eax, eax
$LN233@PrinterInf:
  01c3c	89 b5 c0 fb ff
	ff		 mov	 DWORD PTR _B$[ebp+4], esi

; 2777 : }

  01c42	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  01c45	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  01c4c	59		 pop	 ecx
  01c4d	5f		 pop	 edi
  01c4e	5e		 pop	 esi
  01c4f	5b		 pop	 ebx
  01c50	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01c53	33 cd		 xor	 ecx, ebp
  01c55	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01c5a	8b e5		 mov	 esp, ebp
  01c5c	5d		 pop	 ebp
  01c5d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PrinterInfo@@YGIPAX@Z$6:
  00000	8d b5 bc fb ff
	ff		 lea	 esi, DWORD PTR _B$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1PBuffer@@QAE@XZ	; PBuffer::~PBuffer
__ehhandler$?PrinterInfo@@YGIPAX@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 9c fb ff
	ff		 mov	 ecx, DWORD PTR [edx-1124]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?PrinterInfo@@YGIPAX@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?PrinterInfo@@YGIPAX@Z ENDP				; PrinterInfo
PUBLIC	__$ArrayPad$
PUBLIC	?PerformanceInfo@@YGIPAX@Z			; PerformanceInfo
; Function compile flags: /Ogtpy
;	COMDAT ?PerformanceInfo@@YGIPAX@Z
_TEXT	SEGMENT
_timeElapsed$192228 = -1104				; size = 4
_seconds$192229 = -1100					; size = 4
_perfInfo$ = -1096					; size = 56
_tickEnd$192227 = -1040					; size = 8
_szLastError$145292 = -1032				; size = 1024
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?PerformanceInfo@@YGIPAX@Z PROC				; PerformanceInfo, COMDAT

; 1758 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	81 ec 74 04 00
	00		 sub	 esp, 1140		; 00000474H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 70 04
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1140], eax
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi

; 1759 :     Log(LOG_DEBUG,__LINE__,">> PerfInfo");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CDFFAHFO@?$DO?$DO?5PerfInfo?$AA@
  00022	68 df 06 00 00	 push	 1759			; 000006dfH
  00027	6a 10		 push	 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1760 : 
; 1761 :     unsigned __int64 tickStart = SysTick;

  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00037	33 db		 xor	 ebx, ebx

; 1762 : 
; 1763 :     PERFORMANCE_INFORMATION perfInfo = {0};

  00039	6a 34		 push	 52			; 00000034H
  0003b	8b f8		 mov	 edi, eax
  0003d	8d 44 24 40	 lea	 eax, DWORD PTR _perfInfo$[esp+1160]
  00041	53		 push	 ebx
  00042	50		 push	 eax
  00043	89 5c 24 44	 mov	 DWORD PTR _perfInfo$[esp+1164], ebx
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1764 :     if(GetPerformanceInfo(&perfInfo,sizeof(PERFORMANCE_INFORMATION)))

  0004f	6a 38		 push	 56			; 00000038H
  00051	8d 4c 24 3c	 lea	 ecx, DWORD PTR _perfInfo$[esp+1156]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 _GetPerformanceInfo@8
  0005b	85 c0		 test	 eax, eax
  0005d	0f 84 d5 00 00
	00		 je	 $LN2@Performanc

; 1765 :     {
; 1766 :         Log(LOG_HEADER,__LINE__,"Performance Information");

  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@ECNHKKAA@Performance?5Information?$AA@
  00068	68 e6 06 00 00	 push	 1766			; 000006e6H
  0006d	6a 02		 push	 2
  0006f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1767 :         Log(LOG_MESSAGE,__LINE__,"Commit: Total %u, Limit %u, Peak %u",perfInfo.CommitTotal,perfInfo.CommitLimit,perfInfo.CommitPeak);

  00074	8b 54 24 50	 mov	 edx, DWORD PTR _perfInfo$[esp+1176]
  00078	8b 44 24 4c	 mov	 eax, DWORD PTR _perfInfo$[esp+1172]
  0007c	8b 4c 24 48	 mov	 ecx, DWORD PTR _perfInfo$[esp+1168]
  00080	52		 push	 edx
  00081	50		 push	 eax
  00082	51		 push	 ecx
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@ONMEHFLA@Commit?3?5Total?5?$CFu?0?5Limit?5?$CFu?0?5Peak@
  00088	68 e7 06 00 00	 push	 1767			; 000006e7H
  0008d	6a 01		 push	 1
  0008f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1768 :         Log(LOG_MESSAGE,__LINE__,"Physical: Total %u, Available %u",perfInfo.PhysicalTotal,perfInfo.PhysicalAvailable);

  00094	8b 54 24 70	 mov	 edx, DWORD PTR _perfInfo$[esp+1208]
  00098	8b 44 24 6c	 mov	 eax, DWORD PTR _perfInfo$[esp+1204]
  0009c	52		 push	 edx
  0009d	50		 push	 eax
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@KFDPCIGB@Physical?3?5Total?5?$CFu?0?5Available?5?$CFu@
  000a3	68 e8 06 00 00	 push	 1768			; 000006e8H
  000a8	6a 01		 push	 1
  000aa	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1769 :         Log(LOG_MESSAGE,__LINE__,"System Cache %u",perfInfo.SystemCache);

  000af	8b 8c 24 88 00
	00 00		 mov	 ecx, DWORD PTR _perfInfo$[esp+1232]
  000b6	51		 push	 ecx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DCNNFMJH@System?5Cache?5?$CFu?$AA@
  000bc	68 e9 06 00 00	 push	 1769			; 000006e9H
  000c1	6a 01		 push	 1
  000c3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1770 :         Log(LOG_MESSAGE,__LINE__,"Kernel: Total %u, Paged %u, Nonpaged %u",perfInfo.KernelTotal,perfInfo.KernelPaged,perfInfo.KernelNonpaged);

  000c8	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _perfInfo$[esp+1260]
  000cf	8b 84 24 a0 00
	00 00		 mov	 eax, DWORD PTR _perfInfo$[esp+1256]
  000d6	8b 8c 24 9c 00
	00 00		 mov	 ecx, DWORD PTR _perfInfo$[esp+1252]
  000dd	83 c4 48	 add	 esp, 72			; 00000048H
  000e0	52		 push	 edx
  000e1	50		 push	 eax
  000e2	51		 push	 ecx
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@POMBEGEK@Kernel?3?5Total?5?$CFu?0?5Paged?5?$CFu?0?5Nonp@
  000e8	68 ea 06 00 00	 push	 1770			; 000006eaH
  000ed	6a 01		 push	 1
  000ef	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1771 :         Log(LOG_MESSAGE,__LINE__,"Page Size %u",perfInfo.PageSize);

  000f4	8b 54 24 78	 mov	 edx, DWORD PTR _perfInfo$[esp+1216]
  000f8	52		 push	 edx
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HEDGONEI@Page?5Size?5?$CFu?$AA@
  000fe	68 eb 06 00 00	 push	 1771			; 000006ebH
  00103	6a 01		 push	 1
  00105	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1772 :         Log(LOG_MESSAGE,__LINE__,"Process %u, Handles %u, Threads %u",perfInfo.ProcessCount,perfInfo.HandleCount,perfInfo.ThreadCount);

  0010a	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR _perfInfo$[esp+1244]
  00111	8b 8c 24 8c 00
	00 00		 mov	 ecx, DWORD PTR _perfInfo$[esp+1236]
  00118	8b 94 24 90 00
	00 00		 mov	 edx, DWORD PTR _perfInfo$[esp+1240]
  0011f	50		 push	 eax
  00120	51		 push	 ecx
  00121	52		 push	 edx
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@DBCKLHBG@Process?5?$CFu?0?5Handles?5?$CFu?0?5Threads?5@
  00127	68 ec 06 00 00	 push	 1772			; 000006ecH
  0012c	6a 01		 push	 1
  0012e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00133	83 c4 40	 add	 esp, 64			; 00000040H

; 1773 :     }
; 1774 :     else

  00136	eb 48		 jmp	 SHORT $LN1@Performanc
$LN2@Performanc:

; 1775 :     {
; 1776 :         char szLastError[1024] = {0};

  00138	68 ff 03 00 00	 push	 1023			; 000003ffH
  0013d	8d 44 24 7d	 lea	 eax, DWORD PTR _szLastError$145292[esp+1157]
  00141	53		 push	 ebx
  00142	50		 push	 eax
  00143	88 9c 24 84 00
	00 00		 mov	 BYTE PTR _szLastError$145292[esp+1164], bl
  0014a	e8 00 00 00 00	 call	 _memset
  0014f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1777 :         DWORD dwLastError = GetLastError();

  00152	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00158	8b d8		 mov	 ebx, eax

; 1778 :         GetLastErrorMessage(dwLastError,szLastError,sizeof(szLastError));

  0015a	68 00 04 00 00	 push	 1024			; 00000400H
  0015f	8d 74 24 7c	 lea	 esi, DWORD PTR _szLastError$145292[esp+1156]
  00163	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1779 :         Log(LOG_HEADER,__LINE__,"PerfInfo, GetPerformanceInfo failed %u, %s",dwLastError,szLastError);

  00168	8b ce		 mov	 ecx, esi
  0016a	51		 push	 ecx
  0016b	53		 push	 ebx
  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@PIJNDBHN@PerfInfo?0?5GetPerformanceInfo?5fai@
  00171	68 f3 06 00 00	 push	 1779			; 000006f3H
  00176	6a 02		 push	 2
  00178	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0017d	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@Performanc:

; 1780 :     }
; 1781 : 
; 1782 :     LogElapsedTime(__LINE__,tickStart);

  00180	8d 54 24 34	 lea	 edx, DWORD PTR _seconds$192229[esp+1152]
  00184	52		 push	 edx
  00185	8d 44 24 34	 lea	 eax, DWORD PTR _timeElapsed$192228[esp+1156]
  00189	50		 push	 eax
  0018a	33 c0		 xor	 eax, eax
  0018c	50		 push	 eax
  0018d	57		 push	 edi
  0018e	8d b4 24 80 00
	00 00		 lea	 esi, DWORD PTR _tickEnd$192227[esp+1168]
  00195	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  0019a	d9 44 24 40	 fld	 DWORD PTR _timeElapsed$192228[esp+1168]
  0019e	8b 4c 24 44	 mov	 ecx, DWORD PTR _seconds$192229[esp+1168]
  001a2	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  001a6	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  001ab	f7 e1		 mul	 ecx
  001ad	8b f2		 mov	 esi, edx
  001af	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  001b4	f7 e1		 mul	 ecx
  001b6	c1 ea 05	 shr	 edx, 5
  001b9	8b c2		 mov	 eax, edx
  001bb	c1 e0 04	 shl	 eax, 4
  001be	2b c2		 sub	 eax, edx
  001c0	03 c0		 add	 eax, eax
  001c2	03 c0		 add	 eax, eax
  001c4	8b d1		 mov	 edx, ecx
  001c6	2b d0		 sub	 edx, eax
  001c8	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  001cb	8b c6		 mov	 eax, esi
  001cd	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  001d3	83 c4 08	 add	 esp, 8
  001d6	52		 push	 edx
  001d7	2b c8		 sub	 ecx, eax
  001d9	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  001de	f7 e1		 mul	 ecx
  001e0	c1 ea 05	 shr	 edx, 5
  001e3	52		 push	 edx
  001e4	56		 push	 esi
  001e5	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  001ea	68 f6 06 00 00	 push	 1782			; 000006f6H
  001ef	6a 01		 push	 1
  001f1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1783 : 
; 1784 :     Log(LOG_DEBUG,__LINE__,"<< PerfInfo");

  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JHACCAAA@?$DM?$DM?5PerfInfo?$AA@
  001fb	68 f8 06 00 00	 push	 1784			; 000006f8H
  00200	6a 10		 push	 16			; 00000010H
  00202	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1785 :     _endthreadex(0);

  00207	6a 00		 push	 0
  00209	e8 00 00 00 00	 call	 __endthreadex

; 1786 :     return 0;
; 1787 : }

  0020e	8b 8c 24 ac 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1200]
  00215	83 c4 30	 add	 esp, 48			; 00000030H
  00218	5f		 pop	 edi
  00219	5e		 pop	 esi
  0021a	5b		 pop	 ebx
  0021b	33 cc		 xor	 ecx, esp
  0021d	33 c0		 xor	 eax, eax
  0021f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00224	8b e5		 mov	 esp, ebp
  00226	5d		 pop	 ebp
  00227	c2 04 00	 ret	 4
?PerformanceInfo@@YGIPAX@Z ENDP				; PerformanceInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DeviceDrivers@@YGIPAX@Z			; DeviceDrivers
; Function compile flags: /Ogtpy
;	COMDAT ?DeviceDrivers@@YGIPAX@Z
_TEXT	SEGMENT
_cbNeeded$ = -31052					; size = 4
_seconds$192240 = -31048				; size = 4
_timeElapsed$192239 = -31044				; size = 4
_tickEnd$192238 = -31040				; size = 8
_drivers$ = -31032					; size = 20000
_szLastError$145270 = -11032				; size = 1024
_szDriver$145261 = -10008				; size = 5000
_szFile$145262 = -5008					; size = 5000
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?DeviceDrivers@@YGIPAX@Z PROC				; DeviceDrivers, COMDAT

; 1711 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	b8 74 79 00 00	 mov	 eax, 31092		; 00007974H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	89 84 24 70 79
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+31092], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi

; 1712 :     Log(LOG_DEBUG,__LINE__,">> DevDrvs");

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILKGPHOB@?$DO?$DO?5DevDrvs?$AA@
  00026	68 b0 06 00 00	 push	 1712			; 000006b0H
  0002b	6a 10		 push	 16			; 00000010H
  0002d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1713 : 
; 1714 :     const int DriveArraySize = 5000;
; 1715 :     LPVOID drivers[DriveArraySize];
; 1716 :     DWORD cbNeeded = 0;

  00032	33 f6		 xor	 esi, esi
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH
  00037	89 74 24 34	 mov	 DWORD PTR _cbNeeded$[esp+31104], esi

; 1717 :     int cDrivers = 0;
; 1718 : 
; 1719 :     unsigned __int64 tickStart = SysTick;

  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00041	8b f8		 mov	 edi, eax

; 1720 : 
; 1721 :     if(EnumDeviceDrivers(drivers,sizeof(drivers),&cbNeeded) && cbNeeded < sizeof(drivers))

  00043	8d 44 24 34	 lea	 eax, DWORD PTR _cbNeeded$[esp+31104]
  00047	50		 push	 eax
  00048	68 20 4e 00 00	 push	 20000			; 00004e20H
  0004d	8d 4c 24 50	 lea	 ecx, DWORD PTR _drivers$[esp+31112]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 _EnumDeviceDrivers@12
  00057	85 c0		 test	 eax, eax
  00059	0f 84 f3 00 00
	00		 je	 $LN5@DeviceDriv
  0005f	8b 5c 24 34	 mov	 ebx, DWORD PTR _cbNeeded$[esp+31104]
  00063	81 fb 20 4e 00
	00		 cmp	 ebx, 20000		; 00004e20H
  00069	0f 83 e3 00 00
	00		 jae	 $LN5@DeviceDriv

; 1722 :     { 
; 1723 :         char szDriver[DriveArraySize] = {0};

  0006f	68 87 13 00 00	 push	 4999			; 00001387H
  00074	8d 94 24 6d 52
	00 00		 lea	 edx, DWORD PTR _szDriver$145261[esp+31109]
  0007b	56		 push	 esi
  0007c	52		 push	 edx
  0007d	c6 84 24 74 52
	00 00 00	 mov	 BYTE PTR _szDriver$145261[esp+31116], 0
  00085	e8 00 00 00 00	 call	 _memset

; 1724 :         char szFile[DriveArraySize] = {0};

  0008a	68 87 13 00 00	 push	 4999			; 00001387H
  0008f	8d 84 24 01 66
	00 00		 lea	 eax, DWORD PTR _szFile$145262[esp+31121]
  00096	56		 push	 esi
  00097	50		 push	 eax
  00098	c6 84 24 08 66
	00 00 00	 mov	 BYTE PTR _szFile$145262[esp+31128], 0
  000a0	e8 00 00 00 00	 call	 _memset

; 1725 :         cDrivers = cbNeeded / sizeof(drivers[0]);

  000a5	c1 eb 02	 shr	 ebx, 2

; 1726 :         
; 1727 :         Log(LOG_HEADER,__LINE__,"Device Drivers, Number of: %d",cDrivers);

  000a8	53		 push	 ebx
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@PHKHDLGJ@Device?5Drivers?0?5Number?5of?3?5?$CFd?$AA@
  000ae	68 bf 06 00 00	 push	 1727			; 000006bfH
  000b3	6a 02		 push	 2
  000b5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000ba	83 c4 28	 add	 esp, 40			; 00000028H

; 1728 :         for(int i=0;i<cDrivers;i++)

  000bd	85 db		 test	 ebx, ebx
  000bf	0f 8e e4 00 00
	00		 jle	 $LN1@DeviceDriv
  000c5	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL4@DeviceDriv:

; 1729 :         {
; 1730 :             GetDeviceDriverBaseName(drivers[i],szDriver,sizeof(szDriver)/sizeof(szDriver[0]));

  000d0	8b 54 b4 48	 mov	 edx, DWORD PTR _drivers$[esp+esi*4+31104]
  000d4	68 88 13 00 00	 push	 5000			; 00001388H
  000d9	8d 8c 24 6c 52
	00 00		 lea	 ecx, DWORD PTR _szDriver$145261[esp+31108]
  000e0	51		 push	 ecx
  000e1	52		 push	 edx
  000e2	e8 00 00 00 00	 call	 _GetDeviceDriverBaseNameA@12

; 1731 :             GetDeviceDriverFileName(drivers[i],szFile,sizeof(szFile)/sizeof(szFile[0]));

  000e7	8b 4c b4 48	 mov	 ecx, DWORD PTR _drivers$[esp+esi*4+31104]
  000eb	68 88 13 00 00	 push	 5000			; 00001388H
  000f0	8d 84 24 f4 65
	00 00		 lea	 eax, DWORD PTR _szFile$145262[esp+31108]
  000f7	50		 push	 eax
  000f8	51		 push	 ecx
  000f9	e8 00 00 00 00	 call	 _GetDeviceDriverFileNameA@12

; 1732 : 
; 1733 :             Log(LOG_MESSAGE,__LINE__,"> %.3d, %s, %s",i+1,szDriver,szFile);

  000fe	8d 94 24 f0 65
	00 00		 lea	 edx, DWORD PTR _szFile$145262[esp+31104]
  00105	52		 push	 edx
  00106	8d 84 24 6c 52
	00 00		 lea	 eax, DWORD PTR _szDriver$145261[esp+31108]
  0010d	50		 push	 eax
  0010e	46		 inc	 esi
  0010f	56		 push	 esi
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OBFOPNMD@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFs?$AA@
  00115	68 c5 06 00 00	 push	 1733			; 000006c5H
  0011a	6a 01		 push	 1
  0011c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1734 : 
; 1735 :             memset(szDriver,0x00,sizeof(szDriver));

  00121	68 88 13 00 00	 push	 5000			; 00001388H
  00126	8d 8c 24 84 52
	00 00		 lea	 ecx, DWORD PTR _szDriver$145261[esp+31132]
  0012d	6a 00		 push	 0
  0012f	51		 push	 ecx
  00130	e8 00 00 00 00	 call	 _memset

; 1736 :             memset(szFile,0x00,sizeof(szFile));

  00135	68 88 13 00 00	 push	 5000			; 00001388H
  0013a	8d 94 24 18 66
	00 00		 lea	 edx, DWORD PTR _szFile$145262[esp+31144]
  00141	6a 00		 push	 0
  00143	52		 push	 edx
  00144	e8 00 00 00 00	 call	 _memset
  00149	83 c4 30	 add	 esp, 48			; 00000030H
  0014c	3b f3		 cmp	 esi, ebx
  0014e	7c 80		 jl	 SHORT $LL4@DeviceDriv

; 1737 :         }
; 1738 :     }
; 1739 :     else 

  00150	eb 57		 jmp	 SHORT $LN1@DeviceDriv
$LN5@DeviceDriv:

; 1740 :     {
; 1741 :         char szLastError[1024] = {0};

  00152	68 ff 03 00 00	 push	 1023			; 000003ffH
  00157	8d 84 24 6d 4e
	00 00		 lea	 eax, DWORD PTR _szLastError$145270[esp+31109]
  0015e	56		 push	 esi
  0015f	50		 push	 eax
  00160	c6 84 24 74 4e
	00 00 00	 mov	 BYTE PTR _szLastError$145270[esp+31116], 0
  00168	e8 00 00 00 00	 call	 _memset
  0016d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1742 :         DWORD dwLastError = GetLastError();

  00170	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00176	8b d8		 mov	 ebx, eax

; 1743 :         GetLastErrorMessage(dwLastError,szLastError,sizeof(szLastError));

  00178	68 00 04 00 00	 push	 1024			; 00000400H
  0017d	8d b4 24 6c 4e
	00 00		 lea	 esi, DWORD PTR _szLastError$145270[esp+31108]
  00184	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1744 :         Log(LOG_HEADER,__LINE__,"DevDrvs, EnumDeviceDrivers failed: %u, %s (array size needed %u)",dwLastError,szLastError,cbNeeded/sizeof(LPVOID));

  00189	8b 4c 24 38	 mov	 ecx, DWORD PTR _cbNeeded$[esp+31108]
  0018d	c1 e9 02	 shr	 ecx, 2
  00190	51		 push	 ecx
  00191	8b d6		 mov	 edx, esi
  00193	52		 push	 edx
  00194	53		 push	 ebx
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@GKALJOAD@DevDrvs?0?5EnumDeviceDrivers?5faile@
  0019a	68 d0 06 00 00	 push	 1744			; 000006d0H
  0019f	6a 02		 push	 2
  001a1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001a6	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN1@DeviceDriv:

; 1745 :     }
; 1746 : 
; 1747 :     LogElapsedTime(__LINE__,tickStart);

  001a9	8d 44 24 38	 lea	 eax, DWORD PTR _seconds$192240[esp+31104]
  001ad	50		 push	 eax
  001ae	8d 4c 24 40	 lea	 ecx, DWORD PTR _timeElapsed$192239[esp+31108]
  001b2	51		 push	 ecx
  001b3	33 c0		 xor	 eax, eax
  001b5	50		 push	 eax
  001b6	57		 push	 edi
  001b7	8d 74 24 50	 lea	 esi, DWORD PTR _tickEnd$192238[esp+31120]
  001bb	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  001c0	d9 44 24 4c	 fld	 DWORD PTR _timeElapsed$192239[esp+31120]
  001c4	8b 4c 24 48	 mov	 ecx, DWORD PTR _seconds$192240[esp+31120]
  001c8	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  001cc	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  001d1	f7 e1		 mul	 ecx
  001d3	8b f2		 mov	 esi, edx
  001d5	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  001da	f7 e1		 mul	 ecx
  001dc	c1 ea 05	 shr	 edx, 5
  001df	8b c2		 mov	 eax, edx
  001e1	c1 e0 04	 shl	 eax, 4
  001e4	2b c2		 sub	 eax, edx
  001e6	03 c0		 add	 eax, eax
  001e8	03 c0		 add	 eax, eax
  001ea	8b d1		 mov	 edx, ecx
  001ec	2b d0		 sub	 edx, eax
  001ee	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  001f1	8b c6		 mov	 eax, esi
  001f3	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  001f9	83 c4 08	 add	 esp, 8
  001fc	52		 push	 edx
  001fd	2b c8		 sub	 ecx, eax
  001ff	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00204	f7 e1		 mul	 ecx
  00206	c1 ea 05	 shr	 edx, 5
  00209	52		 push	 edx
  0020a	56		 push	 esi
  0020b	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  00210	68 d3 06 00 00	 push	 1747			; 000006d3H
  00215	6a 01		 push	 1
  00217	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1748 : 
; 1749 :     Log(LOG_DEBUG,__LINE__,"<< DevDrvs");

  0021c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NHDPJOBN@?$DM?$DM?5DevDrvs?$AA@
  00221	68 d5 06 00 00	 push	 1749			; 000006d5H
  00226	6a 10		 push	 16			; 00000010H
  00228	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1750 :     _endthreadex(0);

  0022d	6a 00		 push	 0
  0022f	e8 00 00 00 00	 call	 __endthreadex

; 1751 :     return 0;
; 1752 : }

  00234	8b 8c 24 ac 79
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+31152]
  0023b	83 c4 30	 add	 esp, 48			; 00000030H
  0023e	5f		 pop	 edi
  0023f	5e		 pop	 esi
  00240	5b		 pop	 ebx
  00241	33 cc		 xor	 ecx, esp
  00243	33 c0		 xor	 eax, eax
  00245	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024a	8b e5		 mov	 esp, ebp
  0024c	5d		 pop	 ebp
  0024d	c2 04 00	 ret	 4
?DeviceDrivers@@YGIPAX@Z ENDP				; DeviceDrivers
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SystemLogicalProcessorInforamtion@@YGIPAX@Z	; SystemLogicalProcessorInforamtion
; Function compile flags: /Ogtpy
;	COMDAT ?SystemLogicalProcessorInforamtion@@YGIPAX@Z
_TEXT	SEGMENT
_timeElapsed$192252 = -1072				; size = 4
_processorL1CacheCount$ = -1072				; size = 4
tv373 = -1068						; size = 4
_seconds$192253 = -1068					; size = 4
_processorCoreCount$ = -1068				; size = 4
_returnLength$ = -1064					; size = 4
_processorL3CacheCount$ = -1060				; size = 4
_processorPackageCount$ = -1056				; size = 4
_logicalProcessorCount$ = -1052				; size = 4
_processorL2CacheCount$ = -1048				; size = 4
_numaNodeCount$ = -1044					; size = 4
_tickEnd$192251 = -1040					; size = 8
_tickStart$ = -1040					; size = 8
_szLastError$145218 = -1032				; size = 1024
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?SystemLogicalProcessorInforamtion@@YGIPAX@Z PROC	; SystemLogicalProcessorInforamtion, COMDAT

; 1574 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	81 ec 34 04 00
	00		 sub	 esp, 1076		; 00000434H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 30 04
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1076], eax
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi

; 1575 :     Log(LOG_DEBUG,__LINE__,">> SysLogProcInfo");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MLMEFHGM@?$DO?$DO?5SysLogProcInfo?$AA@
  00022	68 27 06 00 00	 push	 1575			; 00000627H
  00027	6a 10		 push	 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1576 : 
; 1577 :     LPFN_GLPI glpi = NULL;
; 1578 :     BOOL done = FALSE;
; 1579 :     PSYSTEM_LOGICAL_PROCESSOR_INFORMATION buffer = NULL;

  0002e	33 ff		 xor	 edi, edi

; 1580 :     PSYSTEM_LOGICAL_PROCESSOR_INFORMATION ptr = NULL;
; 1581 :     DWORD returnLength = 0;
; 1582 :     DWORD logicalProcessorCount = 0;
; 1583 :     DWORD numaNodeCount = 0;
; 1584 :     DWORD processorCoreCount = 0;

  00030	33 db		 xor	 ebx, ebx
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	89 7c 24 18	 mov	 DWORD PTR _returnLength$[esp+1088], edi
  00039	89 7c 24 24	 mov	 DWORD PTR _logicalProcessorCount$[esp+1088], edi
  0003d	89 7c 24 2c	 mov	 DWORD PTR _numaNodeCount$[esp+1088], edi
  00041	89 5c 24 14	 mov	 DWORD PTR _processorCoreCount$[esp+1088], ebx

; 1585 :     DWORD processorL1CacheCount = 0;

  00045	89 7c 24 10	 mov	 DWORD PTR _processorL1CacheCount$[esp+1088], edi

; 1586 :     DWORD processorL2CacheCount = 0;

  00049	89 7c 24 28	 mov	 DWORD PTR _processorL2CacheCount$[esp+1088], edi

; 1587 :     DWORD processorL3CacheCount = 0;

  0004d	89 7c 24 1c	 mov	 DWORD PTR _processorL3CacheCount$[esp+1088], edi

; 1588 :     DWORD processorPackageCount = 0;

  00051	89 7c 24 20	 mov	 DWORD PTR _processorPackageCount$[esp+1088], edi

; 1589 :     DWORD byteOffset = 0;
; 1590 :     PCACHE_DESCRIPTOR Cache;
; 1591 : 
; 1592 :     unsigned __int64 tickStart = SysTick;

  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 1593 : 
; 1594 :     char szLastError[1024] = {0};
; 1595 :     DWORD dwLastError = 0;
; 1596 : 
; 1597 :     glpi = (LPFN_GLPI) GetProcAddress(GetModuleHandle("kernel32"),"GetLogicalProcessorInformation");

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@KHGALBC@GetLogicalProcessorInformation?$AA@
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_08PNLNEKOB@kernel32?$AA@
  00065	89 44 24 38	 mov	 DWORD PTR _tickStart$[esp+1096], eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  0006f	50		 push	 eax
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00076	8b f0		 mov	 esi, eax

; 1598 :     if (NULL == glpi) 

  00078	85 f6		 test	 esi, esi
  0007a	75 39		 jne	 SHORT $LN24@SystemLogi

; 1599 :     {
; 1600 :         Log(LOG_DEBUG,__LINE__,"<< SysLogProcInfo, Out, Unsupp GetLogicalProcessorInformation");

  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@CNICBAHJ@?$DM?$DM?5SysLogProcInfo?0?5Out?0?5Unsupp?5G@
  00081	68 40 06 00 00	 push	 1600			; 00000640H
  00086	6a 10		 push	 16			; 00000010H
  00088	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1601 :         _endthreadex(ERROR_NOT_SUPPORTED);

  0008d	6a 32		 push	 50			; 00000032H
  0008f	e8 00 00 00 00	 call	 __endthreadex
  00094	83 c4 10	 add	 esp, 16			; 00000010H

; 1602 :         return ERROR_NOT_SUPPORTED;

  00097	8d 47 32	 lea	 eax, DWORD PTR [edi+50]

; 1704 :     return 0;
; 1705 : }

  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b 8c 24 30 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1076]
  000a4	33 cc		 xor	 ecx, esp
  000a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
$LL44@SystemLogi:

; 1602 :         return ERROR_NOT_SUPPORTED;

  000b1	8b 5c 24 14	 mov	 ebx, DWORD PTR _processorCoreCount$[esp+1088]
$LN24@SystemLogi:

; 1603 :     }
; 1604 : 
; 1605 :     while (!done)
; 1606 :     {
; 1607 :         DWORD rc = glpi(buffer, &returnLength);

  000b5	8d 44 24 18	 lea	 eax, DWORD PTR _returnLength$[esp+1088]
  000b9	50		 push	 eax
  000ba	57		 push	 edi
  000bb	ff d6		 call	 esi

; 1608 : 
; 1609 :         if (FALSE == rc) 

  000bd	85 c0		 test	 eax, eax
  000bf	0f 85 87 00 00
	00		 jne	 $LN36@SystemLogi

; 1610 :         {
; 1611 :             if ((dwLastError = GetLastError()) == ERROR_INSUFFICIENT_BUFFER) 

  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000cb	8b d8		 mov	 ebx, eax
  000cd	83 fb 7a	 cmp	 ebx, 122		; 0000007aH
  000d0	75 39		 jne	 SHORT $LN21@SystemLogi

; 1612 :             {
; 1613 :                 if (buffer) 

  000d2	85 ff		 test	 edi, edi
  000d4	74 09		 je	 SHORT $LN20@SystemLogi

; 1614 :                     free(buffer);

  000d6	57		 push	 edi
  000d7	e8 00 00 00 00	 call	 _free
  000dc	83 c4 04	 add	 esp, 4
$LN20@SystemLogi:

; 1615 : 
; 1616 :                 buffer = (PSYSTEM_LOGICAL_PROCESSOR_INFORMATION)malloc(returnLength);

  000df	8b 4c 24 18	 mov	 ecx, DWORD PTR _returnLength$[esp+1088]
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 _malloc
  000e9	8b f8		 mov	 edi, eax
  000eb	83 c4 04	 add	 esp, 4

; 1617 :                 if (NULL == buffer) 

  000ee	85 ff		 test	 edi, edi
  000f0	75 bf		 jne	 SHORT $LL44@SystemLogi

; 1618 :                 {
; 1619 :                     Log(LOG_DEBUG,__LINE__,"-- SysLogProcInfo, Allocation failure");

  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@LHEIAGGO@?9?9?5SysLogProcInfo?0?5Allocation?5fa@
  000f7	68 53 06 00 00	 push	 1619			; 00000653H
  000fc	6a 10		 push	 16			; 00000010H
  000fe	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00103	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1620 :                     break;

  00106	e9 66 01 00 00	 jmp	 $LN16@SystemLogi
$LN21@SystemLogi:

; 1621 :                 }
; 1622 :             } 
; 1623 :             else 
; 1624 :             {
; 1625 :                 char szLastError[1024] = {0};

  0010b	68 ff 03 00 00	 push	 1023			; 000003ffH
  00110	8d 54 24 3d	 lea	 edx, DWORD PTR _szLastError$145218[esp+1093]
  00114	6a 00		 push	 0
  00116	52		 push	 edx
  00117	c6 44 24 44 00	 mov	 BYTE PTR _szLastError$145218[esp+1100], 0
  0011c	e8 00 00 00 00	 call	 _memset

; 1626 :                 GetLastErrorMessage(dwLastError,szLastError,sizeof(szLastError));

  00121	68 00 04 00 00	 push	 1024			; 00000400H
  00126	8d 74 24 48	 lea	 esi, DWORD PTR _szLastError$145218[esp+1104]
  0012a	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1627 :                 Log(LOG_DEBUG,__LINE__,"-- SysLogProcInfo, GLPI Error %u, %s",dwLastError,szLastError);

  0012f	8b c6		 mov	 eax, esi
  00131	50		 push	 eax
  00132	53		 push	 ebx
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@KLILJGPG@?9?9?5SysLogProcInfo?0?5GLPI?5Error?5?$CFu@
  00138	68 5b 06 00 00	 push	 1627			; 0000065bH
  0013d	6a 10		 push	 16			; 00000010H
  0013f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00144	83 c4 24	 add	 esp, 36			; 00000024H

; 1628 :                 break;
; 1629 :             }
; 1630 :         } 
; 1631 :         else
; 1632 :         {
; 1633 :             done = TRUE;
; 1634 :         }
; 1635 :     }
; 1636 : 
; 1637 :     if(done)

  00147	e9 25 01 00 00	 jmp	 $LN16@SystemLogi
$LN36@SystemLogi:

; 1638 :     {
; 1639 :         ptr = buffer;
; 1640 : 
; 1641 :         if(ptr)

  0014c	85 ff		 test	 edi, edi
  0014e	0f 84 8c 00 00
	00		 je	 $LN13@SystemLogi

; 1642 :         {
; 1643 :             while (byteOffset + sizeof(SYSTEM_LOGICAL_PROCESSOR_INFORMATION) <= returnLength) 

  00154	83 7c 24 18 18	 cmp	 DWORD PTR _returnLength$[esp+1088], 24 ; 00000018H
  00159	0f 82 81 00 00
	00		 jb	 $LN13@SystemLogi
  0015f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00164	2b c7		 sub	 eax, edi
  00166	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  00169	89 44 24 14	 mov	 DWORD PTR tv373[esp+1088], eax
$LN14@SystemLogi:

; 1644 :             {
; 1645 :                 switch (ptr->Relationship) 

  0016d	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  00170	83 f8 03	 cmp	 eax, 3
  00173	77 47		 ja	 SHORT $LN1@SystemLogi
  00175	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN46@SystemLogi[eax*4]
$LN10@SystemLogi:

; 1646 :                 {
; 1647 :                 case RelationNumaNode:
; 1648 :                     // Non-NUMA systems report a single record of this type.
; 1649 :                     numaNodeCount++;

  0017c	ff 44 24 2c	 inc	 DWORD PTR _numaNodeCount$[esp+1088]

; 1650 :                     break;

  00180	eb 4f		 jmp	 SHORT $LN11@SystemLogi
$LN9@SystemLogi:

; 1651 : 
; 1652 :                 case RelationProcessorCore:
; 1653 :                     processorCoreCount++;
; 1654 : 
; 1655 :                     // A hyperthreaded core supplies more than one logical processor.
; 1656 :                     logicalProcessorCount += CountSetBits(ptr->ProcessorMask);

  00182	8b 56 f8	 mov	 edx, DWORD PTR [esi-8]
  00185	43		 inc	 ebx
  00186	e8 00 00 00 00	 call	 ?CountSetBits@@YAKK@Z	; CountSetBits
  0018b	01 44 24 24	 add	 DWORD PTR _logicalProcessorCount$[esp+1088], eax

; 1657 :                     break;

  0018f	eb 40		 jmp	 SHORT $LN11@SystemLogi
$LN8@SystemLogi:

; 1658 : 
; 1659 :                 case RelationCache:
; 1660 :                     // Cache data is in ptr->Cache, one CACHE_DESCRIPTOR structure for each cache. 
; 1661 :                     Cache = &ptr->Cache;
; 1662 :                     if (Cache->Level == 1)

  00191	8a 06		 mov	 al, BYTE PTR [esi]
  00193	b9 01 00 00 00	 mov	 ecx, 1
  00198	3a c1		 cmp	 al, cl
  0019a	75 06		 jne	 SHORT $LN7@SystemLogi

; 1663 :                     {
; 1664 :                         processorL1CacheCount++;

  0019c	01 4c 24 10	 add	 DWORD PTR _processorL1CacheCount$[esp+1088], ecx
  001a0	eb 2f		 jmp	 SHORT $LN11@SystemLogi
$LN7@SystemLogi:

; 1665 :                     }
; 1666 :                     else if (Cache->Level == 2)

  001a2	3c 02		 cmp	 al, 2
  001a4	75 06		 jne	 SHORT $LN5@SystemLogi

; 1667 :                     {
; 1668 :                         processorL2CacheCount++;

  001a6	01 4c 24 28	 add	 DWORD PTR _processorL2CacheCount$[esp+1088], ecx
  001aa	eb 25		 jmp	 SHORT $LN11@SystemLogi
$LN5@SystemLogi:

; 1669 :                     }
; 1670 :                     else if (Cache->Level == 3)

  001ac	3c 03		 cmp	 al, 3
  001ae	75 21		 jne	 SHORT $LN11@SystemLogi

; 1671 :                     {
; 1672 :                         processorL3CacheCount++;

  001b0	ff 44 24 1c	 inc	 DWORD PTR _processorL3CacheCount$[esp+1088]

; 1673 :                     }
; 1674 :                     break;

  001b4	eb 1b		 jmp	 SHORT $LN11@SystemLogi
$LN2@SystemLogi:

; 1675 : 
; 1676 :                 case RelationProcessorPackage:
; 1677 :                     // Logical processors share a physical package.
; 1678 :                     processorPackageCount++;

  001b6	ff 44 24 20	 inc	 DWORD PTR _processorPackageCount$[esp+1088]

; 1679 :                     break;

  001ba	eb 15		 jmp	 SHORT $LN11@SystemLogi
$LN1@SystemLogi:

; 1680 : 
; 1681 :                 default:
; 1682 :                     Log(LOG_DEBUG,__LINE__,"-- SysLogProcInfo, Unsupp LOGICAL_PROCESSOR_RELATIONSHIP value %d",ptr->Relationship);

  001bc	50		 push	 eax
  001bd	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@BGADHKMF@?9?9?5SysLogProcInfo?0?5Unsupp?5LOGICA@
  001c2	68 92 06 00 00	 push	 1682			; 00000692H
  001c7	6a 10		 push	 16			; 00000010H
  001c9	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001ce	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@SystemLogi:
  001d1	8b 4c 24 14	 mov	 ecx, DWORD PTR tv373[esp+1088]

; 1683 :                     break;
; 1684 :                 }
; 1685 :                 byteOffset += sizeof(SYSTEM_LOGICAL_PROCESSOR_INFORMATION);
; 1686 :                 ptr++;

  001d5	83 c6 18	 add	 esi, 24			; 00000018H
  001d8	03 ce		 add	 ecx, esi
  001da	3b 4c 24 18	 cmp	 ecx, DWORD PTR _returnLength$[esp+1088]
  001de	76 8d		 jbe	 SHORT $LN14@SystemLogi
$LN13@SystemLogi:

; 1687 :             }
; 1688 :         }
; 1689 : 
; 1690 :         Log(LOG_HEADER,__LINE__,"Logical Processor(s) Information");

  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@ECHENMHH@Logical?5Processor?$CIs?$CJ?5Information@
  001e5	68 9a 06 00 00	 push	 1690			; 0000069aH
  001ea	6a 02		 push	 2
  001ec	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1691 :         Log(LOG_MESSAGE,__LINE__,"Number of NUMA nodes: %d",numaNodeCount);

  001f1	8b 54 24 38	 mov	 edx, DWORD PTR _numaNodeCount$[esp+1100]
  001f5	52		 push	 edx
  001f6	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CBGNJNLO@Number?5of?5NUMA?5nodes?3?5?$CFd?$AA@
  001fb	68 9b 06 00 00	 push	 1691			; 0000069bH
  00200	6a 01		 push	 1
  00202	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1692 :         Log(LOG_MESSAGE,__LINE__,"Number of physical processor packages: %d",processorPackageCount);

  00207	8b 44 24 3c	 mov	 eax, DWORD PTR _processorPackageCount$[esp+1116]
  0020b	50		 push	 eax
  0020c	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@CIFFOGGE@Number?5of?5physical?5processor?5pac@
  00211	68 9c 06 00 00	 push	 1692			; 0000069cH
  00216	6a 01		 push	 1
  00218	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1693 :         Log(LOG_MESSAGE,__LINE__,"Number of processor cores: %d",processorCoreCount);

  0021d	53		 push	 ebx
  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@JLJNFPPO@Number?5of?5processor?5cores?3?5?$CFd?$AA@
  00223	68 9d 06 00 00	 push	 1693			; 0000069dH
  00228	6a 01		 push	 1
  0022a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1694 :         Log(LOG_MESSAGE,__LINE__,"Number of logical processors: %d",logicalProcessorCount);

  0022f	8b 4c 24 60	 mov	 ecx, DWORD PTR _logicalProcessorCount$[esp+1148]
  00233	51		 push	 ecx
  00234	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NEBFNBCF@Number?5of?5logical?5processors?3?5?$CFd@
  00239	68 9e 06 00 00	 push	 1694			; 0000069eH
  0023e	6a 01		 push	 1
  00240	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1695 :         Log(LOG_MESSAGE,__LINE__,"Number of processor L1/L2/L3 caches: %d/%d/%d",processorL1CacheCount,processorL2CacheCount,processorL3CacheCount);

  00245	8b 54 24 68	 mov	 edx, DWORD PTR _processorL3CacheCount$[esp+1164]
  00249	8b 44 24 74	 mov	 eax, DWORD PTR _processorL2CacheCount$[esp+1164]
  0024d	8b 4c 24 5c	 mov	 ecx, DWORD PTR _processorL1CacheCount$[esp+1164]
  00251	83 c4 4c	 add	 esp, 76			; 0000004cH
  00254	52		 push	 edx
  00255	50		 push	 eax
  00256	51		 push	 ecx
  00257	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@JLHKKOJE@Number?5of?5processor?5L1?1L2?1L3?5cac@
  0025c	68 9f 06 00 00	 push	 1695			; 0000069fH
  00261	6a 01		 push	 1
  00263	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1696 :         
; 1697 :         free(buffer);

  00268	57		 push	 edi
  00269	e8 00 00 00 00	 call	 _free
  0026e	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN16@SystemLogi:

; 1698 :     }
; 1699 : 
; 1700 :     LogElapsedTime(__LINE__,tickStart);

  00271	8b 4c 24 30	 mov	 ecx, DWORD PTR _tickStart$[esp+1088]
  00275	8d 54 24 14	 lea	 edx, DWORD PTR _seconds$192253[esp+1088]
  00279	52		 push	 edx
  0027a	8d 44 24 14	 lea	 eax, DWORD PTR _timeElapsed$192252[esp+1092]
  0027e	50		 push	 eax
  0027f	33 c0		 xor	 eax, eax
  00281	50		 push	 eax
  00282	51		 push	 ecx
  00283	8d 74 24 40	 lea	 esi, DWORD PTR _tickEnd$192251[esp+1104]
  00287	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  0028c	d9 44 24 20	 fld	 DWORD PTR _timeElapsed$192252[esp+1104]
  00290	8b 4c 24 24	 mov	 ecx, DWORD PTR _seconds$192253[esp+1104]
  00294	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  00298	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  0029d	f7 e1		 mul	 ecx
  0029f	8b f2		 mov	 esi, edx
  002a1	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  002a6	f7 e1		 mul	 ecx
  002a8	c1 ea 05	 shr	 edx, 5
  002ab	8b c2		 mov	 eax, edx
  002ad	c1 e0 04	 shl	 eax, 4
  002b0	2b c2		 sub	 eax, edx
  002b2	03 c0		 add	 eax, eax
  002b4	03 c0		 add	 eax, eax
  002b6	8b d1		 mov	 edx, ecx
  002b8	2b d0		 sub	 edx, eax
  002ba	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  002bd	8b c6		 mov	 eax, esi
  002bf	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  002c5	83 c4 08	 add	 esp, 8
  002c8	52		 push	 edx
  002c9	2b c8		 sub	 ecx, eax
  002cb	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  002d0	f7 e1		 mul	 ecx
  002d2	c1 ea 05	 shr	 edx, 5
  002d5	52		 push	 edx
  002d6	56		 push	 esi
  002d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  002dc	68 a4 06 00 00	 push	 1700			; 000006a4H
  002e1	6a 01		 push	 1
  002e3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1701 : 
; 1702 :     Log(LOG_DEBUG,__LINE__,"<< SysLogProcInfo");

  002e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BKCMKMCI@?$DM?$DM?5SysLogProcInfo?$AA@
  002ed	68 a6 06 00 00	 push	 1702			; 000006a6H
  002f2	6a 10		 push	 16			; 00000010H
  002f4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1703 :     _endthreadex(0);

  002f9	6a 00		 push	 0
  002fb	e8 00 00 00 00	 call	 __endthreadex

; 1704 :     return 0;
; 1705 : }

  00300	8b 8c 24 6c 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1136]
  00307	83 c4 30	 add	 esp, 48			; 00000030H
  0030a	5f		 pop	 edi
  0030b	5e		 pop	 esi
  0030c	5b		 pop	 ebx
  0030d	33 cc		 xor	 ecx, esp
  0030f	33 c0		 xor	 eax, eax
  00311	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00316	8b e5		 mov	 esp, ebp
  00318	5d		 pop	 ebp
  00319	c2 04 00	 ret	 4
$LN46@SystemLogi:
  0031c	00 00 00 00	 DD	 $LN9@SystemLogi
  00320	00 00 00 00	 DD	 $LN10@SystemLogi
  00324	00 00 00 00	 DD	 $LN8@SystemLogi
  00328	00 00 00 00	 DD	 $LN2@SystemLogi
?SystemLogicalProcessorInforamtion@@YGIPAX@Z ENDP	; SystemLogicalProcessorInforamtion
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SystemDirs@@YGIPAX@Z				; SystemDirs
; Function compile flags: /Ogtpy
;	COMDAT ?SystemDirs@@YGIPAX@Z
_TEXT	SEGMENT
_timeElapsed$192278 = -10024				; size = 4
_seconds$192279 = -10020				; size = 4
_tickEnd$192277 = -10016				; size = 8
_temp$ = -10008						; size = 10000
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?SystemDirs@@YGIPAX@Z PROC				; SystemDirs, COMDAT

; 1521 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	b8 38 27 00 00	 mov	 eax, 10040		; 00002738H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	89 84 24 34 27
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+10040], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi

; 1522 :     Log(LOG_DEBUG,__LINE__,">> SysDirs");

  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0L@INHKNAJI@?$DO?$DO?5SysDirs?$AA@
  00025	68 f2 05 00 00	 push	 1522			; 000005f2H
  0002a	6a 10		 push	 16			; 00000010H
  0002c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1523 : 
; 1524 :     char temp[10000];
; 1525 : 
; 1526 :     unsigned __int64 tickStart = SysTick;

  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 1527 : 
; 1528 :     Log(LOG_HEADER,__LINE__,"System Directories");

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OAHOLNHD@System?5Directories?$AA@
  0003f	68 f8 05 00 00	 push	 1528			; 000005f8H
  00044	6a 02		 push	 2
  00046	8b f0		 mov	 esi, eax
  00048	33 ff		 xor	 edi, edi
  0004a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1529 : 
; 1530 :     memset(temp,0x00,sizeof(temp));

  0004f	68 10 27 00 00	 push	 10000			; 00002710H
  00054	8d 44 24 38	 lea	 eax, DWORD PTR _temp$[esp+10064]
  00058	57		 push	 edi
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 _memset
  0005f	83 c4 18	 add	 esp, 24			; 00000018H

; 1531 :     GetSystemDirectory(temp,sizeof(temp));

  00062	68 10 27 00 00	 push	 10000			; 00002710H
  00067	8d 4c 24 2c	 lea	 ecx, DWORD PTR _temp$[esp+10052]
  0006b	51		 push	 ecx
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemDirectoryA@8

; 1532 :     Log(LOG_MESSAGE,__LINE__,"SysDir %s",temp);

  00072	8d 54 24 28	 lea	 edx, DWORD PTR _temp$[esp+10048]
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_09LGICPEGI@SysDir?5?$CFs?$AA@
  0007c	68 fc 05 00 00	 push	 1532			; 000005fcH
  00081	6a 01		 push	 1
  00083	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1533 : 
; 1534 :     memset(temp,0x00,sizeof(temp));

  00088	68 10 27 00 00	 push	 10000			; 00002710H
  0008d	8d 44 24 3c	 lea	 eax, DWORD PTR _temp$[esp+10068]
  00091	57		 push	 edi
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 _memset
  00098	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1535 :     GetTempPath(sizeof(temp),temp);

  0009b	8d 4c 24 28	 lea	 ecx, DWORD PTR _temp$[esp+10048]
  0009f	51		 push	 ecx
  000a0	68 10 27 00 00	 push	 10000			; 00002710H
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTempPathA@8

; 1536 :     Log(LOG_MESSAGE,__LINE__,"TempPath %s",temp);

  000ab	8d 54 24 28	 lea	 edx, DWORD PTR _temp$[esp+10048]
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JFNOOIEA@TempPath?5?$CFs?$AA@
  000b5	68 00 06 00 00	 push	 1536			; 00000600H
  000ba	6a 01		 push	 1
  000bc	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1537 : 
; 1538 :     memset(temp,0x00,sizeof(temp));

  000c1	68 10 27 00 00	 push	 10000			; 00002710H
  000c6	8d 44 24 3c	 lea	 eax, DWORD PTR _temp$[esp+10068]
  000ca	57		 push	 edi
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 _memset
  000d1	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1539 :     GetWindowsDirectory(temp,sizeof(temp));

  000d4	68 10 27 00 00	 push	 10000			; 00002710H
  000d9	8d 4c 24 2c	 lea	 ecx, DWORD PTR _temp$[esp+10052]
  000dd	51		 push	 ecx
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowsDirectoryA@8

; 1540 :     Log(LOG_MESSAGE,__LINE__,"WinDir %s",temp);

  000e4	8d 54 24 28	 lea	 edx, DWORD PTR _temp$[esp+10048]
  000e8	52		 push	 edx
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_09PEBHDCJJ@WinDir?5?$CFs?$AA@
  000ee	68 04 06 00 00	 push	 1540			; 00000604H
  000f3	6a 01		 push	 1
  000f5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1541 : 
; 1542 :     memset(temp,0x00,sizeof(temp));

  000fa	68 10 27 00 00	 push	 10000			; 00002710H
  000ff	8d 44 24 3c	 lea	 eax, DWORD PTR _temp$[esp+10068]
  00103	57		 push	 edi
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 _memset
  0010a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1543 :     GetSystemWindowsDirectory(temp,sizeof(temp));

  0010d	68 10 27 00 00	 push	 10000			; 00002710H
  00112	8d 4c 24 2c	 lea	 ecx, DWORD PTR _temp$[esp+10052]
  00116	51		 push	 ecx
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemWindowsDirectoryA@8

; 1544 :     Log(LOG_MESSAGE,__LINE__,"WinSysDir %s",temp);

  0011d	8d 54 24 28	 lea	 edx, DWORD PTR _temp$[esp+10048]
  00121	52		 push	 edx
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JJNMAABC@WinSysDir?5?$CFs?$AA@
  00127	68 08 06 00 00	 push	 1544			; 00000608H
  0012c	6a 01		 push	 1
  0012e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1545 : 
; 1546 :     LogElapsedTime(__LINE__,tickStart);

  00133	8d 44 24 2c	 lea	 eax, DWORD PTR _seconds$192279[esp+10064]
  00137	50		 push	 eax
  00138	8d 4c 24 2c	 lea	 ecx, DWORD PTR _timeElapsed$192278[esp+10068]
  0013c	51		 push	 ecx
  0013d	57		 push	 edi
  0013e	56		 push	 esi
  0013f	8d 74 24 40	 lea	 esi, DWORD PTR _tickEnd$192277[esp+10080]
  00143	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  00148	d9 44 24 38	 fld	 DWORD PTR _timeElapsed$192278[esp+10080]
  0014c	8b 4c 24 3c	 mov	 ecx, DWORD PTR _seconds$192279[esp+10080]
  00150	dd 5c 24 18	 fstp	 QWORD PTR [esp+24]
  00154	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  00159	f7 e1		 mul	 ecx
  0015b	8b f2		 mov	 esi, edx
  0015d	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00162	f7 e1		 mul	 ecx
  00164	c1 ea 05	 shr	 edx, 5
  00167	8b c2		 mov	 eax, edx
  00169	c1 e0 04	 shl	 eax, 4
  0016c	2b c2		 sub	 eax, edx
  0016e	03 c0		 add	 eax, eax
  00170	03 c0		 add	 eax, eax
  00172	8b d1		 mov	 edx, ecx
  00174	2b d0		 sub	 edx, eax
  00176	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  00179	8b c6		 mov	 eax, esi
  0017b	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  00181	83 c4 18	 add	 esp, 24			; 00000018H
  00184	52		 push	 edx
  00185	2b c8		 sub	 ecx, eax
  00187	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0018c	f7 e1		 mul	 ecx
  0018e	c1 ea 05	 shr	 edx, 5
  00191	52		 push	 edx
  00192	56		 push	 esi
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  00198	68 0a 06 00 00	 push	 1546			; 0000060aH
  0019d	6a 01		 push	 1
  0019f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1547 : 
; 1548 :     Log(LOG_DEBUG,__LINE__,"<< SysDirs");

  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NBODLJGE@?$DM?$DM?5SysDirs?$AA@
  001a9	68 0c 06 00 00	 push	 1548			; 0000060cH
  001ae	6a 10		 push	 16			; 00000010H
  001b0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1549 :     _endthreadex(0);

  001b5	57		 push	 edi
  001b6	e8 00 00 00 00	 call	 __endthreadex

; 1550 :     return 0;
; 1551 : }

  001bb	8b 8c 24 6c 27
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+10096]
  001c2	83 c4 30	 add	 esp, 48			; 00000030H
  001c5	5f		 pop	 edi
  001c6	5e		 pop	 esi
  001c7	33 cc		 xor	 ecx, esp
  001c9	33 c0		 xor	 eax, eax
  001cb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d0	8b e5		 mov	 esp, ebp
  001d2	5d		 pop	 ebp
  001d3	c2 04 00	 ret	 4
?SystemDirs@@YGIPAX@Z ENDP				; SystemDirs
_TEXT	ENDS
PUBLIC	?SystemTimes@@YGIPAX@Z				; SystemTimes
EXTRN	__aulldiv:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?SystemTimes@@YGIPAX@Z
_TEXT	SEGMENT
tv516 = -108						; size = 2
_timeElapsed$192288 = -108				; size = 4
_processorTime$145096 = -108				; size = 4
tv521 = -104						; size = 8
tv519 = -104						; size = 4
tv509 = -104						; size = 8
tv506 = -104						; size = 8
_seconds$192289 = -104					; size = 4
_nCtr$ = -96						; size = 8
_nFreq$ = -88						; size = 8
_KernelTime$ = -80					; size = 8
_UserTime$ = -72					; size = 8
_IdleTime$ = -64					; size = 8
_tickEnd$192287 = -56					; size = 8
_tKernelTime$ = -48					; size = 16
_tUserTime$ = -32					; size = 16
_tIdleTime$ = -16					; size = 16
_lpData$ = 8						; size = 4
?SystemTimes@@YGIPAX@Z PROC				; SystemTimes, COMDAT

; 1386 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	83 ec 70	 sub	 esp, 112		; 00000070H
  00009	53		 push	 ebx
  0000a	55		 push	 ebp
  0000b	56		 push	 esi
  0000c	57		 push	 edi

; 1387 :     Log(LOG_DEBUG,__LINE__,">> SysTimes");

  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OJEMNBAD@?$DO?$DO?5SysTimes?$AA@
  00012	68 6b 05 00 00	 push	 1387			; 0000056bH
  00017	6a 10		 push	 16			; 00000010H
  00019	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1388 : 
; 1389 :     FILETIME ExitTime = {0};
; 1390 :     FILETIME KernelTime = {0};
; 1391 :     FILETIME UserTime = {0};
; 1392 :     FILETIME IdleTime = {0};
; 1393 :     SYSTEMTIME tKernelTime = {0};

  0001e	33 c0		 xor	 eax, eax
  00020	33 ff		 xor	 edi, edi

; 1394 :     SYSTEMTIME tUserTime = {0};

  00022	33 c9		 xor	 ecx, ecx

; 1395 :     SYSTEMTIME tIdleTime = {0};

  00024	33 d2		 xor	 edx, edx
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
  00029	89 7c 24 30	 mov	 DWORD PTR _KernelTime$[esp+128], edi
  0002d	89 7c 24 34	 mov	 DWORD PTR _KernelTime$[esp+132], edi
  00031	89 7c 24 38	 mov	 DWORD PTR _UserTime$[esp+128], edi
  00035	89 7c 24 3c	 mov	 DWORD PTR _UserTime$[esp+132], edi
  00039	89 7c 24 40	 mov	 DWORD PTR _IdleTime$[esp+128], edi
  0003d	89 7c 24 44	 mov	 DWORD PTR _IdleTime$[esp+132], edi
  00041	66 89 44 24 50	 mov	 WORD PTR _tKernelTime$[esp+128], ax
  00046	89 44 24 52	 mov	 DWORD PTR _tKernelTime$[esp+130], eax
  0004a	89 44 24 56	 mov	 DWORD PTR _tKernelTime$[esp+134], eax
  0004e	89 44 24 5a	 mov	 DWORD PTR _tKernelTime$[esp+138], eax
  00052	66 89 44 24 5e	 mov	 WORD PTR _tKernelTime$[esp+142], ax
  00057	66 89 4c 24 60	 mov	 WORD PTR _tUserTime$[esp+128], cx
  0005c	89 44 24 62	 mov	 DWORD PTR _tUserTime$[esp+130], eax
  00060	89 44 24 66	 mov	 DWORD PTR _tUserTime$[esp+134], eax
  00064	89 44 24 6a	 mov	 DWORD PTR _tUserTime$[esp+138], eax
  00068	66 89 44 24 6e	 mov	 WORD PTR _tUserTime$[esp+142], ax
  0006d	66 89 54 24 70	 mov	 WORD PTR _tIdleTime$[esp+128], dx
  00072	89 44 24 72	 mov	 DWORD PTR _tIdleTime$[esp+130], eax
  00076	89 44 24 76	 mov	 DWORD PTR _tIdleTime$[esp+134], eax
  0007a	89 44 24 7a	 mov	 DWORD PTR _tIdleTime$[esp+138], eax
  0007e	66 89 44 24 7e	 mov	 WORD PTR _tIdleTime$[esp+142], ax

; 1396 :     unsigned long seconds = 0;
; 1397 : 
; 1398 :     unsigned __int64 tickStart = SysTick;

  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 1399 : 
; 1400 :     Log(LOG_HEADER,__LINE__,"System Times");

  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HHJCFDFH@System?5Times?$AA@
  0008e	68 78 05 00 00	 push	 1400			; 00000578H
  00093	6a 02		 push	 2
  00095	8b e8		 mov	 ebp, eax
  00097	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1401 : 
; 1402 :     //get system times
; 1403 :     GetSystemTimes(&IdleTime,&KernelTime,&UserTime);

  0009f	8d 44 24 38	 lea	 eax, DWORD PTR _UserTime$[esp+128]
  000a3	50		 push	 eax
  000a4	8d 4c 24 34	 lea	 ecx, DWORD PTR _KernelTime$[esp+132]
  000a8	51		 push	 ecx
  000a9	8d 54 24 48	 lea	 edx, DWORD PTR _IdleTime$[esp+136]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 _GetSystemTimes@12

; 1404 : 
; 1405 :     FileTimeToSystemTime(&KernelTime,&tKernelTime);

  000b3	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__FileTimeToSystemTime@8
  000b9	8d 44 24 50	 lea	 eax, DWORD PTR _tKernelTime$[esp+128]
  000bd	50		 push	 eax
  000be	8d 4c 24 34	 lea	 ecx, DWORD PTR _KernelTime$[esp+132]
  000c2	51		 push	 ecx
  000c3	ff d3		 call	 ebx

; 1406 :     seconds = (long)tKernelTime.wSecond + ((long)tKernelTime.wMinute*60) + ((long)tKernelTime.wHour*3600);

  000c5	0f b7 44 24 58	 movzx	 eax, WORD PTR _tKernelTime$[esp+136]
  000ca	8b d0		 mov	 edx, eax
  000cc	c1 e2 04	 shl	 edx, 4
  000cf	2b d0		 sub	 edx, eax
  000d1	0f b7 44 24 5a	 movzx	 eax, WORD PTR _tKernelTime$[esp+138]
  000d6	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  000d9	0f b7 54 24 5c	 movzx	 edx, WORD PTR _tKernelTime$[esp+140]
  000de	8b c8		 mov	 ecx, eax
  000e0	c1 e1 04	 shl	 ecx, 4
  000e3	2b c8		 sub	 ecx, eax
  000e5	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]

; 1407 :     Log(LOG_MESSAGE,__LINE__,"Kernel time: %02d:%02d:%02d (%u s).",seconds/3600,(seconds % 3600)/60,seconds % 60,seconds);

  000e8	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  000ed	f7 e1		 mul	 ecx
  000ef	8b f2		 mov	 esi, edx
  000f1	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  000f6	f7 e1		 mul	 ecx
  000f8	c1 ea 05	 shr	 edx, 5
  000fb	8b c2		 mov	 eax, edx
  000fd	c1 e0 04	 shl	 eax, 4
  00100	2b c2		 sub	 eax, edx
  00102	03 c0		 add	 eax, eax
  00104	03 c0		 add	 eax, eax
  00106	8b d1		 mov	 edx, ecx
  00108	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  0010b	51		 push	 ecx
  0010c	2b d0		 sub	 edx, eax
  0010e	52		 push	 edx
  0010f	8b c6		 mov	 eax, esi
  00111	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  00117	2b c8		 sub	 ecx, eax
  00119	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0011e	f7 e1		 mul	 ecx
  00120	c1 ea 05	 shr	 edx, 5
  00123	52		 push	 edx
  00124	56		 push	 esi
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@PJKLEAEE@Kernel?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5@
  0012a	68 7f 05 00 00	 push	 1407			; 0000057fH
  0012f	6a 01		 push	 1
  00131	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00136	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1408 : 
; 1409 :     FileTimeToSystemTime(&UserTime,&tUserTime);

  00139	8d 4c 24 60	 lea	 ecx, DWORD PTR _tUserTime$[esp+128]
  0013d	51		 push	 ecx
  0013e	8d 54 24 3c	 lea	 edx, DWORD PTR _UserTime$[esp+132]
  00142	52		 push	 edx
  00143	ff d3		 call	 ebx

; 1410 :     seconds = (long)tUserTime.wSecond + ((long)tUserTime.wMinute*60) + ((long)tUserTime.wHour*3600);

  00145	0f b7 44 24 68	 movzx	 eax, WORD PTR _tUserTime$[esp+136]
  0014a	0f b7 54 24 6a	 movzx	 edx, WORD PTR _tUserTime$[esp+138]
  0014f	8b c8		 mov	 ecx, eax
  00151	c1 e1 04	 shl	 ecx, 4
  00154	2b c8		 sub	 ecx, eax
  00156	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00159	0f b7 54 24 6c	 movzx	 edx, WORD PTR _tUserTime$[esp+140]
  0015e	8b c8		 mov	 ecx, eax
  00160	c1 e1 04	 shl	 ecx, 4
  00163	2b c8		 sub	 ecx, eax
  00165	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]

; 1411 :     Log(LOG_MESSAGE,__LINE__,"User time: %02d:%02d:%02d (%u s).",seconds/3600,(seconds % 3600)/60,seconds % 60,seconds);

  00168	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  0016d	f7 e1		 mul	 ecx
  0016f	8b f2		 mov	 esi, edx
  00171	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00176	f7 e1		 mul	 ecx
  00178	c1 ea 05	 shr	 edx, 5
  0017b	8b c2		 mov	 eax, edx
  0017d	c1 e0 04	 shl	 eax, 4
  00180	2b c2		 sub	 eax, edx
  00182	03 c0		 add	 eax, eax
  00184	03 c0		 add	 eax, eax
  00186	8b d1		 mov	 edx, ecx
  00188	2b d0		 sub	 edx, eax
  0018a	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  0018d	8b c6		 mov	 eax, esi
  0018f	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  00195	51		 push	 ecx
  00196	52		 push	 edx
  00197	2b c8		 sub	 ecx, eax
  00199	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0019e	f7 e1		 mul	 ecx
  001a0	c1 ea 05	 shr	 edx, 5
  001a3	52		 push	 edx
  001a4	56		 push	 esi
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JKEHGGOG@User?5time?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ@
  001aa	68 83 05 00 00	 push	 1411			; 00000583H
  001af	6a 01		 push	 1
  001b1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001b6	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1412 : 
; 1413 :     FileTimeToSystemTime(&IdleTime,&tIdleTime);

  001b9	8d 4c 24 70	 lea	 ecx, DWORD PTR _tIdleTime$[esp+128]
  001bd	51		 push	 ecx
  001be	8d 54 24 44	 lea	 edx, DWORD PTR _IdleTime$[esp+132]
  001c2	52		 push	 edx
  001c3	ff d3		 call	 ebx

; 1414 :     seconds = (long)tIdleTime.wSecond + ((long)tIdleTime.wMinute*60) + ((long)tIdleTime.wHour*3600);

  001c5	0f b7 44 24 78	 movzx	 eax, WORD PTR _tIdleTime$[esp+136]
  001ca	0f b7 54 24 7a	 movzx	 edx, WORD PTR _tIdleTime$[esp+138]
  001cf	8b c8		 mov	 ecx, eax
  001d1	c1 e1 04	 shl	 ecx, 4
  001d4	2b c8		 sub	 ecx, eax
  001d6	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  001d9	0f b7 54 24 7c	 movzx	 edx, WORD PTR _tIdleTime$[esp+140]
  001de	8b c8		 mov	 ecx, eax
  001e0	c1 e1 04	 shl	 ecx, 4
  001e3	2b c8		 sub	 ecx, eax
  001e5	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]

; 1415 :     Log(LOG_MESSAGE,__LINE__,"Idle: %02d:%02d:%02d (%u s).",seconds/3600,(seconds % 3600)/60,seconds % 60,seconds);

  001e8	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  001ed	f7 e1		 mul	 ecx
  001ef	8b f2		 mov	 esi, edx
  001f1	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  001f6	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  001f9	f7 e1		 mul	 ecx
  001fb	51		 push	 ecx
  001fc	c1 ea 05	 shr	 edx, 5
  001ff	8b c2		 mov	 eax, edx
  00201	c1 e0 04	 shl	 eax, 4
  00204	2b c2		 sub	 eax, edx
  00206	03 c0		 add	 eax, eax
  00208	03 c0		 add	 eax, eax
  0020a	8b d1		 mov	 edx, ecx
  0020c	2b d0		 sub	 edx, eax
  0020e	8b c6		 mov	 eax, esi
  00210	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  00216	52		 push	 edx
  00217	2b c8		 sub	 ecx, eax
  00219	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0021e	f7 e1		 mul	 ecx
  00220	c1 ea 05	 shr	 edx, 5
  00223	52		 push	 edx
  00224	56		 push	 esi
  00225	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@JFNEHINJ@Idle?3?5?$CF02d?3?$CF02d?3?$CF02d?5?$CI?$CFu?5s?$CJ?4?$AA@
  0022a	68 87 05 00 00	 push	 1415			; 00000587H
  0022f	6a 01		 push	 1
  00231	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00236	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1416 : 
; 1417 :     //processor counts/times
; 1418 :     //retrieve performance-counter frequency per second
; 1419 :     unsigned __int64 nCtr = 0, nFreq = 0;
; 1420 :     if(QueryPerformanceFrequency((LARGE_INTEGER *)&nFreq))

  00239	8d 4c 24 28	 lea	 ecx, DWORD PTR _nFreq$[esp+128]
  0023d	51		 push	 ecx
  0023e	89 7c 24 24	 mov	 DWORD PTR _nCtr$[esp+132], edi
  00242	89 7c 24 28	 mov	 DWORD PTR _nCtr$[esp+136], edi
  00246	89 7c 24 2c	 mov	 DWORD PTR _nFreq$[esp+132], edi
  0024a	89 7c 24 30	 mov	 DWORD PTR _nFreq$[esp+136], edi
  0024e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceFrequency@4
  00254	85 c0		 test	 eax, eax
  00256	0f 84 e5 00 00
	00		 je	 $LN1@SystemTime

; 1421 :     {
; 1422 :         //retrieve the current value of the performance counter
; 1423 :         QueryPerformanceCounter((LARGE_INTEGER *)&nCtr);

  0025c	8d 54 24 20	 lea	 edx, DWORD PTR _nCtr$[esp+128]
  00260	52		 push	 edx
  00261	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceCounter@4

; 1424 : 
; 1425 :         float processorTime = (float)(nCtr/nFreq);

  00267	8b 5c 24 2c	 mov	 ebx, DWORD PTR _nFreq$[esp+132]
  0026b	8b 44 24 28	 mov	 eax, DWORD PTR _nFreq$[esp+128]
  0026f	8b 4c 24 24	 mov	 ecx, DWORD PTR _nCtr$[esp+132]
  00273	8b 54 24 20	 mov	 edx, DWORD PTR _nCtr$[esp+128]
  00277	53		 push	 ebx
  00278	50		 push	 eax
  00279	51		 push	 ecx
  0027a	52		 push	 edx
  0027b	e8 00 00 00 00	 call	 __aulldiv
  00280	89 44 24 18	 mov	 DWORD PTR tv506[esp+128], eax
  00284	8b c2		 mov	 eax, edx
  00286	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  0028b	81 e2 ff ff ff
	7f		 and	 edx, 2147483647		; 7fffffffH
  00291	89 54 24 1c	 mov	 DWORD PTR tv506[esp+132], edx
  00295	df 6c 24 18	 fild	 QWORD PTR tv506[esp+128]
  00299	89 44 24 1c	 mov	 DWORD PTR tv509[esp+132], eax
  0029d	89 7c 24 18	 mov	 DWORD PTR tv509[esp+128], edi
  002a1	df 6c 24 18	 fild	 QWORD PTR tv509[esp+128]

; 1426 :         seconds = (unsigned long)(processorTime+0.5);
; 1427 :         Log(LOG_MESSAGE,__LINE__,"Processor: %I64u counts, %I64u counts/sec, %02d:%02d:%02d %f s",nCtr,nFreq,seconds/3600,(seconds % 3600)/60,seconds % 60,processorTime);

  002a5	83 ec 08	 sub	 esp, 8
  002a8	d9 e0		 fchs
  002aa	de c1		 faddp	 ST(1), ST(0)
  002ac	d9 5c 24 1c	 fstp	 DWORD PTR _processorTime$145096[esp+136]
  002b0	d9 44 24 1c	 fld	 DWORD PTR _processorTime$145096[esp+136]
  002b4	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3fe0000000000000
  002ba	d9 7c 24 1c	 fnstcw	 WORD PTR tv516[esp+136]
  002be	0f b7 44 24 1c	 movzx	 eax, WORD PTR tv516[esp+136]
  002c3	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  002c8	d8 c1		 fadd	 ST(0), ST(1)
  002ca	89 44 24 20	 mov	 DWORD PTR tv519[esp+136], eax
  002ce	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  002d3	d9 6c 24 20	 fldcw	 WORD PTR tv519[esp+136]
  002d7	df 7c 24 20	 fistp	 QWORD PTR tv521[esp+136]
  002db	8b 4c 24 20	 mov	 ecx, DWORD PTR tv521[esp+136]
  002df	f7 e1		 mul	 ecx
  002e1	d9 6c 24 1c	 fldcw	 WORD PTR tv516[esp+136]
  002e5	dd 1c 24	 fstp	 QWORD PTR [esp]
  002e8	8b f2		 mov	 esi, edx
  002ea	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  002ef	f7 e1		 mul	 ecx
  002f1	c1 ea 05	 shr	 edx, 5
  002f4	8b c2		 mov	 eax, edx
  002f6	c1 e0 04	 shl	 eax, 4
  002f9	2b c2		 sub	 eax, edx
  002fb	03 c0		 add	 eax, eax
  002fd	03 c0		 add	 eax, eax
  002ff	8b d1		 mov	 edx, ecx
  00301	2b d0		 sub	 edx, eax
  00303	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  00306	8b c6		 mov	 eax, esi
  00308	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  0030e	52		 push	 edx
  0030f	2b c8		 sub	 ecx, eax
  00311	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00316	f7 e1		 mul	 ecx
  00318	8b 4c 24 34	 mov	 ecx, DWORD PTR _nFreq$[esp+140]
  0031c	8b 44 24 2c	 mov	 eax, DWORD PTR _nCtr$[esp+140]
  00320	c1 ea 05	 shr	 edx, 5
  00323	52		 push	 edx
  00324	8b 54 24 34	 mov	 edx, DWORD PTR _nCtr$[esp+148]
  00328	56		 push	 esi
  00329	53		 push	 ebx
  0032a	51		 push	 ecx
  0032b	52		 push	 edx
  0032c	50		 push	 eax
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@OCMJGDEB@Processor?3?5?$CFI64u?5counts?0?5?$CFI64u?5c@
  00332	68 93 05 00 00	 push	 1427			; 00000593H
  00337	6a 01		 push	 1
  00339	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0033e	83 c4 30	 add	 esp, 48			; 00000030H
$LN1@SystemTime:

; 1428 :     }
; 1429 :     LogElapsedTime(__LINE__,tickStart);

  00341	8d 4c 24 18	 lea	 ecx, DWORD PTR _seconds$192289[esp+128]
  00345	51		 push	 ecx
  00346	8d 54 24 18	 lea	 edx, DWORD PTR _timeElapsed$192288[esp+132]
  0034a	52		 push	 edx
  0034b	33 c0		 xor	 eax, eax
  0034d	50		 push	 eax
  0034e	55		 push	 ebp
  0034f	8d 74 24 58	 lea	 esi, DWORD PTR _tickEnd$192287[esp+144]
  00353	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  00358	d9 44 24 24	 fld	 DWORD PTR _timeElapsed$192288[esp+144]
  0035c	8b 4c 24 28	 mov	 ecx, DWORD PTR _seconds$192289[esp+144]
  00360	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  00364	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  00369	f7 e1		 mul	 ecx
  0036b	8b f2		 mov	 esi, edx
  0036d	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00372	f7 e1		 mul	 ecx
  00374	c1 ea 05	 shr	 edx, 5
  00377	8b c2		 mov	 eax, edx
  00379	c1 e0 04	 shl	 eax, 4
  0037c	2b c2		 sub	 eax, edx
  0037e	03 c0		 add	 eax, eax
  00380	03 c0		 add	 eax, eax
  00382	8b d1		 mov	 edx, ecx
  00384	2b d0		 sub	 edx, eax
  00386	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  00389	8b c6		 mov	 eax, esi
  0038b	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  00391	83 c4 08	 add	 esp, 8
  00394	52		 push	 edx
  00395	2b c8		 sub	 ecx, eax
  00397	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0039c	f7 e1		 mul	 ecx
  0039e	c1 ea 05	 shr	 edx, 5
  003a1	52		 push	 edx
  003a2	56		 push	 esi
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  003a8	68 95 05 00 00	 push	 1429			; 00000595H
  003ad	6a 01		 push	 1
  003af	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1430 : 
; 1431 :     Log(LOG_DEBUG,__LINE__,"<< SysTimes");

  003b4	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FNBLPGFN@?$DM?$DM?5SysTimes?$AA@
  003b9	68 97 05 00 00	 push	 1431			; 00000597H
  003be	6a 10		 push	 16			; 00000010H
  003c0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1432 :     _endthreadex(0);

  003c5	57		 push	 edi
  003c6	e8 00 00 00 00	 call	 __endthreadex
  003cb	83 c4 30	 add	 esp, 48			; 00000030H

; 1433 :     return 0;
; 1434 : }

  003ce	5f		 pop	 edi
  003cf	33 c0		 xor	 eax, eax
  003d1	5e		 pop	 esi
  003d2	5d		 pop	 ebp
  003d3	5b		 pop	 ebx
  003d4	8b e5		 mov	 esp, ebp
  003d6	5d		 pop	 ebp
  003d7	c2 04 00	 ret	 4
?SystemTimes@@YGIPAX@Z ENDP				; SystemTimes
_TEXT	ENDS
PUBLIC	__real@41f0000000000000
PUBLIC	?SystemMemory@@YGIPAX@Z				; SystemMemory
;	COMDAT __real@41f0000000000000
CONST	SEGMENT
__real@41f0000000000000 DQ 041f0000000000000r	; 4.29497e+009
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?SystemMemory@@YGIPAX@Z
_TEXT	SEGMENT
tv440 = -84						; size = 2
tv416 = -84						; size = 2
tv392 = -84						; size = 2
tv368 = -84						; size = 2
tv312 = -84						; size = 2
tv288 = -84						; size = 2
tv229 = -84						; size = 2
tv188 = -84						; size = 2
_timeElapsed$192299 = -84				; size = 4
tv445 = -80						; size = 8
tv443 = -80						; size = 4
tv433 = -80						; size = 8
tv430 = -80						; size = 8
tv421 = -80						; size = 8
tv419 = -80						; size = 4
tv409 = -80						; size = 8
tv406 = -80						; size = 8
tv397 = -80						; size = 8
tv395 = -80						; size = 4
tv385 = -80						; size = 8
tv382 = -80						; size = 8
tv373 = -80						; size = 8
tv371 = -80						; size = 4
tv361 = -80						; size = 8
tv358 = -80						; size = 8
tv317 = -80						; size = 8
tv315 = -80						; size = 4
tv305 = -80						; size = 8
tv302 = -80						; size = 8
tv293 = -80						; size = 8
tv291 = -80						; size = 4
tv230 = -80						; size = 4
tv226 = -80						; size = 4
tv224 = -80						; size = 8
tv210 = -80						; size = 8
tv207 = -80						; size = 8
tv185 = -80						; size = 4
tv183 = -80						; size = 8
tv150 = -80						; size = 8
tv94 = -80						; size = 8
_seconds$192300 = -80					; size = 4
_tickEnd$192298 = -72					; size = 8
_Memst$ = -64						; size = 64
_lpData$ = 8						; size = 4
?SystemMemory@@YGIPAX@Z PROC				; SystemMemory, COMDAT

; 1359 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	83 ec 78	 sub	 esp, 120		; 00000078H
  00009	56		 push	 esi
  0000a	57		 push	 edi

; 1360 :     Log(LOG_DEBUG,__LINE__,">> SysMem");

  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_09CJJPFOJ@?$DO?$DO?5SysMem?$AA@
  00010	68 50 05 00 00	 push	 1360			; 00000550H
  00015	6a 10		 push	 16			; 00000010H
  00017	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0001c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1361 : 
; 1362 :     unsigned __int64 tickStart = SysTick;

  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 1363 : 
; 1364 :     //get system memory
; 1365 :     MEMORYSTATUSEX Memst = {0};

  00025	6a 3c		 push	 60			; 0000003cH
  00027	8b f0		 mov	 esi, eax
  00029	33 ff		 xor	 edi, edi
  0002b	8d 44 24 48	 lea	 eax, DWORD PTR _Memst$[esp+136]
  0002f	57		 push	 edi
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _memset
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1366 :     Memst.dwLength = sizeof(Memst);
; 1367 :     GlobalMemoryStatusEx(&Memst);

  00039	8d 4c 24 40	 lea	 ecx, DWORD PTR _Memst$[esp+128]
  0003d	51		 push	 ecx
  0003e	c7 44 24 44 40
	00 00 00	 mov	 DWORD PTR _Memst$[esp+132], 64 ; 00000040H
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalMemoryStatusEx@4

; 1368 : 
; 1369 :     Log(LOG_HEADER,__LINE__,"System Memory");

  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OAHOAHIO@System?5Memory?$AA@
  00051	68 59 05 00 00	 push	 1369			; 00000559H
  00056	6a 02		 push	 2
  00058	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1370 :     Log(LOG_MESSAGE,__LINE__,"Usage: %u%% used",SIZE_MB(Memst.dwMemoryLoad));

  0005d	8b 54 24 50	 mov	 edx, DWORD PTR _Memst$[esp+144]
  00061	c1 ea 14	 shr	 edx, 20			; 00000014H
  00064	89 54 24 3c	 mov	 DWORD PTR tv230[esp+140], edx
  00068	db 44 24 3c	 fild	 DWORD PTR tv230[esp+140]
  0006c	85 d2		 test	 edx, edx
  0006e	7d 06		 jge	 SHORT $LN7@SystemMemo
  00070	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@41f0000000000000
$LN7@SystemMemo:
  00076	dc 05 00 00 00
	00		 fadd	 QWORD PTR __real@3fe0000000000000
  0007c	d9 7c 24 38	 fnstcw	 WORD PTR tv229[esp+140]
  00080	0f b7 44 24 38	 movzx	 eax, WORD PTR tv229[esp+140]
  00085	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0008a	89 44 24 3c	 mov	 DWORD PTR tv226[esp+140], eax
  0008e	d9 6c 24 3c	 fldcw	 WORD PTR tv226[esp+140]
  00092	df 7c 24 3c	 fistp	 QWORD PTR tv224[esp+140]
  00096	8b 44 24 3c	 mov	 eax, DWORD PTR tv224[esp+140]
  0009a	50		 push	 eax
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DIEGGMCF@Usage?3?5?$CFu?$CF?$CF?5used?$AA@
  000a0	68 5a 05 00 00	 push	 1370			; 0000055aH
  000a5	d9 6c 24 44	 fldcw	 WORD PTR tv229[esp+152]
  000a9	6a 01		 push	 1
  000ab	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1371 :     Log(LOG_MESSAGE,__LINE__,"Physical: %u MB used, %u MB avail",SIZE_MB(Memst.ullTotalPhys),SIZE_MB(Memst.ullAvailPhys));

  000b0	8b 44 24 70	 mov	 eax, DWORD PTR _Memst$[esp+176]
  000b4	8b 4c 24 6c	 mov	 ecx, DWORD PTR _Memst$[esp+172]
  000b8	0f ac c1 14	 shrd	 ecx, eax, 20
  000bc	c1 e8 14	 shr	 eax, 20			; 00000014H
  000bf	d9 7c 24 48	 fnstcw	 WORD PTR tv188[esp+156]
  000c3	89 4c 24 4c	 mov	 DWORD PTR tv210[esp+156], ecx
  000c7	8b c8		 mov	 ecx, eax
  000c9	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  000ce	89 44 24 50	 mov	 DWORD PTR tv210[esp+160], eax
  000d2	0f b7 44 24 48	 movzx	 eax, WORD PTR tv188[esp+156]
  000d7	df 6c 24 4c	 fild	 QWORD PTR tv210[esp+156]
  000db	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  000e1	89 4c 24 50	 mov	 DWORD PTR tv207[esp+160], ecx
  000e5	8b 4c 24 64	 mov	 ecx, DWORD PTR _Memst$[esp+164]
  000e9	89 7c 24 4c	 mov	 DWORD PTR tv207[esp+156], edi
  000ed	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  000f2	df 6c 24 4c	 fild	 QWORD PTR tv207[esp+156]
  000f6	89 44 24 4c	 mov	 DWORD PTR tv185[esp+156], eax
  000fa	8b 44 24 68	 mov	 eax, DWORD PTR _Memst$[esp+168]
  000fe	0f ac c1 14	 shrd	 ecx, eax, 20
  00102	d9 e0		 fchs
  00104	de c1		 faddp	 ST(1), ST(0)
  00106	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3fe0000000000000
  0010c	c1 e8 14	 shr	 eax, 20			; 00000014H
  0010f	dc c1		 fadd	 ST(1), ST(0)
  00111	d9 6c 24 4c	 fldcw	 WORD PTR tv185[esp+156]
  00115	d9 c9		 fxch	 ST(1)
  00117	df 7c 24 4c	 fistp	 QWORD PTR tv183[esp+156]
  0011b	8b 54 24 4c	 mov	 edx, DWORD PTR tv183[esp+156]
  0011f	89 4c 24 4c	 mov	 DWORD PTR tv150[esp+156], ecx
  00123	8b c8		 mov	 ecx, eax
  00125	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  0012a	d9 6c 24 48	 fldcw	 WORD PTR tv188[esp+156]
  0012e	89 44 24 50	 mov	 DWORD PTR tv150[esp+160], eax
  00132	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  00138	52		 push	 edx
  00139	df 6c 24 50	 fild	 QWORD PTR tv150[esp+160]
  0013d	d9 7c 24 4c	 fnstcw	 WORD PTR tv288[esp+160]
  00141	89 4c 24 54	 mov	 DWORD PTR tv94[esp+164], ecx
  00145	0f b7 44 24 4c	 movzx	 eax, WORD PTR tv288[esp+160]
  0014a	89 7c 24 50	 mov	 DWORD PTR tv94[esp+160], edi
  0014e	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00153	df 6c 24 50	 fild	 QWORD PTR tv94[esp+160]
  00157	89 44 24 50	 mov	 DWORD PTR tv291[esp+160], eax
  0015b	d9 e0		 fchs
  0015d	de c1		 faddp	 ST(1), ST(0)
  0015f	de c1		 faddp	 ST(1), ST(0)
  00161	d9 6c 24 50	 fldcw	 WORD PTR tv291[esp+160]
  00165	df 7c 24 50	 fistp	 QWORD PTR tv293[esp+160]
  00169	8b 54 24 50	 mov	 edx, DWORD PTR tv293[esp+160]
  0016d	52		 push	 edx
  0016e	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JHNBDNDC@Physical?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@
  00173	68 5b 05 00 00	 push	 1371			; 0000055bH
  00178	d9 6c 24 58	 fldcw	 WORD PTR tv288[esp+172]
  0017c	6a 01		 push	 1
  0017e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1372 :     Log(LOG_MESSAGE,__LINE__,"Pagefile: %u MB used, %u MB avail",SIZE_MB(Memst.ullTotalPageFile),SIZE_MB(Memst.ullAvailPageFile));

  00183	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR _Memst$[esp+212]
  0018a	8b 8c 24 90 00
	00 00		 mov	 ecx, DWORD PTR _Memst$[esp+208]
  00191	0f ac c1 14	 shrd	 ecx, eax, 20
  00195	c1 e8 14	 shr	 eax, 20			; 00000014H
  00198	89 4c 24 60	 mov	 DWORD PTR tv302[esp+176], ecx
  0019c	8b c8		 mov	 ecx, eax
  0019e	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  001a3	89 44 24 64	 mov	 DWORD PTR tv302[esp+180], eax
  001a7	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  001ad	df 6c 24 60	 fild	 QWORD PTR tv302[esp+176]
  001b1	89 4c 24 64	 mov	 DWORD PTR tv305[esp+180], ecx
  001b5	8b 8c 24 88 00
	00 00		 mov	 ecx, DWORD PTR _Memst$[esp+200]
  001bc	d9 7c 24 5c	 fnstcw	 WORD PTR tv312[esp+176]
  001c0	0f b7 44 24 5c	 movzx	 eax, WORD PTR tv312[esp+176]
  001c5	89 7c 24 60	 mov	 DWORD PTR tv305[esp+176], edi
  001c9	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  001ce	df 6c 24 60	 fild	 QWORD PTR tv305[esp+176]
  001d2	89 44 24 60	 mov	 DWORD PTR tv315[esp+176], eax
  001d6	8b 84 24 8c 00
	00 00		 mov	 eax, DWORD PTR _Memst$[esp+204]
  001dd	0f ac c1 14	 shrd	 ecx, eax, 20
  001e1	d9 e0		 fchs
  001e3	de c1		 faddp	 ST(1), ST(0)
  001e5	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3fe0000000000000
  001eb	c1 e8 14	 shr	 eax, 20			; 00000014H
  001ee	dc c1		 fadd	 ST(1), ST(0)
  001f0	d9 6c 24 60	 fldcw	 WORD PTR tv315[esp+176]
  001f4	d9 c9		 fxch	 ST(1)
  001f6	df 7c 24 60	 fistp	 QWORD PTR tv317[esp+176]
  001fa	8b 54 24 60	 mov	 edx, DWORD PTR tv317[esp+176]
  001fe	89 4c 24 60	 mov	 DWORD PTR tv358[esp+176], ecx
  00202	8b c8		 mov	 ecx, eax
  00204	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  00209	d9 6c 24 5c	 fldcw	 WORD PTR tv312[esp+176]
  0020d	89 44 24 64	 mov	 DWORD PTR tv358[esp+180], eax
  00211	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  00217	52		 push	 edx
  00218	df 6c 24 64	 fild	 QWORD PTR tv358[esp+180]
  0021c	d9 7c 24 60	 fnstcw	 WORD PTR tv368[esp+180]
  00220	89 4c 24 68	 mov	 DWORD PTR tv361[esp+184], ecx
  00224	0f b7 44 24 60	 movzx	 eax, WORD PTR tv368[esp+180]
  00229	89 7c 24 64	 mov	 DWORD PTR tv361[esp+180], edi
  0022d	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00232	df 6c 24 64	 fild	 QWORD PTR tv361[esp+180]
  00236	89 44 24 64	 mov	 DWORD PTR tv371[esp+180], eax
  0023a	d9 e0		 fchs
  0023c	de c1		 faddp	 ST(1), ST(0)
  0023e	de c1		 faddp	 ST(1), ST(0)
  00240	d9 6c 24 64	 fldcw	 WORD PTR tv371[esp+180]
  00244	df 7c 24 64	 fistp	 QWORD PTR tv373[esp+180]
  00248	8b 54 24 64	 mov	 edx, DWORD PTR tv373[esp+180]
  0024c	52		 push	 edx
  0024d	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PBKOHCPF@Pagefile?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avai@
  00252	68 5c 05 00 00	 push	 1372			; 0000055cH
  00257	d9 6c 24 6c	 fldcw	 WORD PTR tv368[esp+192]
  0025b	6a 01		 push	 1
  0025d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1373 :     Log(LOG_MESSAGE,__LINE__,"Virtual: %u MB used, %u MB avail, %u MB extended",SIZE_MB(Memst.ullTotalVirtual),SIZE_MB(Memst.ullAvailVirtual),SIZE_MB(Memst.ullAvailExtendedVirtual));

  00262	8b 84 24 c0 00
	00 00		 mov	 eax, DWORD PTR _Memst$[esp+256]
  00269	8b 8c 24 bc 00
	00 00		 mov	 ecx, DWORD PTR _Memst$[esp+252]
  00270	0f ac c1 14	 shrd	 ecx, eax, 20
  00274	89 4c 24 74	 mov	 DWORD PTR tv382[esp+196], ecx
  00278	d9 7c 24 70	 fnstcw	 WORD PTR tv392[esp+196]
  0027c	c1 e8 14	 shr	 eax, 20			; 00000014H
  0027f	8b c8		 mov	 ecx, eax
  00281	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  00286	89 44 24 78	 mov	 DWORD PTR tv382[esp+200], eax
  0028a	0f b7 44 24 70	 movzx	 eax, WORD PTR tv392[esp+196]
  0028f	df 6c 24 74	 fild	 QWORD PTR tv382[esp+196]
  00293	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  00299	89 4c 24 78	 mov	 DWORD PTR tv385[esp+200], ecx
  0029d	8b 8c 24 b4 00
	00 00		 mov	 ecx, DWORD PTR _Memst$[esp+244]
  002a4	89 7c 24 74	 mov	 DWORD PTR tv385[esp+196], edi
  002a8	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  002ad	df 6c 24 74	 fild	 QWORD PTR tv385[esp+196]
  002b1	89 44 24 74	 mov	 DWORD PTR tv395[esp+196], eax
  002b5	8b 84 24 b8 00
	00 00		 mov	 eax, DWORD PTR _Memst$[esp+248]
  002bc	0f ac c1 14	 shrd	 ecx, eax, 20
  002c0	d9 e0		 fchs
  002c2	de c1		 faddp	 ST(1), ST(0)
  002c4	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3fe0000000000000
  002ca	c1 e8 14	 shr	 eax, 20			; 00000014H
  002cd	dc c1		 fadd	 ST(1), ST(0)
  002cf	83 c4 44	 add	 esp, 68			; 00000044H
  002d2	d9 6c 24 30	 fldcw	 WORD PTR tv395[esp+128]
  002d6	d9 c9		 fxch	 ST(1)
  002d8	df 7c 24 30	 fistp	 QWORD PTR tv397[esp+128]
  002dc	8b 54 24 30	 mov	 edx, DWORD PTR tv397[esp+128]
  002e0	89 4c 24 30	 mov	 DWORD PTR tv406[esp+128], ecx
  002e4	8b c8		 mov	 ecx, eax
  002e6	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  002eb	d9 6c 24 2c	 fldcw	 WORD PTR tv392[esp+128]
  002ef	52		 push	 edx
  002f0	89 44 24 38	 mov	 DWORD PTR tv406[esp+136], eax
  002f4	df 6c 24 34	 fild	 QWORD PTR tv406[esp+132]
  002f8	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  002fe	89 4c 24 38	 mov	 DWORD PTR tv409[esp+136], ecx
  00302	d9 7c 24 30	 fnstcw	 WORD PTR tv416[esp+132]
  00306	0f b7 44 24 30	 movzx	 eax, WORD PTR tv416[esp+132]
  0030b	8b 4c 24 6c	 mov	 ecx, DWORD PTR _Memst$[esp+172]
  0030f	89 7c 24 34	 mov	 DWORD PTR tv409[esp+132], edi
  00313	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00318	df 6c 24 34	 fild	 QWORD PTR tv409[esp+132]
  0031c	89 44 24 34	 mov	 DWORD PTR tv419[esp+132], eax
  00320	8b 44 24 70	 mov	 eax, DWORD PTR _Memst$[esp+176]
  00324	0f ac c1 14	 shrd	 ecx, eax, 20
  00328	d9 e0		 fchs
  0032a	de c1		 faddp	 ST(1), ST(0)
  0032c	c1 e8 14	 shr	 eax, 20			; 00000014H
  0032f	d8 c1		 fadd	 ST(0), ST(1)
  00331	d9 6c 24 34	 fldcw	 WORD PTR tv419[esp+132]
  00335	df 7c 24 34	 fistp	 QWORD PTR tv421[esp+132]
  00339	8b 54 24 34	 mov	 edx, DWORD PTR tv421[esp+132]
  0033d	89 4c 24 34	 mov	 DWORD PTR tv430[esp+132], ecx
  00341	8b c8		 mov	 ecx, eax
  00343	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  00348	d9 6c 24 30	 fldcw	 WORD PTR tv416[esp+132]
  0034c	89 44 24 38	 mov	 DWORD PTR tv430[esp+136], eax
  00350	81 e1 00 00 00
	80		 and	 ecx, -2147483648	; 80000000H
  00356	52		 push	 edx
  00357	df 6c 24 38	 fild	 QWORD PTR tv430[esp+136]
  0035b	d9 7c 24 34	 fnstcw	 WORD PTR tv440[esp+136]
  0035f	89 4c 24 3c	 mov	 DWORD PTR tv433[esp+140], ecx
  00363	0f b7 44 24 34	 movzx	 eax, WORD PTR tv440[esp+136]
  00368	89 7c 24 38	 mov	 DWORD PTR tv433[esp+136], edi
  0036c	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00371	df 6c 24 38	 fild	 QWORD PTR tv433[esp+136]
  00375	89 44 24 38	 mov	 DWORD PTR tv443[esp+136], eax
  00379	d9 e0		 fchs
  0037b	de c1		 faddp	 ST(1), ST(0)
  0037d	de c1		 faddp	 ST(1), ST(0)
  0037f	d9 6c 24 38	 fldcw	 WORD PTR tv443[esp+136]
  00383	df 7c 24 38	 fistp	 QWORD PTR tv445[esp+136]
  00387	8b 54 24 38	 mov	 edx, DWORD PTR tv445[esp+136]
  0038b	52		 push	 edx
  0038c	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@BKHHAKDB@Virtual?3?5?$CFu?5MB?5used?0?5?$CFu?5MB?5avail@
  00391	68 5d 05 00 00	 push	 1373			; 0000055dH
  00396	d9 6c 24 40	 fldcw	 WORD PTR tv440[esp+148]
  0039a	6a 01		 push	 1
  0039c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1374 : 
; 1375 :     LogElapsedTime(__LINE__,tickStart);

  003a1	8d 44 24 48	 lea	 eax, DWORD PTR _seconds$192300[esp+152]
  003a5	50		 push	 eax
  003a6	8d 4c 24 48	 lea	 ecx, DWORD PTR _timeElapsed$192299[esp+156]
  003aa	51		 push	 ecx
  003ab	57		 push	 edi
  003ac	56		 push	 esi
  003ad	8d 74 24 60	 lea	 esi, DWORD PTR _tickEnd$192298[esp+168]
  003b1	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  003b6	d9 44 24 54	 fld	 DWORD PTR _timeElapsed$192299[esp+168]
  003ba	8b 4c 24 58	 mov	 ecx, DWORD PTR _seconds$192300[esp+168]
  003be	dd 5c 24 20	 fstp	 QWORD PTR [esp+32]
  003c2	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  003c7	f7 e1		 mul	 ecx
  003c9	8b f2		 mov	 esi, edx
  003cb	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  003d0	f7 e1		 mul	 ecx
  003d2	c1 ea 05	 shr	 edx, 5
  003d5	8b c2		 mov	 eax, edx
  003d7	c1 e0 04	 shl	 eax, 4
  003da	2b c2		 sub	 eax, edx
  003dc	03 c0		 add	 eax, eax
  003de	03 c0		 add	 eax, eax
  003e0	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  003e3	8b d1		 mov	 edx, ecx
  003e5	2b d0		 sub	 edx, eax
  003e7	8b c6		 mov	 eax, esi
  003e9	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  003ef	83 c4 20	 add	 esp, 32			; 00000020H
  003f2	2b c8		 sub	 ecx, eax
  003f4	52		 push	 edx
  003f5	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  003fa	f7 e1		 mul	 ecx
  003fc	c1 ea 05	 shr	 edx, 5
  003ff	52		 push	 edx
  00400	56		 push	 esi
  00401	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  00406	68 5f 05 00 00	 push	 1375			; 0000055fH
  0040b	6a 01		 push	 1
  0040d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1376 : 
; 1377 :     Log(LOG_DEBUG,__LINE__,"<< SysMem");

  00412	68 00 00 00 00	 push	 OFFSET ??_C@_09CIJKANFC@?$DM?$DM?5SysMem?$AA@
  00417	68 61 05 00 00	 push	 1377			; 00000561H
  0041c	6a 10		 push	 16			; 00000010H
  0041e	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1378 :     _endthreadex(0);

  00423	57		 push	 edi
  00424	e8 00 00 00 00	 call	 __endthreadex
  00429	83 c4 30	 add	 esp, 48			; 00000030H

; 1379 :     return 0;
; 1380 : }

  0042c	5f		 pop	 edi
  0042d	33 c0		 xor	 eax, eax
  0042f	5e		 pop	 esi
  00430	8b e5		 mov	 esp, ebp
  00432	5d		 pop	 ebp
  00433	c2 04 00	 ret	 4
?SystemMemory@@YGIPAX@Z ENDP				; SystemMemory
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?OSInfo@@YGIPAX@Z				; OSInfo
; Function compile flags: /Ogtpy
;	COMDAT ?OSInfo@@YGIPAX@Z
_TEXT	SEGMENT
_timeElapsed$192317 = -184				; size = 4
_seconds$192318 = -180					; size = 4
_tickEnd$192316 = -176					; size = 8
_osverEx$ = -168					; size = 156
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?OSInfo@@YGIPAX@Z PROC					; OSInfo, COMDAT

; 1334 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 b4 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+184], eax
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 1335 :     Log(LOG_DEBUG,__LINE__,">> OSInfo");

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_09GNLGFJCP@?$DO?$DO?5OSInfo?$AA@
  00021	68 37 05 00 00	 push	 1335			; 00000537H
  00026	6a 10		 push	 16			; 00000010H
  00028	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1336 : 
; 1337 :     unsigned __int64 tickStart = SysTick;

  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 1338 : 
; 1339 :     //get OS version
; 1340 :     OSVERSIONINFOEX osverEx = {0};

  00036	68 98 00 00 00	 push	 152			; 00000098H
  0003b	8b f0		 mov	 esi, eax
  0003d	33 ff		 xor	 edi, edi
  0003f	8d 44 24 20	 lea	 eax, DWORD PTR _osverEx$[esp+200]
  00043	57		 push	 edi
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 _memset
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1341 :     osverEx.dwOSVersionInfoSize = sizeof(OSVERSIONINFOEX);
; 1342 :     GetVersionEx((LPOSVERSIONINFO)&osverEx);

  0004d	8d 4c 24 18	 lea	 ecx, DWORD PTR _osverEx$[esp+192]
  00051	51		 push	 ecx
  00052	c7 44 24 1c 9c
	00 00 00	 mov	 DWORD PTR _osverEx$[esp+196], 156 ; 0000009cH
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 1343 :     Log(LOG_HEADER,__LINE__,"OSInfo, Version %u.%u.%u, Platform %u, SP %s(%u.%u), Suite 0x%08X, %s",
; 1344 :                       osverEx.dwMajorVersion,osverEx.dwMinorVersion,osverEx.dwBuildNumber,osverEx.dwPlatformId,
; 1345 :                       osverEx.szCSDVersion,osverEx.wServicePackMajor,osverEx.wServicePackMinor,osverEx.wSuiteMask,
; 1346 :                       (osverEx.wProductType==VER_NT_DOMAIN_CONTROLLER?"Domain Controller":(osverEx.wProductType==VER_NT_SERVER?"Server":"Workstation")));

  00060	8a 84 24 b2 00
	00 00		 mov	 al, BYTE PTR _osverEx$[esp+346]
  00067	3c 02		 cmp	 al, 2
  00069	75 07		 jne	 SHORT $LN5@OSInfo
  0006b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@LGEIIGCP@Domain?5Controller?$AA@
  00070	eb 0e		 jmp	 SHORT $LN4@OSInfo
$LN5@OSInfo:
  00072	3c 03		 cmp	 al, 3
  00074	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06LGMEBDBC@Server?$AA@
  00079	74 05		 je	 SHORT $LN4@OSInfo
  0007b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0M@CILGCIDH@Workstation?$AA@
$LN4@OSInfo:
  00080	0f b7 94 24 b0
	00 00 00	 movzx	 edx, WORD PTR _osverEx$[esp+344]
  00088	0f b7 8c 24 ac
	00 00 00	 movzx	 ecx, WORD PTR _osverEx$[esp+340]
  00090	50		 push	 eax
  00091	0f b7 84 24 b2
	00 00 00	 movzx	 eax, WORD PTR _osverEx$[esp+346]
  00099	52		 push	 edx
  0009a	50		 push	 eax
  0009b	8b 44 24 34	 mov	 eax, DWORD PTR _osverEx$[esp+220]
  0009f	51		 push	 ecx
  000a0	8b 4c 24 34	 mov	 ecx, DWORD PTR _osverEx$[esp+220]
  000a4	8d 54 24 3c	 lea	 edx, DWORD PTR _osverEx$[esp+228]
  000a8	52		 push	 edx
  000a9	8b 54 24 34	 mov	 edx, DWORD PTR _osverEx$[esp+220]
  000ad	50		 push	 eax
  000ae	8b 44 24 34	 mov	 eax, DWORD PTR _osverEx$[esp+220]
  000b2	51		 push	 ecx
  000b3	52		 push	 edx
  000b4	50		 push	 eax
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@OPOFGEHK@OSInfo?0?5Version?5?$CFu?4?$CFu?4?$CFu?0?5Platfo@
  000ba	68 3f 05 00 00	 push	 1343			; 0000053fH
  000bf	6a 02		 push	 2
  000c1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1347 : 
; 1348 :     LogElapsedTime(__LINE__,tickStart);

  000c6	8d 4c 24 3c	 lea	 ecx, DWORD PTR _seconds$192318[esp+240]
  000ca	51		 push	 ecx
  000cb	8d 54 24 3c	 lea	 edx, DWORD PTR _timeElapsed$192317[esp+244]
  000cf	52		 push	 edx
  000d0	57		 push	 edi
  000d1	56		 push	 esi
  000d2	8d 74 24 50	 lea	 esi, DWORD PTR _tickEnd$192316[esp+256]
  000d6	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  000db	8b 4c 24 4c	 mov	 ecx, DWORD PTR _seconds$192318[esp+256]
  000df	d9 44 24 48	 fld	 DWORD PTR _timeElapsed$192317[esp+256]
  000e3	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  000e8	f7 e1		 mul	 ecx
  000ea	8b f2		 mov	 esi, edx
  000ec	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  000f1	f7 e1		 mul	 ecx
  000f3	c1 ea 05	 shr	 edx, 5
  000f6	8b c2		 mov	 eax, edx
  000f8	c1 e0 04	 shl	 eax, 4
  000fb	2b c2		 sub	 eax, edx
  000fd	03 c0		 add	 eax, eax
  000ff	03 c0		 add	 eax, eax
  00101	8b d1		 mov	 edx, ecx
  00103	2b d0		 sub	 edx, eax
  00105	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  00108	8b c6		 mov	 eax, esi
  0010a	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  00110	83 c4 40	 add	 esp, 64			; 00000040H
  00113	83 ec 08	 sub	 esp, 8
  00116	2b c8		 sub	 ecx, eax
  00118	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0011d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00120	52		 push	 edx
  00121	f7 e1		 mul	 ecx
  00123	c1 ea 05	 shr	 edx, 5
  00126	52		 push	 edx
  00127	56		 push	 esi
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  0012d	68 44 05 00 00	 push	 1348			; 00000544H
  00132	6a 01		 push	 1
  00134	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1349 : 
; 1350 :     Log(LOG_DEBUG,__LINE__,"<< OSInfo");

  00139	68 00 00 00 00	 push	 OFFSET ??_C@_09EHLFKBJE@?$DM?$DM?5OSInfo?$AA@
  0013e	68 46 05 00 00	 push	 1350			; 00000546H
  00143	6a 10		 push	 16			; 00000010H
  00145	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1351 :     _endthreadex(0);

  0014a	6a 00		 push	 0
  0014c	e8 00 00 00 00	 call	 __endthreadex

; 1352 :     return 0;
; 1353 : }

  00151	8b 8c 24 ec 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+240]
  00158	83 c4 30	 add	 esp, 48			; 00000030H
  0015b	5f		 pop	 edi
  0015c	5e		 pop	 esi
  0015d	33 cc		 xor	 ecx, esp
  0015f	33 c0		 xor	 eax, eax
  00161	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 04 00	 ret	 4
?OSInfo@@YGIPAX@Z ENDP					; OSInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SystemInfo@@YGIPAX@Z				; SystemInfo
; Function compile flags: /Ogtpy
;	COMDAT ?SystemInfo@@YGIPAX@Z
_TEXT	SEGMENT
tv92 = -80						; size = 4
_seconds$192342 = -80					; size = 4
_dwSize$ = -76						; size = 4
_timeElapsed$192341 = -72				; size = 4
_SystemInfo$ = -68					; size = 36
_tickEnd$192340 = -32					; size = 8
_szComputeName$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?SystemInfo@@YGIPAX@Z PROC				; SystemInfo, COMDAT

; 1299 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	83 ec 74	 sub	 esp, 116		; 00000074H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 70	 mov	 DWORD PTR __$ArrayPad$[esp+116], eax
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi

; 1300 :     Log(LOG_DEBUG,__LINE__,">> SysInfo");

  00017	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BFGFHKGB@?$DO?$DO?5SysInfo?$AA@
  0001c	68 14 05 00 00	 push	 1300			; 00000514H
  00021	6a 10		 push	 16			; 00000010H
  00023	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1301 : 
; 1302 :     unsigned __int64 tickStart = SysTick;

  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00031	8b f8		 mov	 edi, eax
  00033	33 c0		 xor	 eax, eax

; 1303 : 
; 1304 :     SYSTEM_INFO SystemInfo = {0};

  00035	89 44 24 3c	 mov	 DWORD PTR _SystemInfo$[esp+128], eax
  00039	89 44 24 40	 mov	 DWORD PTR _SystemInfo$[esp+132], eax
  0003d	89 44 24 44	 mov	 DWORD PTR _SystemInfo$[esp+136], eax
  00041	89 44 24 48	 mov	 DWORD PTR _SystemInfo$[esp+140], eax
  00045	89 44 24 4c	 mov	 DWORD PTR _SystemInfo$[esp+144], eax
  00049	89 44 24 50	 mov	 DWORD PTR _SystemInfo$[esp+148], eax
  0004d	89 44 24 54	 mov	 DWORD PTR _SystemInfo$[esp+152], eax
  00051	89 44 24 58	 mov	 DWORD PTR _SystemInfo$[esp+156], eax
  00055	89 44 24 5c	 mov	 DWORD PTR _SystemInfo$[esp+160], eax

; 1305 :     char szComputeName[MAX_COMPUTERNAME_LENGTH+1] = {0};

  00059	88 44 24 6c	 mov	 BYTE PTR _szComputeName$[esp+128], al
  0005d	89 44 24 6d	 mov	 DWORD PTR _szComputeName$[esp+129], eax
  00061	89 44 24 71	 mov	 DWORD PTR _szComputeName$[esp+133], eax
  00065	89 44 24 75	 mov	 DWORD PTR _szComputeName$[esp+137], eax
  00069	66 89 44 24 79	 mov	 WORD PTR _szComputeName$[esp+141], ax
  0006e	88 44 24 7b	 mov	 BYTE PTR _szComputeName$[esp+143], al

; 1306 :     DWORD dwSize = MAX_COMPUTERNAME_LENGTH;
; 1307 : 
; 1308 :     //get process handle
; 1309 :     GetSystemInfo(&SystemInfo);

  00072	8d 44 24 3c	 lea	 eax, DWORD PTR _SystemInfo$[esp+128]
  00076	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH
  0007b	50		 push	 eax
  0007c	33 db		 xor	 ebx, ebx
  0007e	89 74 24 38	 mov	 DWORD PTR _dwSize$[esp+132], esi
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemInfo@4

; 1310 : 
; 1311 :     //get computer information
; 1312 :     dwSize = MAX_COMPUTERNAME_LENGTH;
; 1313 :     GetComputerName(szComputeName,&dwSize);

  00088	8d 4c 24 34	 lea	 ecx, DWORD PTR _dwSize$[esp+128]
  0008c	51		 push	 ecx
  0008d	8d 54 24 70	 lea	 edx, DWORD PTR _szComputeName$[esp+132]
  00091	52		 push	 edx
  00092	89 74 24 3c	 mov	 DWORD PTR _dwSize$[esp+136], esi
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetComputerNameA@8

; 1314 : 
; 1315 :     Log(LOG_HEADER,__LINE__,"Computer: %s, Processor(s) %u %f Mhz Current %u, %s, Level %u, Rev %u, Type %u; Page Size %u",
; 1316 :                  szComputeName,SystemInfo.dwNumberOfProcessors,ProcessorSpeedCalc(),CurrentProcessorNumber(),
; 1317 :                  (SystemInfo.wProcessorArchitecture==PROCESSOR_ARCHITECTURE_AMD64?"x64 (AMD or Intel)":
; 1318 :                     (SystemInfo.wProcessorArchitecture==PROCESSOR_ARCHITECTURE_IA64?"Intel Itanium-based":
; 1319 :                     (SystemInfo.wProcessorArchitecture==PROCESSOR_ARCHITECTURE_INTEL?"x86":"Unknown"))),
; 1320 :                 SystemInfo.wProcessorLevel,SystemInfo.wProcessorRevision,SystemInfo.dwProcessorType,
; 1321 :                 SystemInfo.dwPageSize);

  0009c	8b 44 24 3c	 mov	 eax, DWORD PTR _SystemInfo$[esp+128]
  000a0	66 83 f8 09	 cmp	 ax, 9
  000a4	75 0a		 jne	 SHORT $LN7@SystemInfo
  000a6	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv92[esp+128], OFFSET ??_C@_0BD@EBOFFHEB@x64?5?$CIAMD?5or?5Intel?$CJ?$AA@
  000ae	eb 25		 jmp	 SHORT $LN4@SystemInfo
$LN7@SystemInfo:
  000b0	66 83 f8 06	 cmp	 ax, 6
  000b4	75 0a		 jne	 SHORT $LN5@SystemInfo
  000b6	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv92[esp+128], OFFSET ??_C@_0BE@BAGOKCHN@Intel?5Itanium?9based?$AA@
  000be	eb 15		 jmp	 SHORT $LN4@SystemInfo
$LN5@SystemInfo:
  000c0	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv92[esp+128], OFFSET ??_C@_03NDFEINMN@x86?$AA@
  000c8	66 85 c0	 test	 ax, ax
  000cb	74 08		 je	 SHORT $LN4@SystemInfo
  000cd	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv92[esp+128], OFFSET ??_C@_07NBCGADJA@Unknown?$AA@
$LN4@SystemInfo:
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DFNBACLA@GetCurrentProcessorNumber?$AA@
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_08PNLNEKOB@kernel32?$AA@
  000df	be 01 00 00 00	 mov	 esi, 1
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleHandleA@4
  000ea	50		 push	 eax
  000eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  000f1	85 c0		 test	 eax, eax
  000f3	75 16		 jne	 SHORT $LN10@SystemInfo
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@HJFNKFOJ@?9?9?5CurrentProcessorNumber?0?5GetCu@
  000fa	68 0a 05 00 00	 push	 1290			; 0000050aH
  000ff	6a 10		 push	 16			; 00000010H
  00101	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00106	83 c4 0c	 add	 esp, 12			; 0000000cH
  00109	eb 04		 jmp	 SHORT $LN9@SystemInfo
$LN10@SystemInfo:
  0010b	ff d0		 call	 eax
  0010d	8b f0		 mov	 esi, eax
$LN9@SystemInfo:
  0010f	8b 44 24 40	 mov	 eax, DWORD PTR _SystemInfo$[esp+132]
  00113	8b 4c 24 54	 mov	 ecx, DWORD PTR _SystemInfo$[esp+152]
  00117	0f b7 54 24 5e	 movzx	 edx, WORD PTR _SystemInfo$[esp+162]
  0011c	50		 push	 eax
  0011d	0f b7 44 24 60	 movzx	 eax, WORD PTR _SystemInfo$[esp+164]
  00122	51		 push	 ecx
  00123	8b 4c 24 38	 mov	 ecx, DWORD PTR tv92[esp+136]
  00127	52		 push	 edx
  00128	50		 push	 eax
  00129	51		 push	 ecx
  0012a	56		 push	 esi
  0012b	e8 00 00 00 00	 call	 ?ProcessorSpeedCalc@@YAMXZ ; ProcessorSpeedCalc
  00130	8b 54 24 68	 mov	 edx, DWORD PTR _SystemInfo$[esp+172]
  00134	83 ec 08	 sub	 esp, 8
  00137	8d 84 24 8c 00
	00 00		 lea	 eax, DWORD PTR _szComputeName$[esp+160]
  0013e	dd 1c 24	 fstp	 QWORD PTR [esp]
  00141	52		 push	 edx
  00142	50		 push	 eax
  00143	68 00 00 00 00	 push	 OFFSET ??_C@_0FN@KGKHOIOF@Computer?3?5?$CFs?0?5Processor?$CIs?$CJ?5?$CFu?5?$CFf@
  00148	68 23 05 00 00	 push	 1315			; 00000523H
  0014d	6a 02		 push	 2
  0014f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00154	83 c4 34	 add	 esp, 52			; 00000034H

; 1322 : 
; 1323 :     LogElapsedTime(__LINE__,tickStart);

  00157	8d 4c 24 30	 lea	 ecx, DWORD PTR _seconds$192342[esp+128]
  0015b	51		 push	 ecx
  0015c	8d 54 24 3c	 lea	 edx, DWORD PTR _timeElapsed$192341[esp+132]
  00160	52		 push	 edx
  00161	53		 push	 ebx
  00162	57		 push	 edi
  00163	8d 74 24 70	 lea	 esi, DWORD PTR _tickEnd$192340[esp+144]
  00167	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  0016c	d9 44 24 48	 fld	 DWORD PTR _timeElapsed$192341[esp+144]
  00170	8b 4c 24 40	 mov	 ecx, DWORD PTR _seconds$192342[esp+144]
  00174	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  00178	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  0017d	f7 e1		 mul	 ecx
  0017f	8b f2		 mov	 esi, edx
  00181	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00186	f7 e1		 mul	 ecx
  00188	c1 ea 05	 shr	 edx, 5
  0018b	8b c2		 mov	 eax, edx
  0018d	c1 e0 04	 shl	 eax, 4
  00190	2b c2		 sub	 eax, edx
  00192	03 c0		 add	 eax, eax
  00194	03 c0		 add	 eax, eax
  00196	8b d1		 mov	 edx, ecx
  00198	2b d0		 sub	 edx, eax
  0019a	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  0019d	8b c6		 mov	 eax, esi
  0019f	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  001a5	83 c4 08	 add	 esp, 8
  001a8	52		 push	 edx
  001a9	2b c8		 sub	 ecx, eax
  001ab	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  001b0	f7 e1		 mul	 ecx
  001b2	c1 ea 05	 shr	 edx, 5
  001b5	52		 push	 edx
  001b6	56		 push	 esi
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  001bc	68 2b 05 00 00	 push	 1323			; 0000052bH
  001c1	6a 01		 push	 1
  001c3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1324 : 
; 1325 :     Log(LOG_DEBUG,__LINE__,"<< SysInfo");

  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EJPMBDJN@?$DM?$DM?5SysInfo?$AA@
  001cd	68 2d 05 00 00	 push	 1325			; 0000052dH
  001d2	6a 10		 push	 16			; 00000010H
  001d4	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001d9	83 c4 2c	 add	 esp, 44			; 0000002cH

; 1326 :     _endthreadex(0);

  001dc	6a 00		 push	 0
  001de	e8 00 00 00 00	 call	 __endthreadex

; 1327 :     return 0;
; 1328 : }

  001e3	8b 8c 24 80 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+132]
  001ea	83 c4 04	 add	 esp, 4
  001ed	5f		 pop	 edi
  001ee	5e		 pop	 esi
  001ef	5b		 pop	 ebx
  001f0	33 cc		 xor	 ecx, esp
  001f2	33 c0		 xor	 eax, eax
  001f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f9	8b e5		 mov	 esp, ebp
  001fb	5d		 pop	 ebp
  001fc	c2 04 00	 ret	 4
?SystemInfo@@YGIPAX@Z ENDP				; SystemInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?HwProfile@@YGIPAX@Z				; HwProfile
; Function compile flags: /Ogtpy
;	COMDAT ?HwProfile@@YGIPAX@Z
_TEXT	SEGMENT
_seconds$192353 = -1176					; size = 4
_timeElapsed$192352 = -1172				; size = 4
_tickEnd$192351 = -1168					; size = 8
_HwProfileInfo$ = -1160					; size = 124
_szLastError$144982 = -1032				; size = 1024
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?HwProfile@@YGIPAX@Z PROC				; HwProfile, COMDAT

; 1206 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	81 ec b4 04 00
	00		 sub	 esp, 1204		; 000004b4H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 b0 04
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1204], eax
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi

; 1207 :     Log(LOG_DEBUG,__LINE__,">> HwProfile");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBFHMDOO@?$DO?$DO?5HwProfile?$AA@
  00022	68 b7 04 00 00	 push	 1207			; 000004b7H
  00027	6a 10		 push	 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1208 : 
; 1209 :     unsigned __int64 tickStart = SysTick;

  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00037	33 db		 xor	 ebx, ebx

; 1210 : 
; 1211 :     //get hardware profile
; 1212 :     HW_PROFILE_INFO HwProfileInfo = {0};

  00039	6a 78		 push	 120			; 00000078H
  0003b	8b f8		 mov	 edi, eax
  0003d	8d 44 24 40	 lea	 eax, DWORD PTR _HwProfileInfo$[esp+1224]
  00041	53		 push	 ebx
  00042	50		 push	 eax
  00043	89 5c 24 44	 mov	 DWORD PTR _HwProfileInfo$[esp+1228], ebx
  00047	e8 00 00 00 00	 call	 _memset
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1213 :     if(GetCurrentHwProfile(&HwProfileInfo))

  0004f	8d 4c 24 38	 lea	 ecx, DWORD PTR _HwProfileInfo$[esp+1216]
  00053	51		 push	 ecx
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentHwProfileA@4
  0005a	85 c0		 test	 eax, eax
  0005c	74 1b		 je	 SHORT $LN2@HwProfile

; 1214 :     {
; 1215 :         Log(LOG_HEADER,__LINE__,"Hardware Profile, DockInfo %p, GUID %s, Name %s",
; 1216 :                         HwProfileInfo.dwDockInfo,HwProfileInfo.szHwProfileGuid,HwProfileInfo.szHwProfileName);

  0005e	8b 4c 24 38	 mov	 ecx, DWORD PTR _HwProfileInfo$[esp+1216]
  00062	8d 54 24 63	 lea	 edx, DWORD PTR _HwProfileInfo$[esp+1259]
  00066	52		 push	 edx
  00067	8d 44 24 40	 lea	 eax, DWORD PTR _HwProfileInfo$[esp+1224]
  0006b	50		 push	 eax
  0006c	51		 push	 ecx
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OIKPBLGF@Hardware?5Profile?0?5DockInfo?5?$CFp?0?5G@
  00072	68 bf 04 00 00	 push	 1215			; 000004bfH

; 1217 :     }
; 1218 :     else

  00077	eb 44		 jmp	 SHORT $LN9@HwProfile
$LN2@HwProfile:

; 1219 :     {
; 1220 :         char szLastError[1024] = {0};

  00079	68 ff 03 00 00	 push	 1023			; 000003ffH
  0007e	8d 94 24 bd 00
	00 00		 lea	 edx, DWORD PTR _szLastError$144982[esp+1221]
  00085	53		 push	 ebx
  00086	52		 push	 edx
  00087	88 9c 24 c4 00
	00 00		 mov	 BYTE PTR _szLastError$144982[esp+1228], bl
  0008e	e8 00 00 00 00	 call	 _memset
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1221 :         DWORD dwLastError = GetLastError();

  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0009c	8b d8		 mov	 ebx, eax

; 1222 :         GetLastErrorMessage(dwLastError,szLastError,sizeof(szLastError));

  0009e	68 00 04 00 00	 push	 1024			; 00000400H
  000a3	8d b4 24 bc 00
	00 00		 lea	 esi, DWORD PTR _szLastError$144982[esp+1220]
  000aa	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1223 :         Log(LOG_HEADER,__LINE__,"HwProfile, GetCurrentHwProfile %u, %s",dwLastError,szLastError);

  000af	8b c6		 mov	 eax, esi
  000b1	50		 push	 eax
  000b2	53		 push	 ebx
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@MGHJNPJJ@HwProfile?0?5GetCurrentHwProfile?5?$CF@
  000b8	68 c7 04 00 00	 push	 1223			; 000004c7H
$LN9@HwProfile:
  000bd	6a 02		 push	 2
  000bf	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000c4	83 c4 18	 add	 esp, 24			; 00000018H

; 1224 :     }
; 1225 : 
; 1226 :     LogElapsedTime(__LINE__,tickStart);

  000c7	8d 4c 24 28	 lea	 ecx, DWORD PTR _seconds$192353[esp+1216]
  000cb	51		 push	 ecx
  000cc	8d 54 24 30	 lea	 edx, DWORD PTR _timeElapsed$192352[esp+1220]
  000d0	52		 push	 edx
  000d1	33 c0		 xor	 eax, eax
  000d3	50		 push	 eax
  000d4	57		 push	 edi
  000d5	8d 74 24 40	 lea	 esi, DWORD PTR _tickEnd$192351[esp+1232]
  000d9	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  000de	d9 44 24 3c	 fld	 DWORD PTR _timeElapsed$192352[esp+1232]
  000e2	8b 4c 24 38	 mov	 ecx, DWORD PTR _seconds$192353[esp+1232]
  000e6	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  000ea	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  000ef	f7 e1		 mul	 ecx
  000f1	8b f2		 mov	 esi, edx
  000f3	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  000f8	f7 e1		 mul	 ecx
  000fa	c1 ea 05	 shr	 edx, 5
  000fd	8b c2		 mov	 eax, edx
  000ff	c1 e0 04	 shl	 eax, 4
  00102	2b c2		 sub	 eax, edx
  00104	03 c0		 add	 eax, eax
  00106	03 c0		 add	 eax, eax
  00108	8b d1		 mov	 edx, ecx
  0010a	2b d0		 sub	 edx, eax
  0010c	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  0010f	8b c6		 mov	 eax, esi
  00111	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  00117	83 c4 08	 add	 esp, 8
  0011a	52		 push	 edx
  0011b	2b c8		 sub	 ecx, eax
  0011d	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00122	f7 e1		 mul	 ecx
  00124	c1 ea 05	 shr	 edx, 5
  00127	52		 push	 edx
  00128	56		 push	 esi
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  0012e	68 ca 04 00 00	 push	 1226			; 000004caH
  00133	6a 01		 push	 1
  00135	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1227 : 
; 1228 :     Log(LOG_DEBUG,__LINE__,"<< HwProfile");

  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DNDAOIDK@?$DM?$DM?5HwProfile?$AA@
  0013f	68 cc 04 00 00	 push	 1228			; 000004ccH
  00144	6a 10		 push	 16			; 00000010H
  00146	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1229 :     _endthreadex(0);

  0014b	6a 00		 push	 0
  0014d	e8 00 00 00 00	 call	 __endthreadex

; 1230 :     return 0;
; 1231 : }

  00152	8b 8c 24 ec 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1264]
  00159	83 c4 30	 add	 esp, 48			; 00000030H
  0015c	5f		 pop	 edi
  0015d	5e		 pop	 esi
  0015e	5b		 pop	 ebx
  0015f	33 cc		 xor	 ecx, esp
  00161	33 c0		 xor	 eax, eax
  00163	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c2 04 00	 ret	 4
?HwProfile@@YGIPAX@Z ENDP				; HwProfile
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ProcessInfo@@YGIPAX@Z				; ProcessInfo
; Function compile flags: /Ogtpy
;	COMDAT ?ProcessInfo@@YGIPAX@Z
_TEXT	SEGMENT
_cbNeeded$ = -5528					; size = 4
_seconds$192365 = -5524					; size = 4
tv242 = -5524						; size = 4
_timeElapsed$192364 = -5520				; size = 4
_hMod$144953 = -5520					; size = 4
tv455 = -5516						; size = 4
tv466 = -5512						; size = 4
_dwHandleCount$ = -5508					; size = 4
_tUserTime$ = -5504					; size = 16
_tKernelTime$ = -5488					; size = 16
_KernelTime$ = -5472					; size = 8
_UserTime$ = -5464					; size = 8
_pmc$ = -5456						; size = 40
_ExitTime$ = -5416					; size = 8
_CreationTime$ = -5408					; size = 8
_tickEnd$192363 = -5400					; size = 8
_tickStart$ = -5400					; size = 8
_aProcesses$ = -5392					; size = 4096
_szProcessName$144954 = -1296				; size = 260
_szLastError$144968 = -1032				; size = 1024
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?ProcessInfo@@YGIPAX@Z PROC				; ProcessInfo, COMDAT

; 1107 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	b8 b4 15 00 00	 mov	 eax, 5556		; 000015b4H
  0000b	e8 00 00 00 00	 call	 __chkstk
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	89 84 24 b0 15
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+5556], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi

; 1108 :     Log(LOG_DEBUG,__LINE__,">> ProcInfo");

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DOPFDNB@?$DO?$DO?5ProcInfo?$AA@
  00026	68 54 04 00 00	 push	 1108			; 00000454H
  0002b	6a 10		 push	 16			; 00000010H
  0002d	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1109 : 
; 1110 :     PROCESS_MEMORY_COUNTERS pmc = {0};

  00032	33 c0		 xor	 eax, eax
  00034	33 ff		 xor	 edi, edi

; 1111 : 
; 1112 :     FILETIME CreationTime = {0};
; 1113 :     FILETIME ExitTime = {0};
; 1114 :     FILETIME KernelTime = {0};
; 1115 :     FILETIME UserTime = {0};
; 1116 :     SYSTEMTIME tKernelTime = {0};
; 1117 :     SYSTEMTIME tUserTime = {0};
; 1118 : 
; 1119 :     DWORD dwHandleCount = 0;
; 1120 : 
; 1121 :     unsigned long seconds = 0;
; 1122 : 
; 1123 :     DWORD aProcesses[1024] = {0}, cbNeeded = 0, cProcesses = 0;

  00036	68 fc 0f 00 00	 push	 4092			; 00000ffcH
  0003b	8d 94 24 c4 00
	00 00		 lea	 edx, DWORD PTR _aProcesses$[esp+5588]
  00042	33 c9		 xor	 ecx, ecx
  00044	57		 push	 edi
  00045	52		 push	 edx
  00046	89 bc 24 88 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5592], edi
  0004d	89 84 24 8c 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5596], eax
  00054	89 84 24 90 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5600], eax
  0005b	89 84 24 94 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5604], eax
  00062	89 84 24 98 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5608], eax
  00069	89 84 24 9c 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5612], eax
  00070	89 84 24 a0 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5616], eax
  00077	89 84 24 a4 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5620], eax
  0007e	89 84 24 a8 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5624], eax
  00085	89 84 24 ac 00
	00 00		 mov	 DWORD PTR _pmc$[esp+5628], eax
  0008c	89 bc 24 b8 00
	00 00		 mov	 DWORD PTR _CreationTime$[esp+5592], edi
  00093	89 bc 24 bc 00
	00 00		 mov	 DWORD PTR _CreationTime$[esp+5596], edi
  0009a	89 bc 24 b0 00
	00 00		 mov	 DWORD PTR _ExitTime$[esp+5592], edi
  000a1	89 bc 24 b4 00
	00 00		 mov	 DWORD PTR _ExitTime$[esp+5596], edi
  000a8	89 7c 24 78	 mov	 DWORD PTR _KernelTime$[esp+5592], edi
  000ac	89 7c 24 7c	 mov	 DWORD PTR _KernelTime$[esp+5596], edi
  000b0	89 bc 24 80 00
	00 00		 mov	 DWORD PTR _UserTime$[esp+5592], edi
  000b7	89 bc 24 84 00
	00 00		 mov	 DWORD PTR _UserTime$[esp+5596], edi
  000be	66 89 44 24 68	 mov	 WORD PTR _tKernelTime$[esp+5592], ax
  000c3	89 44 24 6a	 mov	 DWORD PTR _tKernelTime$[esp+5594], eax
  000c7	89 44 24 6e	 mov	 DWORD PTR _tKernelTime$[esp+5598], eax
  000cb	89 44 24 72	 mov	 DWORD PTR _tKernelTime$[esp+5602], eax
  000cf	66 89 44 24 76	 mov	 WORD PTR _tKernelTime$[esp+5606], ax
  000d4	66 89 4c 24 58	 mov	 WORD PTR _tUserTime$[esp+5592], cx
  000d9	89 44 24 5a	 mov	 DWORD PTR _tUserTime$[esp+5594], eax
  000dd	89 44 24 5e	 mov	 DWORD PTR _tUserTime$[esp+5598], eax
  000e1	89 44 24 62	 mov	 DWORD PTR _tUserTime$[esp+5602], eax
  000e5	66 89 44 24 66	 mov	 WORD PTR _tUserTime$[esp+5606], ax
  000ea	89 7c 24 54	 mov	 DWORD PTR _dwHandleCount$[esp+5592], edi
  000ee	89 bc 24 c8 00
	00 00		 mov	 DWORD PTR _aProcesses$[esp+5592], edi
  000f5	e8 00 00 00 00	 call	 _memset
  000fa	83 c4 18	 add	 esp, 24			; 00000018H
  000fd	89 7c 24 28	 mov	 DWORD PTR _cbNeeded$[esp+5568], edi

; 1124 : 
; 1125 :     unsigned __int64 tickStart = SysTick;

  00101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 1126 : 
; 1127 :     //get list of process
; 1128 :     memset(aProcesses,0x00,sizeof(aProcesses));

  00107	68 00 10 00 00	 push	 4096			; 00001000H
  0010c	89 84 24 ac 00
	00 00		 mov	 DWORD PTR _tickStart$[esp+5572], eax
  00113	8d 84 24 b4 00
	00 00		 lea	 eax, DWORD PTR _aProcesses$[esp+5572]
  0011a	57		 push	 edi
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 _memset
  00121	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1129 :     cbNeeded = 0;
; 1130 :     cProcesses = 0;
; 1131 :     if(EnumProcesses( aProcesses, sizeof(aProcesses), &cbNeeded))

  00124	8d 4c 24 28	 lea	 ecx, DWORD PTR _cbNeeded$[esp+5568]
  00128	51		 push	 ecx
  00129	68 00 10 00 00	 push	 4096			; 00001000H
  0012e	8d 94 24 b8 00
	00 00		 lea	 edx, DWORD PTR _aProcesses$[esp+5576]
  00135	52		 push	 edx
  00136	89 7c 24 34	 mov	 DWORD PTR _cbNeeded$[esp+5580], edi
  0013a	e8 00 00 00 00	 call	 _EnumProcesses@12
  0013f	85 c0		 test	 eax, eax
  00141	0f 84 79 02 00
	00		 je	 $LN9@ProcessInf

; 1132 :     {
; 1133 : 
; 1134 :         //calculate how many process identifiers were returned.
; 1135 :         cProcesses = cbNeeded / sizeof(DWORD);

  00147	8b 74 24 28	 mov	 esi, DWORD PTR _cbNeeded$[esp+5568]
  0014b	c1 ee 02	 shr	 esi, 2

; 1136 :         Log(LOG_HEADER,__LINE__,"Processes Informaton, Number of processes: %u",cProcesses);

  0014e	56		 push	 esi
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@LMCBGMGC@Processes?5Informaton?0?5Number?5of?5@
  00154	68 70 04 00 00	 push	 1136			; 00000470H
  00159	6a 02		 push	 2
  0015b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00160	83 c4 10	 add	 esp, 16			; 00000010H

; 1137 :         if(cProcesses>0)        //skip from current process

  00163	3b f7		 cmp	 esi, edi
  00165	0f 86 a6 02 00
	00		 jbe	 $LN1@ProcessInf

; 1138 :             Log(LOG_MESSAGE,__LINE__,">      Process Name, ProcessID, Handles, PagefileUsage, PeakPagefileUsage, CPUTime, PageFaultCount, PeakWorkingSetSize, WorkingSetSize, QuotaPeakPagedPoolUsage, QuotaPagedPoolUsage, QuotaPeakNonPagedPoolUsage, QuotaNonPagedPoolUsage");

  0016b	68 00 00 00 00	 push	 OFFSET ??_C@_0OJ@BFFOFANH@?$DO?5?5?5?5?5?5Process?5Name?0?5ProcessID?0?5@
  00170	68 72 04 00 00	 push	 1138			; 00000472H
  00175	6a 01		 push	 1
  00177	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0017c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1139 : 
; 1140 :         for(DWORD i=0;i<cProcesses;i++)

  0017f	3b f7		 cmp	 esi, edi
  00181	0f 86 8a 02 00
	00		 jbe	 $LN1@ProcessInf
  00187	8d 84 24 b0 00
	00 00		 lea	 eax, DWORD PTR _aProcesses$[esp+5568]
  0018e	c7 44 24 34 01
	00 00 00	 mov	 DWORD PTR tv455[esp+5568], 1
  00196	89 44 24 38	 mov	 DWORD PTR tv466[esp+5568], eax
  0019a	89 74 24 2c	 mov	 DWORD PTR tv242[esp+5568], esi
  0019e	8b ff		 npad	 2
$LL7@ProcessInf:

; 1141 :         {
; 1142 :             //get a handle to the process
; 1143 :             DWORD dwProcessID = aProcesses[i];

  001a0	8b 4c 24 38	 mov	 ecx, DWORD PTR tv466[esp+5568]
  001a4	8b 19		 mov	 ebx, DWORD PTR [ecx]

; 1144 :             HANDLE hProcInfo = OpenProcess(PROCESS_QUERY_INFORMATION|PROCESS_VM_READ,FALSE,dwProcessID);

  001a6	53		 push	 ebx
  001a7	57		 push	 edi
  001a8	68 10 04 00 00	 push	 1040			; 00000410H
  001ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OpenProcess@12
  001b3	8b f8		 mov	 edi, eax

; 1145 :             if(hProcInfo)

  001b5	33 c0		 xor	 eax, eax
  001b7	3b f8		 cmp	 edi, eax
  001b9	0f 84 cb 01 00
	00		 je	 $LN4@ProcessInf

; 1146 :             {
; 1147 :                 //get process name
; 1148 :                 HMODULE hMod = NULL;
; 1149 :                 cbNeeded = 0;
; 1150 :                 TCHAR szProcessName[MAX_PATH] = TEXT("<unknown>");

  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@
  001c5	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@+4
  001cb	68 fa 00 00 00	 push	 250			; 000000faH
  001d0	50		 push	 eax
  001d1	89 44 24 38	 mov	 DWORD PTR _hMod$144953[esp+5576], eax
  001d5	89 44 24 30	 mov	 DWORD PTR _cbNeeded$[esp+5576], eax
  001d9	89 94 24 b8 10
	00 00		 mov	 DWORD PTR _szProcessName$144954[esp+5576], edx
  001e0	66 8b 15 08 00
	00 00		 mov	 dx, WORD PTR ??_C@_09EEKGDCPH@?$DMunknown?$DO?$AA@+8
  001e7	8d 84 24 c2 10
	00 00		 lea	 eax, DWORD PTR _szProcessName$144954[esp+5586]
  001ee	50		 push	 eax
  001ef	89 8c 24 c0 10
	00 00		 mov	 DWORD PTR _szProcessName$144954[esp+5584], ecx
  001f6	66 89 94 24 c4
	10 00 00	 mov	 WORD PTR _szProcessName$144954[esp+5588], dx
  001fe	e8 00 00 00 00	 call	 _memset
  00203	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1151 : 
; 1152 :                 //enumerate modules
; 1153 :                 if(EnumProcessModules(hProcInfo,&hMod,sizeof(hMod),&cbNeeded))

  00206	8d 4c 24 28	 lea	 ecx, DWORD PTR _cbNeeded$[esp+5568]
  0020a	51		 push	 ecx
  0020b	6a 04		 push	 4
  0020d	8d 54 24 38	 lea	 edx, DWORD PTR _hMod$144953[esp+5576]
  00211	52		 push	 edx
  00212	57		 push	 edi
  00213	e8 00 00 00 00	 call	 _EnumProcessModules@16
  00218	85 c0		 test	 eax, eax
  0021a	74 18		 je	 SHORT $LN3@ProcessInf

; 1154 :                 {
; 1155 : 	                GetModuleBaseName(hProcInfo,hMod,szProcessName,sizeof(szProcessName)/sizeof(TCHAR));

  0021c	8b 4c 24 30	 mov	 ecx, DWORD PTR _hMod$144953[esp+5568]
  00220	68 04 01 00 00	 push	 260			; 00000104H
  00225	8d 84 24 b4 10
	00 00		 lea	 eax, DWORD PTR _szProcessName$144954[esp+5572]
  0022c	50		 push	 eax
  0022d	51		 push	 ecx
  0022e	57		 push	 edi
  0022f	e8 00 00 00 00	 call	 _GetModuleBaseNameA@16
$LN3@ProcessInf:

; 1156 :                 }
; 1157 : 
; 1158 :                 //get process menory information
; 1159 :                 GetProcessMemoryInfo(hProcInfo,&pmc,sizeof(pmc));

  00234	6a 28		 push	 40			; 00000028H
  00236	8d 54 24 74	 lea	 edx, DWORD PTR _pmc$[esp+5572]
  0023a	52		 push	 edx
  0023b	57		 push	 edi
  0023c	e8 00 00 00 00	 call	 _GetProcessMemoryInfo@12

; 1160 : 
; 1161 :                 //get process time information
; 1162 :                 seconds = 0;
; 1163 :                 GetProcessTimes(hProcInfo,&CreationTime,&ExitTime,&KernelTime,&UserTime);

  00241	8d 44 24 68	 lea	 eax, DWORD PTR _UserTime$[esp+5568]
  00245	50		 push	 eax
  00246	8d 4c 24 64	 lea	 ecx, DWORD PTR _KernelTime$[esp+5572]
  0024a	51		 push	 ecx
  0024b	8d 94 24 a0 00
	00 00		 lea	 edx, DWORD PTR _ExitTime$[esp+5576]
  00252	52		 push	 edx
  00253	8d 84 24 ac 00
	00 00		 lea	 eax, DWORD PTR _CreationTime$[esp+5580]
  0025a	50		 push	 eax
  0025b	57		 push	 edi
  0025c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessTimes@20

; 1164 :                 FileTimeToSystemTime(&KernelTime,&tKernelTime);

  00262	8d 4c 24 50	 lea	 ecx, DWORD PTR _tKernelTime$[esp+5568]
  00266	51		 push	 ecx
  00267	8d 54 24 64	 lea	 edx, DWORD PTR _KernelTime$[esp+5572]
  0026b	52		 push	 edx
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FileTimeToSystemTime@8

; 1165 :                 seconds = (long)tKernelTime.wSecond + ((long)tKernelTime.wMinute*60) + ((long)tKernelTime.wHour*3600);

  00272	0f b7 44 24 58	 movzx	 eax, WORD PTR _tKernelTime$[esp+5576]
  00277	0f b7 54 24 5a	 movzx	 edx, WORD PTR _tKernelTime$[esp+5578]
  0027c	8b c8		 mov	 ecx, eax
  0027e	c1 e1 04	 shl	 ecx, 4
  00281	2b c8		 sub	 ecx, eax
  00283	8d 04 8a	 lea	 eax, DWORD PTR [edx+ecx*4]
  00286	0f b7 54 24 5c	 movzx	 edx, WORD PTR _tKernelTime$[esp+5580]
  0028b	8b c8		 mov	 ecx, eax
  0028d	c1 e1 04	 shl	 ecx, 4
  00290	2b c8		 sub	 ecx, eax

; 1166 :                 FileTimeToSystemTime(&UserTime,&tUserTime);

  00292	8d 44 24 40	 lea	 eax, DWORD PTR _tUserTime$[esp+5568]
  00296	8d 34 8a	 lea	 esi, DWORD PTR [edx+ecx*4]
  00299	50		 push	 eax
  0029a	8d 4c 24 6c	 lea	 ecx, DWORD PTR _UserTime$[esp+5572]
  0029e	51		 push	 ecx
  0029f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FileTimeToSystemTime@8

; 1167 :                 seconds = seconds + (long)tUserTime.wSecond + ((long)tUserTime.wMinute*60) + ((long)tUserTime.wHour*3600);

  002a5	0f b7 44 24 48	 movzx	 eax, WORD PTR _tUserTime$[esp+5576]
  002aa	8b d0		 mov	 edx, eax
  002ac	c1 e2 04	 shl	 edx, 4
  002af	2b d0		 sub	 edx, eax
  002b1	0f b7 44 24 4a	 movzx	 eax, WORD PTR _tUserTime$[esp+5578]
  002b6	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  002b9	0f b7 54 24 4c	 movzx	 edx, WORD PTR _tUserTime$[esp+5580]
  002be	8b c8		 mov	 ecx, eax
  002c0	c1 e1 04	 shl	 ecx, 4
  002c3	2b c8		 sub	 ecx, eax

; 1168 : 
; 1169 :                 //get process handle count
; 1170 :                 GetProcessHandleCount(hProcInfo,&dwHandleCount);

  002c5	8d 44 24 3c	 lea	 eax, DWORD PTR _dwHandleCount$[esp+5568]
  002c9	50		 push	 eax
  002ca	03 d6		 add	 edx, esi
  002cc	57		 push	 edi
  002cd	8d 34 8a	 lea	 esi, DWORD PTR [edx+ecx*4]
  002d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHandleCount@8

; 1171 : 
; 1172 :                 Log(LOG_MESSAGE,__LINE__,"> %.3d, %s, %u, %u, %u, %u, %02d:%02d:%02d, %u, %u, %u, %u, %u, %u, %u",i+1,
; 1173 :                                 szProcessName,dwProcessID,dwHandleCount,pmc.PagefileUsage,pmc.PeakPagefileUsage,seconds/3600,
; 1174 :                                 (seconds % 3600)/60, seconds % 60,pmc.PageFaultCount,pmc.PeakWorkingSetSize,pmc.WorkingSetSize,
; 1175 :                                 pmc.QuotaPeakPagedPoolUsage,pmc.QuotaPagedPoolUsage,pmc.QuotaPeakNonPagedPoolUsage,pmc.QuotaNonPagedPoolUsage);

  002d6	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  002db	f7 e6		 mul	 esi
  002dd	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _pmc$[esp+5592]
  002e4	8b ca		 mov	 ecx, edx
  002e6	8b 94 24 8c 00
	00 00		 mov	 edx, DWORD PTR _pmc$[esp+5596]
  002ed	52		 push	 edx
  002ee	8b 94 24 88 00
	00 00		 mov	 edx, DWORD PTR _pmc$[esp+5592]
  002f5	50		 push	 eax
  002f6	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _pmc$[esp+5592]
  002fd	52		 push	 edx
  002fe	8b 94 24 88 00
	00 00		 mov	 edx, DWORD PTR _pmc$[esp+5592]
  00305	50		 push	 eax
  00306	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _pmc$[esp+5592]
  0030d	52		 push	 edx
  0030e	8b 94 24 88 00
	00 00		 mov	 edx, DWORD PTR _pmc$[esp+5592]
  00315	50		 push	 eax
  00316	52		 push	 edx
  00317	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0031c	f7 e6		 mul	 esi
  0031e	c1 ea 05	 shr	 edx, 5
  00321	8b c2		 mov	 eax, edx
  00323	c1 e0 04	 shl	 eax, 4
  00326	2b c2		 sub	 eax, edx
  00328	03 c0		 add	 eax, eax
  0032a	03 c0		 add	 eax, eax
  0032c	8b d6		 mov	 edx, esi
  0032e	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00331	2b d0		 sub	 edx, eax
  00333	52		 push	 edx
  00334	8b c1		 mov	 eax, ecx
  00336	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  0033c	2b f0		 sub	 esi, eax
  0033e	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00343	f7 e6		 mul	 esi
  00345	8b 44 24 5c	 mov	 eax, DWORD PTR _dwHandleCount$[esp+5600]
  00349	c1 ea 05	 shr	 edx, 5
  0034c	52		 push	 edx
  0034d	8b 94 24 b4 00
	00 00		 mov	 edx, DWORD PTR _pmc$[esp+5636]
  00354	51		 push	 ecx
  00355	8b 8c 24 bc 00
	00 00		 mov	 ecx, DWORD PTR _pmc$[esp+5644]
  0035c	51		 push	 ecx
  0035d	52		 push	 edx
  0035e	8b 54 24 64	 mov	 edx, DWORD PTR tv455[esp+5616]
  00362	50		 push	 eax
  00363	53		 push	 ebx
  00364	8d 8c 24 e8 10
	00 00		 lea	 ecx, DWORD PTR _szProcessName$144954[esp+5624]
  0036b	51		 push	 ecx
  0036c	52		 push	 edx
  0036d	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@FOMPOKBN@?$DO?5?$CF?43d?0?5?$CFs?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CFu?0?5?$CF02d@
  00372	68 94 04 00 00	 push	 1172			; 00000494H
  00377	6a 01		 push	 1
  00379	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0037e	83 c4 4c	 add	 esp, 76			; 0000004cH

; 1176 :                 
; 1177 :                 //close the process handle
; 1178 :                 CloseHandle(hProcInfo);

  00381	57		 push	 edi
  00382	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 1179 :                 hProcInfo = NULL;
; 1180 :             }
; 1181 :             else

  00388	eb 1a		 jmp	 SHORT $LN6@ProcessInf
$LN4@ProcessInf:

; 1182 :             {
; 1183 :                 Log(LOG_MESSAGE,__LINE__,"> %.3d, <unknown>, %u, ?, ?, ?, ??:??:??, ?, ?, ?, ?, ?, ?, ?",i+1,dwProcessID);

  0038a	8b 44 24 34	 mov	 eax, DWORD PTR tv455[esp+5568]
  0038e	53		 push	 ebx
  0038f	50		 push	 eax
  00390	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@MLNPPNEI@?$DO?5?$CF?43d?0?5?$DMunknown?$DO?0?5?$CFu?0?5?$DP?0?5?$DP?0?5?$DP?0?5@
  00395	68 9f 04 00 00	 push	 1183			; 0000049fH
  0039a	6a 01		 push	 1
  0039c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003a1	83 c4 14	 add	 esp, 20			; 00000014H
$LN6@ProcessInf:
  003a4	83 44 24 38 04	 add	 DWORD PTR tv466[esp+5568], 4
  003a9	b8 01 00 00 00	 mov	 eax, 1
  003ae	01 44 24 34	 add	 DWORD PTR tv455[esp+5568], eax

; 1184 :             }
; 1185 :         }
; 1186 :     }
; 1187 :     else

  003b2	33 ff		 xor	 edi, edi
  003b4	29 44 24 2c	 sub	 DWORD PTR tv242[esp+5568], eax
  003b8	0f 85 e2 fd ff
	ff		 jne	 $LL7@ProcessInf
  003be	eb 51		 jmp	 SHORT $LN1@ProcessInf
$LN9@ProcessInf:

; 1188 :     {
; 1189 :         char szLastError[1024] = {0};

  003c0	68 ff 03 00 00	 push	 1023			; 000003ffH
  003c5	8d 8c 24 bd 11
	00 00		 lea	 ecx, DWORD PTR _szLastError$144968[esp+5573]
  003cc	57		 push	 edi
  003cd	51		 push	 ecx
  003ce	c6 84 24 c4 11
	00 00 00	 mov	 BYTE PTR _szLastError$144968[esp+5580], 0
  003d6	e8 00 00 00 00	 call	 _memset
  003db	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1190 :         DWORD dwLastError = GetLastError();

  003de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  003e4	8b d8		 mov	 ebx, eax

; 1191 :         GetLastErrorMessage(dwLastError,szLastError,sizeof(szLastError));

  003e6	68 00 04 00 00	 push	 1024			; 00000400H
  003eb	8d b4 24 bc 11
	00 00		 lea	 esi, DWORD PTR _szLastError$144968[esp+5572]
  003f2	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1192 :         Log(LOG_HEADER,__LINE__,"ProcessInfo, EnumProcesses failed: %u, %s",dwLastError,szLastError);

  003f7	8b d6		 mov	 edx, esi
  003f9	52		 push	 edx
  003fa	53		 push	 ebx
  003fb	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@JDCGCMFK@ProcessInfo?0?5EnumProcesses?5faile@
  00400	68 a8 04 00 00	 push	 1192			; 000004a8H
  00405	6a 02		 push	 2
  00407	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0040c	83 c4 18	 add	 esp, 24			; 00000018H
  0040f	33 ff		 xor	 edi, edi
$LN1@ProcessInf:

; 1193 :     }
; 1194 : 
; 1195 :     LogElapsedTime(__LINE__,tickStart);

  00411	8b 94 24 a8 00
	00 00		 mov	 edx, DWORD PTR _tickStart$[esp+5568]
  00418	8d 44 24 2c	 lea	 eax, DWORD PTR _seconds$192365[esp+5568]
  0041c	50		 push	 eax
  0041d	8d 4c 24 34	 lea	 ecx, DWORD PTR _timeElapsed$192364[esp+5572]
  00421	51		 push	 ecx
  00422	33 c0		 xor	 eax, eax
  00424	50		 push	 eax
  00425	52		 push	 edx
  00426	8d b4 24 b8 00
	00 00		 lea	 esi, DWORD PTR _tickEnd$192363[esp+5584]
  0042d	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  00432	d9 44 24 40	 fld	 DWORD PTR _timeElapsed$192364[esp+5584]
  00436	8b 4c 24 3c	 mov	 ecx, DWORD PTR _seconds$192365[esp+5584]
  0043a	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  0043e	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  00443	f7 e1		 mul	 ecx
  00445	8b f2		 mov	 esi, edx
  00447	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0044c	f7 e1		 mul	 ecx
  0044e	c1 ea 05	 shr	 edx, 5
  00451	8b c2		 mov	 eax, edx
  00453	c1 e0 04	 shl	 eax, 4
  00456	2b c2		 sub	 eax, edx
  00458	03 c0		 add	 eax, eax
  0045a	03 c0		 add	 eax, eax
  0045c	8b d1		 mov	 edx, ecx
  0045e	2b d0		 sub	 edx, eax
  00460	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  00463	8b c6		 mov	 eax, esi
  00465	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  0046b	83 c4 08	 add	 esp, 8
  0046e	52		 push	 edx
  0046f	2b c8		 sub	 ecx, eax
  00471	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00476	f7 e1		 mul	 ecx
  00478	c1 ea 05	 shr	 edx, 5
  0047b	52		 push	 edx
  0047c	56		 push	 esi
  0047d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  00482	68 ab 04 00 00	 push	 1195			; 000004abH
  00487	6a 01		 push	 1
  00489	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1196 : 
; 1197 :     Log(LOG_DEBUG,__LINE__,"<< ProcInfo");

  0048e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LHLIHEIP@?$DM?$DM?5ProcInfo?$AA@
  00493	68 ad 04 00 00	 push	 1197			; 000004adH
  00498	6a 10		 push	 16			; 00000010H
  0049a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1198 :     _endthreadex(0);

  0049f	57		 push	 edi
  004a0	e8 00 00 00 00	 call	 __endthreadex

; 1199 :     return 0;
; 1200 : }

  004a5	8b 8c 24 ec 15
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+5616]
  004ac	83 c4 30	 add	 esp, 48			; 00000030H
  004af	5f		 pop	 edi
  004b0	5e		 pop	 esi
  004b1	5b		 pop	 ebx
  004b2	33 cc		 xor	 ecx, esp
  004b4	33 c0		 xor	 eax, eax
  004b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004bb	8b e5		 mov	 esp, ebp
  004bd	5d		 pop	 ebp
  004be	c2 04 00	 ret	 4
?ProcessInfo@@YGIPAX@Z ENDP				; ProcessInfo
_TEXT	ENDS
PUBLIC	_lParam$GSCopy$
PUBLIC	_hWnd$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?WndProcMessage@@YGJPAUHWND__@@IIJ@Z		; WndProcMessage
; Function compile flags: /Ogtpy
;	COMDAT ?WndProcMessage@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$GSCopy$ = -284					; size = 4
tv353 = -280						; size = 4
_lParam$GSCopy$ = -276					; size = 4
_szGuid$ = -272						; size = 260
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WndProcMessage@@YGJPAUHWND__@@IIJ@Z PROC		; WndProcMessage, COMDAT

; 800  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 18 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+284], eax

; 945  :                     if(iRet==IDYES)

  0001a	8b 45 08	 mov	 eax, DWORD PTR _hWnd$[ebp]
  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	8b 75 14	 mov	 esi, DWORD PTR _lParam$[ebp]
  00022	57		 push	 edi
  00023	68 03 01 00 00	 push	 259			; 00000103H
  00028	8d 4c 24 1d	 lea	 ecx, DWORD PTR _szGuid$[esp+301]
  0002c	6a 00		 push	 0
  0002e	51		 push	 ecx
  0002f	89 44 24 18	 mov	 DWORD PTR _hWnd$GSCopy$[esp+308], eax
  00033	89 74 24 20	 mov	 DWORD PTR _lParam$GSCopy$[esp+308], esi
  00037	c6 44 24 24 00	 mov	 BYTE PTR _szGuid$[esp+308], 0
  0003c	e8 00 00 00 00	 call	 _memset
  00041	8b 5d 10	 mov	 ebx, DWORD PTR _wParam$[ebp]
  00044	8b 7d 0c	 mov	 edi, DWORD PTR _uMsg$[ebp]
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	8b c6		 mov	 eax, esi
  0004c	c1 e8 10	 shr	 eax, 16			; 00000010H
  0004f	89 44 24 10	 mov	 DWORD PTR tv353[esp+296], eax
  00053	0f b7 d6	 movzx	 edx, si
  00056	52		 push	 edx
  00057	0f b7 c0	 movzx	 eax, ax
  0005a	50		 push	 eax
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR _hWnd$GSCopy$[esp+304]
  0005f	56		 push	 esi
  00060	0f b7 cb	 movzx	 ecx, bx
  00063	51		 push	 ecx
  00064	8b d3		 mov	 edx, ebx
  00066	c1 ea 10	 shr	 edx, 16			; 00000010H
  00069	52		 push	 edx
  0006a	53		 push	 ebx
  0006b	57		 push	 edi
  0006c	50		 push	 eax
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_0GB@KBNPPDGJ@WndProcMsg?0?5Wnd?5?$CFp?0?5Msg?50x?$CF?44X?0?5@
  00072	68 25 03 00 00	 push	 805			; 00000325H
  00077	6a 20		 push	 32			; 00000020H
  00079	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0007e	83 c4 2c	 add	 esp, 44			; 0000002cH
  00081	83 ff 16	 cmp	 edi, 22			; 00000016H
  00084	0f 87 05 01 00
	00		 ja	 $LN46@WndProcMes

; 801  :     char szGuid[_MAX_PATH] ={0};
; 802  :     POINTS lPoints = {0};
; 803  :     int iRet = 0;
; 804  : 
; 805  :     Log(LOG_DEBUG_WND,__LINE__,"WndProcMsg, Wnd %p, Msg 0x%.4X, WPrm 0x%.8X HI 0x%.4X LO 0x%.4X, LPrm 0x%.8X HI 0x%.4X LO 0x%.4X",hWnd,uMsg,wParam,HIWORD(wParam),LOWORD(wParam),lParam,HIWORD(lParam),LOWORD(lParam));
; 806  : 
; 807  :     switch(uMsg)

  0008a	0f 84 a3 00 00
	00		 je	 $LN38@WndProcMes
  00090	8b c7		 mov	 eax, edi
  00092	83 e8 02	 sub	 eax, 2
  00095	0f 84 8b 00 00
	00		 je	 $LN3@WndProcMes
  0009b	83 e8 0f	 sub	 eax, 15			; 0000000fH
  0009e	74 2e		 je	 SHORT $LN39@WndProcMes
  000a0	83 e8 01	 sub	 eax, 1
  000a3	0f 84 bf 03 00
	00		 je	 $LN4@WndProcMes

; 958  : 
; 959  :         case WM_QUIT:
; 960  :             break;
; 961  : 
; 962  :         default:
; 963  :             return (LRESULT)(DefWindowProc(hWnd,uMsg,wParam,lParam));

  000a9	8b 44 24 0c	 mov	 eax, DWORD PTR _hWnd$GSCopy$[esp+296]
  000ad	56		 push	 esi
  000ae	53		 push	 ebx
  000af	57		 push	 edi
  000b0	50		 push	 eax
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 964  :     }
; 965  :     return 0;
; 966  : }

  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b 8c 24 18 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+284]
  000c1	33 cc		 xor	 ecx, esp
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 10 00	 ret	 16			; 00000010H
$LN39@WndProcMes:

; 808  :     {
; 809  :         case WM_QUERYENDSESSION:    //session closure requested
; 810  :             Log(LOG_HEADER,__LINE__,"Session Closure Requested");

  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GJJBBOEE@Session?5Closure?5Requested?$AA@
  000d3	68 2a 03 00 00	 push	 810			; 0000032aH
  000d8	6a 02		 push	 2
  000da	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 811  :             _thSetInt(&gbTerminate,TRUE);

  000e2	6a 01		 push	 1
  000e4	bf 00 00 00 00	 mov	 edi, OFFSET ?gbTerminate@@3HA ; gbTerminate
  000e9	e8 00 00 00 00	 call	 ?_thSetInt@@YAXPAHH@Z	; _thSetInt
  000ee	83 c4 04	 add	 esp, 4

; 812  :             _thSetInt(&gbShutdown,TRUE);

  000f1	6a 01		 push	 1
  000f3	bf 00 00 00 00	 mov	 edi, OFFSET ?gbShutdown@@3HA ; gbShutdown
  000f8	e8 00 00 00 00	 call	 ?_thSetInt@@YAXPAHH@Z	; _thSetInt

; 813  :             return (LRESULT)(DefWindowProc(hWnd,uMsg,wParam,lParam));

  000fd	8b 4c 24 10	 mov	 ecx, DWORD PTR _hWnd$GSCopy$[esp+300]
  00101	83 c4 04	 add	 esp, 4
  00104	56		 push	 esi
  00105	53		 push	 ebx
  00106	6a 11		 push	 17			; 00000011H
  00108	51		 push	 ecx
  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 964  :     }
; 965  :     return 0;
; 966  : }

  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5b		 pop	 ebx
  00112	8b 8c 24 18 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+284]
  00119	33 cc		 xor	 ecx, esp
  0011b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c2 10 00	 ret	 16			; 00000010H
$LN3@WndProcMes:

; 950  :                     }
; 951  :                 }
; 952  :             }
; 953  :             break;
; 954  : 
; 955  :         case WM_DESTROY:
; 956  :             PostQuitMessage(0);

  00126	6a 00		 push	 0
  00128	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4

; 957  :             break;

  0012e	e9 35 03 00 00	 jmp	 $LN4@WndProcMes
$LN38@WndProcMes:

; 814  :             break;
; 815  : 
; 816  :         case WM_ENDSESSION:         //session is ending
; 817  :             Log(LOG_HEADER,__LINE__,"End Session");

  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LLINGCEN@End?5Session?$AA@
  00138	68 31 03 00 00	 push	 817			; 00000331H
  0013d	6a 02		 push	 2
  0013f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 818  :             LogElapsedTime(__LINE__,gTickStart,"SysStatus");

  00144	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?gTickStart@@3_KA+4
  0014a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gTickStart@@3_KA
  0014f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00152	52		 push	 edx
  00153	50		 push	 eax
  00154	bb 00 00 00 00	 mov	 ebx, OFFSET ??_C@_09KECABMHK@SysStatus?$AA@
  00159	bf 32 03 00 00	 mov	 edi, 818		; 00000332H
  0015e	e8 00 00 00 00	 call	 ?LogElapsedTime@@YAXK_KPAD@Z ; LogElapsedTime

; 819  :             return (LRESULT)(DefWindowProc(hWnd,uMsg,wParam,lParam));

  00163	8b 4d 10	 mov	 ecx, DWORD PTR _wParam$[ebp]
  00166	8b 54 24 14	 mov	 edx, DWORD PTR _hWnd$GSCopy$[esp+304]
  0016a	83 c4 08	 add	 esp, 8
  0016d	56		 push	 esi
  0016e	51		 push	 ecx
  0016f	6a 16		 push	 22			; 00000016H
  00171	52		 push	 edx
  00172	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 964  :     }
; 965  :     return 0;
; 966  : }

  00178	5f		 pop	 edi
  00179	5e		 pop	 esi
  0017a	5b		 pop	 ebx
  0017b	8b 8c 24 18 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+284]
  00182	33 cc		 xor	 ecx, esp
  00184	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00189	8b e5		 mov	 esp, ebp
  0018b	5d		 pop	 ebp
  0018c	c2 10 00	 ret	 16			; 00000010H
$LN46@WndProcMes:

; 801  :     char szGuid[_MAX_PATH] ={0};
; 802  :     POINTS lPoints = {0};
; 803  :     int iRet = 0;
; 804  : 
; 805  :     Log(LOG_DEBUG_WND,__LINE__,"WndProcMsg, Wnd %p, Msg 0x%.4X, WPrm 0x%.8X HI 0x%.4X LO 0x%.4X, LPrm 0x%.8X HI 0x%.4X LO 0x%.4X",hWnd,uMsg,wParam,HIWORD(wParam),LOWORD(wParam),lParam,HIWORD(lParam),LOWORD(lParam));
; 806  : 
; 807  :     switch(uMsg)

  0018f	8b c7		 mov	 eax, edi
  00191	2d 00 02 00 00	 sub	 eax, 512		; 00000200H
  00196	0f 84 13 02 00
	00		 je	 $LN11@WndProcMes
  0019c	83 e8 19	 sub	 eax, 25			; 00000019H
  0019f	74 25		 je	 SHORT $LN37@WndProcMes

; 958  : 
; 959  :         case WM_QUIT:
; 960  :             break;
; 961  : 
; 962  :         default:
; 963  :             return (LRESULT)(DefWindowProc(hWnd,uMsg,wParam,lParam));

  001a1	8b 44 24 0c	 mov	 eax, DWORD PTR _hWnd$GSCopy$[esp+296]
  001a5	56		 push	 esi
  001a6	53		 push	 ebx
  001a7	57		 push	 edi
  001a8	50		 push	 eax
  001a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16

; 964  :     }
; 965  :     return 0;
; 966  : }

  001af	5f		 pop	 edi
  001b0	5e		 pop	 esi
  001b1	5b		 pop	 ebx
  001b2	8b 8c 24 18 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+284]
  001b9	33 cc		 xor	 ecx, esp
  001bb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c0	8b e5		 mov	 esp, ebp
  001c2	5d		 pop	 ebp
  001c3	c2 10 00	 ret	 16			; 00000010H
$LN37@WndProcMes:

; 820  :             break;
; 821  : 
; 822  : 		case WM_DEVICECHANGE:
; 823  : 			switch (wParam)

  001c6	8b c3		 mov	 eax, ebx
  001c8	2d 00 80 00 00	 sub	 eax, 32768		; 00008000H
  001cd	74 3c		 je	 SHORT $LN28@WndProcMes
  001cf	83 e8 04	 sub	 eax, 4
  001d2	74 37		 je	 SHORT $LN28@WndProcMes
  001d4	2d fb 7f 00 00	 sub	 eax, 32763		; 00007ffbH
  001d9	0f 85 89 02 00
	00		 jne	 $LN4@WndProcMes

; 824  : 			{
; 825  :                 case DBT_CONFIGCHANGED:
; 826  :                     //current configuration changed
; 827  :                     break;
; 828  : 
; 829  :                 case DBT_CUSTOMEVENT:
; 830  :                     //customer device event
; 831  :                     //DEV_BROADCAST_HDR
; 832  :                     break;
; 833  : 
; 834  :                 case DBT_DEVICETYPESPECIFIC:
; 835  :                     //device specific
; 836  :                     //DEV_BROADCAST_HDR
; 837  :                     break;
; 838  : 
; 839  :                 case DBT_DEVNODES_CHANGED:
; 840  :                     //a device has been added to or removed from the system
; 841  :                     break;
; 842  : 
; 843  :                 case DBT_USERDEFINED:
; 844  :                     //device event identifies a user-defined event
; 845  :                     {
; 846  :                         _DEV_BROADCAST_USERDEFINED * pDevBcastUserDefined = (_DEV_BROADCAST_USERDEFINED *)lParam;
; 847  :                         if(!pDevBcastUserDefined)

  001df	85 f6		 test	 esi, esi
  001e1	0f 84 81 02 00
	00		 je	 $LN4@WndProcMes

; 848  :                             break;
; 849  : 
; 850  :                         Log(LOG_HEADER,__LINE__,"User Defined %s, Size %u, DevType %u",pDevBcastUserDefined->dbud_szName,pDevBcastUserDefined->dbud_dbh.dbch_size,pDevBcastUserDefined->dbud_dbh.dbch_devicetype);

  001e7	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  001ea	8b 16		 mov	 edx, DWORD PTR [esi]
  001ec	51		 push	 ecx
  001ed	52		 push	 edx
  001ee	83 c6 0c	 add	 esi, 12			; 0000000cH
  001f1	56		 push	 esi
  001f2	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@OJAKBKAK@User?5Defined?5?$CFs?0?5Size?5?$CFu?0?5DevTyp@
  001f7	68 52 03 00 00	 push	 850			; 00000352H
  001fc	6a 02		 push	 2
  001fe	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00203	83 c4 18	 add	 esp, 24			; 00000018H

; 851  :                     }
; 852  :                     break;

  00206	e9 5d 02 00 00	 jmp	 $LN4@WndProcMes
$LN28@WndProcMes:

; 853  : 
; 854  : 				case DBT_DEVICEARRIVAL:
; 855  : 				case DBT_DEVICEREMOVECOMPLETE:
; 856  :                     //device has been either arrived or completly removed
; 857  :                     {
; 858  : 					    PDEV_BROADCAST_HDR pDevBcastHdr = (PDEV_BROADCAST_HDR)lParam;
; 859  : 					    if (!pDevBcastHdr)

  0020b	85 f6		 test	 esi, esi
  0020d	0f 84 55 02 00
	00		 je	 $LN4@WndProcMes

; 860  : 						    break;
; 861  : 
; 862  :                         Log(LOG_HEADER,__LINE__,"Device %s, Size %u, DevType %u",(wParam==DBT_DEVICEARRIVAL?"Arrived":"Removed"),pDevBcastHdr->dbch_size,pDevBcastHdr->dbch_devicetype);

  00213	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07NHAMMCDJ@Arrived?$AA@
  00218	81 fb 00 80 00
	00		 cmp	 ebx, 32768		; 00008000H
  0021e	74 05		 je	 SHORT $LN45@WndProcMes
  00220	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07PKIBBDFP@Removed?$AA@
$LN45@WndProcMes:
  00225	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00228	8b 16		 mov	 edx, DWORD PTR [esi]
  0022a	51		 push	 ecx
  0022b	52		 push	 edx
  0022c	50		 push	 eax
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@PNOLPDFB@Device?5?$CFs?0?5Size?5?$CFu?0?5DevType?5?$CFu?$AA@
  00232	68 5e 03 00 00	 push	 862			; 0000035eH
  00237	6a 02		 push	 2
  00239	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 863  :                         if (pDevBcastHdr->dbch_devicetype == DBT_DEVTYP_DEVICEINTERFACE)

  0023e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00241	83 c4 18	 add	 esp, 24			; 00000018H
  00244	83 f8 05	 cmp	 eax, 5
  00247	75 58		 jne	 SHORT $LN26@WndProcMes

; 864  :                         {
; 865  : 					        PDEV_BROADCAST_DEVICEINTERFACE pDevBcastDevIface = (PDEV_BROADCAST_DEVICEINTERFACE)lParam;
; 866  :                             Log(LOG_MESSAGE,__LINE__,"Usb CHANGE Dev <%s GUID %s>",(LPBYTE)pDevBcastDevIface->dbcc_name,GUID2Str(&pDevBcastDevIface->dbcc_classguid,szGuid,sizeof(szGuid)-1));

  00249	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  0024c	8d 5e 1c	 lea	 ebx, DWORD PTR [esi+28]
  0024f	8d 74 24 18	 lea	 esi, DWORD PTR _szGuid$[esp+296]
  00253	e8 00 00 00 00	 call	 ?GUID2Str@@YAPADPAU_GUID@@PADI@Z ; GUID2Str
  00258	50		 push	 eax
  00259	53		 push	 ebx
  0025a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HKOFJDPP@Usb?5CHANGE?5Dev?5?$DM?$CFs?5GUID?5?$CFs?$DO?$AA@
  0025f	68 62 03 00 00	 push	 866			; 00000362H
  00264	6a 01		 push	 1
  00266	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0026b	83 c4 14	 add	 esp, 20			; 00000014H

; 867  : 
; 868  : 					        if (wParam == DBT_DEVICEARRIVAL)

  0026e	81 7d 10 00 80
	00 00		 cmp	 DWORD PTR _wParam$[ebp], 32768 ; 00008000H

; 869  : 						        USBTraceInfo("USB ARRIVAL",(PCHAR)pDevBcastDevIface->dbcc_name);

  00275	8b c3		 mov	 eax, ebx
  00277	75 14		 jne	 SHORT $LN25@WndProcMes
  00279	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FPDKOEDO@USB?5ARRIVAL?$AA@

; 870  :                             else
; 871  : 						        USBTraceInfo("USB  REMOVE",(PCHAR)pDevBcastDevIface->dbcc_name);

  0027e	e8 00 00 00 00	 call	 ?USBTraceInfo@@YAXPAD0@Z ; USBTraceInfo

; 872  : 
; 873  :                             _thSetInt(&gbForceChecking,TRUE);

  00283	bf 00 00 00 00	 mov	 edi, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  00288	e9 ce 01 00 00	 jmp	 $LN48@WndProcMes
$LN25@WndProcMes:

; 870  :                             else
; 871  : 						        USBTraceInfo("USB  REMOVE",(PCHAR)pDevBcastDevIface->dbcc_name);

  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ENJCMGFB@USB?5?5REMOVE?$AA@
  00292	e8 00 00 00 00	 call	 ?USBTraceInfo@@YAXPAD0@Z ; USBTraceInfo

; 872  : 
; 873  :                             _thSetInt(&gbForceChecking,TRUE);

  00297	bf 00 00 00 00	 mov	 edi, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  0029c	e9 ba 01 00 00	 jmp	 $LN48@WndProcMes
$LN26@WndProcMes:

; 874  : 
; 875  :                         }
; 876  :                         else if(pDevBcastHdr->dbch_devicetype == DBT_DEVTYP_VOLUME)

  002a1	83 f8 02	 cmp	 eax, 2
  002a4	75 27		 jne	 SHORT $LN22@WndProcMes

; 877  :                         {
; 878  : 					        PDEV_BROADCAST_VOLUME pDevBcastVolume = (PDEV_BROADCAST_VOLUME)lParam;
; 879  :                             Log(LOG_MESSAGE,__LINE__,"Volume CHANGE <Flags %p, UnitMask %p>",pDevBcastVolume->dbcv_flags,pDevBcastVolume->dbcv_unitmask);

  002a6	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  002a9	0f b7 4e 10	 movzx	 ecx, WORD PTR [esi+16]
  002ad	50		 push	 eax
  002ae	51		 push	 ecx
  002af	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@OJJDNJOH@Volume?5CHANGE?5?$DMFlags?5?$CFp?0?5UnitMas@
  002b4	68 6f 03 00 00	 push	 879			; 0000036fH
  002b9	6a 01		 push	 1
  002bb	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002c0	83 c4 14	 add	 esp, 20			; 00000014H

; 880  : 
; 881  :                             _thSetInt(&gbForceChecking,TRUE);

  002c3	bf 00 00 00 00	 mov	 edi, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  002c8	e9 91 01 00 00	 jmp	 $LN49@WndProcMes
$LN22@WndProcMes:

; 882  :                         }
; 883  :                         else if(pDevBcastHdr->dbch_devicetype == DBT_DEVTYP_OEM)

  002cd	85 c0		 test	 eax, eax
  002cf	75 21		 jne	 SHORT $LN20@WndProcMes

; 884  :                         {
; 885  : 					        PDEV_BROADCAST_OEM pDevBcastOem = (PDEV_BROADCAST_OEM)lParam;
; 886  :                             Log(LOG_MESSAGE,__LINE__,"Oem CHANGE <Id %p, SuppFunc %p>",pDevBcastOem->dbco_identifier,pDevBcastOem->dbco_suppfunc);

  002d1	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  002d4	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  002d7	52		 push	 edx
  002d8	50		 push	 eax
  002d9	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@FNGBCCOE@Oem?5CHANGE?5?$DMId?5?$CFp?0?5SuppFunc?5?$CFp?$DO?$AA@
  002de	68 76 03 00 00	 push	 886			; 00000376H
  002e3	6a 01		 push	 1
  002e5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002ea	83 c4 14	 add	 esp, 20			; 00000014H
  002ed	e9 76 01 00 00	 jmp	 $LN4@WndProcMes
$LN20@WndProcMes:

; 887  :                         }
; 888  :                         else if(pDevBcastHdr->dbch_devicetype == DBT_DEVTYP_DEVNODE)

  002f2	83 f8 01	 cmp	 eax, 1
  002f5	75 1c		 jne	 SHORT $LN18@WndProcMes

; 889  :                         {
; 890  : 					        PDEV_BROADCAST_DEVNODE pDevBcastDevNode = (PDEV_BROADCAST_DEVNODE)lParam;
; 891  :                             Log(LOG_MESSAGE,__LINE__,"DevNode CHANGE <%p>",pDevBcastDevNode->dbcd_devnode);

  002f7	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  002fa	51		 push	 ecx
  002fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FJDGCJID@DevNode?5CHANGE?5?$DM?$CFp?$DO?$AA@
  00300	68 7b 03 00 00	 push	 891			; 0000037bH
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0030b	83 c4 10	 add	 esp, 16			; 00000010H
  0030e	e9 55 01 00 00	 jmp	 $LN4@WndProcMes
$LN18@WndProcMes:

; 892  :                         }
; 893  :                         else if(pDevBcastHdr->dbch_devicetype == DBT_DEVTYP_PORT)

  00313	83 f8 03	 cmp	 eax, 3
  00316	75 29		 jne	 SHORT $LN16@WndProcMes

; 894  :                         {
; 895  : 					        PDEV_BROADCAST_PORT pDevBcastPort = (PDEV_BROADCAST_PORT)lParam;
; 896  :                             Log(LOG_MESSAGE,__LINE__,"Port CHANGE <%s>",(LPBYTE)pDevBcastPort->dbcp_name);

  00318	83 c6 0c	 add	 esi, 12			; 0000000cH
  0031b	56		 push	 esi
  0031c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LPBNHOKC@Port?5CHANGE?5?$DM?$CFs?$DO?$AA@
  00321	68 80 03 00 00	 push	 896			; 00000380H
  00326	6a 01		 push	 1
  00328	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 897  : 
; 898  :                             _thSetInt(&gbForceChecking,TRUE);

  0032d	6a 01		 push	 1
  0032f	bf 00 00 00 00	 mov	 edi, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  00334	e8 00 00 00 00	 call	 ?_thSetInt@@YAXPAHH@Z	; _thSetInt
  00339	83 c4 14	 add	 esp, 20			; 00000014H
  0033c	e9 27 01 00 00	 jmp	 $LN4@WndProcMes
$LN16@WndProcMes:

; 899  :                         }
; 900  :                         else if(pDevBcastHdr->dbch_devicetype == DBT_DEVTYP_NET)

  00341	83 f8 04	 cmp	 eax, 4
  00344	75 26		 jne	 SHORT $LN14@WndProcMes

; 901  :                         {
; 902  : 					        PDEV_BROADCAST_NET pDevBcastNet = (PDEV_BROADCAST_NET)lParam;
; 903  :                             Log(LOG_MESSAGE,__LINE__,"Net CHANGE <Resource %p, Flags %p>",(LPBYTE)pDevBcastNet->dbcn_resource,pDevBcastNet->dbcn_flags);

  00346	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00349	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0034c	52		 push	 edx
  0034d	50		 push	 eax
  0034e	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@BNLENJBO@Net?5CHANGE?5?$DMResource?5?$CFp?0?5Flags?5?$CF@
  00353	68 87 03 00 00	 push	 903			; 00000387H
  00358	6a 01		 push	 1
  0035a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0035f	83 c4 14	 add	 esp, 20			; 00000014H

; 904  : 
; 905  :                             _thSetInt(&gbForceChecking,TRUE);

  00362	bf 00 00 00 00	 mov	 edi, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  00367	e9 f2 00 00 00	 jmp	 $LN49@WndProcMes
$LN14@WndProcMes:

; 906  :                         }
; 907  :                         else if(pDevBcastHdr->dbch_devicetype == DBT_DEVTYP_HANDLE)

  0036c	83 f8 06	 cmp	 eax, 6
  0036f	0f 85 f3 00 00
	00		 jne	 $LN4@WndProcMes

; 908  :                         {
; 909  : 					        PDEV_BROADCAST_HANDLE pDevBcastHandle = (PDEV_BROADCAST_HANDLE)lParam;
; 910  :                             Log(LOG_MESSAGE,__LINE__,"Handle CHANGE <Handle %p, NameOffset %d, Name %s, DevNotify %p, EvntGUID %s>",pDevBcastHandle->dbch_handle,pDevBcastHandle->dbch_nameoffset,(LPBYTE)pDevBcastHandle->dbch_data,pDevBcastHandle->dbch_hdevnotify,GUID2Str(&pDevBcastHandle->dbch_eventguid,szGuid,sizeof(szGuid)-1));

  00375	8d 7e 14	 lea	 edi, DWORD PTR [esi+20]
  00378	8d 74 24 18	 lea	 esi, DWORD PTR _szGuid$[esp+296]
  0037c	e8 00 00 00 00	 call	 ?GUID2Str@@YAPADPAU_GUID@@PADI@Z ; GUID2Str
  00381	50		 push	 eax
  00382	8b 44 24 18	 mov	 eax, DWORD PTR _lParam$GSCopy$[esp+300]
  00386	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00389	51		 push	 ecx
  0038a	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0038d	8d 50 28	 lea	 edx, DWORD PTR [eax+40]
  00390	52		 push	 edx
  00391	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00394	51		 push	 ecx
  00395	52		 push	 edx
  00396	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@GBOFOCLM@Handle?5CHANGE?5?$DMHandle?5?$CFp?0?5NameOf@
  0039b	68 8e 03 00 00	 push	 910			; 0000038eH
  003a0	6a 01		 push	 1
  003a2	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003a7	83 c4 20	 add	 esp, 32			; 00000020H

; 911  :                         }
; 912  :                     }
; 913  :                     break;
; 914  :             }
; 915  :             break;

  003aa	e9 b9 00 00 00	 jmp	 $LN4@WndProcMes
$LN11@WndProcMes:

; 916  : 
; 917  :         case WM_MOUSEMOVE:
; 918  :             //if mouse is moved in the window square, control key is pressed
; 919  :             //ask whether or not it should be stopped;
; 920  :             //if so, set terminate flag to stop loop processing
; 921  :             if(wParam==MK_CONTROL)

  003af	83 fb 08	 cmp	 ebx, 8
  003b2	75 50		 jne	 SHORT $LN10@WndProcMes

; 922  :             {
; 923  :                 lPoints = MAKEPOINTS(lParam);
; 924  :                 if(lPoints.x<=20 && lPoints.y<=20)

  003b4	66 83 fe 14	 cmp	 si, 20			; 00000014H
  003b8	0f 8f aa 00 00
	00		 jg	 $LN4@WndProcMes
  003be	66 83 7c 24 10
	14		 cmp	 WORD PTR tv353[esp+296], 20 ; 00000014H
  003c4	0f 8f 9e 00 00
	00		 jg	 $LN4@WndProcMes

; 925  :                 {
; 926  :                     iRet = MessageBox(hWnd,"Would you like to close this application?","SysStatus",MB_YESNO|MB_ICONQUESTION|MB_SYSTEMMODAL);

  003ca	8b 44 24 0c	 mov	 eax, DWORD PTR _hWnd$GSCopy$[esp+296]
  003ce	68 24 10 00 00	 push	 4132			; 00001024H
  003d3	68 00 00 00 00	 push	 OFFSET ??_C@_09KECABMHK@SysStatus?$AA@
  003d8	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@KDAHPGC@Would?5you?5like?5to?5close?5this?5app@
  003dd	50		 push	 eax
  003de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 927  :                     if(iRet==IDYES)

  003e4	83 f8 06	 cmp	 eax, 6
  003e7	75 7f		 jne	 SHORT $LN4@WndProcMes

; 928  :                     {
; 929  :                         Log(LOG_HEADER,__LINE__,"Exit Requested");

  003e9	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BIPEBJDO@Exit?5Requested?$AA@
  003ee	68 a1 03 00 00	 push	 929			; 000003a1H
  003f3	6a 02		 push	 2
  003f5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 930  :                         _thSetInt(&gbTerminate,TRUE);

  003fd	bf 00 00 00 00	 mov	 edi, OFFSET ?gbTerminate@@3HA ; gbTerminate

; 931  :                     }
; 932  :                 }
; 933  :             }

  00402	eb 5a		 jmp	 SHORT $LN49@WndProcMes
$LN10@WndProcMes:

; 934  :             //if mouse is moved in the window square, shift key is pressed
; 935  :             //ask whether or not it should be quickly stopped;
; 936  :             //if so, set terminate and shutdown flags to stop loop 
; 937  :             //processing as it would do during a end session
; 938  :             //(shutdown, logoff, restart)
; 939  :             else if(wParam==MK_SHIFT)

  00404	83 fb 04	 cmp	 ebx, 4
  00407	75 5f		 jne	 SHORT $LN4@WndProcMes

; 940  :             {
; 941  :                 lPoints = MAKEPOINTS(lParam);
; 942  :                 if(lPoints.x<=20 && lPoints.y<=20)

  00409	66 83 fe 14	 cmp	 si, 20			; 00000014H
  0040d	7f 59		 jg	 SHORT $LN4@WndProcMes
  0040f	66 83 7c 24 10
	14		 cmp	 WORD PTR tv353[esp+296], 20 ; 00000014H
  00415	7f 51		 jg	 SHORT $LN4@WndProcMes

; 943  :                 {
; 944  :                     iRet = MessageBox(hWnd,"Would you like to quickly close this application?","SysStatus",MB_YESNO|MB_ICONQUESTION|MB_SYSTEMMODAL);

  00417	8b 4c 24 0c	 mov	 ecx, DWORD PTR _hWnd$GSCopy$[esp+296]
  0041b	68 24 10 00 00	 push	 4132			; 00001024H
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_09KECABMHK@SysStatus?$AA@
  00425	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@MBHJGPCP@Would?5you?5like?5to?5quickly?5close?5@
  0042a	51		 push	 ecx
  0042b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16

; 945  :                     if(iRet==IDYES)

  00431	83 f8 06	 cmp	 eax, 6
  00434	75 32		 jne	 SHORT $LN4@WndProcMes

; 946  :                     {
; 947  :                         Log(LOG_HEADER,__LINE__,"Quick Exit Requested");

  00436	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@CDGGKCEM@Quick?5Exit?5Requested?$AA@
  0043b	68 b3 03 00 00	 push	 947			; 000003b3H
  00440	6a 02		 push	 2
  00442	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00447	83 c4 0c	 add	 esp, 12			; 0000000cH

; 948  :                         _thSetInt(&gbTerminate,TRUE);

  0044a	6a 01		 push	 1
  0044c	bf 00 00 00 00	 mov	 edi, OFFSET ?gbTerminate@@3HA ; gbTerminate
  00451	e8 00 00 00 00	 call	 ?_thSetInt@@YAXPAHH@Z	; _thSetInt

; 949  :                         _thSetInt(&gbShutdown,TRUE);

  00456	bf 00 00 00 00	 mov	 edi, OFFSET ?gbShutdown@@3HA ; gbShutdown
$LN48@WndProcMes:

; 948  :                         _thSetInt(&gbTerminate,TRUE);

  0045b	83 c4 04	 add	 esp, 4
$LN49@WndProcMes:

; 949  :                         _thSetInt(&gbShutdown,TRUE);

  0045e	6a 01		 push	 1
  00460	e8 00 00 00 00	 call	 ?_thSetInt@@YAXPAHH@Z	; _thSetInt
  00465	83 c4 04	 add	 esp, 4
$LN4@WndProcMes:

; 964  :     }
; 965  :     return 0;
; 966  : }

  00468	8b 8c 24 24 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+296]
  0046f	5f		 pop	 edi
  00470	5e		 pop	 esi
  00471	5b		 pop	 ebx
  00472	33 cc		 xor	 ecx, esp
  00474	33 c0		 xor	 eax, eax
  00476	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0047b	8b e5		 mov	 esp, ebp
  0047d	5d		 pop	 ebp
  0047e	c2 10 00	 ret	 16			; 00000010H
?WndProcMessage@@YGJPAUHWND__@@IIJ@Z ENDP		; WndProcMessage
_TEXT	ENDS
PUBLIC	?AppUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; AppUnhandledExceptionFilter
; Function compile flags: /Ogtpy
;	COMDAT ?AppUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z
_TEXT	SEGMENT
_pExceptionInfo$ = 8					; size = 4
?AppUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z PROC ; AppUnhandledExceptionFilter, COMDAT

; 570  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H

; 571  :     Log(LOG_HEADER,__LINE__,"AppUnhndldExcptFltr, Attempt to create MiniDump file before exit proc due to unhndld exception.");

  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0GA@GFOAHNCA@AppUnhndldExcptFltr?0?5Attempt?5to?5@
  0000b	68 3b 02 00 00	 push	 571			; 0000023bH
  00010	6a 02		 push	 2
  00012	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 572  : 	CreateMiniDump(pExceptionInfo);

  00017	8b 4d 08	 mov	 ecx, DWORD PTR _pExceptionInfo$[ebp]
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	e8 00 00 00 00	 call	 ?CreateMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z ; CreateMiniDump

; 573  : 
; 574  : 	exit(static_cast<int>(ERROR_UNHANDLED_EXCEPTION));

  00022	68 3e 02 00 00	 push	 574			; 0000023eH
  00027	e8 00 00 00 00	 call	 _exit
$LN4@AppUnhandl:
$LN3@AppUnhandl:
  0002c	cc		 int	 3
?AppUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ENDP ; AppUnhandledExceptionFilter
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0out_of_range@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	56		 push	 esi
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	50		 push	 eax
  00018	8d 44 24 0c	 lea	 eax, DWORD PTR __$EHRec$[esp+24]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	8b f1		 mov	 esi, ecx
  00024	89 74 24 08	 mov	 DWORD PTR _this$[esp+24], esi
  00028	8b 44 24 1c	 mov	 eax, DWORD PTR ___that$[esp+20]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  00032	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  0003a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@
  00040	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00048	8b c6		 mov	 eax, esi
  0004a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	5e		 pop	 esi
  00057	83 c4 10	 add	 esp, 16			; 00000010H
  0005a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 f8	 lea	 eax, DWORD PTR [edx-8]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_Gout_of_range@std@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_Gout_of_range@std@@UAEPAXI@Z$0
__ehfuncinfo$??_Gout_of_range@std@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_Gout_of_range@std@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??_Gout_of_range@std@@UAEPAXI@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	56		 push	 esi
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	50		 push	 eax
  00018	8d 44 24 0c	 lea	 eax, DWORD PTR __$EHRec$[esp+24]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	8b f1		 mov	 esi, ecx
  00024	89 74 24 08	 mov	 DWORD PTR _this$[esp+24], esi
  00028	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@
  0002e	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00036	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  0003b	f6 44 24 1c 01	 test	 BYTE PTR ___flags$[esp+20], 1
  00040	74 09		 je	 SHORT $LN7@scalar@5
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00048	83 c4 04	 add	 esp, 4
$LN7@scalar@5:
  0004b	8b c6		 mov	 eax, esi
  0004d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	5e		 pop	 esi
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_Gout_of_range@std@@UAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
__ehhandler$??_Gout_of_range@std@@UAEPAXI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 f8	 lea	 eax, DWORD PTR [edx-8]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_Gout_of_range@std@@UAEPAXI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 129  : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	56		 push	 esi
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	50		 push	 eax
  00018	8d 44 24 0c	 lea	 eax, DWORD PTR __$EHRec$[esp+24]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	8b f1		 mov	 esi, ecx
  00024	89 74 24 08	 mov	 DWORD PTR _this$[esp+24], esi
  00028	8b 44 24 1c	 mov	 eax, DWORD PTR __Message$[esp+20]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00032	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  0003a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7out_of_range@std@@6B@

; 130  : 		}

  00040	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00048	8b c6		 mov	 eax, esi
  0004a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	5e		 pop	 esi
  00057	83 c4 10	 add	 esp, 16			; 00000010H
  0005a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
__ehhandler$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 f8	 lea	 eax, DWORD PTR [edx-8]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__ehfuncinfo$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0002e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

  00031	89 75 ec	 mov	 DWORD PTR __Next$[ebp], esi

; 128  : 
; 129  : 	_TRY_BEGIN

  00034	33 db		 xor	 ebx, ebx
  00036	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+12], ebx
  00039	8d a4 24 00 00
	00 00		 npad	 7
$LL6@Uninit_cop@2:

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

  00040	3b 7d 0c	 cmp	 edi, DWORD PTR __Last$[ebp]
  00043	74 3e		 je	 SHORT $LN4@Uninit_cop@2

; 131  : 		_Al.construct(_Dest, *_First);

  00045	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00049	3b f3		 cmp	 esi, ebx
  0004b	74 25		 je	 SHORT $LN18@Uninit_cop@2
  0004d	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00054	89 5e 14	 mov	 DWORD PTR [esi+20], ebx
  00057	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  0005b	72 05		 jb	 SHORT $LN45@Uninit_cop@2
  0005d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00060	eb 03		 jmp	 SHORT $LN46@Uninit_cop@2
$LN45@Uninit_cop@2:
  00062	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
$LN46@Uninit_cop@2:
  00065	88 18		 mov	 BYTE PTR [eax], bl
  00067	6a ff		 push	 -1
  00069	53		 push	 ebx
  0006a	57		 push	 edi
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN18@Uninit_cop@2:
  00072	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+12], bl

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

  00075	83 c6 1c	 add	 esi, 28			; 0000001cH
  00078	89 75 10	 mov	 DWORD PTR __Dest$[ebp], esi
  0007b	83 c7 1c	 add	 edi, 28			; 0000001cH
  0007e	89 7d 08	 mov	 DWORD PTR __First$[ebp], edi
  00081	eb bd		 jmp	 SHORT $LL6@Uninit_cop@2
$LN4@Uninit_cop@2:
  00083	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 136  : 	_CATCH_END
; 137  : 	return (_Dest);

  0008a	8b c6		 mov	 eax, esi

; 138  : 	}

  0008c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00096	59		 pop	 ecx
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
__catch$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

  0009e	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  000a1	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  000a4	3b f7		 cmp	 esi, edi
  000a6	74 0c		 je	 SHORT $LN1@Uninit_cop@2
$LL3@Uninit_cop@2:

; 134  : 		_Al.destroy(_Next);

  000a8	e8 00 00 00 00	 call	 ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

  000ad	83 c6 1c	 add	 esi, 28			; 0000001cH
  000b0	3b f7		 cmp	 esi, edi
  000b2	75 f4		 jne	 SHORT $LL3@Uninit_cop@2
$LN1@Uninit_cop@2:

; 135  : 	_RERAISE;

  000b4	33 db		 xor	 ebx, ebx
  000b6	53		 push	 ebx
  000b7	53		 push	 ebx
  000b8	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN55@Uninit_cop@2:
$LN54@Uninit_cop@2:
  000bd	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX0@Z		; operator delete
__ehhandler$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
  00005	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00009	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000c	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000f	33 c8		 xor	 ecx, eax
  00011	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00016	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
$T197480 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$197485 = 12					; size = 1
__Last$ = 12						; size = 4
??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; __Dest$ = edx

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	51		 push	 ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

  00001	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Cat$197485[esp]
  00005	c6 04 24 00	 mov	 BYTE PTR $T197480[esp+4], 0
  00009	8b 04 24	 mov	 eax, DWORD PTR $T197480[esp+4]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 823  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$unchecked_uninitialized_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
$T197538 = -4						; size = 1
__First$ = 8						; size = 4
__Cat$197542 = 12					; size = 1
__Last$ = 12						; size = 4
??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; __Ptr$ = edx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	51		 push	 ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

  00001	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Cat$197542[esp]
  00005	c6 04 24 00	 mov	 BYTE PTR $T197538[esp+4], 0
  00009	8b 04 24	 mov	 eax, DWORD PTR $T197538[esp+4]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1142 : 		}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c2 08 00	 ret	 8
??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$1
__ehfuncinfo$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T197560 = -84						; size = 28
$T197559 = -56						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ PROC ; std::vector<void *,std::allocator<void *> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	83 ec 48	 sub	 esp, 72			; 00000048H
  00017	53		 push	 ebx
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c4		 xor	 eax, esp
  0001f	50		 push	 eax
  00020	8d 44 24 50	 lea	 eax, DWORD PTR __$EHRec$[esp+92]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

  0002a	6a 12		 push	 18			; 00000012H
  0002c	33 db		 xor	 ebx, ebx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00033	8d 4c 24 10	 lea	 ecx, DWORD PTR $T197560[esp+100]
  00037	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T197560[esp+124], 15 ; 0000000fH
  0003f	89 5c 24 24	 mov	 DWORD PTR $T197560[esp+120], ebx
  00043	88 5c 24 14	 mov	 BYTE PTR $T197560[esp+104], bl
  00047	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004c	89 5c 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], ebx
  00050	8d 44 24 08	 lea	 eax, DWORD PTR $T197560[esp+92]
  00054	50		 push	 eax
  00055	8d 4c 24 28	 lea	 ecx, DWORD PTR $T197559[esp+96]
  00059	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005e	c6 44 24 58 01	 mov	 BYTE PTR __$EHRec$[esp+100], 1
  00063	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T197559[esp+92], OFFSET ??_7length_error@std@@6B@
  0006b	88 5c 24 58	 mov	 BYTE PTR __$EHRec$[esp+100], bl
  0006f	68 00 00 00 00	 push	 OFFSET __TI3?AVlength_error@std@@
  00074	8d 4c 24 28	 lea	 ecx, DWORD PTR $T197559[esp+96]
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN45@Xlen@9:
$LN44@Xlen@9:
  0007e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$0:
  00000	8d 4d ac	 lea	 ecx, DWORD PTR $T197560[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR $T197559[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
__ehhandler$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 b4	 lea	 eax, DWORD PTR [edx-76]
  00017	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ ENDP ; std::vector<void *,std::allocator<void *> >::_Xlen
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$0
__catchsym$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$2
__tryblocktable$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$5
__ehfuncinfo$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z
_TEXT	SEGMENT
__Tmp$148109 = -28					; size = 4
__Whereoff$148095 = -28					; size = 4
__Ncopied$148096 = -24					; size = 4
__Newvec$148094 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 8
?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z PROC ; std::vector<void *,std::allocator<void *> >::_Insert_n, COMDAT
; __Val$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f1		 mov	 esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

  0002d	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00033	85 d2		 test	 edx, edx
  00035	75 04		 jne	 SHORT $LN29@Insert_n
  00037	33 db		 xor	 ebx, ebx
  00039	eb 0b		 jmp	 SHORT $LN114@Insert_n
$LN29@Insert_n:
  0003b	8b 1d 14 00 00
	00		 mov	 ebx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20
  00041	2b da		 sub	 ebx, edx
  00043	c1 fb 02	 sar	 ebx, 2
$LN114@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)
; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

  00046	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  0004b	8b c8		 mov	 ecx, eax
  0004d	2b ca		 sub	 ecx, edx
  0004f	c1 f9 02	 sar	 ecx, 2
  00052	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00057	2b d1		 sub	 edx, ecx
  00059	83 fa 01	 cmp	 edx, 1
  0005c	73 05		 jae	 SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

  0005e	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ ; std::vector<void *,std::allocator<void *> >::_Xlen
$LN117@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

  00063	41		 inc	 ecx
  00064	3b d9		 cmp	 ebx, ecx
  00066	0f 83 e1 00 00
	00		 jae	 $LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  0006c	8b c3		 mov	 eax, ebx
  0006e	d1 e8		 shr	 eax, 1
  00070	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  00075	2b d0		 sub	 edx, eax
  00077	3b d3		 cmp	 edx, ebx
  00079	73 04		 jae	 SHORT $LN17@Insert_n
  0007b	33 db		 xor	 ebx, ebx
  0007d	eb 02		 jmp	 SHORT $LN18@Insert_n
$LN17@Insert_n:
  0007f	03 d8		 add	 ebx, eax
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

  00081	3b d9		 cmp	 ebx, ecx
  00083	73 02		 jae	 SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

  00085	8b d9		 mov	 ebx, ecx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  00087	8b cb		 mov	 ecx, ebx
  00089	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAX@std@@QAEPAPAXI@Z ; std::allocator<void *>::allocate
  0008e	89 45 ec	 mov	 DWORD PTR __Newvec$148094[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

  00091	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp+4]
  00094	2b 0d 0c 00 00
	00		 sub	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  0009a	c1 f9 02	 sar	 ecx, 2
  0009d	89 4d e4	 mov	 DWORD PTR __Whereoff$148095[ebp], ecx

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN

  000a0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

  000a7	8d 3c 88	 lea	 edi, DWORD PTR [eax+ecx*4]
  000aa	8b d6		 mov	 edx, esi
  000ac	be 01 00 00 00	 mov	 esi, 1
  000b1	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAXIABQAX@Z ; std::vector<void *,std::allocator<void *> >::_Ufill

; 1179 : 			++_Ncopied;

  000b6	89 75 e8	 mov	 DWORD PTR __Ncopied$148096[ebp], esi

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

  000b9	8b 75 ec	 mov	 esi, DWORD PTR __Newvec$148094[ebp]
  000bc	8b d6		 mov	 edx, esi
  000be	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp+4]
  000c1	8b 3d 0c 00 00
	00		 mov	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  000c7	e8 00 00 00 00	 call	 ??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove<void * *>

; 1182 : 			++_Ncopied;

  000cc	c7 45 e8 02 00
	00 00		 mov	 DWORD PTR __Ncopied$148096[ebp], 2

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

  000d3	8b 45 e4	 mov	 eax, DWORD PTR __Whereoff$148095[ebp]
  000d6	8d 54 86 04	 lea	 edx, DWORD PTR [esi+eax*4+4]
  000da	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  000df	8b 7d 0c	 mov	 edi, DWORD PTR __Where$[ebp+4]
  000e2	e8 00 00 00 00	 call	 ??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove<void * *>
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

  000ee	8b 3d 10 00 00
	00		 mov	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  000f4	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  000f9	2b f8		 sub	 edi, eax
  000fb	c1 ff 02	 sar	 edi, 2
  000fe	47		 inc	 edi

; 1195 : 			if (_Myfirst != 0)

  000ff	85 c0		 test	 eax, eax
  00101	74 09		 je	 SHORT $LN55@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00109	83 c4 04	 add	 esp, 4
$LN55@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

  0010c	8d 0c 9e	 lea	 ecx, DWORD PTR [esi+ebx*4]
  0010f	89 0d 14 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20, ecx

; 1206 : 			_Mylast = _Newvec + _Count;

  00115	8d 14 be	 lea	 edx, DWORD PTR [esi+edi*4]
  00118	89 15 10 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, edx

; 1207 : 			_Myfirst = _Newvec;

  0011e	89 35 0c 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, esi

; 1249 : 			}
; 1250 : 		}

  00124	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00127	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012e	59		 pop	 ecx
  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 08 00	 ret	 8
__catch$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

  00138	8b 45 ec	 mov	 eax, DWORD PTR __Newvec$148094[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00141	83 c4 04	 add	 esp, 4
__catch$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z$2:

; 1191 : 			_RERAISE;

  00144	6a 00		 push	 0
  00146	6a 00		 push	 0
  00148	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN118@Insert_n:
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

  0014d	8b c8		 mov	 ecx, eax
  0014f	8b 7d 0c	 mov	 edi, DWORD PTR __Where$[ebp+4]
  00152	2b cf		 sub	 ecx, edi
  00154	c1 f9 02	 sar	 ecx, 2

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

  00157	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

  00159	83 f9 01	 cmp	 ecx, 1
  0015c	73 6f		 jae	 SHORT $LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

  0015e	89 5d e4	 mov	 DWORD PTR __Tmp$148109[ebp], ebx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

  00161	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
  00164	e8 00 00 00 00	 call	 ??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove<void * *>

; 1215 : 
; 1216 : 			_TRY_BEGIN

  00169	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

  00170	8b 3d 10 00 00
	00		 mov	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00176	8b d7		 mov	 edx, edi
  00178	2b 55 0c	 sub	 edx, DWORD PTR __Where$[ebp+4]
  0017b	c1 fa 02	 sar	 edx, 2
  0017e	be 01 00 00 00	 mov	 esi, 1
  00183	2b f2		 sub	 esi, edx
  00185	8d 55 e4	 lea	 edx, DWORD PTR __Tmp$148109[ebp]
  00188	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAXIABQAX@Z ; std::vector<void *,std::allocator<void *> >::_Ufill
  0018d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

  00194	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00199	83 c0 04	 add	 eax, 4
  0019c	a3 10 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

  001a1	8d 48 fc	 lea	 ecx, DWORD PTR [eax-4]
  001a4	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp+4]
  001a7	3b c1		 cmp	 eax, ecx
  001a9	74 6e		 je	 SHORT $LN103@Insert_n
  001ab	eb 03 8d 49 00	 npad	 5
$LL69@Insert_n:
  001b0	89 18		 mov	 DWORD PTR [eax], ebx
  001b2	83 c0 04	 add	 eax, 4
  001b5	3b c1		 cmp	 eax, ecx
  001b7	75 f7		 jne	 SHORT $LL69@Insert_n

; 1249 : 			}
; 1250 : 		}

  001b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001c3	59		 pop	 ecx
  001c4	5f		 pop	 edi
  001c5	5e		 pop	 esi
  001c6	5b		 pop	 ebx
  001c7	8b e5		 mov	 esp, ebp
  001c9	5d		 pop	 ebp
  001ca	c2 08 00	 ret	 8
$LN3@Insert_n:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence
; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

  001cd	8b f0		 mov	 esi, eax

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

  001cf	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  001d2	8b d0		 mov	 edx, eax
  001d4	e8 00 00 00 00	 call	 ??$_Umove@PAPAX@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEPAPAXPAPAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove<void * *>
  001d9	a3 10 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

  001de	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp+4]
  001e1	2b f8		 sub	 edi, eax
  001e3	c1 ff 02	 sar	 edi, 2
  001e6	85 ff		 test	 edi, edi
  001e8	7e 18		 jle	 SHORT $LN90@Insert_n
  001ea	8d 0c bd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*4]
  001f1	51		 push	 ecx
  001f2	50		 push	 eax
  001f3	51		 push	 ecx
  001f4	2b f1		 sub	 esi, ecx
  001f6	56		 push	 esi
  001f7	e8 00 00 00 00	 call	 _memmove_s
  001fc	83 c4 10	 add	 esp, 16			; 00000010H
  001ff	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp+4]
$LN90@Insert_n:

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

  00202	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00205	3b c1		 cmp	 eax, ecx
  00207	74 10		 je	 SHORT $LN103@Insert_n
  00209	8d a4 24 00 00
	00 00		 npad	 7
$LL105@Insert_n:
  00210	89 18		 mov	 DWORD PTR [eax], ebx
  00212	83 c0 04	 add	 eax, 4
  00215	3b c1		 cmp	 eax, ecx
  00217	75 f7		 jne	 SHORT $LL105@Insert_n
$LN103@Insert_n:

; 1249 : 			}
; 1250 : 		}

  00219	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0021c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00223	59		 pop	 ecx
  00224	5f		 pop	 edi
  00225	5e		 pop	 esi
  00226	5b		 pop	 ebx
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c2 08 00	 ret	 8
$LN116@Insert_n:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$1
__ehfuncinfo$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T198005 = -80						; size = 28
$T198004 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ PROC ; std::vector<void *,std::allocator<void *> >::_Xran, COMDAT

; 1264 : 		{	// report an out_of_range error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 48	 sub	 esp, 72			; 00000048H
  00011	53		 push	 ebx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c4		 xor	 eax, esp
  00019	50		 push	 eax
  0001a	8d 44 24 50	 lea	 eax, DWORD PTR __$EHRec$[esp+92]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1265 : 		_THROW(out_of_range, "invalid vector<T> subscript");

  00024	6a 1b		 push	 27			; 0000001bH
  00026	33 db		 xor	 ebx, ebx
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002d	8d 4c 24 14	 lea	 ecx, DWORD PTR $T198005[esp+100]
  00031	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T198005[esp+124], 15 ; 0000000fH
  00039	89 5c 24 28	 mov	 DWORD PTR $T198005[esp+120], ebx
  0003d	88 5c 24 18	 mov	 BYTE PTR $T198005[esp+104], bl
  00041	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00046	89 5c 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], ebx
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T198005[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T198004[esp+96]
  00053	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00058	c6 44 24 58 01	 mov	 BYTE PTR __$EHRec$[esp+100], 1
  0005d	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T198004[esp+92], OFFSET ??_7out_of_range@std@@6B@
  00065	88 5c 24 58	 mov	 BYTE PTR __$EHRec$[esp+100], bl
  00069	68 00 00 00 00	 push	 OFFSET __TI3?AVout_of_range@std@@
  0006e	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T198004[esp+96]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN45@Xran:
$LN44@Xran:
  00078	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$0:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T198005[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T198004[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
__ehhandler$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 b4	 lea	 eax, DWORD PTR [edx-76]
  00017	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ ENDP ; std::vector<void *,std::allocator<void *> >::_Xran
; Function compile flags: /Ogtpy
;	COMDAT ?_Buy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
$T198199 = -12						; size = 12
?_Buy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAE_NI@Z PROC ; std::vector<void *,std::allocator<void *> >::_Buy, COMDAT
; __Capacity$ = esi

; 1102 : 		{	// allocate array with _Capacity elements

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 1104 : 		if (_Capacity == 0)
; 1105 : 			return (false);
; 1106 : 		else if (max_size() < _Capacity)

  00003	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00009	76 05		 jbe	 SHORT $LN2@Buy@8

; 1107 : 			_Xlen();	// result too long

  0000b	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ ; std::vector<void *,std::allocator<void *> >::_Xlen
$LN27@Buy@8:
$LN2@Buy@8:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

  00010	8b ce		 mov	 ecx, esi
  00012	85 f6		 test	 esi, esi
  00014	77 28		 ja	 SHORT $LN21@Buy@8
  00016	33 c9		 xor	 ecx, ecx
$LN19@Buy@8:
  00018	03 c9		 add	 ecx, ecx
  0001a	03 c9		 add	 ecx, ecx
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

  00022	8d 14 b0	 lea	 edx, DWORD PTR [eax+esi*4]
  00025	a3 0c 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, eax
  0002a	a3 10 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, eax
  0002f	83 c4 04	 add	 esp, 4
  00032	89 15 14 00 00
	00		 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20, edx

; 1113 : 			}
; 1114 : 		return (true);

  00038	b0 01		 mov	 al, 1

; 1115 : 		}

  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	c3		 ret	 0

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN21@Buy@8:
  0003e	83 c8 ff	 or	 eax, -1
  00041	33 d2		 xor	 edx, edx
  00043	f7 f6		 div	 esi
  00045	83 f8 04	 cmp	 eax, 4
  00048	73 ce		 jae	 SHORT $LN19@Buy@8
  0004a	6a 00		 push	 0
  0004c	8d 4c 24 04	 lea	 ecx, DWORD PTR $T198199[esp+16]
  00050	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  00055	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005a	8d 44 24 04	 lea	 eax, DWORD PTR $T198199[esp+16]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN28@Buy@8:
$LN26@Buy@8:
  00064	cc		 int	 3
?_Buy@?$vector@PAXV?$allocator@PAX@std@@@std@@IAE_NI@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Buy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@ABQAX@Z
_TEXT	SEGMENT
__Tmp$198469 = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
__Where$ = 16						; size = 8
?insert@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@ABQAX@Z PROC ; std::vector<void *,std::allocator<void *> >::insert, COMDAT

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00006	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  0000b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0000e	53		 push	 ebx
  0000f	55		 push	 ebp
  00010	8b d1		 mov	 edx, ecx
  00012	2b d0		 sub	 edx, eax
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	f7 c2 fc ff ff
	ff		 test	 edx, -4			; fffffffcH
  0001c	75 04		 jne	 SHORT $LN3@insert
  0001e	33 f6		 xor	 esi, esi
  00020	eb 29		 jmp	 SHORT $LN4@insert
$LN3@insert:
  00022	8b f8		 mov	 edi, eax
  00024	3b c1		 cmp	 eax, ecx
  00026	76 05		 jbe	 SHORT $LN13@insert
  00028	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN13@insert:
  0002d	8b 44 24 28	 mov	 eax, DWORD PTR __Where$[esp+24]
  00031	85 c0		 test	 eax, eax
  00033	74 08		 je	 SHORT $LN29@insert
  00035	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  0003b	74 05		 je	 SHORT $LN28@insert
$LN29@insert:
  0003d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN28@insert:
  00042	8b 74 24 2c	 mov	 esi, DWORD PTR __Where$[esp+28]
  00046	2b f7		 sub	 esi, edi
  00048	c1 fe 02	 sar	 esi, 2
$LN4@insert:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

  0004b	8b 44 24 2c	 mov	 eax, DWORD PTR __Where$[esp+28]
  0004f	8b 4c 24 28	 mov	 ecx, DWORD PTR __Where$[esp+24]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	8b 4c 24 2c	 mov	 ecx, DWORD PTR __Val$[esp+32]
  00059	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@PAXV?$allocator@PAX@std@@@std@@IAEXV?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@IABQAX@Z ; std::vector<void *,std::allocator<void *> >::_Insert_n

; 878  : 		return (begin() + _Off);

  0005e	8b 3d 0c 00 00
	00		 mov	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00064	3b 3d 10 00 00
	00		 cmp	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  0006a	76 05		 jbe	 SHORT $LN43@insert
  0006c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN43@insert:
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00076	8b d8		 mov	 ebx, eax
  00078	8b eb		 mov	 ebp, ebx
  0007a	89 7c 24 18	 mov	 DWORD PTR __Tmp$198469[esp+32], edi
  0007e	85 c0		 test	 eax, eax
  00080	75 17		 jne	 SHORT $LN85@insert
  00082	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00087	33 c0		 xor	 eax, eax
$LN76@insert:
  00089	8d 34 b7	 lea	 esi, DWORD PTR [edi+esi*4]
  0008c	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
  0008f	77 13		 ja	 SHORT $LN63@insert
  00091	85 db		 test	 ebx, ebx
  00093	74 08		 je	 SHORT $LN81@insert
  00095	8b 1b		 mov	 ebx, DWORD PTR [ebx]
  00097	eb 06		 jmp	 SHORT $LN82@insert
$LN85@insert:
  00099	8b 00		 mov	 eax, DWORD PTR [eax]
  0009b	eb ec		 jmp	 SHORT $LN76@insert
$LN81@insert:
  0009d	33 db		 xor	 ebx, ebx
$LN82@insert:
  0009f	3b 73 0c	 cmp	 esi, DWORD PTR [ebx+12]
  000a2	73 05		 jae	 SHORT $LN62@insert
$LN63@insert:
  000a4	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN62@insert:
  000a9	8b 44 24 20	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+24]

; 879  : 		}

  000ad	5f		 pop	 edi
  000ae	89 70 04	 mov	 DWORD PTR [eax+4], esi
  000b1	5e		 pop	 esi
  000b2	89 28		 mov	 DWORD PTR [eax], ebp
  000b4	5d		 pop	 ebp
  000b5	5b		 pop	 ebx
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b9	c2 10 00	 ret	 16			; 00000010H
?insert@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@ABQAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::insert
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ$1
__ehfuncinfo$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
_TEXT	SEGMENT
$T198503 = -80						; size = 28
$T198502 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran, COMDAT

; 1264 : 		{	// report an out_of_range error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 48	 sub	 esp, 72			; 00000048H
  00011	53		 push	 ebx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c4		 xor	 eax, esp
  00019	50		 push	 eax
  0001a	8d 44 24 50	 lea	 eax, DWORD PTR __$EHRec$[esp+92]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1265 : 		_THROW(out_of_range, "invalid vector<T> subscript");

  00024	6a 1b		 push	 27			; 0000001bH
  00026	33 db		 xor	 ebx, ebx
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002d	8d 4c 24 14	 lea	 ecx, DWORD PTR $T198503[esp+100]
  00031	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T198503[esp+124], 15 ; 0000000fH
  00039	89 5c 24 28	 mov	 DWORD PTR $T198503[esp+120], ebx
  0003d	88 5c 24 18	 mov	 BYTE PTR $T198503[esp+104], bl
  00041	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00046	89 5c 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], ebx
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T198503[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T198502[esp+96]
  00053	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00058	c6 44 24 58 01	 mov	 BYTE PTR __$EHRec$[esp+100], 1
  0005d	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T198502[esp+92], OFFSET ??_7out_of_range@std@@6B@
  00065	88 5c 24 58	 mov	 BYTE PTR __$EHRec$[esp+100], bl
  00069	68 00 00 00 00	 push	 OFFSET __TI3?AVout_of_range@std@@
  0006e	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T198502[esp+96]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN45@Xran@2:
$LN44@Xran@2:
  00078	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ$0:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T198503[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T198502[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
__ehhandler$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 b4	 lea	 eax, DWORD PTR [edx-76]
  00017	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z
_TEXT	SEGMENT
$T198665 = -12						; size = 8
?push_back@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z PROC ; std::vector<void *,std::allocator<void *> >::push_back, COMDAT
; __Val$ = edi

; 810  : 		if (size() < capacity())

  00000	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	56		 push	 esi
  0000a	85 d2		 test	 edx, edx
  0000c	75 04		 jne	 SHORT $LN9@push_back@2
  0000e	33 c9		 xor	 ecx, ecx
  00010	eb 0b		 jmp	 SHORT $LN10@push_back@2
$LN9@push_back@2:
  00012	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20
  00018	2b ca		 sub	 ecx, edx
  0001a	c1 f9 02	 sar	 ecx, 2
$LN10@push_back@2:
  0001d	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00022	8b f0		 mov	 esi, eax
  00024	2b f2		 sub	 esi, edx
  00026	c1 fe 02	 sar	 esi, 2
  00029	3b f1		 cmp	 esi, ecx
  0002b	73 11		 jae	 SHORT $LN2@push_back@2

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

  0002d	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0002f	89 08		 mov	 DWORD PTR [eax], ecx
  00031	83 c0 04	 add	 eax, 4
  00034	a3 10 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, eax

; 824  : 		}

  00039	5e		 pop	 esi
  0003a	83 c4 10	 add	 esp, 16			; 00000010H
  0003d	c3		 ret	 0
$LN2@push_back@2:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

  0003e	8b f0		 mov	 esi, eax
  00040	3b d0		 cmp	 edx, eax
  00042	76 05		 jbe	 SHORT $LN40@push_back@2
  00044	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN40@push_back@2:
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  0004e	56		 push	 esi
  0004f	50		 push	 eax
  00050	57		 push	 edi
  00051	8d 54 24 14	 lea	 edx, DWORD PTR $T198665[esp+32]
  00055	52		 push	 edx
  00056	e8 00 00 00 00	 call	 ?insert@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@ABQAX@Z ; std::vector<void *,std::allocator<void *> >::insert

; 824  : 		}

  0005b	5e		 pop	 esi
  0005c	83 c4 10	 add	 esp, 16			; 00000010H
  0005f	c3		 ret	 0
?push_back@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::push_back
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?at@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEAAPAXI@Z
_TEXT	SEGMENT
__Tmp$199109 = -8					; size = 8
__Pos$ = 8						; size = 4
?at@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEAAPAXI@Z PROC ; std::vector<void *,std::allocator<void *> >::at, COMDAT

; 753  : 		if (size() <= _Pos)

  00000	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00005	83 ec 08	 sub	 esp, 8
  00008	53		 push	 ebx
  00009	55		 push	 ebp
  0000a	8b 6c 24 14	 mov	 ebp, DWORD PTR __Pos$[esp+12]
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8b 3d 0c 00 00
	00		 mov	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00016	8b c8		 mov	 ecx, eax
  00018	2b cf		 sub	 ecx, edi
  0001a	c1 f9 02	 sar	 ecx, 2
  0001d	3b cd		 cmp	 ecx, ebp
  0001f	77 05		 ja	 SHORT $LN1@at

; 754  : 			_Xran();

  00021	e8 00 00 00 00	 call	 ?_Xran@?$vector@PAXV?$allocator@PAX@std@@@std@@KAXXZ ; std::vector<void *,std::allocator<void *> >::_Xran
$LN77@at:
$LN1@at:

; 755  : 		return (*(begin() + _Pos));

  00026	3b f8		 cmp	 edi, eax
  00028	76 05		 jbe	 SHORT $LN12@at
  0002a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN12@at:
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00034	8b f0		 mov	 esi, eax
  00036	8b de		 mov	 ebx, esi
  00038	89 7c 24 14	 mov	 DWORD PTR __Tmp$199109[esp+28], edi
  0003c	85 c0		 test	 eax, eax
  0003e	75 17		 jne	 SHORT $LN75@at
  00040	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00045	33 c0		 xor	 eax, eax
$LN45@at:
  00047	8d 3c af	 lea	 edi, DWORD PTR [edi+ebp*4]
  0004a	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
  0004d	77 13		 ja	 SHORT $LN32@at
  0004f	85 f6		 test	 esi, esi
  00051	74 08		 je	 SHORT $LN50@at
  00053	8b 36		 mov	 esi, DWORD PTR [esi]
  00055	eb 06		 jmp	 SHORT $LN51@at
$LN75@at:
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	eb ec		 jmp	 SHORT $LN45@at
$LN50@at:
  0005b	33 f6		 xor	 esi, esi
$LN51@at:
  0005d	3b 7e 0c	 cmp	 edi, DWORD PTR [esi+12]
  00060	73 05		 jae	 SHORT $LN31@at
$LN32@at:
  00062	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN31@at:
  00067	85 db		 test	 ebx, ebx
  00069	75 1d		 jne	 SHORT $LN74@at
  0006b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00070	33 c0		 xor	 eax, eax
$LN71@at:
  00072	3b 78 10	 cmp	 edi, DWORD PTR [eax+16]
  00075	72 05		 jb	 SHORT $LN58@at
  00077	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN58@at:
  0007c	8b c7		 mov	 eax, edi

; 756  : 		}

  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5d		 pop	 ebp
  00081	5b		 pop	 ebx
  00082	83 c4 08	 add	 esp, 8
  00085	c2 04 00	 ret	 4
$LN74@at:

; 755  : 		return (*(begin() + _Pos));

  00088	8b 03		 mov	 eax, DWORD PTR [ebx]
  0008a	eb e6		 jmp	 SHORT $LN71@at
$LN76@at:
?at@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEAAPAXI@Z ENDP ; std::vector<void *,std::allocator<void *> >::at
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T199186 = -16						; size = 4
$T199192 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ PROC	; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >, COMDAT

; 470  : 		{	// construct empty vector

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00014	33 c4		 xor	 eax, esp
  00016	50		 push	 eax
  00017	8d 44 24 08	 lea	 eax, DWORD PTR __$EHRec$[esp+20]
  0001b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00021	51		 push	 ecx
  00022	89 64 24 08	 mov	 DWORD PTR $T199192[esp+24], esp
  00026	89 64 24 08	 mov	 DWORD PTR $T199186[esp+24], esp
  0002a	e8 00 00 00 00	 call	 ??0?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@V?$allocator@PAX@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::_Container_base_aux_alloc_real<std::allocator<void *> >
  0002f	c7 44 24 10 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 1

; 471  : 		_Buy(0);

  00037	33 c0		 xor	 eax, eax
  00039	a3 0c 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12, eax
  0003e	a3 10 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16, eax
  00043	a3 14 00 00 00	 mov	 DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+20, eax

; 472  : 		}

  00048	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  00050	b8 00 00 00 00	 mov	 eax, OFFSET ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A ; PendingThreads
  00055	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$1:
  00000	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@PAX@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<void *> >::~_Container_base_aux_alloc_real<std::allocator<void *> >
__unwindfunclet$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ$0:
  00005	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
  00011	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ENDP	; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >
; Function compile flags: /Ogtpy
;	COMDAT ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Tmp$199383 = -8					; size = 8
__Pos$ = 8						; size = 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at, COMDAT
; _this$ = eax

; 752  : 		{	// subscript mutable sequence with checking

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	8b 6c 24 14	 mov	 ebp, DWORD PTR __Pos$[esp+12]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b f8		 mov	 edi, eax

; 753  : 		if (size() <= _Pos)

  0000d	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  00010	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00013	8b cb		 mov	 ecx, ebx
  00015	2b ce		 sub	 ecx, esi
  00017	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0001c	f7 e9		 imul	 ecx
  0001e	03 d1		 add	 edx, ecx
  00020	c1 fa 04	 sar	 edx, 4
  00023	8b c2		 mov	 eax, edx
  00025	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00028	03 c2		 add	 eax, edx
  0002a	3b c5		 cmp	 eax, ebp
  0002c	77 05		 ja	 SHORT $LN1@at@2

; 754  : 			_Xran();

  0002e	e8 00 00 00 00	 call	 ?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
$LN77@at@2:
$LN1@at@2:

; 755  : 		return (*(begin() + _Pos));

  00033	3b f3		 cmp	 esi, ebx
  00035	76 05		 jbe	 SHORT $LN12@at@2
  00037	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN12@at@2:
  0003c	8b 3f		 mov	 edi, DWORD PTR [edi]
  0003e	8b df		 mov	 ebx, edi
  00040	89 74 24 14	 mov	 DWORD PTR __Tmp$199383[esp+28], esi
  00044	85 ff		 test	 edi, edi
  00046	75 20		 jne	 SHORT $LN75@at@2
  00048	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0004d	33 c0		 xor	 eax, eax
$LN45@at@2:
  0004f	8d 0c ed 00 00
	00 00		 lea	 ecx, DWORD PTR [ebp*8]
  00056	2b cd		 sub	 ecx, ebp
  00058	8d 34 8e	 lea	 esi, DWORD PTR [esi+ecx*4]
  0005b	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
  0005e	77 13		 ja	 SHORT $LN32@at@2
  00060	85 ff		 test	 edi, edi
  00062	74 08		 je	 SHORT $LN50@at@2
  00064	8b 3f		 mov	 edi, DWORD PTR [edi]
  00066	eb 06		 jmp	 SHORT $LN51@at@2
$LN75@at@2:
  00068	8b 07		 mov	 eax, DWORD PTR [edi]
  0006a	eb e3		 jmp	 SHORT $LN45@at@2
$LN50@at@2:
  0006c	33 ff		 xor	 edi, edi
$LN51@at@2:
  0006e	3b 77 0c	 cmp	 esi, DWORD PTR [edi+12]
  00071	73 05		 jae	 SHORT $LN31@at@2
$LN32@at@2:
  00073	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN31@at@2:
  00078	85 db		 test	 ebx, ebx
  0007a	75 1d		 jne	 SHORT $LN74@at@2
  0007c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00081	33 c0		 xor	 eax, eax
$LN71@at@2:
  00083	3b 70 10	 cmp	 esi, DWORD PTR [eax+16]
  00086	72 05		 jb	 SHORT $LN58@at@2
  00088	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN58@at@2:

; 756  : 		}

  0008d	5f		 pop	 edi
  0008e	8b c6		 mov	 eax, esi
  00090	5e		 pop	 esi
  00091	5d		 pop	 ebp
  00092	5b		 pop	 ebx
  00093	83 c4 08	 add	 esp, 8
  00096	c2 04 00	 ret	 4
$LN74@at@2:

; 755  : 		return (*(begin() + _Pos));

  00099	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009b	eb e6		 jmp	 SHORT $LN71@at@2
$LN76@at@2:
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ThreadMessage@@YGIPAX@Z			; ThreadMessage
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
;	COMDAT ?ThreadMessage@@YGIPAX@Z
_TEXT	SEGMENT
_hNotifyNetHandle$ = -1160				; size = 4
_hNotifyHubHandle$ = -1156				; size = 4
_WindowClass$ = -1152					; size = 40
_broadcastNet$ = -1112					; size = 20
_msg$ = -1092						; size = 28
_broadcastInterface$ = -1064				; size = 32
_szLastError$144889 = -1032				; size = 1024
_szLastError$144878 = -1032				; size = 1024
__$ArrayPad$ = -4					; size = 4
_dummy$ = 8						; size = 4
?ThreadMessage@@YGIPAX@Z PROC				; ThreadMessage, COMDAT

; 972  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec 8c 04 00
	00		 sub	 esp, 1164		; 0000048cH
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 88 04
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+1164], eax
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi

; 973  : 	int iRet = 0;
; 974  : 	MSG msg;
; 975  : 
; 976  : 	Log(LOG_DEBUG,__LINE__,">> ThrdMsg");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EMLHDHFB@?$DO?$DO?5ThrdMsg?$AA@
  00022	68 d0 03 00 00	 push	 976			; 000003d0H
  00027	6a 10		 push	 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 977  : 
; 978  : 	//Create application instance
; 979  :     WNDCLASS  WindowClass = {0};

  0002e	33 c0		 xor	 eax, eax
  00030	33 db		 xor	 ebx, ebx
  00032	89 44 24 28	 mov	 DWORD PTR _WindowClass$[esp+1192], eax
  00036	89 44 24 2c	 mov	 DWORD PTR _WindowClass$[esp+1196], eax
  0003a	89 44 24 30	 mov	 DWORD PTR _WindowClass$[esp+1200], eax
  0003e	89 44 24 34	 mov	 DWORD PTR _WindowClass$[esp+1204], eax
  00042	89 44 24 38	 mov	 DWORD PTR _WindowClass$[esp+1208], eax
  00046	89 44 24 3c	 mov	 DWORD PTR _WindowClass$[esp+1212], eax
  0004a	89 44 24 40	 mov	 DWORD PTR _WindowClass$[esp+1216], eax
  0004e	89 44 24 44	 mov	 DWORD PTR _WindowClass$[esp+1220], eax
  00052	89 44 24 48	 mov	 DWORD PTR _WindowClass$[esp+1224], eax

; 980  : 
; 981  :     WindowClass.style            = CS_HREDRAW|CS_VREDRAW;
; 982  :     WindowClass.lpfnWndProc      = (WNDPROC)WndProcMessage;
; 983  :     WindowClass.cbClsExtra       = 0;
; 984  :     WindowClass.cbWndExtra       = 0;
; 985  :     WindowClass.hInstance        = ghInstance;

  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghInstance@@3PAUHINSTANCE__@@A ; ghInstance
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 986  :     WindowClass.hIcon            = (HICON)NULL;
; 987  :     WindowClass.hCursor          = (HCURSOR)NULL;
; 988  :     WindowClass.hbrBackground    = (HBRUSH)NULL;
; 989  :     WindowClass.lpszMenuName     = (LPCTSTR)NULL;
; 990  :     WindowClass.lpszClassName    = "SysStatusWClass";
; 991  : 
; 992  :     //Register window
; 993  :     if(!RegisterClass(&WindowClass))

  0005e	8d 4c 24 18	 lea	 ecx, DWORD PTR _WindowClass$[esp+1176]
  00062	51		 push	 ecx
  00063	c7 44 24 1c 03
	00 00 00	 mov	 DWORD PTR _WindowClass$[esp+1180], 3
  0006b	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _WindowClass$[esp+1184], OFFSET ?WndProcMessage@@YGJPAUHWND__@@IIJ@Z ; WndProcMessage
  00073	89 5c 24 24	 mov	 DWORD PTR _WindowClass$[esp+1188], ebx
  00077	89 5c 24 28	 mov	 DWORD PTR _WindowClass$[esp+1192], ebx
  0007b	89 44 24 2c	 mov	 DWORD PTR _WindowClass$[esp+1196], eax
  0007f	89 5c 24 30	 mov	 DWORD PTR _WindowClass$[esp+1200], ebx
  00083	89 5c 24 34	 mov	 DWORD PTR _WindowClass$[esp+1204], ebx
  00087	89 5c 24 38	 mov	 DWORD PTR _WindowClass$[esp+1208], ebx
  0008b	89 5c 24 3c	 mov	 DWORD PTR _WindowClass$[esp+1212], ebx
  0008f	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR _WindowClass$[esp+1216], OFFSET ??_C@_0BA@JDKJFHEL@SysStatusWClass?$AA@
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassA@4
  0009d	66 85 c0	 test	 ax, ax
  000a0	75 5a		 jne	 SHORT $LN6@ThreadMess

; 994  :     {
; 995  :         char szLastError[1024] = {0};

  000a2	68 ff 03 00 00	 push	 1023			; 000003ffH
  000a7	8d 94 24 95 00
	00 00		 lea	 edx, DWORD PTR _szLastError$144878[esp+1181]
  000ae	53		 push	 ebx
  000af	52		 push	 edx
  000b0	88 9c 24 9c 00
	00 00		 mov	 BYTE PTR _szLastError$144878[esp+1188], bl
  000b7	e8 00 00 00 00	 call	 _memset
  000bc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  :         DWORD dwLastError = GetLastError();

  000bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  000c5	8b d8		 mov	 ebx, eax

; 997  :         GetLastErrorMessage(dwLastError,szLastError,sizeof(szLastError));

  000c7	68 00 04 00 00	 push	 1024			; 00000400H
  000cc	8d b4 24 94 00
	00 00		 lea	 esi, DWORD PTR _szLastError$144878[esp+1180]
  000d3	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 998  : 		Log(LOG_HEADER,__LINE__,"<< ThrdMsg, RegCls %u, %s",dwLastError,szLastError);

  000d8	8b c6		 mov	 eax, esi
  000da	50		 push	 eax
  000db	53		 push	 ebx
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@MOCDLCEG@?$DM?$DM?5ThrdMsg?0?5RegCls?5?$CFu?0?5?$CFs?$AA@
  000e1	68 e6 03 00 00	 push	 998			; 000003e6H
  000e6	6a 02		 push	 2
  000e8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 999  : 		_endthreadex(-1);

  000ed	6a ff		 push	 -1
  000ef	e8 00 00 00 00	 call	 __endthreadex
  000f4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1000 : 		return -1;

  000f7	e9 5f 02 00 00	 jmp	 $LN12@ThreadMess
$LN6@ThreadMess:

; 1001 : 	}
; 1002 : 
; 1003 :     //Create window
; 1004 : 	DWORD dwError = 0;
; 1005 : 	ghWnd = CreateWindowEx(WS_EX_DLGMODALFRAME,(LPCSTR)"SysStatusWClass",(LPCSTR)"SysStatus",
; 1006 :                            WS_BORDER|WS_POPUP,0,0,20,20,
; 1007 :                            (HWND)NULL,(HMENU)NULL,ghInstance,(LPVOID)NULL); 

  000fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghInstance@@3PAUHINSTANCE__@@A ; ghInstance
  00102	53		 push	 ebx
  00103	51		 push	 ecx
  00104	53		 push	 ebx
  00105	53		 push	 ebx
  00106	6a 14		 push	 20			; 00000014H
  00108	6a 14		 push	 20			; 00000014H
  0010a	53		 push	 ebx
  0010b	53		 push	 ebx
  0010c	68 00 00 80 80	 push	 -2139095040		; 80800000H
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_09KECABMHK@SysStatus?$AA@
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JDKJFHEL@SysStatusWClass?$AA@
  0011b	6a 01		 push	 1
  0011d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExA@48
  00123	a3 00 00 00 00	 mov	 DWORD PTR ?ghWnd@@3PAUHWND__@@A, eax ; ghWnd

; 1008 : 	dwError = GetLastError();

  00128	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  0012e	8b f8		 mov	 edi, eax

; 1009 : 	if(ghWnd==NULL || IsWindow(ghWnd)==FALSE)

  00130	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00135	3b c3		 cmp	 eax, ebx
  00137	0f 84 d2 01 00
	00		 je	 $LN4@ThreadMess
  0013d	50		 push	 eax
  0013e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00144	85 c0		 test	 eax, eax
  00146	0f 84 c3 01 00
	00		 je	 $LN4@ThreadMess

; 1015 : 		return -1;
; 1016 :     }
; 1017 : 
; 1018 : 	//show the window application
; 1019 : 	ShowWindow(ghWnd,SW_SHOW);

  0014c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00152	6a 05		 push	 5
  00154	52		 push	 edx
  00155	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 1020 : 	Sleep(MILLISECOND*50L);

  0015b	6a 32		 push	 50			; 00000032H
  0015d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4

; 1021 : 
; 1022 :     //Register to receive notification when a USB device or hub is plugged in
; 1023 : 	HDEVNOTIFY hNotifyDevHandle = NULL;
; 1024 : 	HDEVNOTIFY hNotifyHubHandle = NULL;
; 1025 :     DEV_BROADCAST_DEVICEINTERFACE broadcastInterface;
; 1026 : 
; 1027 :     ZeroMemory(&broadcastInterface,sizeof(broadcastInterface));
; 1028 :     broadcastInterface.dbcc_size = sizeof(DEV_BROADCAST_DEVICEINTERFACE);
; 1029 :     broadcastInterface.dbcc_devicetype = DBT_DEVTYP_DEVICEINTERFACE;
; 1030 : 
; 1031 :     //Register for Device nofitications
; 1032 :     memcpy(&(broadcastInterface.dbcc_classguid),&(GUID_CLASS_USB_DEVICE),sizeof(struct _GUID));

  00163	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_DEVINTERFACE_USB_DEVICE+4
  00169	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_DEVINTERFACE_USB_DEVICE+8

; 1033 :     hNotifyDevHandle = RegisterDeviceNotification(ghWnd,&broadcastInterface,DEVICE_NOTIFY_WINDOW_HANDLE);

  0016f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__RegisterDeviceNotificationA@12
  00175	33 c0		 xor	 eax, eax
  00177	89 84 24 80 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1192], eax
  0017e	89 44 24 70	 mov	 DWORD PTR _broadcastInterface$[esp+1176], eax
  00182	89 44 24 74	 mov	 DWORD PTR _broadcastInterface$[esp+1180], eax
  00186	89 44 24 7c	 mov	 DWORD PTR _broadcastInterface$[esp+1188], eax
  0018a	89 84 24 84 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1196], eax
  00191	89 84 24 88 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1200], eax
  00198	89 44 24 78	 mov	 DWORD PTR _broadcastInterface$[esp+1184], eax
  0019c	89 84 24 8c 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1204], eax
  001a3	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_DEVINTERFACE_USB_DEVICE
  001a8	89 8c 24 80 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1192], ecx
  001af	53		 push	 ebx
  001b0	8d 4c 24 74	 lea	 ecx, DWORD PTR _broadcastInterface$[esp+1180]
  001b4	89 94 24 88 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1200], edx
  001bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  001c1	89 84 24 80 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1192], eax
  001c8	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_DEVINTERFACE_USB_DEVICE+12
  001cd	51		 push	 ecx
  001ce	52		 push	 edx
  001cf	c7 44 24 7c 20
	00 00 00	 mov	 DWORD PTR _broadcastInterface$[esp+1188], 32 ; 00000020H
  001d7	c7 84 24 80 00
	00 00 05 00 00
	00		 mov	 DWORD PTR _broadcastInterface$[esp+1192], 5
  001e2	89 84 24 94 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1212], eax
  001e9	ff d6		 call	 esi

; 1034 : 
; 1035 :     //Register for Hub notifications
; 1036 :     memcpy(&(broadcastInterface.dbcc_classguid),&(GUID_CLASS_USBHUB),sizeof(struct _GUID));

  001eb	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GUID_DEVINTERFACE_USB_HUB+4
  001f1	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GUID_DEVINTERFACE_USB_HUB+8
  001f7	8b f8		 mov	 edi, eax
  001f9	a1 00 00 00 00	 mov	 eax, DWORD PTR _GUID_DEVINTERFACE_USB_HUB
  001fe	89 8c 24 80 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1192], ecx

; 1037 :     hNotifyHubHandle = RegisterDeviceNotification(ghWnd,&broadcastInterface,DEVICE_NOTIFY_WINDOW_HANDLE);

  00205	53		 push	 ebx
  00206	8d 4c 24 74	 lea	 ecx, DWORD PTR _broadcastInterface$[esp+1180]
  0020a	89 94 24 88 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1200], edx
  00211	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00217	89 84 24 80 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1192], eax
  0021e	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GUID_DEVINTERFACE_USB_HUB+12
  00223	51		 push	 ecx
  00224	52		 push	 edx
  00225	89 84 24 94 00
	00 00		 mov	 DWORD PTR _broadcastInterface$[esp+1212], eax
  0022c	ff d6		 call	 esi

; 1038 : 
; 1039 :     //Register to receive notification when a network component is changed
; 1040 : 	HDEVNOTIFY hNotifyNetHandle = NULL;
; 1041 :     DEV_BROADCAST_NET broadcastNet;
; 1042 : 
; 1043 :     ZeroMemory(&broadcastNet,sizeof(broadcastNet));
; 1044 :     broadcastNet.dbcn_size = sizeof(DEV_BROADCAST_NET);
; 1045 :     broadcastNet.dbcn_devicetype = DBT_DEVTYP_NET;
; 1046 : 
; 1047 :     //Register for network nofitications
; 1048 :     hNotifyNetHandle = RegisterDeviceNotification(ghWnd,&broadcastNet,DEVICE_NOTIFY_WINDOW_HANDLE);

  0022e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00234	89 44 24 14	 mov	 DWORD PTR _hNotifyHubHandle$[esp+1176], eax
  00238	33 c0		 xor	 eax, eax
  0023a	89 44 24 40	 mov	 DWORD PTR _broadcastNet$[esp+1176], eax
  0023e	89 44 24 44	 mov	 DWORD PTR _broadcastNet$[esp+1180], eax
  00242	89 44 24 48	 mov	 DWORD PTR _broadcastNet$[esp+1184], eax
  00246	89 44 24 4c	 mov	 DWORD PTR _broadcastNet$[esp+1188], eax
  0024a	89 44 24 50	 mov	 DWORD PTR _broadcastNet$[esp+1192], eax
  0024e	53		 push	 ebx
  0024f	8d 44 24 44	 lea	 eax, DWORD PTR _broadcastNet$[esp+1180]
  00253	50		 push	 eax
  00254	51		 push	 ecx
  00255	c7 44 24 4c 14
	00 00 00	 mov	 DWORD PTR _broadcastNet$[esp+1188], 20 ; 00000014H
  0025d	c7 44 24 50 04
	00 00 00	 mov	 DWORD PTR _broadcastNet$[esp+1192], 4
  00265	ff d6		 call	 esi

; 1049 : 
; 1050 : 	//Message loop
; 1051 : 	while(GetMessage(&msg,ghWnd,0,0))  

  00267	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0026d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetMessageA@16
  00273	53		 push	 ebx
  00274	53		 push	 ebx
  00275	89 44 24 18	 mov	 DWORD PTR _hNotifyNetHandle$[esp+1184], eax
  00279	52		 push	 edx
  0027a	8d 44 24 60	 lea	 eax, DWORD PTR _msg$[esp+1188]
  0027e	50		 push	 eax
  0027f	ff d6		 call	 esi
  00281	85 c0		 test	 eax, eax
  00283	74 33		 je	 SHORT $LN10@ThreadMess
$LL3@ThreadMess:

; 1052 : 	{
; 1053 : 		if (msg.message==TERMINATE_DLL_MSG)

  00285	81 7c 24 58 e8
	07 00 00	 cmp	 DWORD PTR _msg$[esp+1180], 2024 ; 000007e8H
  0028d	74 29		 je	 SHORT $LN10@ThreadMess

; 1054 :         {
; 1055 : 			break;
; 1056 : 		}
; 1057 : 		TranslateMessage(&msg);

  0028f	8d 4c 24 54	 lea	 ecx, DWORD PTR _msg$[esp+1176]
  00293	51		 push	 ecx
  00294	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4

; 1058 : 		DispatchMessage(&msg);

  0029a	8d 54 24 54	 lea	 edx, DWORD PTR _msg$[esp+1176]
  0029e	52		 push	 edx
  0029f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
  002a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  002aa	53		 push	 ebx
  002ab	53		 push	 ebx
  002ac	50		 push	 eax
  002ad	8d 4c 24 60	 lea	 ecx, DWORD PTR _msg$[esp+1188]
  002b1	51		 push	 ecx
  002b2	ff d6		 call	 esi
  002b4	85 c0		 test	 eax, eax
  002b6	75 cd		 jne	 SHORT $LL3@ThreadMess
$LN10@ThreadMess:

; 1059 : 	}               
; 1060 : 
; 1061 :     //Unregister notifications
; 1062 : 	UnregisterDeviceNotification(hNotifyDevHandle);

  002b8	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__UnregisterDeviceNotification@4
  002be	57		 push	 edi
  002bf	ff d6		 call	 esi

; 1063 : 	UnregisterDeviceNotification(hNotifyHubHandle);

  002c1	8b 54 24 14	 mov	 edx, DWORD PTR _hNotifyHubHandle$[esp+1176]
  002c5	52		 push	 edx
  002c6	ff d6		 call	 esi

; 1064 : 	UnregisterDeviceNotification(hNotifyNetHandle);

  002c8	8b 44 24 10	 mov	 eax, DWORD PTR _hNotifyNetHandle$[esp+1176]
  002cc	50		 push	 eax
  002cd	ff d6		 call	 esi

; 1065 : 
; 1066 : 	DestroyWindow(ghWnd);

  002cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  002d5	51		 push	 ecx
  002d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4

; 1067 :     Log(LOG_DEBUG,__LINE__,"<< ThrdMsg");

  002dc	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BACOFOKN@?$DM?$DM?5ThrdMsg?$AA@
  002e1	68 2b 04 00 00	 push	 1067			; 0000042bH
  002e6	6a 10		 push	 16			; 00000010H
  002e8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1068 : 	_endthreadex(0);

  002ed	53		 push	 ebx
  002ee	e8 00 00 00 00	 call	 __endthreadex
  002f3	83 c4 10	 add	 esp, 16			; 00000010H

; 1069 : 	return 0;

  002f6	33 c0		 xor	 eax, eax

; 1070 : }

  002f8	5f		 pop	 edi
  002f9	5e		 pop	 esi
  002fa	5b		 pop	 ebx
  002fb	8b 8c 24 88 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1164]
  00302	33 cc		 xor	 ecx, esp
  00304	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00309	8b e5		 mov	 esp, ebp
  0030b	5d		 pop	 ebp
  0030c	c2 04 00	 ret	 4
$LN4@ThreadMess:

; 1010 :     {
; 1011 :         char szLastError[1024] = {0};

  0030f	68 ff 03 00 00	 push	 1023			; 000003ffH
  00314	8d 94 24 95 00
	00 00		 lea	 edx, DWORD PTR _szLastError$144889[esp+1181]
  0031b	53		 push	 ebx
  0031c	52		 push	 edx
  0031d	88 9c 24 9c 00
	00 00		 mov	 BYTE PTR _szLastError$144889[esp+1188], bl
  00324	e8 00 00 00 00	 call	 _memset

; 1012 :         GetLastErrorMessage(dwError,szLastError,sizeof(szLastError));

  00329	68 00 04 00 00	 push	 1024			; 00000400H
  0032e	8d b4 24 a0 00
	00 00		 lea	 esi, DWORD PTR _szLastError$144889[esp+1192]
  00335	8b df		 mov	 ebx, edi
  00337	e8 00 00 00 00	 call	 ?GetLastErrorMessage@@YAPADKPADK@Z ; GetLastErrorMessage

; 1013 : 		Log(LOG_HEADER,__LINE__,"<< ThrdMsg, CreateWnd %u, %s",dwError,szLastError);

  0033c	8b c6		 mov	 eax, esi
  0033e	50		 push	 eax
  0033f	57		 push	 edi
  00340	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@CBADGOHO@?$DM?$DM?5ThrdMsg?0?5CreateWnd?5?$CFu?0?5?$CFs?$AA@
  00345	68 f5 03 00 00	 push	 1013			; 000003f5H
  0034a	6a 02		 push	 2
  0034c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1014 : 		_endthreadex(-1);

  00351	6a ff		 push	 -1
  00353	e8 00 00 00 00	 call	 __endthreadex
  00358	83 c4 28	 add	 esp, 40			; 00000028H
$LN12@ThreadMess:

; 1070 : }

  0035b	8b 8c 24 94 04
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+1176]
  00362	5f		 pop	 edi
  00363	5e		 pop	 esi
  00364	5b		 pop	 ebx
  00365	33 cc		 xor	 ecx, esp
  00367	83 c8 ff	 or	 eax, -1
  0036a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0036f	8b e5		 mov	 esp, ebp
  00371	5d		 pop	 ebp
  00372	c2 04 00	 ret	 4
?ThreadMessage@@YGIPAX@Z ENDP				; ThreadMessage
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z$0
__ehfuncinfo$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z
_TEXT	SEGMENT
_ret$ = -289						; size = 1
_uiThreadId$ = -288					; size = 4
_hThread$ = -284					; size = 4
_msg$144727 = -280					; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_threadName$ = 8					; size = 28
_threadData$ = 36					; size = 4
_threadTimeout$ = 40					; size = 4
?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z PROC ; StartThread, COMDAT
; _threadFunction$ = ecx
; _pthreadHandle$ = edx

; 698  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c4		 xor	 eax, esp
  0001b	89 84 24 14 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+292], eax
  00022	53		 push	 ebx
  00023	55		 push	 ebp
  00024	56		 push	 esi
  00025	57		 push	 edi
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c4		 xor	 eax, esp
  0002d	50		 push	 eax
  0002e	8d 84 24 2c 01
	00 00		 lea	 eax, DWORD PTR __$EHRec$[esp+312]
  00035	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003b	8b ac 24 58 01
	00 00		 mov	 ebp, DWORD PTR _threadData$[esp+308]
  00042	8b f9		 mov	 edi, ecx
  00044	8b da		 mov	 ebx, edx
  00046	33 f6		 xor	 esi, esi
  00048	89 b4 24 34 01
	00 00		 mov	 DWORD PTR __$EHRec$[esp+320], esi

; 699  :     unsigned int uiThreadId = 0;
; 700  :     HANDLE hThread = NULL;
; 701  :     bool ret = true;
; 702  : 
; 703  :     Log(LOG_DEBUG,__LINE__,">> StartThrd, Name %s, Func %p, Dat %p, Timeout %u, pHndl %p",threadName.c_str(),threadFunction,threadData,threadTimeout,pthreadHandle);

  0004f	83 bc 24 54 01
	00 00 10	 cmp	 DWORD PTR _threadName$[esp+332], 16 ; 00000010H
  00057	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR _threadName$[esp+312]
  0005e	89 74 24 18	 mov	 DWORD PTR _uiThreadId$[esp+312], esi
  00062	c6 44 24 17 01	 mov	 BYTE PTR _ret$[esp+312], 1
  00067	73 07		 jae	 SHORT $LN18@StartThrea
  00069	8d 84 24 40 01
	00 00		 lea	 eax, DWORD PTR _threadName$[esp+312]
$LN18@StartThrea:
  00070	8b 8c 24 5c 01
	00 00		 mov	 ecx, DWORD PTR _threadTimeout$[esp+308]
  00077	53		 push	 ebx
  00078	51		 push	 ecx
  00079	55		 push	 ebp
  0007a	57		 push	 edi
  0007b	50		 push	 eax
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@OLKMHNED@?$DO?$DO?5StartThrd?0?5Name?5?$CFs?0?5Func?5?$CFp?0?5@
  00081	68 bf 02 00 00	 push	 703			; 000002bfH
  00086	6a 10		 push	 16			; 00000010H
  00088	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0008d	83 c4 20	 add	 esp, 32			; 00000020H

; 704  : 
; 705  :     /* Logical Drivers */
; 706  :     if(_thGetInt(&gbShutdown)==FALSE)

  00090	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  00095	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  0009a	85 c0		 test	 eax, eax
  0009c	0f 85 96 00 00
	00		 jne	 $LN63@StartThrea

; 707  :     {
; 708  :         hThread = (HANDLE)_beginthreadex(NULL,0,threadFunction,threadData,0,&uiThreadId);

  000a2	8d 54 24 18	 lea	 edx, DWORD PTR _uiThreadId$[esp+312]
  000a6	52		 push	 edx
  000a7	50		 push	 eax
  000a8	55		 push	 ebp
  000a9	57		 push	 edi
  000aa	50		 push	 eax
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 __beginthreadex
  000b1	8b f0		 mov	 esi, eax

; 709  :         if(hThread!=NULL)
; 710  :         {
; 711  :             Log(LOG_DEBUG,__LINE__,"-- StartThrd, %s Id %u, Hnd %p",threadName.c_str(),uiThreadId,hThread);

  000b3	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR _threadName$[esp+336]
  000ba	83 c4 18	 add	 esp, 24			; 00000018H
  000bd	89 74 24 1c	 mov	 DWORD PTR _hThread$[esp+312], esi
  000c1	85 f6		 test	 esi, esi
  000c3	0f 84 af 00 00
	00		 je	 $LN8@StartThrea
  000c9	bf 10 00 00 00	 mov	 edi, 16			; 00000010H
  000ce	39 bc 24 54 01
	00 00		 cmp	 DWORD PTR _threadName$[esp+332], edi
  000d5	73 07		 jae	 SHORT $LN24@StartThrea
  000d7	8d 84 24 40 01
	00 00		 lea	 eax, DWORD PTR _threadName$[esp+312]
$LN24@StartThrea:
  000de	8b 4c 24 18	 mov	 ecx, DWORD PTR _uiThreadId$[esp+312]
  000e2	56		 push	 esi
  000e3	51		 push	 ecx
  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@FDECIAPH@?9?9?5StartThrd?0?5?$CFs?5Id?5?$CFu?0?5Hnd?5?$CFp?$AA@
  000ea	68 c7 02 00 00	 push	 711			; 000002c7H
  000ef	57		 push	 edi
  000f0	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 712  :             SetThreadName(threadName.c_str(),uiThreadId);

  000f5	8b 94 24 58 01
	00 00		 mov	 edx, DWORD PTR _threadName$[esp+336]
  000fc	83 c4 18	 add	 esp, 24			; 00000018H
  000ff	39 bc 24 54 01
	00 00		 cmp	 DWORD PTR _threadName$[esp+332], edi
  00106	73 07		 jae	 SHORT $LN30@StartThrea
  00108	8d 94 24 40 01
	00 00		 lea	 edx, DWORD PTR _threadName$[esp+312]
$LN30@StartThrea:
  0010f	8b 4c 24 18	 mov	 ecx, DWORD PTR _uiThreadId$[esp+312]
  00113	e8 00 00 00 00	 call	 ?SetThreadName@@YAXPBDK@Z ; SetThreadName

; 713  : 
; 714  :             //Wati thread
; 715  :             if(threadTimeout>0)

  00118	8b 84 24 5c 01
	00 00		 mov	 eax, DWORD PTR _threadTimeout$[esp+308]
  0011f	85 c0		 test	 eax, eax
  00121	76 15		 jbe	 SHORT $LN63@StartThrea

; 716  :             {
; 717  :                 if(WaitForSingleObject(hThread,threadTimeout)!=WAIT_OBJECT_0)

  00123	50		 push	 eax
  00124	56		 push	 esi
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0012b	85 c0		 test	 eax, eax
  0012d	74 09		 je	 SHORT $LN63@StartThrea

; 718  :                 {
; 719  :                     PendingThreads.push_back(hThread);

  0012f	8d 7c 24 1c	 lea	 edi, DWORD PTR _hThread$[esp+312]
  00133	e8 00 00 00 00	 call	 ?push_back@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEXABQAX@Z ; std::vector<void *,std::allocator<void *> >::push_back
$LN63@StartThrea:

; 726  :             ret = false;
; 727  :         }
; 728  :     }
; 729  : 
; 730  :     if(ret)
; 731  :     {
; 732  :         //Set output if it is not null
; 733  :         char msg[_MAX_PATH] = {0};

  00138	68 03 01 00 00	 push	 259			; 00000103H
  0013d	8d 54 24 25	 lea	 edx, DWORD PTR _msg$144727[esp+317]
  00141	6a 00		 push	 0
  00143	52		 push	 edx
  00144	c6 44 24 2c 00	 mov	 BYTE PTR _msg$144727[esp+324], 0
  00149	e8 00 00 00 00	 call	 _memset
  0014e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 734  :         if(pthreadHandle)
; 735  :         {
; 736  :             *pthreadHandle = hThread;
; 737  :             _snprintf(msg,sizeof(msg)-1,"<< StartThrd, %p",*pthreadHandle);

  00151	56		 push	 esi
  00152	85 db		 test	 ebx, ebx
  00154	0f 84 c7 00 00
	00		 je	 $LN3@StartThrea
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@POKBMEDO@?$DM?$DM?5StartThrd?0?5?$CFp?$AA@
  0015f	8d 44 24 28	 lea	 eax, DWORD PTR _msg$144727[esp+320]
  00163	68 03 01 00 00	 push	 259			; 00000103H
  00168	50		 push	 eax
  00169	89 33		 mov	 DWORD PTR [ebx], esi
  0016b	e8 00 00 00 00	 call	 __snprintf
  00170	83 c4 10	 add	 esp, 16			; 00000010H

; 738  :         }
; 739  :         else

  00173	e9 c2 00 00 00	 jmp	 $LN2@StartThrea
$LN8@StartThrea:

; 720  :                 }
; 721  :             }
; 722  :         }
; 723  :         else
; 724  :         {
; 725  :             Log(LOG_HEADER,__LINE__,"-- StartThrd, No %s thrd created",threadName.c_str());

  00178	83 bc 24 54 01
	00 00 10	 cmp	 DWORD PTR _threadName$[esp+332], 16 ; 00000010H
  00180	73 07		 jae	 SHORT $LN36@StartThrea
  00182	8d 84 24 40 01
	00 00		 lea	 eax, DWORD PTR _threadName$[esp+312]
$LN36@StartThrea:
  00189	50		 push	 eax
  0018a	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@LFOPNEOO@?9?9?5StartThrd?0?5No?5?$CFs?5thrd?5created@
  0018f	68 d5 02 00 00	 push	 725			; 000002d5H
  00194	6a 02		 push	 2
  00196	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0019b	83 c4 10	 add	 esp, 16			; 00000010H

; 749  :     {
; 750  :         Log(LOG_DEBUG,__LINE__,"<< StartThrd, ret False");

  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EBHNNPDK@?$DM?$DM?5StartThrd?0?5ret?5False?$AA@
  001a3	68 ee 02 00 00	 push	 750			; 000002eeH
  001a8	6a 10		 push	 16			; 00000010H
  001aa	32 db		 xor	 bl, bl
  001ac	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
$LN66@StartThrea:
  001b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 751  :     }
; 752  :     return ret;

  001b4	c7 84 24 34 01
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+320], -1
  001bf	83 bc 24 54 01
	00 00 10	 cmp	 DWORD PTR _threadName$[esp+332], 16 ; 00000010H
  001c7	72 10		 jb	 SHORT $LN53@StartThrea
  001c9	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR _threadName$[esp+312]
  001d0	52		 push	 edx
  001d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001d6	83 c4 04	 add	 esp, 4
$LN53@StartThrea:
  001d9	c7 84 24 54 01
	00 00 0f 00 00
	00		 mov	 DWORD PTR _threadName$[esp+332], 15 ; 0000000fH
  001e4	c7 84 24 50 01
	00 00 00 00 00
	00		 mov	 DWORD PTR _threadName$[esp+328], 0
  001ef	c6 84 24 40 01
	00 00 00	 mov	 BYTE PTR _threadName$[esp+312], 0
  001f7	8a c3		 mov	 al, bl

; 753  : }

  001f9	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+312]
  00200	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00207	59		 pop	 ecx
  00208	5f		 pop	 edi
  00209	5e		 pop	 esi
  0020a	5d		 pop	 ebp
  0020b	5b		 pop	 ebx
  0020c	8b 8c 24 14 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+292]
  00213	33 cc		 xor	 ecx, esp
  00215	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0021a	81 c4 24 01 00
	00		 add	 esp, 292		; 00000124H
  00220	c3		 ret	 0
$LN3@StartThrea:

; 740  :         {
; 741  :             //Close the thread handle
; 742  :             CloseHandle(hThread);

  00221	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 743  :             hThread = NULL;
; 744  :             strcpy(msg,"<< StartThrd, ret True");

  00227	b9 05 00 00 00	 mov	 ecx, 5
  0022c	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_0BH@BDJONOMH@?$DM?$DM?5StartThrd?0?5ret?5True?$AA@
  00231	8d 7c 24 20	 lea	 edi, DWORD PTR _msg$144727[esp+312]
  00235	f3 a5		 rep movsd
  00237	66 a5		 movsw
  00239	a4		 movsb
$LN2@StartThrea:

; 745  :         }
; 746  :         Log(LOG_DEBUG,__LINE__,msg);

  0023a	8d 4c 24 20	 lea	 ecx, DWORD PTR _msg$144727[esp+312]
  0023e	51		 push	 ecx
  0023f	68 ea 02 00 00	 push	 746			; 000002eaH
  00244	6a 10		 push	 16			; 00000010H
  00246	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 747  :     }
; 748  :     else

  0024b	8a 5c 24 23	 mov	 bl, BYTE PTR _ret$[esp+324]
  0024f	e9 5d ff ff ff	 jmp	 $LN66@StartThrea
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z$0:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _threadName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 82 d8 fe ff
	ff		 lea	 eax, DWORD PTR [edx-296]
  00012	8b 8a d4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-300]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	83 c0 10	 add	 eax, 16			; 00000010H
  00022	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00025	33 c8		 xor	 ecx, eax
  00027	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z
  00031	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ENDP ; StartThread
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
$T218786 = -12						; size = 12
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy, COMDAT
; _this$ = edi
; __Capacity$ = esi

; 1102 : 		{	// allocate array with _Capacity elements

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 1104 : 		if (_Capacity == 0)
; 1105 : 			return (false);
; 1106 : 		else if (max_size() < _Capacity)

  00003	81 fe 49 92 24
	09		 cmp	 esi, 153391689		; 09249249H
  00009	76 05		 jbe	 SHORT $LN2@Buy@9

; 1107 : 			_Xlen();	// result too long

  0000b	e8 00 00 00 00	 call	 ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@KAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$LN27@Buy@9:
$LN2@Buy@9:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

  00010	8b ce		 mov	 ecx, esi
  00012	85 f6		 test	 esi, esi
  00014	77 33		 ja	 SHORT $LN21@Buy@9
  00016	33 c9		 xor	 ecx, ecx
$LN19@Buy@9:
  00018	8d 14 cd 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*8]
  0001f	2b d1		 sub	 edx, ecx
  00021	03 d2		 add	 edx, edx
  00023	03 d2		 add	 edx, edx
  00025	52		 push	 edx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 1111 : 			_Mylast = _Myfirst;
; 1112 : 			_Myend = _Myfirst + _Capacity;

  0002b	8d 0c f5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*8]
  00032	83 c4 04	 add	 esp, 4
  00035	2b ce		 sub	 ecx, esi
  00037	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  0003a	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  0003d	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00040	89 57 14	 mov	 DWORD PTR [edi+20], edx

; 1113 : 			}
; 1114 : 		return (true);

  00043	b0 01		 mov	 al, 1

; 1115 : 		}

  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
  00048	c3		 ret	 0

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN21@Buy@9:
  00049	83 c8 ff	 or	 eax, -1
  0004c	33 d2		 xor	 edx, edx
  0004e	f7 f6		 div	 esi
  00050	83 f8 1c	 cmp	 eax, 28			; 0000001cH
  00053	73 c3		 jae	 SHORT $LN19@Buy@9
  00055	6a 00		 push	 0
  00057	8d 4c 24 04	 lea	 ecx, DWORD PTR $T218786[esp+16]
  0005b	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QAE@PBD@Z ; std::bad_alloc::bad_alloc
  00060	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00065	8d 44 24 04	 lea	 eax, DWORD PTR $T218786[esp+16]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN28@Buy@9:
$LN26@Buy@9:
  0006f	cc		 int	 3
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T218960 = -8						; size = 8
tv510 = 8						; size = 4
__Cat$219122 = 8					; size = 1
__Cat$219082 = 8					; size = 1
$T219039 = 8						; size = 1
__Cat$219044 = 8					; size = 1
$T219041 = 8						; size = 1
_this$ = 8						; size = 4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=, COMDAT
; __Right$ = eax

; 563  : 		{	// assign _Right

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	8b 6c 24 14	 mov	 ebp, DWORD PTR _this$[esp+12]
  00009	8b d8		 mov	 ebx, eax
  0000b	56		 push	 esi
  0000c	57		 push	 edi

; 564  : 		if (this != &_Right)

  0000d	3b eb		 cmp	 ebp, ebx
  0000f	0f 84 aa 01 00
	00		 je	 $LN110@operator@70

; 565  : 			{	// worth doing
; 566  : 
; 567  :  #if _HAS_ITERATOR_DEBUGGING
; 568  : 			this->_Orphan_all();
; 569  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 570  : 
; 571  : 			if (_Right.size() == 0)

  00015	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00018	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  0001b	2b c8		 sub	 ecx, eax
  0001d	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00022	f7 e9		 imul	 ecx
  00024	03 d1		 add	 edx, ecx
  00026	c1 fa 04	 sar	 edx, 4
  00029	8b fa		 mov	 edi, edx
  0002b	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  0002e	03 fa		 add	 edi, edx
  00030	75 3b		 jne	 SHORT $LN8@operator@70

; 572  : 				clear();	// new sequence empty, erase existing sequence

  00032	8b 5d 10	 mov	 ebx, DWORD PTR [ebp+16]
  00035	39 5d 0c	 cmp	 DWORD PTR [ebp+12], ebx
  00038	76 05		 jbe	 SHORT $LN22@operator@70
  0003a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN22@operator@70:
  0003f	8b 75 0c	 mov	 esi, DWORD PTR [ebp+12]
  00042	8b 7d 00	 mov	 edi, DWORD PTR [ebp]
  00045	3b 75 10	 cmp	 esi, DWORD PTR [ebp+16]
  00048	76 05		 jbe	 SHORT $LN41@operator@70
  0004a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN41@operator@70:
  0004f	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00052	53		 push	 ebx
  00053	57		 push	 edi
  00054	56		 push	 esi
  00055	50		 push	 eax
  00056	8d 5c 24 20	 lea	 ebx, DWORD PTR $T218960[esp+40]
  0005a	8b f5		 mov	 esi, ebp
  0005c	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

  00061	8b c5		 mov	 eax, ebp

; 599  : 		}

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5d		 pop	 ebp
  00066	5b		 pop	 ebx
  00067	83 c4 08	 add	 esp, 8
  0006a	c2 04 00	 ret	 4
$LN8@operator@70:

; 573  : 			else if (_Right.size() <= size())

  0006d	8b 4d 10	 mov	 ecx, DWORD PTR [ebp+16]
  00070	8b 75 0c	 mov	 esi, DWORD PTR [ebp+12]
  00073	2b ce		 sub	 ecx, esi
  00075	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0007a	f7 e9		 imul	 ecx
  0007c	03 d1		 add	 edx, ecx
  0007e	c1 fa 04	 sar	 edx, 4
  00081	8b ca		 mov	 ecx, edx
  00083	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00086	03 ca		 add	 ecx, edx
  00088	3b f9		 cmp	 edi, ecx
  0008a	77 6b		 ja	 SHORT $LN6@operator@70

; 574  : 				{	// enough elements, copy new and destroy old
; 575  : 				pointer _Ptr = _STDEXT unchecked_copy(_Right._Myfirst, _Right._Mylast,
; 576  : 					_Myfirst);	// copy new

  0008c	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  0008f	c6 44 24 1c 00	 mov	 BYTE PTR $T219039[esp+20], 0
  00094	8b 44 24 1c	 mov	 eax, DWORD PTR $T219039[esp+20]
  00098	8b 4c 24 1c	 mov	 ecx, DWORD PTR __Cat$219044[esp+20]
  0009c	8b 54 24 1c	 mov	 edx, DWORD PTR $T219041[esp+20]
  000a0	50		 push	 eax
  000a1	51		 push	 ecx
  000a2	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  000a5	52		 push	 edx
  000a6	8b c6		 mov	 eax, esi
  000a8	e8 00 00 00 00	 call	 ??$_Copy_opt@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 577  : 				_Destroy(_Ptr, _Mylast);	// destroy old

  000ad	8b 4c 24 28	 mov	 ecx, DWORD PTR __Cat$219082[esp+32]
  000b1	8b 7d 10	 mov	 edi, DWORD PTR [ebp+16]
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b7	51		 push	 ecx
  000b8	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 578  : 				_Mylast = _Myfirst + _Right.size();

  000bd	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  000c0	2b 4b 0c	 sub	 ecx, DWORD PTR [ebx+12]
  000c3	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000c8	f7 e9		 imul	 ecx
  000ca	03 d1		 add	 edx, ecx
  000cc	c1 fa 04	 sar	 edx, 4
  000cf	8b c2		 mov	 eax, edx
  000d1	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d4	03 c2		 add	 eax, edx
  000d6	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  000dd	83 c4 04	 add	 esp, 4
  000e0	2b d0		 sub	 edx, eax
  000e2	8b 45 0c	 mov	 eax, DWORD PTR [ebp+12]
  000e5	8d 0c 90	 lea	 ecx, DWORD PTR [eax+edx*4]
  000e8	89 4d 10	 mov	 DWORD PTR [ebp+16], ecx

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

  000eb	8b c5		 mov	 eax, ebp

; 599  : 		}

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5d		 pop	 ebp
  000f0	5b		 pop	 ebx
  000f1	83 c4 08	 add	 esp, 8
  000f4	c2 04 00	 ret	 4
$LN6@operator@70:

; 579  : 				}
; 580  : 			else if (_Right.size() <= capacity())

  000f7	85 f6		 test	 esi, esi
  000f9	75 04		 jne	 SHORT $LN84@operator@70
  000fb	33 c0		 xor	 eax, eax
  000fd	eb 1e		 jmp	 SHORT $LN85@operator@70
$LN84@operator@70:
  000ff	8b 55 14	 mov	 edx, DWORD PTR [ebp+20]
  00102	2b d6		 sub	 edx, esi
  00104	89 54 24 1c	 mov	 DWORD PTR tv510[esp+20], edx
  00108	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0010d	f7 ea		 imul	 edx
  0010f	03 54 24 1c	 add	 edx, DWORD PTR tv510[esp+20]
  00113	c1 fa 04	 sar	 edx, 4
  00116	8b c2		 mov	 eax, edx
  00118	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0011b	03 c2		 add	 eax, edx
$LN85@operator@70:
  0011d	3b f8		 cmp	 edi, eax
  0011f	77 35		 ja	 SHORT $LN4@operator@70

; 581  : 				{	// enough room, copy and construct new
; 582  : 				pointer _Ptr = _Right._Myfirst + size();

  00121	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00124	8d 14 cd 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*8]
  0012b	2b d1		 sub	 edx, ecx

; 583  : 				_STDEXT unchecked_copy(_Right._Myfirst, _Ptr, _Myfirst);

  0012d	56		 push	 esi
  0012e	8d 3c 90	 lea	 edi, DWORD PTR [eax+edx*4]
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ??$unchecked_copy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@stdext@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@00@Z ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 584  : 				_Mylast = _Ucopy(_Ptr, _Right._Mylast, _Mylast);

  00137	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  0013a	8b 55 10	 mov	 edx, DWORD PTR [ebp+16]
  0013d	83 c4 08	 add	 esp, 8
  00140	50		 push	 eax
  00141	57		 push	 edi

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

  00142	e8 00 00 00 00	 call	 ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  00147	89 45 10	 mov	 DWORD PTR [ebp+16], eax

; 596  : 				}
; 597  : 			}
; 598  : 		return (*this);

  0014a	8b c5		 mov	 eax, ebp

; 599  : 		}

  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5d		 pop	 ebp
  0014f	5b		 pop	 ebx
  00150	83 c4 08	 add	 esp, 8
  00153	c2 04 00	 ret	 4
$LN4@operator@70:

; 585  : 				}
; 586  : 			else
; 587  : 				{	// not enough room, allocate new array and construct new
; 588  : 				if (_Myfirst != 0)

  00156	85 f6		 test	 esi, esi
  00158	74 1e		 je	 SHORT $LN94@operator@70

; 589  : 					{	// discard old array
; 590  : 					_Destroy(_Myfirst, _Mylast);

  0015a	8b 4c 24 1c	 mov	 ecx, DWORD PTR __Cat$219122[esp+20]
  0015e	8b 7d 10	 mov	 edi, DWORD PTR [ebp+16]
  00161	51		 push	 ecx
  00162	8b c6		 mov	 eax, esi
  00164	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 591  : 					this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  00169	8b 55 0c	 mov	 edx, DWORD PTR [ebp+12]
  0016c	83 c4 04	 add	 esp, 4
  0016f	52		 push	 edx
  00170	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00175	83 c4 04	 add	 esp, 4
$LN94@operator@70:

; 592  : 					}
; 593  : 				if (_Buy(_Right.size()))

  00178	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  0017b	2b 4b 0c	 sub	 ecx, DWORD PTR [ebx+12]
  0017e	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00183	f7 e9		 imul	 ecx
  00185	03 d1		 add	 edx, ecx
  00187	c1 fa 04	 sar	 edx, 4
  0018a	8b f2		 mov	 esi, edx
  0018c	b8 00 00 00 00	 mov	 eax, 0
  00191	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00194	03 f2		 add	 esi, edx
  00196	89 45 0c	 mov	 DWORD PTR [ebp+12], eax
  00199	89 45 10	 mov	 DWORD PTR [ebp+16], eax
  0019c	89 45 14	 mov	 DWORD PTR [ebp+20], eax
  0019f	74 1e		 je	 SHORT $LN110@operator@70
  001a1	8b fd		 mov	 edi, ebp
  001a3	e8 00 00 00 00	 call	 ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
  001a8	84 c0		 test	 al, al
  001aa	74 13		 je	 SHORT $LN110@operator@70

; 594  : 					_Mylast = _Ucopy(_Right._Myfirst, _Right._Mylast,
; 595  : 						_Myfirst);

  001ac	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  001af	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  001b2	8b 55 0c	 mov	 edx, DWORD PTR [ebp+12]
  001b5	50		 push	 eax
  001b6	51		 push	 ecx
  001b7	e8 00 00 00 00	 call	 ??$_Ucopy@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  001bc	89 45 10	 mov	 DWORD PTR [ebp+16], eax
$LN110@operator@70:

; 599  : 		}

  001bf	5f		 pop	 edi
  001c0	5e		 pop	 esi
  001c1	8b c5		 mov	 eax, ebp
  001c3	5d		 pop	 ebp
  001c4	5b		 pop	 ebx
  001c5	83 c4 08	 add	 esp, 8
  001c8	c2 04 00	 ret	 4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T219166 = -16						; size = 4
$T219171 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 470  : 		{	// construct empty vector

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	56		 push	 esi
  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00015	33 c4		 xor	 eax, esp
  00017	50		 push	 eax
  00018	8d 44 24 0c	 lea	 eax, DWORD PTR __$EHRec$[esp+24]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	8b 74 24 1c	 mov	 esi, DWORD PTR _this$[esp+20]
  00026	51		 push	 ecx
  00027	89 64 24 0c	 mov	 DWORD PTR $T219171[esp+28], esp
  0002b	89 64 24 0c	 mov	 DWORD PTR $T219166[esp+28], esp
  0002f	e8 00 00 00 00	 call	 ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00034	c7 44 24 14 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 1

; 471  : 		_Buy(0);

  0003c	33 c0		 xor	 eax, eax
  0003e	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00041	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00044	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 472  : 		}

  00047	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  0004f	8b c6		 mov	 eax, esi
  00051	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5e		 pop	 esi
  0005e	83 c4 10	 add	 esp, 16			; 00000010H
  00061	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$1:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0:
  00008	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  00011	c3		 ret	 0
__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 f8	 lea	 eax, DWORD PTR [edx-8]
  00019	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?GetSystemStatus@@YAXXZ				; GetSystemStatus
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?GetSystemStatus@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatus@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatus@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatus@@YAXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatus@@YAXXZ$3
__ehfuncinfo$?GetSystemStatus@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetSystemStatus@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetSystemStatus@@YAXXZ
_TEXT	SEGMENT
$T219251 = -16						; size = 4
$T219250 = -16						; size = 4
$T219249 = -16						; size = 4
$T219248 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetSystemStatus@@YAXXZ PROC				; GetSystemStatus, COMDAT

; 2856 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?GetSystemStatus@@YAXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	53		 push	 ebx
  00010	55		 push	 ebp
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c4		 xor	 eax, esp
  0001a	50		 push	 eax
  0001b	8d 44 24 18	 lea	 eax, DWORD PTR __$EHRec$[esp+36]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2857 :     Log(LOG_DEBUG,__LINE__,">> GetSysSts");

  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DKCIAKLO@?$DO?$DO?5GetSysSts?$AA@
  0002a	68 29 0b 00 00	 push	 2857			; 00000b29H
  0002f	6a 10		 push	 16			; 00000010H
  00031	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2858 : 
; 2859 :     /* System Times */
; 2860 :     if(_thGetInt(&gbShutdown)==FALSE)

  00039	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0003e	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00043	33 db		 xor	 ebx, ebx
  00045	83 cd ff	 or	 ebp, -1
  00048	85 c0		 test	 eax, eax
  0004a	75 43		 jne	 SHORT $LN4@GetSystemS

; 2861 :     {
; 2862 :         StartThread("SysTimes",SystemTimes,NULL,MINUTE);

  0004c	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00051	53		 push	 ebx
  00052	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00055	8b cc		 mov	 ecx, esp
  00057	89 64 24 38	 mov	 DWORD PTR $T219248[esp+72], esp
  0005b	6a 08		 push	 8
  0005d	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00064	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_08LMMJIFBC@SysTimes?$AA@
  0006c	33 f6		 xor	 esi, esi
  0006e	bf 00 00 00 00	 mov	 edi, OFFSET ?SystemTimes@@YGIPAX@Z ; SystemTimes
  00073	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00076	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0007b	89 5c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebx
  0007f	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  00083	8b d6		 mov	 edx, esi
  00085	8b cf		 mov	 ecx, edi
  00087	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  0008c	83 c4 24	 add	 esp, 36			; 00000024H
$LN4@GetSystemS:

; 2863 :     }
; 2864 : 
; 2865 :     /* System Memory */
; 2866 :     if(_thGetInt(&gbShutdown)==FALSE)

  0008f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  00094	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00099	85 c0		 test	 eax, eax
  0009b	75 47		 jne	 SHORT $LN3@GetSystemS

; 2867 :     {
; 2868 :         StartThread("SysMem",SystemMemory,NULL,MINUTE);

  0009d	68 60 ea 00 00	 push	 60000			; 0000ea60H
  000a2	53		 push	 ebx
  000a3	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000a6	8b cc		 mov	 ecx, esp
  000a8	89 64 24 38	 mov	 DWORD PTR $T219249[esp+72], esp
  000ac	6a 06		 push	 6
  000ae	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  000b5	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_06BFMAIJHM@SysMem?$AA@
  000bd	33 f6		 xor	 esi, esi
  000bf	bf 00 00 00 00	 mov	 edi, OFFSET ?SystemMemory@@YGIPAX@Z ; SystemMemory
  000c4	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  000c7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000cc	c7 44 24 44 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 1
  000d4	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  000d8	8b d6		 mov	 edx, esi
  000da	8b cf		 mov	 ecx, edi
  000dc	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  000e1	83 c4 24	 add	 esp, 36			; 00000024H
$LN3@GetSystemS:

; 2869 :     }
; 2870 : 
; 2871 :     /* Performance Information */
; 2872 :     if(_thGetInt(&gbShutdown)==FALSE)

  000e4	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  000e9	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  000ee	85 c0		 test	 eax, eax
  000f0	75 47		 jne	 SHORT $LN2@GetSystemS

; 2873 :     {
; 2874 :         StartThread("PerfInfo",PerformanceInfo,NULL,MINUTE);

  000f2	68 60 ea 00 00	 push	 60000			; 0000ea60H
  000f7	53		 push	 ebx
  000f8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000fb	8b cc		 mov	 ecx, esp
  000fd	89 64 24 38	 mov	 DWORD PTR $T219250[esp+72], esp
  00101	6a 08		 push	 8
  00103	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  0010a	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_08HGNAFDEP@PerfInfo?$AA@
  00112	33 f6		 xor	 esi, esi
  00114	bf 00 00 00 00	 mov	 edi, OFFSET ?PerformanceInfo@@YGIPAX@Z ; PerformanceInfo
  00119	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  0011c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00121	c7 44 24 44 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 2
  00129	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  0012d	8b d6		 mov	 edx, esi
  0012f	8b cf		 mov	 ecx, edi
  00131	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00136	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@GetSystemS:

; 2875 :     }
; 2876 : 
; 2877 :     /* Processes Informaton */
; 2878 :     if(_thGetInt(&gbShutdown)==FALSE)

  00139	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0013e	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00143	85 c0		 test	 eax, eax
  00145	75 47		 jne	 SHORT $LN1@GetSystemS

; 2879 :     {
; 2880 :         StartThread("ProcInfo",ProcessInfo,NULL,MINUTE);

  00147	68 60 ea 00 00	 push	 60000			; 0000ea60H
  0014c	53		 push	 ebx
  0014d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00150	8b cc		 mov	 ecx, esp
  00152	89 64 24 38	 mov	 DWORD PTR $T219251[esp+72], esp
  00156	6a 08		 push	 8
  00158	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  0015f	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_08FGGKAHMA@ProcInfo?$AA@
  00167	33 f6		 xor	 esi, esi
  00169	bf 00 00 00 00	 mov	 edi, OFFSET ?ProcessInfo@@YGIPAX@Z ; ProcessInfo
  0016e	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00171	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00176	c7 44 24 44 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 3
  0017e	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  00182	8b d6		 mov	 edx, esi
  00184	8b cf		 mov	 ecx, edi
  00186	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  0018b	83 c4 24	 add	 esp, 36			; 00000024H
$LN1@GetSystemS:

; 2881 :     }
; 2882 : 
; 2883 :     Log(LOG_DEBUG,__LINE__,"<< GetSysSts");

  0018e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LGEPCBGK@?$DM?$DM?5GetSysSts?$AA@
  00193	68 43 0b 00 00	 push	 2883			; 00000b43H
  00198	6a 10		 push	 16			; 00000010H
  0019a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0019f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2884 : }

  001a2	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  001a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ad	59		 pop	 ecx
  001ae	5f		 pop	 edi
  001af	5e		 pop	 esi
  001b0	5d		 pop	 ebp
  001b1	5b		 pop	 ebx
  001b2	83 c4 10	 add	 esp, 16			; 00000010H
  001b5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSystemStatus@@YAXXZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR $T219248[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemStatus@@YAXXZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR $T219249[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemStatus@@YAXXZ$2:
  00010	8b 4d f0	 mov	 ecx, DWORD PTR $T219250[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemStatus@@YAXXZ$3:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR $T219251[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetSystemStatus@@YAXXZ:
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 ec	 lea	 eax, DWORD PTR [edx-20]
  00027	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetSystemStatus@@YAXXZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetSystemStatus@@YAXXZ ENDP				; GetSystemStatus
PUBLIC	?GetSystemDetails@@YAXXZ			; GetSystemDetails
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?GetSystemDetails@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemDetails@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemDetails@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemDetails@@YAXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemDetails@@YAXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemDetails@@YAXXZ$4
__ehfuncinfo$?GetSystemDetails@@YAXXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GetSystemDetails@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetSystemDetails@@YAXXZ
_TEXT	SEGMENT
$T219845 = -16						; size = 4
$T219844 = -16						; size = 4
$T219843 = -16						; size = 4
$T219842 = -16						; size = 4
$T219841 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetSystemDetails@@YAXXZ PROC				; GetSystemDetails, COMDAT

; 2816 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?GetSystemDetails@@YAXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	53		 push	 ebx
  00010	55		 push	 ebp
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c4		 xor	 eax, esp
  0001a	50		 push	 eax
  0001b	8d 44 24 18	 lea	 eax, DWORD PTR __$EHRec$[esp+36]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2817 :     Log(LOG_DEBUG,__LINE__,">> GetSysDets");

  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BHNLPBFJ@?$DO?$DO?5GetSysDets?$AA@
  0002a	68 01 0b 00 00	 push	 2817			; 00000b01H
  0002f	6a 10		 push	 16			; 00000010H
  00031	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2818 : 
; 2819 :     /* Hardware Profile */
; 2820 :     if(_thGetInt(&gbShutdown)==FALSE)

  00039	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0003e	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00043	33 db		 xor	 ebx, ebx
  00045	83 cd ff	 or	 ebp, -1
  00048	85 c0		 test	 eax, eax
  0004a	75 41		 jne	 SHORT $LN5@GetSystemD

; 2821 :     {
; 2822 :         StartThread("HwProfile",HwProfile,NULL,MINUTE);

  0004c	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00051	53		 push	 ebx
  00052	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00055	8b cc		 mov	 ecx, esp
  00057	89 64 24 38	 mov	 DWORD PTR $T219841[esp+72], esp
  0005b	6a 09		 push	 9
  0005d	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00064	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_09NLLCGGEI@HwProfile?$AA@
  0006c	be 00 00 00 00	 mov	 esi, OFFSET ?HwProfile@@YGIPAX@Z ; HwProfile
  00071	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00074	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00079	89 5c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebx
  0007d	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  00081	8b d3		 mov	 edx, ebx
  00083	8b ce		 mov	 ecx, esi
  00085	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  0008a	83 c4 24	 add	 esp, 36			; 00000024H
$LN5@GetSystemD:

; 2823 :     }
; 2824 : 
; 2825 :     /* Computer */
; 2826 :     if(_thGetInt(&gbShutdown)==FALSE)

  0008d	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  00092	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00097	85 c0		 test	 eax, eax
  00099	75 47		 jne	 SHORT $LN4@GetSystemD

; 2827 :     {
; 2828 :         StartThread("SysInfo",SystemInfo,NULL,MINUTE);

  0009b	68 60 ea 00 00	 push	 60000			; 0000ea60H
  000a0	53		 push	 ebx
  000a1	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000a4	8b cc		 mov	 ecx, esp
  000a6	89 64 24 38	 mov	 DWORD PTR $T219842[esp+72], esp
  000aa	6a 07		 push	 7
  000ac	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  000b3	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_07JFBHEENG@SysInfo?$AA@
  000bb	33 f6		 xor	 esi, esi
  000bd	bf 00 00 00 00	 mov	 edi, OFFSET ?SystemInfo@@YGIPAX@Z ; SystemInfo
  000c2	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  000c5	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000ca	c7 44 24 44 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 1
  000d2	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  000d6	8b d6		 mov	 edx, esi
  000d8	8b cf		 mov	 ecx, edi
  000da	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  000df	83 c4 24	 add	 esp, 36			; 00000024H
$LN4@GetSystemD:

; 2829 :     }
; 2830 : 
; 2831 :     /* OSInfo */
; 2832 :     if(_thGetInt(&gbShutdown)==FALSE)

  000e2	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  000e7	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  000ec	85 c0		 test	 eax, eax
  000ee	75 45		 jne	 SHORT $LN3@GetSystemD

; 2833 :     {
; 2834 :         StartThread("OSInfo",OSInfo,NULL,MINUTE);

  000f0	68 60 ea 00 00	 push	 60000			; 0000ea60H
  000f5	53		 push	 ebx
  000f6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000f9	8b cc		 mov	 ecx, esp
  000fb	89 64 24 38	 mov	 DWORD PTR $T219843[esp+72], esp
  000ff	6a 06		 push	 6
  00101	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00108	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_06HKOPCFLK@OSInfo?$AA@
  00110	be 00 00 00 00	 mov	 esi, OFFSET ?OSInfo@@YGIPAX@Z ; OSInfo
  00115	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00118	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0011d	c7 44 24 44 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 2
  00125	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  00129	8b d3		 mov	 edx, ebx
  0012b	8b ce		 mov	 ecx, esi
  0012d	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00132	83 c4 24	 add	 esp, 36			; 00000024H
$LN3@GetSystemD:

; 2835 :     }
; 2836 : 
; 2837 :     /* Logical Processor(s) Information */
; 2838 :     if(_thGetInt(&gbShutdown)==FALSE)

  00135	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0013a	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  0013f	85 c0		 test	 eax, eax
  00141	75 45		 jne	 SHORT $LN2@GetSystemD

; 2839 :     {
; 2840 :         StartThread("SysLogPrcsrInfo",SystemLogicalProcessorInforamtion,NULL,MINUTE);

  00143	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00148	53		 push	 ebx
  00149	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0014c	8b cc		 mov	 ecx, esp
  0014e	89 64 24 38	 mov	 DWORD PTR $T219844[esp+72], esp
  00152	6a 0f		 push	 15			; 0000000fH
  00154	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  0015b	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JCIBBNDO@SysLogPrcsrInfo?$AA@
  00163	be 00 00 00 00	 mov	 esi, OFFSET ?SystemLogicalProcessorInforamtion@@YGIPAX@Z ; SystemLogicalProcessorInforamtion
  00168	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  0016b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00170	c7 44 24 44 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 3
  00178	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  0017c	8b d3		 mov	 edx, ebx
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00185	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@GetSystemD:

; 2841 :     }
; 2842 : 
; 2843 :     /* System Directories */
; 2844 :     if(_thGetInt(&gbShutdown)==FALSE)

  00188	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0018d	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00192	85 c0		 test	 eax, eax
  00194	75 47		 jne	 SHORT $LN1@GetSystemD

; 2845 :     {
; 2846 :         StartThread("SysDirs",SystemDirs,NULL,MINUTE);

  00196	68 60 ea 00 00	 push	 60000			; 0000ea60H
  0019b	53		 push	 ebx
  0019c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0019f	8b cc		 mov	 ecx, esp
  001a1	89 64 24 38	 mov	 DWORD PTR $T219845[esp+72], esp
  001a5	6a 07		 push	 7
  001a7	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  001ae	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_07NAIOOCP@SysDirs?$AA@
  001b6	33 f6		 xor	 esi, esi
  001b8	bf 00 00 00 00	 mov	 edi, OFFSET ?SystemDirs@@YGIPAX@Z ; SystemDirs
  001bd	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  001c0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  001c5	c7 44 24 44 04
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 4
  001cd	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  001d1	8b d6		 mov	 edx, esi
  001d3	8b cf		 mov	 ecx, edi
  001d5	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  001da	83 c4 24	 add	 esp, 36			; 00000024H
$LN1@GetSystemD:

; 2847 :     }
; 2848 : 
; 2849 :     Log(LOG_DEBUG,__LINE__,"<< GetSysDets");

  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JGOJIALP@?$DM?$DM?5GetSysDets?$AA@
  001e2	68 21 0b 00 00	 push	 2849			; 00000b21H
  001e7	6a 10		 push	 16			; 00000010H
  001e9	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2850 : }

  001f1	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  001f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001fc	59		 pop	 ecx
  001fd	5f		 pop	 edi
  001fe	5e		 pop	 esi
  001ff	5d		 pop	 ebp
  00200	5b		 pop	 ebx
  00201	83 c4 10	 add	 esp, 16			; 00000010H
  00204	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSystemDetails@@YAXXZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR $T219841[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemDetails@@YAXXZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR $T219842[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemDetails@@YAXXZ$2:
  00010	8b 4d f0	 mov	 ecx, DWORD PTR $T219843[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemDetails@@YAXXZ$3:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR $T219844[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemDetails@@YAXXZ$4:
  00020	8b 4d f0	 mov	 ecx, DWORD PTR $T219845[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetSystemDetails@@YAXXZ:
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 ec	 lea	 eax, DWORD PTR [edx-20]
  0002f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetSystemDetails@@YAXXZ
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetSystemDetails@@YAXXZ ENDP				; GetSystemDetails
PUBLIC	_stringsList$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; parseNullTerminatedStrings
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0
__ehfuncinfo$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_possibleStringInit$ = -52				; size = 4
_stringsList$GSCopy$ = -48				; size = 4
_aux$144621 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 4
_stringsList$ = 12					; size = 4
?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; parseNullTerminatedStrings, COMDAT

; 474  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c4		 xor	 eax, esp
  00018	89 44 24 28	 mov	 DWORD PTR __$ArrayPad$[esp+56], eax
  0001c	53		 push	 ebx
  0001d	55		 push	 ebp
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c4		 xor	 eax, esp
  00027	50		 push	 eax
  00028	8d 44 24 40	 lea	 eax, DWORD PTR __$EHRec$[esp+76]
  0002c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00032	8b 44 24 54	 mov	 eax, DWORD PTR _stringsList$[esp+72]

; 475  :     //vector<string> result;
; 476  :     int nullCount = 0, possibleStringInit = 0;

  00036	33 db		 xor	 ebx, ebx
  00038	33 ff		 xor	 edi, edi
  0003a	33 d2		 xor	 edx, edx

; 477  :     char *p = NULL;
; 478  : 
; 479  :     for(int i=0;nullCount<2;i++)

  0003c	89 44 24 1c	 mov	 DWORD PTR _stringsList$GSCopy$[esp+76], eax
  00040	33 c9		 xor	 ecx, ecx

; 480  :     {
; 481  :         if(input[i]==0)

  00042	bd 01 00 00 00	 mov	 ebp, 1
  00047	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL6@parseNullT:
  00050	8b 44 24 50	 mov	 eax, DWORD PTR _input$[esp+72]
  00054	38 5c 28 ff	 cmp	 BYTE PTR [eax+ebp-1], bl
  00058	75 7c		 jne	 SHORT $LN3@parseNullT

; 482  :         {
; 483  :             nullCount++;

  0005a	47		 inc	 edi

; 484  :             possibleStringInit = i + 1;

  0005b	89 6c 24 18	 mov	 DWORD PTR _possibleStringInit$[esp+76], ebp

; 485  :             if(p!=NULL)

  0005f	3b cb		 cmp	 ecx, ebx
  00061	74 6b		 je	 SHORT $LN70@parseNullT

; 486  :             {
; 487  :                 string aux(p);

  00063	8b c1		 mov	 eax, ecx
  00065	c7 44 24 38 0f
	00 00 00	 mov	 DWORD PTR _aux$144621[esp+100], 15 ; 0000000fH
  0006d	89 5c 24 34	 mov	 DWORD PTR _aux$144621[esp+96], ebx
  00071	88 5c 24 24	 mov	 BYTE PTR _aux$144621[esp+80], bl
  00075	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL74@parseNullT:
  00078	8a 10		 mov	 dl, BYTE PTR [eax]
  0007a	40		 inc	 eax
  0007b	3a d3		 cmp	 dl, bl
  0007d	75 f9		 jne	 SHORT $LL74@parseNullT
  0007f	2b c6		 sub	 eax, esi
  00081	50		 push	 eax
  00082	51		 push	 ecx
  00083	8d 4c 24 28	 lea	 ecx, DWORD PTR _aux$144621[esp+84]
  00087	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0008c	89 5c 24 48	 mov	 DWORD PTR __$EHRec$[esp+84], ebx

; 488  :                 //result.push_back(aux);
; 489  :                 stringsList.push_back(aux);

  00090	8b 5c 24 1c	 mov	 ebx, DWORD PTR _stringsList$GSCopy$[esp+76]
  00094	8d 4c 24 20	 lea	 ecx, DWORD PTR _aux$144621[esp+76]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

; 490  :             }

  0009e	c7 44 24 48 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+84], -1
  000a6	83 7c 24 38 10	 cmp	 DWORD PTR _aux$144621[esp+100], 16 ; 00000010H
  000ab	72 0d		 jb	 SHORT $LN62@parseNullT
  000ad	8b 54 24 24	 mov	 edx, DWORD PTR _aux$144621[esp+80]
  000b1	52		 push	 edx
  000b2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b7	83 c4 04	 add	 esp, 4
$LN62@parseNullT:
  000ba	33 c0		 xor	 eax, eax
  000bc	c7 44 24 38 0f
	00 00 00	 mov	 DWORD PTR _aux$144621[esp+100], 15 ; 0000000fH
  000c4	89 44 24 34	 mov	 DWORD PTR _aux$144621[esp+96], eax
  000c8	88 44 24 24	 mov	 BYTE PTR _aux$144621[esp+80], al
  000cc	33 db		 xor	 ebx, ebx
$LN70@parseNullT:

; 491  :             p = NULL;
; 492  :             continue;

  000ce	8b 54 24 18	 mov	 edx, DWORD PTR _possibleStringInit$[esp+76]
  000d2	33 c9		 xor	 ecx, ecx
  000d4	eb 09		 jmp	 SHORT $LN5@parseNullT
$LN3@parseNullT:

; 493  :         }
; 494  :         if(p==NULL)

  000d6	3b cb		 cmp	 ecx, ebx
  000d8	75 05		 jne	 SHORT $LN5@parseNullT

; 495  :         {
; 496  :             nullCount=0;

  000da	33 ff		 xor	 edi, edi

; 497  :             p = &input[possibleStringInit];

  000dc	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
$LN5@parseNullT:
  000df	45		 inc	 ebp
  000e0	83 ff 02	 cmp	 edi, 2
  000e3	0f 8c 67 ff ff
	ff		 jl	 $LL6@parseNullT

; 498  :         }
; 499  :     }
; 500  :     return; //result;
; 501  : }

  000e9	8b 4c 24 40	 mov	 ecx, DWORD PTR __$EHRec$[esp+76]
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f4	59		 pop	 ecx
  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5d		 pop	 ebp
  000f8	5b		 pop	 ebx
  000f9	8b 4c 24 28	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+56]
  000fd	33 cc		 xor	 ecx, esp
  000ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00104	83 c4 38	 add	 esp, 56			; 00000038H
  00107	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR _aux$144621[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 c4	 lea	 eax, DWORD PTR [edx-60]
  0000f	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	83 c0 10	 add	 eax, 16			; 00000010H
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; parseNullTerminatedStrings
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\monitorips.h
;	COMDAT ?GetIPs@MonitorIPs@@QAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_ips$ = 8						; size = 4
?GetIPs@MonitorIPs@@QAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; MonitorIPs::GetIPs, COMDAT
; _this$ = esi

; 43   :         WaitForSingleObject(m_hSync,MINUTE);

  00000	8b 06		 mov	 eax, DWORD PTR [esi]
  00002	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00007	50		 push	 eax
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 44   :         
; 45   :         ips = m_ips;

  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR _ips$[esp-4]
  00012	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=

; 46   :         
; 47   :         ReleaseMutex(m_hSync);

  0001b	8b 16		 mov	 edx, DWORD PTR [esi]
  0001d	89 54 24 04	 mov	 DWORD PTR _ips$[esp-4], edx
  00021	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__ReleaseMutex@4
?GetIPs@MonitorIPs@@QAEXAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; MonitorIPs::GetIPs
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1MonitorIPs@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1MonitorIPs@@QAE@XZ$0
__ehfuncinfo$??1MonitorIPs@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1MonitorIPs@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\monitorips.h
xdata$x	ENDS
;	COMDAT ??1MonitorIPs@@QAE@XZ
_TEXT	SEGMENT
$T221013 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1MonitorIPs@@QAE@XZ PROC				; MonitorIPs::~MonitorIPs, COMDAT

; 29   :     {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1MonitorIPs@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 10	 sub	 esp, 16			; 00000010H
  00011	53		 push	 ebx
  00012	55		 push	 ebp
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c4		 xor	 eax, esp
  0001c	50		 push	 eax
  0001d	8d 44 24 24	 lea	 eax, DWORD PTR __$EHRec$[esp+48]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b 74 24 34	 mov	 esi, DWORD PTR _this$[esp+44]
  0002b	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+56], 0

; 30   :         if (m_hWait) UnregisterWaitEx(m_hWait, INVALID_HANDLE_VALUE);

  00033	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00036	85 c0		 test	 eax, eax
  00038	74 09		 je	 SHORT $LN3@MonitorIPs
  0003a	6a ff		 push	 -1
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnregisterWaitEx@8
$LN3@MonitorIPs:

; 31   :         if (m_o.hEvent) CloseHandle(m_o.hEvent);

  00043	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00046	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__CloseHandle@4
  0004c	85 c0		 test	 eax, eax
  0004e	74 03		 je	 SHORT $LN2@MonitorIPs
  00050	50		 push	 eax
  00051	ff d7		 call	 edi
$LN2@MonitorIPs:

; 32   :         if (m_hSync) CloseHandle(m_hSync);

  00053	8b 06		 mov	 eax, DWORD PTR [esi]
  00055	85 c0		 test	 eax, eax
  00057	74 03		 je	 SHORT $LN1@MonitorIPs
  00059	50		 push	 eax
  0005a	ff d7		 call	 edi
$LN1@MonitorIPs:

; 33   : 
; 34   :         m_ips.clear();

  0005c	8b 5e 2c	 mov	 ebx, DWORD PTR [esi+44]
  0005f	83 c6 1c	 add	 esi, 28			; 0000001cH
  00062	39 5e 0c	 cmp	 DWORD PTR [esi+12], ebx
  00065	76 05		 jbe	 SHORT $LN15@MonitorIPs
  00067	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN15@MonitorIPs:
  0006c	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  0006f	8b 2e		 mov	 ebp, DWORD PTR [esi]
  00071	3b 7e 10	 cmp	 edi, DWORD PTR [esi+16]
  00074	76 05		 jbe	 SHORT $LN34@MonitorIPs
  00076	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN34@MonitorIPs:
  0007b	8b 06		 mov	 eax, DWORD PTR [esi]
  0007d	53		 push	 ebx
  0007e	55		 push	 ebp
  0007f	57		 push	 edi
  00080	50		 push	 eax
  00081	8d 5c 24 28	 lea	 ebx, DWORD PTR $T221013[esp+64]
  00085	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 35   : 
; 36   :         Log(LOG_DEBUG,__LINE__,"<< MonIPs");

  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_09CLAHNHIH@?$DM?$DM?5MonIPs?$AA@
  0008f	6a 24		 push	 36			; 00000024H
  00091	6a 10		 push	 16			; 00000010H
  00093	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH

; 37   :     }

  0009b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  000a3	56		 push	 esi
  000a4	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  000a9	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5d		 pop	 ebp
  000b8	5b		 pop	 ebx
  000b9	83 c4 1c	 add	 esp, 28			; 0000001cH
  000bc	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1MonitorIPs@@QAE@XZ$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	83 c0 1c	 add	 eax, 28			; 0000001cH
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0000c	c3		 ret	 0
__ehhandler$??1MonitorIPs@@QAE@XZ:
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00011	8d 42 e0	 lea	 eax, DWORD PTR [edx-32]
  00014	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1MonitorIPs@@QAE@XZ
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1MonitorIPs@@QAE@XZ ENDP				; MonitorIPs::~MonitorIPs
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0MonitorIPs@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MonitorIPs@@QAE@XZ$0
__ehfuncinfo$??0MonitorIPs@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0MonitorIPs@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\monitorips.h
xdata$x	ENDS
;	COMDAT ??0MonitorIPs@@QAE@XZ
_TEXT	SEGMENT
$T221240 = -24						; size = 8
$T221237 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0MonitorIPs@@QAE@XZ PROC				; MonitorIPs::MonitorIPs, COMDAT

; 20   :     {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0MonitorIPs@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 10	 sub	 esp, 16			; 00000010H
  00011	53		 push	 ebx
  00012	55		 push	 ebp
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c4		 xor	 eax, esp
  0001c	50		 push	 eax
  0001d	8d 44 24 24	 lea	 eax, DWORD PTR __$EHRec$[esp+48]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b 7c 24 34	 mov	 edi, DWORD PTR _this$[esp+44]
  0002b	33 db		 xor	 ebx, ebx
  0002d	8d 77 1c	 lea	 esi, DWORD PTR [edi+28]
  00030	56		 push	 esi
  00031	89 1f		 mov	 DWORD PTR [edi], ebx
  00033	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  00036	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0003b	89 5c 24 2c	 mov	 DWORD PTR __$EHRec$[esp+56], ebx

; 21   :         Log(LOG_DEBUG,__LINE__,">> MonIPs");

  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_09BAECPDM@?$DO?$DO?5MonIPs?$AA@
  00044	6a 15		 push	 21			; 00000015H
  00046	6a 10		 push	 16			; 00000010H
  00048	88 5f 34	 mov	 BYTE PTR [edi+52], bl
  0004b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 22   : 
; 23   :         ZeroMemory(&m_o, sizeof(m_o));

  00050	33 c0		 xor	 eax, eax
  00052	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00055	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00058	89 47 10	 mov	 DWORD PTR [edi+16], eax
  0005b	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0005e	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 24   : 
; 25   :         m_ips.clear();

  00061	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	39 5e 0c	 cmp	 DWORD PTR [esi+12], ebx
  0006a	76 05		 jbe	 SHORT $LN12@MonitorIPs@2
  0006c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN12@MonitorIPs@2:
  00071	8b 6e 0c	 mov	 ebp, DWORD PTR [esi+12]
  00074	8b 06		 mov	 eax, DWORD PTR [esi]
  00076	89 44 24 18	 mov	 DWORD PTR $T221237[esp+48], eax
  0007a	3b 6e 10	 cmp	 ebp, DWORD PTR [esi+16]
  0007d	76 05		 jbe	 SHORT $LN31@MonitorIPs@2
  0007f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN31@MonitorIPs@2:
  00084	8b 4c 24 18	 mov	 ecx, DWORD PTR $T221237[esp+48]
  00088	8b 06		 mov	 eax, DWORD PTR [esi]
  0008a	53		 push	 ebx
  0008b	51		 push	 ecx
  0008c	55		 push	 ebp
  0008d	50		 push	 eax
  0008e	8d 5c 24 28	 lea	 ebx, DWORD PTR $T221240[esp+64]
  00092	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 26   :     }

  00097	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  0009f	8b c7		 mov	 eax, edi
  000a1	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5d		 pop	 ebp
  000b0	5b		 pop	 ebx
  000b1	83 c4 1c	 add	 esp, 28			; 0000001cH
  000b4	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MonitorIPs@@QAE@XZ$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	83 c0 1c	 add	 eax, 28			; 0000001cH
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0000c	c3		 ret	 0
__ehhandler$??0MonitorIPs@@QAE@XZ:
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00011	8d 42 e0	 lea	 eax, DWORD PTR [edx-32]
  00014	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0MonitorIPs@@QAE@XZ
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0MonitorIPs@@QAE@XZ ENDP				; MonitorIPs::MonitorIPs
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1USB@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1USB@@QAE@XZ$0
__ehfuncinfo$??1USB@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1USB@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\usb.h
xdata$x	ENDS
;	COMDAT ??1USB@@QAE@XZ
_TEXT	SEGMENT
$T221428 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??1USB@@QAE@XZ PROC					; USB::~USB, COMDAT

; 124  :     {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1USB@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 10	 sub	 esp, 16			; 00000010H
  00011	53		 push	 ebx
  00012	55		 push	 ebp
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c4		 xor	 eax, esp
  0001c	50		 push	 eax
  0001d	8d 44 24 24	 lea	 eax, DWORD PTR __$EHRec$[esp+48]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+56], 0

; 125  :         usbDevDetails.clear();

  0002f	8b 74 24 34	 mov	 esi, DWORD PTR _this$[esp+44]
  00033	8b 9e 1c 02 00
	00		 mov	 ebx, DWORD PTR [esi+540]
  00039	81 c6 0c 02 00
	00		 add	 esi, 524		; 0000020cH
  0003f	39 5e 0c	 cmp	 DWORD PTR [esi+12], ebx
  00042	76 05		 jbe	 SHORT $LN12@USB
  00044	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN12@USB:
  00049	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  0004c	8b 2e		 mov	 ebp, DWORD PTR [esi]
  0004e	3b 7e 10	 cmp	 edi, DWORD PTR [esi+16]
  00051	76 05		 jbe	 SHORT $LN31@USB
  00053	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN31@USB:
  00058	8b 06		 mov	 eax, DWORD PTR [esi]
  0005a	53		 push	 ebx
  0005b	55		 push	 ebp
  0005c	57		 push	 edi
  0005d	50		 push	 eax
  0005e	8d 5c 24 28	 lea	 ebx, DWORD PTR $T221428[esp+64]
  00062	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 126  :     };

  00067	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  0006f	56		 push	 esi
  00070	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00075	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5d		 pop	 ebp
  00084	5b		 pop	 ebx
  00085	83 c4 1c	 add	 esp, 28			; 0000001cH
  00088	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1USB@@QAE@XZ$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	05 0c 02 00 00	 add	 eax, 524		; 0000020cH
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0000e	c3		 ret	 0
__ehhandler$??1USB@@QAE@XZ:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 e0	 lea	 eax, DWORD PTR [edx-32]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1USB@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1USB@@QAE@XZ ENDP					; USB::~USB
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0USB@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0USB@@QAE@XZ$0
__ehfuncinfo$??0USB@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0USB@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\usb.h
xdata$x	ENDS
;	COMDAT ??0USB@@QAE@XZ
_TEXT	SEGMENT
$T221636 = -24						; size = 8
$T221633 = -24						; size = 8
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0USB@@QAE@XZ PROC					; USB::USB, COMDAT

; 119  :     {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0USB@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 10	 sub	 esp, 16			; 00000010H
  00011	53		 push	 ebx
  00012	55		 push	 ebp
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c4		 xor	 eax, esp
  0001c	50		 push	 eax
  0001d	8d 44 24 24	 lea	 eax, DWORD PTR __$EHRec$[esp+48]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b 7c 24 34	 mov	 edi, DWORD PTR _this$[esp+44]
  0002b	33 c0		 xor	 eax, eax
  0002d	33 db		 xor	 ebx, ebx
  0002f	8d b7 0c 02 00
	00		 lea	 esi, DWORD PTR [edi+524]
  00035	56		 push	 esi
  00036	66 89 07	 mov	 WORD PTR [edi], ax
  00039	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  0003c	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0003f	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00044	89 5c 24 2c	 mov	 DWORD PTR __$EHRec$[esp+56], ebx

; 120  :         memset(buf,0x00,sizeof(buf));

  00048	68 00 02 00 00	 push	 512			; 00000200H
  0004d	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00050	53		 push	 ebx
  00051	51		 push	 ecx
  00052	89 9f 24 02 00
	00		 mov	 DWORD PTR [edi+548], ebx
  00058	89 9f 28 02 00
	00		 mov	 DWORD PTR [edi+552], ebx
  0005e	89 9f 2c 02 00
	00		 mov	 DWORD PTR [edi+556], ebx
  00064	89 9f 30 02 00
	00		 mov	 DWORD PTR [edi+560], ebx
  0006a	89 9f 34 02 00
	00		 mov	 DWORD PTR [edi+564], ebx
  00070	e8 00 00 00 00	 call	 _memset

; 121  :         usbDevDetails.clear();

  00075	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	39 5e 0c	 cmp	 DWORD PTR [esi+12], ebx
  0007e	76 05		 jbe	 SHORT $LN12@USB@2
  00080	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN12@USB@2:
  00085	8b 6e 0c	 mov	 ebp, DWORD PTR [esi+12]
  00088	8b 16		 mov	 edx, DWORD PTR [esi]
  0008a	89 54 24 18	 mov	 DWORD PTR $T221633[esp+48], edx
  0008e	3b 6e 10	 cmp	 ebp, DWORD PTR [esi+16]
  00091	76 05		 jbe	 SHORT $LN31@USB@2
  00093	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN31@USB@2:
  00098	8b 4c 24 18	 mov	 ecx, DWORD PTR $T221633[esp+48]
  0009c	8b 06		 mov	 eax, DWORD PTR [esi]
  0009e	53		 push	 ebx
  0009f	51		 push	 ecx
  000a0	55		 push	 ebp
  000a1	50		 push	 eax
  000a2	8d 5c 24 28	 lea	 ebx, DWORD PTR $T221636[esp+64]
  000a6	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 122  :     };

  000ab	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  000b3	8b c7		 mov	 eax, edi
  000b5	8b 4c 24 24	 mov	 ecx, DWORD PTR __$EHRec$[esp+48]
  000b9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c0	59		 pop	 ecx
  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	5d		 pop	 ebp
  000c4	5b		 pop	 ebx
  000c5	83 c4 1c	 add	 esp, 28			; 0000001cH
  000c8	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0USB@@QAE@XZ$0:
  00000	8b 45 04	 mov	 eax, DWORD PTR _this$[ebp-4]
  00003	05 0c 02 00 00	 add	 eax, 524		; 0000020cH
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0000e	c3		 ret	 0
__ehhandler$??0USB@@QAE@XZ:
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 e0	 lea	 eax, DWORD PTR [edx-32]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0USB@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0USB@@QAE@XZ ENDP					; USB::USB
PUBLIC	?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z	; GetSystemIPAddresses
;	COMDAT xdata$x
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	SEGMENT
__unwindtable$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z$0
__ehfuncinfo$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z
_TEXT	SEGMENT
_seconds$231899 = -104					; size = 4
_timeElapsed$231898 = -100				; size = 4
_tickEnd$231897 = -96					; size = 8
_ips$145926 = -88					; size = 24
__$EHRec$ = -12						; size = 12
?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z PROC	; GetSystemIPAddresses, COMDAT
; _monIps$ = edx
; _bMonIps$ = ecx

; 2783 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	83 ec 68	 sub	 esp, 104		; 00000068H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c4		 xor	 eax, esp
  00021	50		 push	 eax
  00022	8d 44 24 78	 lea	 eax, DWORD PTR __$EHRec$[esp+132]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	8a d9		 mov	 bl, cl
  0002e	8b f2		 mov	 esi, edx

; 2784 :     Log(LOG_DEBUG,__LINE__,">> GetSysIPAddrs, %p, %s",monIps,(bMonIps?"True":"False"));

  00030	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_04HPMIDMKH@True?$AA@
  00035	84 db		 test	 bl, bl
  00037	75 05		 jne	 SHORT $LN9@GetSystemI
  00039	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05MKDOIIA@False?$AA@
$LN9@GetSystemI:
  0003e	50		 push	 eax
  0003f	56		 push	 esi
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JNNHNEI@?$DO?$DO?5GetSysIPAddrs?0?5?$CFp?0?5?$CFs?$AA@
  00045	68 e0 0a 00 00	 push	 2784			; 00000ae0H
  0004a	6a 10		 push	 16			; 00000010H
  0004c	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00051	83 c4 14	 add	 esp, 20			; 00000014H

; 2785 : 
; 2786 :     if(bMonIps && monIps)

  00054	84 db		 test	 bl, bl
  00056	0f 84 7b 01 00
	00		 je	 $LN5@GetSystemI
  0005c	85 f6		 test	 esi, esi
  0005e	0f 84 73 01 00
	00		 je	 $LN5@GetSystemI

; 2787 :     {
; 2788 :         unsigned __int64 tickStart = SysTick;

  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  0006a	8b d8		 mov	 ebx, eax

; 2789 :         vector<string> ips;

  0006c	8d 44 24 2c	 lea	 eax, DWORD PTR _ips$145926[esp+132]
  00070	50		 push	 eax
  00071	33 ff		 xor	 edi, edi
  00073	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00078	89 bc 24 80 00
	00 00		 mov	 DWORD PTR __$EHRec$[esp+140], edi

; 2790 :         monIps->GetIPs(ips);

  0007f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00081	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00086	51		 push	 ecx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  0008d	8d 54 24 2c	 lea	 edx, DWORD PTR _ips$145926[esp+132]
  00091	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  00094	52		 push	 edx
  00095	e8 00 00 00 00	 call	 ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
  0009a	8b 06		 mov	 eax, DWORD PTR [esi]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4

; 2791 : 
; 2792 :         if(ips.size())

  000a3	8b 4c 24 3c	 mov	 ecx, DWORD PTR _ips$145926[esp+148]
  000a7	2b 4c 24 38	 sub	 ecx, DWORD PTR _ips$145926[esp+144]
  000ab	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000b0	f7 e9		 imul	 ecx
  000b2	03 d1		 add	 edx, ecx
  000b4	c1 fa 04	 sar	 edx, 4
  000b7	8b c2		 mov	 eax, edx
  000b9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000bc	03 c2		 add	 eax, edx
  000be	0f 84 8a 00 00
	00		 je	 $LN1@GetSystemI

; 2793 :         {
; 2794 :             Log(LOG_HEADER,__LINE__,"IP Addresses (%u):",ips.size());

  000c4	50		 push	 eax
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JGGPHJBD@IP?5Addresses?5?$CI?$CFu?$CJ?3?$AA@
  000ca	68 ea 0a 00 00	 push	 2794			; 00000aeaH
  000cf	6a 02		 push	 2
  000d1	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 2795 : 
; 2796 :             for(unsigned int cnt=0;cnt<ips.size();cnt++)

  000d6	8b 4c 24 4c	 mov	 ecx, DWORD PTR _ips$145926[esp+164]
  000da	2b 4c 24 48	 sub	 ecx, DWORD PTR _ips$145926[esp+160]
  000de	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000e3	f7 e9		 imul	 ecx
  000e5	03 d1		 add	 edx, ecx
  000e7	c1 fa 04	 sar	 edx, 4
  000ea	8b ca		 mov	 ecx, edx
  000ec	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000ef	83 c4 10	 add	 esp, 16			; 00000010H
  000f2	33 f6		 xor	 esi, esi
  000f4	03 ca		 add	 ecx, edx
  000f6	74 56		 je	 SHORT $LN1@GetSystemI
  000f8	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL3@GetSystemI:

; 2797 :             {
; 2798 :                 Log(LOG_MESSAGE,__LINE__,"> %02u %s",cnt+1,ips.at(cnt).c_str());

  00100	56		 push	 esi
  00101	8d 44 24 30	 lea	 eax, DWORD PTR _ips$145926[esp+136]
  00105	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
  0010a	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0010e	72 05		 jb	 SHORT $LN23@GetSystemI
  00110	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00113	eb 03		 jmp	 SHORT $LN24@GetSystemI
$LN23@GetSystemI:
  00115	83 c0 04	 add	 eax, 4
$LN24@GetSystemI:
  00118	50		 push	 eax
  00119	46		 inc	 esi
  0011a	56		 push	 esi
  0011b	68 00 00 00 00	 push	 OFFSET ??_C@_09BDGNKGNI@?$DO?5?$CF02u?5?$CFs?$AA@
  00120	68 ee 0a 00 00	 push	 2798			; 00000aeeH
  00125	6a 01		 push	 1
  00127	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0012c	8b 4c 24 50	 mov	 ecx, DWORD PTR _ips$145926[esp+168]
  00130	2b 4c 24 4c	 sub	 ecx, DWORD PTR _ips$145926[esp+164]
  00134	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00139	f7 e9		 imul	 ecx
  0013b	03 d1		 add	 edx, ecx
  0013d	c1 fa 04	 sar	 edx, 4
  00140	8b c2		 mov	 eax, edx
  00142	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00145	03 c2		 add	 eax, edx
  00147	83 c4 14	 add	 esp, 20			; 00000014H
  0014a	3b f0		 cmp	 esi, eax
  0014c	72 b2		 jb	 SHORT $LL3@GetSystemI
$LN1@GetSystemI:

; 2799 :             }
; 2800 :         }
; 2801 : 
; 2802 :         LogElapsedTime(__LINE__,tickStart);

  0014e	8d 4c 24 1c	 lea	 ecx, DWORD PTR _seconds$231899[esp+132]
  00152	51		 push	 ecx
  00153	8d 54 24 24	 lea	 edx, DWORD PTR _timeElapsed$231898[esp+136]
  00157	52		 push	 edx
  00158	57		 push	 edi
  00159	53		 push	 ebx
  0015a	8d 74 24 34	 lea	 esi, DWORD PTR _tickEnd$231897[esp+148]
  0015e	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  00163	d9 44 24 30	 fld	 DWORD PTR _timeElapsed$231898[esp+148]
  00167	8b 4c 24 2c	 mov	 ecx, DWORD PTR _seconds$231899[esp+148]
  0016b	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  0016f	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  00174	f7 e1		 mul	 ecx
  00176	8b f2		 mov	 esi, edx
  00178	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0017d	f7 e1		 mul	 ecx
  0017f	c1 ea 05	 shr	 edx, 5
  00182	8b c2		 mov	 eax, edx
  00184	c1 e0 04	 shl	 eax, 4
  00187	2b c2		 sub	 eax, edx
  00189	03 c0		 add	 eax, eax
  0018b	03 c0		 add	 eax, eax
  0018d	8b d1		 mov	 edx, ecx
  0018f	2b d0		 sub	 edx, eax
  00191	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  00194	8b c6		 mov	 eax, esi
  00196	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  0019c	83 c4 08	 add	 esp, 8
  0019f	52		 push	 edx
  001a0	2b c8		 sub	 ecx, eax
  001a2	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  001a7	f7 e1		 mul	 ecx
  001a9	c1 ea 05	 shr	 edx, 5
  001ac	52		 push	 edx
  001ad	56		 push	 esi
  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  001b3	68 f2 0a 00 00	 push	 2802			; 00000af2H
  001b8	6a 01		 push	 1
  001ba	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001bf	83 c4 20	 add	 esp, 32			; 00000020H

; 2803 :     }

  001c2	c7 84 24 80 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+140], -1
  001cd	8d 4c 24 2c	 lea	 ecx, DWORD PTR _ips$145926[esp+132]
  001d1	51		 push	 ecx
  001d2	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN5@GetSystemI:

; 2804 :     Log(LOG_DEBUG,__LINE__,"<< GetSysIPAddrs");

  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CMFNMPNL@?$DM?$DM?5GetSysIPAddrs?$AA@
  001dc	68 f4 0a 00 00	 push	 2804			; 00000af4H
  001e1	6a 10		 push	 16			; 00000010H
  001e3	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  001e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2805 : }

  001eb	8b 4c 24 78	 mov	 ecx, DWORD PTR __$EHRec$[esp+132]
  001ef	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f6	59		 pop	 ecx
  001f7	5f		 pop	 edi
  001f8	5e		 pop	 esi
  001f9	5b		 pop	 ebx
  001fa	8b e5		 mov	 esp, ebp
  001fc	5d		 pop	 ebp
  001fd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z$0:
  00000	8d 45 a8	 lea	 eax, DWORD PTR _ips$145926[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00009	c3		 ret	 0
__ehhandler$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z:
  0000a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000e	8d 42 8c	 lea	 eax, DWORD PTR [edx-116]
  00011	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00014	33 c8		 xor	 ecx, eax
  00016	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z ENDP	; GetSystemIPAddresses
PUBLIC	__$ArrayPad$
PUBLIC	?LogicalDrives@@YGIPAX@Z			; LogicalDrives
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LogicalDrives@@YGIPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogicalDrives@@YGIPAX@Z$0
__ehfuncinfo$?LogicalDrives@@YGIPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LogicalDrives@@YGIPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?LogicalDrives@@YGIPAX@Z
_TEXT	SEGMENT
$T232010 = -30252					; size = 4
_seconds$232152 = -30252				; size = 4
$T232108 = -30252					; size = 8
_x$145143 = -30252					; size = 4
_dwSectorsPerCluster$ = -30244				; size = 4
_dwNumberOfFreeClusters$ = -30240			; size = 4
_nVolumeSerialNumber$ = -30236				; size = 4
_nMaximumComponentLength$ = -30232			; size = 4
_dwBytesPerSector$ = -30228				; size = 4
_dwTotalNumberOfClusters$ = -30224			; size = 4
_nFileSystemFlags$ = -30220				; size = 4
_drivers$ = -30216					; size = 24
_timeElapsed$232151 = -30192				; size = 4
_tickStart$ = -30192					; size = 8
_tickEnd$232150 = -30184				; size = 8
_driver$145147 = -30176					; size = 100
_temp$ = -30072						; size = 10000
_lpFileSystemNameBuffer$ = -20072			; size = 10000
_lpVolumeNameBuffer$ = -10072				; size = 10000
__$ArrayPad$ = -68					; size = 4
__$EHRec$ = -12						; size = 12
_lpData$ = 8						; size = 4
?LogicalDrives@@YGIPAX@Z PROC				; LogicalDrives, COMDAT

; 1461 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?LogicalDrives@@YGIPAX@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	83 ec 34	 sub	 esp, 52			; 00000034H
  00017	b8 f4 75 00 00	 mov	 eax, 30196		; 000075f4H
  0001c	e8 00 00 00 00	 call	 __chkstk
  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00026	33 c4		 xor	 eax, esp
  00028	89 84 24 f0 75
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+30260], eax
  0002f	53		 push	 ebx
  00030	56		 push	 esi
  00031	57		 push	 edi
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c4		 xor	 eax, esp
  00039	50		 push	 eax
  0003a	8d 84 24 38 76
	00 00		 lea	 eax, DWORD PTR __$EHRec$[esp+30276]
  00041	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1462 :     Log(LOG_DEBUG,__LINE__,">> LogDrvs");

  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DELJGCCE@?$DO?$DO?5LogDrvs?$AA@
  0004c	68 b6 05 00 00	 push	 1462			; 000005b6H
  00051	6a 10		 push	 16			; 00000010H
  00053	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1463 : 
; 1464 :     DWORD dwSectorsPerCluster = 0,

  00058	33 db		 xor	 ebx, ebx
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1465 :           dwBytesPerSector = 0,
; 1466 :           dwNumberOfFreeClusters = 0,
; 1467 :           dwTotalNumberOfClusters = 0;
; 1468 : 
; 1469 :     char lpVolumeNameBuffer[10000] = {0},

  0005d	68 0f 27 00 00	 push	 9999			; 0000270fH
  00062	8d 84 24 f1 4e
	00 00		 lea	 eax, DWORD PTR _lpVolumeNameBuffer$[esp+30281]
  00069	53		 push	 ebx
  0006a	50		 push	 eax
  0006b	89 5c 24 2c	 mov	 DWORD PTR _dwSectorsPerCluster$[esp+30288], ebx
  0006f	89 5c 24 3c	 mov	 DWORD PTR _dwBytesPerSector$[esp+30288], ebx
  00073	89 5c 24 30	 mov	 DWORD PTR _dwNumberOfFreeClusters$[esp+30288], ebx
  00077	89 5c 24 40	 mov	 DWORD PTR _dwTotalNumberOfClusters$[esp+30288], ebx
  0007b	88 9c 24 f8 4e
	00 00		 mov	 BYTE PTR _lpVolumeNameBuffer$[esp+30288], bl
  00082	e8 00 00 00 00	 call	 _memset
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1470 :         lpFileSystemNameBuffer[10000] = {0};

  0008a	68 0f 27 00 00	 push	 9999			; 0000270fH
  0008f	8d 8c 24 e1 27
	00 00		 lea	 ecx, DWORD PTR _lpFileSystemNameBuffer$[esp+30281]
  00096	53		 push	 ebx
  00097	51		 push	 ecx
  00098	88 9c 24 e8 27
	00 00		 mov	 BYTE PTR _lpFileSystemNameBuffer$[esp+30288], bl
  0009f	e8 00 00 00 00	 call	 _memset
  000a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1471 : 
; 1472 :     DWORD nVolumeSerialNumber = 0,
; 1473 :           nMaximumComponentLength = 0,
; 1474 :           nFileSystemFlags = 0;
; 1475 : 
; 1476 :     char temp[10000] = {0};

  000a7	68 0f 27 00 00	 push	 9999			; 0000270fH
  000ac	8d 94 24 d1 00
	00 00		 lea	 edx, DWORD PTR _temp$[esp+30281]
  000b3	53		 push	 ebx
  000b4	52		 push	 edx
  000b5	89 5c 24 34	 mov	 DWORD PTR _nVolumeSerialNumber$[esp+30288], ebx
  000b9	89 5c 24 38	 mov	 DWORD PTR _nMaximumComponentLength$[esp+30288], ebx
  000bd	89 5c 24 44	 mov	 DWORD PTR _nFileSystemFlags$[esp+30288], ebx
  000c1	88 9c 24 d8 00
	00 00		 mov	 BYTE PTR _temp$[esp+30288], bl
  000c8	e8 00 00 00 00	 call	 _memset
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1477 : 
; 1478 :     unsigned __int64 tickStart = SysTick;

  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  000d6	89 44 24 54	 mov	 DWORD PTR _tickStart$[esp+30276], eax

; 1479 : 
; 1480 :     DWORD numDrivers = GetLogicalDriveStrings(sizeof(temp),temp);

  000da	8d 84 24 cc 00
	00 00		 lea	 eax, DWORD PTR _temp$[esp+30276]
  000e1	50		 push	 eax
  000e2	68 10 27 00 00	 push	 10000			; 00002710H
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLogicalDriveStringsA@8

; 1481 : 
; 1482 :     vector<string> drivers;

  000ed	8d 4c 24 3c	 lea	 ecx, DWORD PTR _drivers$[esp+30276]
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  000f7	89 9c 24 40 76
	00 00		 mov	 DWORD PTR __$EHRec$[esp+30284], ebx

; 1483 :     parseNullTerminatedStrings(temp,drivers);

  000fe	8d 54 24 3c	 lea	 edx, DWORD PTR _drivers$[esp+30276]
  00102	52		 push	 edx
  00103	8d 84 24 d0 00
	00 00		 lea	 eax, DWORD PTR _temp$[esp+30280]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?parseNullTerminatedStrings@@YAXPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; parseNullTerminatedStrings

; 1484 : 
; 1485 :     Log(LOG_HEADER,__LINE__,"Logical Drivers %u (0x%.8X)",drivers.size(),GetLogicalDrives());

  00110	8b 4c 24 54	 mov	 ecx, DWORD PTR _drivers$[esp+30300]
  00114	2b 4c 24 50	 sub	 ecx, DWORD PTR _drivers$[esp+30296]
  00118	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0011d	f7 e9		 imul	 ecx
  0011f	03 d1		 add	 edx, ecx
  00121	c1 fa 04	 sar	 edx, 4
  00124	8b f2		 mov	 esi, edx
  00126	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00129	83 c4 08	 add	 esp, 8
  0012c	03 f2		 add	 esi, edx
  0012e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLogicalDrives@0
  00134	50		 push	 eax
  00135	56		 push	 esi
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@FAMDJNNB@Logical?5Drivers?5?$CFu?5?$CI0x?$CF?48X?$CJ?$AA@
  0013b	68 cd 05 00 00	 push	 1485			; 000005cdH
  00140	6a 02		 push	 2
  00142	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1486 : 
; 1487 :     for(unsigned int x=0;x<drivers.size();x++)

  00147	8b 7c 24 60	 mov	 edi, DWORD PTR _drivers$[esp+30312]
  0014b	8b 74 24 5c	 mov	 esi, DWORD PTR _drivers$[esp+30308]
  0014f	8b cf		 mov	 ecx, edi
  00151	2b ce		 sub	 ecx, esi
  00153	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  00158	f7 e9		 imul	 ecx
  0015a	03 d1		 add	 edx, ecx
  0015c	c1 fa 04	 sar	 edx, 4
  0015f	8b ca		 mov	 ecx, edx
  00161	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00164	83 c4 14	 add	 esp, 20			; 00000014H
  00167	03 ca		 add	 ecx, edx
  00169	89 5c 24 18	 mov	 DWORD PTR _x$145143[esp+30276], ebx
  0016d	0f 84 8c 01 00
	00		 je	 $LN3@LogicalDri
$LL5@LogicalDri:

; 1488 :     {
; 1489 :         char driver[100] = {0};

  00173	6a 63		 push	 99			; 00000063H
  00175	8d 54 24 69	 lea	 edx, DWORD PTR _driver$145147[esp+30281]
  00179	53		 push	 ebx
  0017a	52		 push	 edx
  0017b	88 5c 24 70	 mov	 BYTE PTR _driver$145147[esp+30288], bl
  0017f	e8 00 00 00 00	 call	 _memset

; 1490 :         DWORD driverType = 0;
; 1491 :         strncpy(driver,drivers.at(x).c_str(),sizeof(driver)-1);

  00184	8b 74 24 24	 mov	 esi, DWORD PTR _x$145143[esp+30288]
  00188	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018b	56		 push	 esi
  0018c	8d 44 24 40	 lea	 eax, DWORD PTR _drivers$[esp+30280]
  00190	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
  00195	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  00199	72 05		 jb	 SHORT $LN17@LogicalDri
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	eb 03		 jmp	 SHORT $LN18@LogicalDri
$LN17@LogicalDri:
  001a0	83 c0 04	 add	 eax, 4
$LN18@LogicalDri:
  001a3	6a 63		 push	 99			; 00000063H
  001a5	50		 push	 eax
  001a6	8d 44 24 6c	 lea	 eax, DWORD PTR _driver$145147[esp+30284]
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 _strncpy
  001b0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1492 : 
; 1493 :         driverType = GetDriveType(driver);

  001b3	8d 4c 24 64	 lea	 ecx, DWORD PTR _driver$145147[esp+30276]
  001b7	51		 push	 ecx
  001b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDriveTypeA@4

; 1494 :         Log(LOG_MESSAGE,__LINE__,">> %.3d, %s: Type %s(%u)",x+1,driver,DriverTypeName(driverType),driverType);

  001be	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  001c1	83 f9 05	 cmp	 ecx, 5
  001c4	77 31		 ja	 SHORT $LN19@LogicalDri
  001c6	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN77@LogicalDri[ecx*4]
$LN25@LogicalDri:
  001cd	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09MOKIPJGJ@NoRootDir?$AA@
  001d2	eb 28		 jmp	 SHORT $LN26@LogicalDri
$LN24@LogicalDri:
  001d4	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09DADBKOHO@Removable?$AA@
  001d9	eb 21		 jmp	 SHORT $LN26@LogicalDri
$LN23@LogicalDri:
  001db	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_05OCBIINAK@Fixed?$AA@
  001e0	eb 1a		 jmp	 SHORT $LN26@LogicalDri
$LN22@LogicalDri:
  001e2	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06MHHFENDB@Remote?$AA@
  001e7	eb 13		 jmp	 SHORT $LN26@LogicalDri
$LN21@LogicalDri:
  001e9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_05JIFOIGMJ@CDRom?$AA@
  001ee	eb 0c		 jmp	 SHORT $LN26@LogicalDri
$LN20@LogicalDri:
  001f0	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07CPJGKNJN@RamDisk?$AA@
  001f5	eb 05		 jmp	 SHORT $LN26@LogicalDri
$LN19@LogicalDri:
  001f7	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07NBCGADJA@Unknown?$AA@
$LN26@LogicalDri:
  001fc	50		 push	 eax
  001fd	51		 push	 ecx
  001fe	8d 54 24 6c	 lea	 edx, DWORD PTR _driver$145147[esp+30284]
  00202	52		 push	 edx
  00203	46		 inc	 esi
  00204	56		 push	 esi
  00205	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BENIJAPK@?$DO?$DO?5?$CF?43d?0?5?$CFs?3?5Type?5?$CFs?$CI?$CFu?$CJ?$AA@
  0020a	68 d6 05 00 00	 push	 1494			; 000005d6H
  0020f	6a 01		 push	 1
  00211	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00216	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1495 : 
; 1496 :         if(GetVolumeInformation(driver,lpVolumeNameBuffer,sizeof(lpVolumeNameBuffer),&nVolumeSerialNumber,&nMaximumComponentLength,&nFileSystemFlags,lpFileSystemNameBuffer,sizeof(lpFileSystemNameBuffer)))

  00219	68 10 27 00 00	 push	 10000			; 00002710H
  0021e	8d 84 24 e0 27
	00 00		 lea	 eax, DWORD PTR _lpFileSystemNameBuffer$[esp+30280]
  00225	50		 push	 eax
  00226	8d 4c 24 40	 lea	 ecx, DWORD PTR _nFileSystemFlags$[esp+30284]
  0022a	51		 push	 ecx
  0022b	8d 54 24 38	 lea	 edx, DWORD PTR _nMaximumComponentLength$[esp+30288]
  0022f	52		 push	 edx
  00230	8d 44 24 38	 lea	 eax, DWORD PTR _nVolumeSerialNumber$[esp+30292]
  00234	50		 push	 eax
  00235	68 10 27 00 00	 push	 10000			; 00002710H
  0023a	8d 8c 24 04 4f
	00 00		 lea	 ecx, DWORD PTR _lpVolumeNameBuffer$[esp+30300]
  00241	51		 push	 ecx
  00242	8d 94 24 80 00
	00 00		 lea	 edx, DWORD PTR _driver$145147[esp+30304]
  00249	52		 push	 edx
  0024a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVolumeInformationA@32
  00250	85 c0		 test	 eax, eax
  00252	74 7e		 je	 SHORT $LN4@LogicalDri

; 1497 :         {
; 1498 :             Log(LOG_MESSAGE,__LINE__,"   VolumeInfo, Name %s, SerialNumber %u, MaxComponentLenght %u, FileSysflags 0x%08X, FileSysName %s",
; 1499 :                                 lpVolumeNameBuffer,nVolumeSerialNumber,nMaximumComponentLength,nFileSystemFlags,lpFileSystemNameBuffer);

  00254	8b 4c 24 38	 mov	 ecx, DWORD PTR _nFileSystemFlags$[esp+30276]
  00258	8b 54 24 2c	 mov	 edx, DWORD PTR _nMaximumComponentLength$[esp+30276]
  0025c	8d 84 24 dc 27
	00 00		 lea	 eax, DWORD PTR _lpFileSystemNameBuffer$[esp+30276]
  00263	50		 push	 eax
  00264	8b 44 24 2c	 mov	 eax, DWORD PTR _nVolumeSerialNumber$[esp+30280]
  00268	51		 push	 ecx
  00269	52		 push	 edx
  0026a	50		 push	 eax
  0026b	8d 8c 24 fc 4e
	00 00		 lea	 ecx, DWORD PTR _lpVolumeNameBuffer$[esp+30292]
  00272	51		 push	 ecx
  00273	68 00 00 00 00	 push	 OFFSET ??_C@_0GE@FHMIJHPP@?5?5?5VolumeInfo?0?5Name?5?$CFs?0?5SerialNu@
  00278	68 da 05 00 00	 push	 1498			; 000005daH
  0027d	6a 01		 push	 1
  0027f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00284	83 c4 20	 add	 esp, 32			; 00000020H

; 1500 :             if(GetDiskFreeSpace(driver,&dwSectorsPerCluster,&dwBytesPerSector,&dwNumberOfFreeClusters,&dwTotalNumberOfClusters))

  00287	8d 54 24 34	 lea	 edx, DWORD PTR _dwTotalNumberOfClusters$[esp+30276]
  0028b	52		 push	 edx
  0028c	8d 44 24 28	 lea	 eax, DWORD PTR _dwNumberOfFreeClusters$[esp+30280]
  00290	50		 push	 eax
  00291	8d 4c 24 38	 lea	 ecx, DWORD PTR _dwBytesPerSector$[esp+30284]
  00295	51		 push	 ecx
  00296	8d 54 24 2c	 lea	 edx, DWORD PTR _dwSectorsPerCluster$[esp+30288]
  0029a	52		 push	 edx
  0029b	8d 44 24 74	 lea	 eax, DWORD PTR _driver$145147[esp+30292]
  0029f	50		 push	 eax
  002a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDiskFreeSpaceA@20
  002a6	85 c0		 test	 eax, eax
  002a8	74 28		 je	 SHORT $LN4@LogicalDri

; 1501 :             {
; 1502 :                 Log(LOG_MESSAGE,__LINE__,"   FreeSpace, SectorsPerCluster %u, BytesPerSector %u, NumberOfFreeClusters %u, TotalNumberOfClusters %u",
; 1503 :                                     dwSectorsPerCluster,dwBytesPerSector,dwNumberOfFreeClusters,dwTotalNumberOfClusters);

  002aa	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwTotalNumberOfClusters$[esp+30276]
  002ae	8b 54 24 24	 mov	 edx, DWORD PTR _dwNumberOfFreeClusters$[esp+30276]
  002b2	8b 44 24 30	 mov	 eax, DWORD PTR _dwBytesPerSector$[esp+30276]
  002b6	51		 push	 ecx
  002b7	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwSectorsPerCluster$[esp+30280]
  002bb	52		 push	 edx
  002bc	50		 push	 eax
  002bd	51		 push	 ecx
  002be	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@NOKMBBI@?5?5?5FreeSpace?0?5SectorsPerCluster?5@
  002c3	68 de 05 00 00	 push	 1502			; 000005deH
  002c8	6a 01		 push	 1
  002ca	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  002cf	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN4@LogicalDri:
  002d2	8b 7c 24 4c	 mov	 edi, DWORD PTR _drivers$[esp+30292]
  002d6	89 74 24 18	 mov	 DWORD PTR _x$145143[esp+30276], esi
  002da	8b 74 24 48	 mov	 esi, DWORD PTR _drivers$[esp+30288]
  002de	8b cf		 mov	 ecx, edi
  002e0	2b ce		 sub	 ecx, esi
  002e2	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  002e7	f7 e9		 imul	 ecx
  002e9	03 d1		 add	 edx, ecx
  002eb	c1 fa 04	 sar	 edx, 4
  002ee	8b c2		 mov	 eax, edx
  002f0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002f3	03 c2		 add	 eax, edx
  002f5	39 44 24 18	 cmp	 DWORD PTR _x$145143[esp+30276], eax
  002f9	0f 82 74 fe ff
	ff		 jb	 $LL5@LogicalDri
$LN3@LogicalDri:

; 1504 :             }
; 1505 :         }
; 1506 :     }
; 1507 : 
; 1508 :     drivers.clear();

  002ff	89 7c 24 18	 mov	 DWORD PTR $T232010[esp+30276], edi
  00303	3b f7		 cmp	 esi, edi
  00305	76 0d		 jbe	 SHORT $LN38@LogicalDri
  00307	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  0030c	8b 7c 24 4c	 mov	 edi, DWORD PTR _drivers$[esp+30292]
  00310	8b 74 24 48	 mov	 esi, DWORD PTR _drivers$[esp+30288]
$LN38@LogicalDri:
  00314	8b 5c 24 3c	 mov	 ebx, DWORD PTR _drivers$[esp+30276]
  00318	3b f7		 cmp	 esi, edi
  0031a	76 05		 jbe	 SHORT $LN57@LogicalDri
  0031c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN57@LogicalDri:
  00321	8b 4c 24 18	 mov	 ecx, DWORD PTR $T232010[esp+30276]
  00325	8b 54 24 3c	 mov	 edx, DWORD PTR _drivers$[esp+30276]
  00329	51		 push	 ecx
  0032a	53		 push	 ebx
  0032b	56		 push	 esi
  0032c	52		 push	 edx
  0032d	8d 5c 24 28	 lea	 ebx, DWORD PTR $T232108[esp+30292]
  00331	8d 74 24 4c	 lea	 esi, DWORD PTR _drivers$[esp+30292]
  00335	e8 00 00 00 00	 call	 ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 1509 : 
; 1510 :     LogElapsedTime(__LINE__,tickStart);

  0033a	8b 54 24 54	 mov	 edx, DWORD PTR _tickStart$[esp+30276]
  0033e	8d 44 24 18	 lea	 eax, DWORD PTR _seconds$232152[esp+30276]
  00342	50		 push	 eax
  00343	8d 4c 24 58	 lea	 ecx, DWORD PTR _timeElapsed$232151[esp+30280]
  00347	51		 push	 ecx
  00348	33 c0		 xor	 eax, eax
  0034a	50		 push	 eax
  0034b	52		 push	 edx
  0034c	8d 74 24 6c	 lea	 esi, DWORD PTR _tickEnd$232150[esp+30292]
  00350	e8 00 00 00 00	 call	 ?CalcElapsedTime@@YAX_KAA_KAAMAAK@Z ; CalcElapsedTime
  00355	d9 44 24 64	 fld	 DWORD PTR _timeElapsed$232151[esp+30292]
  00359	8b 4c 24 28	 mov	 ecx, DWORD PTR _seconds$232152[esp+30292]
  0035d	dd 5c 24 08	 fstp	 QWORD PTR [esp+8]
  00361	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  00366	f7 e1		 mul	 ecx
  00368	8b f2		 mov	 esi, edx
  0036a	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0036f	f7 e1		 mul	 ecx
  00371	c1 ea 05	 shr	 edx, 5
  00374	8b c2		 mov	 eax, edx
  00376	c1 e0 04	 shl	 eax, 4
  00379	2b c2		 sub	 eax, edx
  0037b	03 c0		 add	 eax, eax
  0037d	03 c0		 add	 eax, eax
  0037f	8b d1		 mov	 edx, ecx
  00381	2b d0		 sub	 edx, eax
  00383	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  00386	8b c6		 mov	 eax, esi
  00388	69 c0 10 0e 00
	00		 imul	 eax, 3600		; 00000e10H
  0038e	83 c4 08	 add	 esp, 8
  00391	52		 push	 edx
  00392	2b c8		 sub	 ecx, eax
  00394	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00399	f7 e1		 mul	 ecx
  0039b	c1 ea 05	 shr	 edx, 5
  0039e	52		 push	 edx
  0039f	56		 push	 esi
  003a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MMBEHPNG@?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  003a5	68 e6 05 00 00	 push	 1510			; 000005e6H
  003aa	6a 01		 push	 1
  003ac	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 1511 : 
; 1512 :     Log(LOG_DEBUG,__LINE__,"<< LogDrvs");

  003b1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GICAALNI@?$DM?$DM?5LogDrvs?$AA@
  003b6	68 e8 05 00 00	 push	 1512			; 000005e8H
  003bb	6a 10		 push	 16			; 00000010H
  003bd	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003c2	83 c4 2c	 add	 esp, 44			; 0000002cH

; 1513 :     _endthreadex(0);

  003c5	6a 00		 push	 0
  003c7	e8 00 00 00 00	 call	 __endthreadex
  003cc	83 c4 04	 add	 esp, 4

; 1514 :     return 0;

  003cf	c7 84 24 40 76
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+30284], -1
  003da	8d 4c 24 3c	 lea	 ecx, DWORD PTR _drivers$[esp+30276]
  003de	51		 push	 ecx
  003df	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  003e4	33 c0		 xor	 eax, eax

; 1515 : }

  003e6	8b 8c 24 38 76
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+30276]
  003ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003f4	59		 pop	 ecx
  003f5	5f		 pop	 edi
  003f6	5e		 pop	 esi
  003f7	5b		 pop	 ebx
  003f8	8b 8c 24 f0 75
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+30260]
  003ff	33 cc		 xor	 ecx, esp
  00401	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00406	8b e5		 mov	 esp, ebp
  00408	5d		 pop	 ebp
  00409	c2 04 00	 ret	 4
$LN77@LogicalDri:
  0040c	00 00 00 00	 DD	 $LN25@LogicalDri
  00410	00 00 00 00	 DD	 $LN24@LogicalDri
  00414	00 00 00 00	 DD	 $LN23@LogicalDri
  00418	00 00 00 00	 DD	 $LN22@LogicalDri
  0041c	00 00 00 00	 DD	 $LN21@LogicalDri
  00420	00 00 00 00	 DD	 $LN20@LogicalDri
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogicalDrives@@YGIPAX@Z$0:
  00000	8d 85 f8 89 ff
	ff		 lea	 eax, DWORD PTR _drivers$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0000c	c3		 ret	 0
__ehhandler$?LogicalDrives@@YGIPAX@Z:
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00011	8d 82 cc 89 ff
	ff		 lea	 eax, DWORD PTR [edx-30260]
  00017	8b 8a c8 89 ff
	ff		 mov	 ecx, DWORD PTR [edx-30264]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	83 c0 0c	 add	 eax, 12			; 0000000cH
  00027	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LogicalDrives@@YGIPAX@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LogicalDrives@@YGIPAX@Z ENDP				; LogicalDrives
; Function compile flags: /Ogtpy
;	COMDAT ??_GUSB@@QAEPAXI@Z
_TEXT	SEGMENT
??_GUSB@@QAEPAXI@Z PROC					; USB::`scalar deleting destructor', COMDAT
; _this$ = esi
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	e8 00 00 00 00	 call	 ??1USB@@QAE@XZ		; USB::~USB
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000d	83 c4 04	 add	 esp, 4
  00010	8b c6		 mov	 eax, esi
  00012	59		 pop	 ecx
  00013	c3		 ret	 0
??_GUSB@@QAEPAXI@Z ENDP					; USB::`scalar deleting destructor'
PUBLIC	?ThreadWMISystemVolumes@@YGIPAX@Z		; ThreadWMISystemVolumes
; Function compile flags: /Ogtpy
;	COMDAT ?ThreadWMISystemVolumes@@YGIPAX@Z
_TEXT	SEGMENT
_lpData$ = 8						; size = 4
?ThreadWMISystemVolumes@@YGIPAX@Z PROC			; ThreadWMISystemVolumes, COMDAT

; 2945 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H

; 2946 :     Log(LOG_DEBUG,__LINE__,">> ThrdWMISysVols");

  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CBIOEKJP@?$DO?$DO?5ThrdWMISysVols?$AA@
  0000b	68 82 0b 00 00	 push	 2946			; 00000b82H
  00010	6a 10		 push	 16			; 00000010H
  00012	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2947 : 
; 2948 :     WMISystemVolumes();

  0001a	e8 00 00 00 00	 call	 ?WMISystemVolumes@@YAXXZ ; WMISystemVolumes

; 2949 : 
; 2950 :     Log(LOG_DEBUG,__LINE__,"<< ThrdWMISysVols");

  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PAGGLBNL@?$DM?$DM?5ThrdWMISysVols?$AA@
  00024	68 86 0b 00 00	 push	 2950			; 00000b86H
  00029	6a 10		 push	 16			; 00000010H
  0002b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2951 :     _endthreadex(0);

  00033	6a 00		 push	 0
  00035	e8 00 00 00 00	 call	 __endthreadex
  0003a	83 c4 04	 add	 esp, 4

; 2952 :     return 0;

  0003d	33 c0		 xor	 eax, eax

; 2953 : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?ThreadWMISystemVolumes@@YGIPAX@Z ENDP			; ThreadWMISystemVolumes
_TEXT	ENDS
PUBLIC	?ThreadWMIHardwareSensor@@YGIPAX@Z		; ThreadWMIHardwareSensor
; Function compile flags: /Ogtpy
;	COMDAT ?ThreadWMIHardwareSensor@@YGIPAX@Z
_TEXT	SEGMENT
_lpData$ = 8						; size = 4
?ThreadWMIHardwareSensor@@YGIPAX@Z PROC			; ThreadWMIHardwareSensor, COMDAT

; 2933 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H

; 2934 :     Log(LOG_DEBUG,__LINE__,">> ThrdWMIHwSnsr");

  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JJECDJHH@?$DO?$DO?5ThrdWMIHwSnsr?$AA@
  0000b	68 76 0b 00 00	 push	 2934			; 00000b76H
  00010	6a 10		 push	 16			; 00000010H
  00012	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2935 : 
; 2936 :     WMIHardwareSensor();

  0001a	e8 00 00 00 00	 call	 ?WMIHardwareSensor@@YAXXZ ; WMIHardwareSensor

; 2937 : 
; 2938 :     Log(LOG_DEBUG,__LINE__,"<< ThrdWMIHwSnsr");

  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MKNOIMND@?$DM?$DM?5ThrdWMIHwSnsr?$AA@
  00024	68 7a 0b 00 00	 push	 2938			; 00000b7aH
  00029	6a 10		 push	 16			; 00000010H
  0002b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2939 :     _endthreadex(0);

  00033	6a 00		 push	 0
  00035	e8 00 00 00 00	 call	 __endthreadex
  0003a	83 c4 04	 add	 esp, 4

; 2940 :     return 0;

  0003d	33 c0		 xor	 eax, eax

; 2941 : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?ThreadWMIHardwareSensor@@YGIPAX@Z ENDP			; ThreadWMIHardwareSensor
_TEXT	ENDS
PUBLIC	?ThreadWMISystemPerformance@@YGIPAX@Z		; ThreadWMISystemPerformance
; Function compile flags: /Ogtpy
;	COMDAT ?ThreadWMISystemPerformance@@YGIPAX@Z
_TEXT	SEGMENT
_lpData$ = 8						; size = 4
?ThreadWMISystemPerformance@@YGIPAX@Z PROC		; ThreadWMISystemPerformance, COMDAT

; 2921 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H

; 2922 :     Log(LOG_DEBUG,__LINE__,">> ThrdWMISysPerf");

  00006	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OAHODHDF@?$DO?$DO?5ThrdWMISysPerf?$AA@
  0000b	68 6a 0b 00 00	 push	 2922			; 00000b6aH
  00010	6a 10		 push	 16			; 00000010H
  00012	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2923 : 
; 2924 :     WMISystemPerformance();

  0001a	e8 00 00 00 00	 call	 ?WMISystemPerformance@@YAXXZ ; WMISystemPerformance

; 2925 : 
; 2926 :     Log(LOG_DEBUG,__LINE__,"<< ThrdWMISysPerf");

  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DBJGMMHB@?$DM?$DM?5ThrdWMISysPerf?$AA@
  00024	68 6e 0b 00 00	 push	 2926			; 00000b6eH
  00029	6a 10		 push	 16			; 00000010H
  0002b	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2927 :     _endthreadex(0);

  00033	6a 00		 push	 0
  00035	e8 00 00 00 00	 call	 __endthreadex
  0003a	83 c4 04	 add	 esp, 4

; 2928 :     return 0;

  0003d	33 c0		 xor	 eax, eax

; 2929 : }

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?ThreadWMISystemPerformance@@YGIPAX@Z ENDP		; ThreadWMISystemPerformance
_TEXT	ENDS
PUBLIC	?ThreadUSB@@YGIPAX@Z				; ThreadUSB
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ThreadUSB@@YGIPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ThreadUSB@@YGIPAX@Z$0
__ehfuncinfo$?ThreadUSB@@YGIPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ThreadUSB@@YGIPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?ThreadUSB@@YGIPAX@Z
_TEXT	SEGMENT
$T237482 = -20						; size = 4
__$EHRec$ = -12						; size = 12
_lpData$ = 8						; size = 4
?ThreadUSB@@YGIPAX@Z PROC				; ThreadUSB, COMDAT

; 1081 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?ThreadUSB@@YGIPAX@Z
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	83 ec 08	 sub	 esp, 8
  00017	56		 push	 esi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c4		 xor	 eax, esp
  0001f	50		 push	 eax
  00020	8d 44 24 10	 lea	 eax, DWORD PTR __$EHRec$[esp+28]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1082 :     Log(LOG_DEBUG,__LINE__,">> ThrdUSB");

  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JKENOCG@?$DO?$DO?5ThrdUSB?$AA@
  0002f	68 3a 04 00 00	 push	 1082			; 0000043aH
  00034	6a 10		 push	 16			; 00000010H
  00036	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1083 : 
; 1084 :     USB * pUsb = new USB();

  0003e	68 38 02 00 00	 push	 568			; 00000238H
  00043	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00048	83 c4 04	 add	 esp, 4
  0004b	89 44 24 08	 mov	 DWORD PTR $T237482[esp+28], eax
  0004f	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00057	85 c0		 test	 eax, eax
  00059	74 0a		 je	 SHORT $LN4@ThreadUSB
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??0USB@@QAE@XZ		; USB::USB
  00061	8b f0		 mov	 esi, eax
  00063	eb 02		 jmp	 SHORT $LN5@ThreadUSB
$LN4@ThreadUSB:
  00065	33 f6		 xor	 esi, esi
$LN5@ThreadUSB:
  00067	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1

; 1085 :     if(!pUsb)

  0006f	85 f6		 test	 esi, esi
  00071	75 34		 jne	 SHORT $LN1@ThreadUSB

; 1086 :     {
; 1087 :         Log(LOG_DEBUG,__LINE__,"<< ThrdUSB, New USB class null");

  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@GBFCDAOJ@?$DM?$DM?5ThrdUSB?0?5New?5USB?5class?5null?$AA@
  00078	68 3f 04 00 00	 push	 1087			; 0000043fH
  0007d	6a 10		 push	 16			; 00000010H
  0007f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1088 :         _endthreadex(ERROR_OUTOFMEMORY);

  00087	6a 0e		 push	 14			; 0000000eH
  00089	e8 00 00 00 00	 call	 __endthreadex
  0008e	83 c4 04	 add	 esp, 4

; 1089 :         return ERROR_OUTOFMEMORY;

  00091	8d 46 0e	 lea	 eax, DWORD PTR [esi+14]

; 1101 : }

  00094	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	5e		 pop	 esi
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
$LN1@ThreadUSB:

; 1090 :     }
; 1091 : 
; 1092 :     pUsb->EnumerateUSB();

  000a7	56		 push	 esi
  000a8	e8 00 00 00 00	 call	 ?EnumerateUSB@USB@@QAEXXZ ; USB::EnumerateUSB

; 1093 :     pUsb->USBDevicesDetails();

  000ad	8b c6		 mov	 eax, esi
  000af	e8 00 00 00 00	 call	 ?USBDevicesDetails@USB@@QAEXXZ ; USB::USBDevicesDetails

; 1094 : 
; 1095 :     delete pUsb;

  000b4	56		 push	 esi
  000b5	e8 00 00 00 00	 call	 ??1USB@@QAE@XZ		; USB::~USB
  000ba	56		 push	 esi
  000bb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c0	83 c4 04	 add	 esp, 4

; 1096 :     pUsb = NULL;
; 1097 : 
; 1098 :     Log(LOG_DEBUG,__LINE__,"<< ThrdUSB");

  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FFDNLHNK@?$DM?$DM?5ThrdUSB?$AA@
  000c8	68 4a 04 00 00	 push	 1098			; 0000044aH
  000cd	6a 10		 push	 16			; 00000010H
  000cf	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1099 :     _endthreadex(0);

  000d7	6a 00		 push	 0
  000d9	e8 00 00 00 00	 call	 __endthreadex
  000de	83 c4 04	 add	 esp, 4

; 1100 :     return 0;

  000e1	33 c0		 xor	 eax, eax

; 1101 : }

  000e3	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000e7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ee	59		 pop	 ecx
  000ef	5e		 pop	 esi
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ThreadUSB@@YGIPAX@Z$0:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T237482[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?ThreadUSB@@YGIPAX@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 f4	 lea	 eax, DWORD PTR [edx-12]
  00012	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ThreadUSB@@YGIPAX@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ThreadUSB@@YGIPAX@Z ENDP				; ThreadUSB
PUBLIC	?GetWMIStatus@@YAXXZ				; GetWMIStatus
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?GetWMIStatus@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetWMIStatus@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetWMIStatus@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetWMIStatus@@YAXXZ$2
__ehfuncinfo$?GetWMIStatus@@YAXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetWMIStatus@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetWMIStatus@@YAXXZ
_TEXT	SEGMENT
$T237504 = -16						; size = 4
$T237503 = -16						; size = 4
$T237502 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetWMIStatus@@YAXXZ PROC				; GetWMIStatus, COMDAT

; 2970 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?GetWMIStatus@@YAXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	83 ec 08	 sub	 esp, 8
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c4		 xor	 eax, esp
  0001b	50		 push	 eax
  0001c	8d 44 24 18	 lea	 eax, DWORD PTR __$EHRec$[esp+36]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2971 :     Log(LOG_DEBUG,__LINE__,">> GetWMISts");

  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LKBNMLDB@?$DO?$DO?5GetWMISts?$AA@
  0002b	68 9b 0b 00 00	 push	 2971			; 00000b9bH
  00030	6a 10		 push	 16			; 00000010H
  00032	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2972 : 
; 2973 :     //get system performance
; 2974 :     if(_thGetInt(&gbShutdown)==FALSE)

  0003a	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0003f	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00044	33 db		 xor	 ebx, ebx
  00046	85 c0		 test	 eax, eax
  00048	75 47		 jne	 SHORT $LN3@GetWMIStat

; 2975 :     {
; 2976 :         StartThread("WMISysPerf",ThreadWMISystemPerformance,NULL,MINUTE*5);

  0004a	68 e0 93 04 00	 push	 300000			; 000493e0H
  0004f	53		 push	 ebx
  00050	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00053	8b cc		 mov	 ecx, esp
  00055	89 64 24 38	 mov	 DWORD PTR $T237502[esp+72], esp
  00059	6a 0a		 push	 10			; 0000000aH
  0005b	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00062	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KDFOBJKP@WMISysPerf?$AA@
  0006a	33 f6		 xor	 esi, esi
  0006c	bf 00 00 00 00	 mov	 edi, OFFSET ?ThreadWMISystemPerformance@@YGIPAX@Z ; ThreadWMISystemPerformance
  00071	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00074	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00079	89 5c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebx
  0007d	c7 44 24 44 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+80], -1
  00085	8b d6		 mov	 edx, esi
  00087	8b cf		 mov	 ecx, edi
  00089	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  0008e	83 c4 24	 add	 esp, 36			; 00000024H
$LN3@GetWMIStat:

; 2977 :     }
; 2978 : 
; 2979 :     //get hardware sensor information
; 2980 :     if(_thGetInt(&gbShutdown)==FALSE)

  00091	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  00096	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  0009b	85 c0		 test	 eax, eax
  0009d	75 4b		 jne	 SHORT $LN2@GetWMIStat

; 2981 :     {
; 2982 :         StartThread("WMIHwSnsr",ThreadWMIHardwareSensor,NULL,MINUTE*5);

  0009f	68 e0 93 04 00	 push	 300000			; 000493e0H
  000a4	53		 push	 ebx
  000a5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000a8	8b cc		 mov	 ecx, esp
  000aa	89 64 24 38	 mov	 DWORD PTR $T237503[esp+72], esp
  000ae	6a 09		 push	 9
  000b0	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  000b7	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_09NAIFMJBP@WMIHwSnsr?$AA@
  000bf	33 f6		 xor	 esi, esi
  000c1	bf 00 00 00 00	 mov	 edi, OFFSET ?ThreadWMIHardwareSensor@@YGIPAX@Z ; ThreadWMIHardwareSensor
  000c6	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  000c9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000ce	c7 44 24 44 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 1
  000d6	c7 44 24 44 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+80], -1
  000de	8b d6		 mov	 edx, esi
  000e0	8b cf		 mov	 ecx, edi
  000e2	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  000e7	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@GetWMIStat:

; 2983 :     }
; 2984 : 
; 2985 :     //get all system volume details
; 2986 :     if(_thGetInt(&gbShutdown)==FALSE)

  000ea	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  000ef	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  000f4	85 c0		 test	 eax, eax
  000f6	75 4b		 jne	 SHORT $LN1@GetWMIStat

; 2987 :     {
; 2988 :         StartThread("WMISysVols",ThreadWMISystemVolumes,NULL,MINUTE*5);

  000f8	68 e0 93 04 00	 push	 300000			; 000493e0H
  000fd	53		 push	 ebx
  000fe	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00101	8b cc		 mov	 ecx, esp
  00103	89 64 24 38	 mov	 DWORD PTR $T237504[esp+72], esp
  00107	6a 0a		 push	 10			; 0000000aH
  00109	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00110	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GCKOGEAF@WMISysVols?$AA@
  00118	33 f6		 xor	 esi, esi
  0011a	bf 00 00 00 00	 mov	 edi, OFFSET ?ThreadWMISystemVolumes@@YGIPAX@Z ; ThreadWMISystemVolumes
  0011f	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00122	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00127	c7 44 24 44 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 2
  0012f	c7 44 24 44 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+80], -1
  00137	8b d6		 mov	 edx, esi
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00140	83 c4 24	 add	 esp, 36			; 00000024H
$LN1@GetWMIStat:

; 2989 :     }
; 2990 : 
; 2991 : #ifdef _GET_WMI_USBINFO
; 2992 :     //get all system usb details
; 2993 :     if(_thGetInt(&gbShutdown)==FALSE)
; 2994 :     {
; 2995 :         StartThread("WMISysUsb",ThreadWMISystemUsb,NULL,MINUTE*5);
; 2996 :     }
; 2997 : #endif
; 2998 :     Log(LOG_DEBUG,__LINE__,"<< GetWMISts");

  00143	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DGHKOAOF@?$DM?$DM?5GetWMISts?$AA@
  00148	68 b6 0b 00 00	 push	 2998			; 00000bb6H
  0014d	6a 10		 push	 16			; 00000010H
  0014f	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  00154	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2999 : }

  00157	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  0015b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00162	59		 pop	 ecx
  00163	5f		 pop	 edi
  00164	5e		 pop	 esi
  00165	5b		 pop	 ebx
  00166	83 c4 14	 add	 esp, 20			; 00000014H
  00169	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetWMIStatus@@YAXXZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR $T237502[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetWMIStatus@@YAXXZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR $T237503[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetWMIStatus@@YAXXZ$2:
  00010	8b 4d f0	 mov	 ecx, DWORD PTR $T237504[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetWMIStatus@@YAXXZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 ec	 lea	 eax, DWORD PTR [edx-20]
  0001f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetWMIStatus@@YAXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetWMIStatus@@YAXXZ ENDP				; GetWMIStatus
PUBLIC	?GetSystemStatusChanges@@YAXXZ			; GetSystemStatusChanges
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?GetSystemStatusChanges@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$3
__ehfuncinfo$?GetSystemStatusChanges@@YAXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetSystemStatusChanges@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT ?GetSystemStatusChanges@@YAXXZ
_TEXT	SEGMENT
$T237952 = -16						; size = 4
$T237951 = -16						; size = 4
$T237950 = -16						; size = 4
$T237949 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetSystemStatusChanges@@YAXXZ PROC			; GetSystemStatusChanges, COMDAT

; 2890 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?GetSystemStatusChanges@@YAXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  0000d	50		 push	 eax
  0000e	51		 push	 ecx
  0000f	53		 push	 ebx
  00010	55		 push	 ebp
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c4		 xor	 eax, esp
  0001a	50		 push	 eax
  0001b	8d 44 24 18	 lea	 eax, DWORD PTR __$EHRec$[esp+36]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 2891 :     /* Logical Drivers */
; 2892 :     if(_thGetInt(&gbShutdown)==FALSE)

  00025	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0002a	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  0002f	33 db		 xor	 ebx, ebx
  00031	83 cd ff	 or	 ebp, -1
  00034	85 c0		 test	 eax, eax
  00036	75 43		 jne	 SHORT $LN4@GetSystemS@2

; 2893 :     {
; 2894 :         StartThread("LogDrvs",LogicalDrives,NULL,MINUTE);

  00038	68 60 ea 00 00	 push	 60000			; 0000ea60H
  0003d	53		 push	 ebx
  0003e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00041	8b cc		 mov	 ecx, esp
  00043	89 64 24 38	 mov	 DWORD PTR $T237949[esp+72], esp
  00047	6a 07		 push	 7
  00049	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00050	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_07LEMLFMJD@LogDrvs?$AA@
  00058	33 f6		 xor	 esi, esi
  0005a	bf 00 00 00 00	 mov	 edi, OFFSET ?LogicalDrives@@YGIPAX@Z ; LogicalDrives
  0005f	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00062	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00067	89 5c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebx
  0006b	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  0006f	8b d6		 mov	 edx, esi
  00071	8b cf		 mov	 ecx, edi
  00073	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00078	83 c4 24	 add	 esp, 36			; 00000024H
$LN4@GetSystemS@2:

; 2895 :     }
; 2896 : 
; 2897 :     /* Enumerate USB */
; 2898 :     if(_thGetInt(&gbShutdown)==FALSE)

  0007b	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  00080	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00085	85 c0		 test	 eax, eax
  00087	75 47		 jne	 SHORT $LN3@GetSystemS@2

; 2899 :     {
; 2900 :         StartThread("USB",ThreadUSB,NULL,MINUTE);

  00089	68 60 ea 00 00	 push	 60000			; 0000ea60H
  0008e	53		 push	 ebx
  0008f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00092	8b cc		 mov	 ecx, esp
  00094	89 64 24 38	 mov	 DWORD PTR $T237950[esp+72], esp
  00098	6a 03		 push	 3
  0009a	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  000a1	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_03IONNGCBN@USB?$AA@
  000a9	33 f6		 xor	 esi, esi
  000ab	bf 00 00 00 00	 mov	 edi, OFFSET ?ThreadUSB@@YGIPAX@Z ; ThreadUSB
  000b0	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  000b3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000b8	c7 44 24 44 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 1
  000c0	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  000c4	8b d6		 mov	 edx, esi
  000c6	8b cf		 mov	 ecx, edi
  000c8	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  000cd	83 c4 24	 add	 esp, 36			; 00000024H
$LN3@GetSystemS@2:

; 2901 :     }
; 2902 : 
; 2903 :     /* Device Drivers */
; 2904 :     if(_thGetInt(&gbShutdown)==FALSE)

  000d0	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  000d5	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  000da	85 c0		 test	 eax, eax
  000dc	75 47		 jne	 SHORT $LN2@GetSystemS@2

; 2905 :     {
; 2906 :         StartThread("DevDrvrs",DeviceDrivers,NULL,MINUTE);

  000de	68 60 ea 00 00	 push	 60000			; 0000ea60H
  000e3	53		 push	 ebx
  000e4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000e7	8b cc		 mov	 ecx, esp
  000e9	89 64 24 38	 mov	 DWORD PTR $T237951[esp+72], esp
  000ed	6a 08		 push	 8
  000ef	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  000f6	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_08IHNDGAAK@DevDrvrs?$AA@
  000fe	33 f6		 xor	 esi, esi
  00100	bf 00 00 00 00	 mov	 edi, OFFSET ?DeviceDrivers@@YGIPAX@Z ; DeviceDrivers
  00105	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  00108	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0010d	c7 44 24 44 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 2
  00115	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  00119	8b d6		 mov	 edx, esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00122	83 c4 24	 add	 esp, 36			; 00000024H
$LN2@GetSystemS@2:

; 2907 :     }
; 2908 : 
; 2909 :     /* Printers Information */
; 2910 :     if(_thGetInt(&gbShutdown)==FALSE)

  00125	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbShutdown@@3HA ; gbShutdown
  0012a	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  0012f	85 c0		 test	 eax, eax
  00131	75 47		 jne	 SHORT $LN1@GetSystemS@2

; 2911 :     {
; 2912 :         StartThread("PtrInfo",PrinterInfo,NULL,MINUTE);

  00133	68 60 ea 00 00	 push	 60000			; 0000ea60H
  00138	53		 push	 ebx
  00139	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0013c	8b cc		 mov	 ecx, esp
  0013e	89 64 24 38	 mov	 DWORD PTR $T237952[esp+72], esp
  00142	6a 07		 push	 7
  00144	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  0014b	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_07LBBDPBFA@PtrInfo?$AA@
  00153	33 f6		 xor	 esi, esi
  00155	bf 00 00 00 00	 mov	 edi, OFFSET ?PrinterInfo@@YGIPAX@Z ; PrinterInfo
  0015a	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  0015d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00162	c7 44 24 44 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+80], 3
  0016a	89 6c 24 44	 mov	 DWORD PTR __$EHRec$[esp+80], ebp
  0016e	8b d6		 mov	 edx, esi
  00170	8b cf		 mov	 ecx, edi
  00172	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00177	83 c4 24	 add	 esp, 36			; 00000024H
$LN1@GetSystemS@2:

; 2913 :     }
; 2914 : }

  0017a	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  0017e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00185	59		 pop	 ecx
  00186	5f		 pop	 edi
  00187	5e		 pop	 esi
  00188	5d		 pop	 ebp
  00189	5b		 pop	 ebx
  0018a	83 c4 10	 add	 esp, 16			; 00000010H
  0018d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR $T237949[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR $T237950[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$2:
  00010	8b 4d f0	 mov	 ecx, DWORD PTR $T237951[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GetSystemStatusChanges@@YAXXZ$3:
  00018	8b 4d f0	 mov	 ecx, DWORD PTR $T237952[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?GetSystemStatusChanges@@YAXXZ:
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 ec	 lea	 eax, DWORD PTR [edx-20]
  00027	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetSystemStatusChanges@@YAXXZ
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetSystemStatusChanges@@YAXXZ ENDP			; GetSystemStatusChanges
PUBLIC	__$ArrayPad$
PUBLIC	_WinMain@16
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$_WinMain@16 DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_WinMain@16$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_WinMain@16$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_WinMain@16$2
__ehfuncinfo$_WinMain@16 DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$_WinMain@16
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Ogtpy
; File e:\tools\sysstatus\sysstatus.cpp
xdata$x	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_bRunWMI$ = -464					; size = 1
_bWMIThreadRunning$ = -463				; size = 1
_bRunOnce$ = -462					; size = 1
_bMonIps$ = -461					; size = 1
_hThreadWMI$ = -460					; size = 4
_dwTimer$ = -456					; size = 4
tv875 = -452						; size = 2
$T238610 = -452						; size = 4
tv872 = -448						; size = 4
tv870 = -448						; size = 8
$T238683 = -448						; size = 4
_timeElapsed$ = -448					; size = 4
$T238544 = -448						; size = 4
$T238543 = -448						; size = 4
_hThreadMSG$ = -436					; size = 4
tv884 = -432						; size = 8
$T238747 = -432						; size = 8
_dwNetType$ = -420					; size = 4
$T239216 = -416						; size = 8
_ui64Wait$ = -416					; size = 8
_pPreviousExceptionFilter$ = -404			; size = 4
tv887 = -400						; size = 8
_monIps$ = -392						; size = 56
_wndText$ = -336					; size = 260
__$ArrayPad$ = -68					; size = 4
__$EHRec$ = -12						; size = 12
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nShowCmd$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT

; 3005 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 c0	 and	 esp, -64		; ffffffc0H
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$_WinMain@16
  0000d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00013	50		 push	 eax
  00014	81 ec e8 01 00
	00		 sub	 esp, 488		; 000001e8H
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c4		 xor	 eax, esp
  00021	89 84 24 b0 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+500], eax
  00028	53		 push	 ebx
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c4		 xor	 eax, esp
  00032	50		 push	 eax
  00033	8d 84 24 f8 01
	00 00		 lea	 eax, DWORD PTR __$EHRec$[esp+516]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	8b 75 10	 mov	 esi, DWORD PTR _lpCmdLine$[ebp]

; 3006 :     HANDLE hThreadWMI = NULL;

  00043	33 db		 xor	 ebx, ebx

; 3007 :     HANDLE hThreadMSG = NULL;
; 3008 :     DWORD dwTimer = (MINUTE*5);     //5 minutes the default
; 3009 : 	DWORD dwLastState = 0;
; 3010 : 	DWORD dwRet = 0;
; 3011 : 
; 3012 :     unsigned __int64 ui64Wait = 0;
; 3013 : 
; 3014 :     DWORD dwNetType;
; 3015 :     BOOL bNet;
; 3016 : 
; 3017 :     bool bRunWMI = false;
; 3018 :     bool bRunOnce = false;
; 3019 :     bool bWMIThreadRunning = false;
; 3020 : 
; 3021 :     LPTOP_LEVEL_EXCEPTION_FILTER pPreviousExceptionFilter = SetUnhandledExceptionFilter(AppUnhandledExceptionFilter);

  00045	68 00 00 00 00	 push	 OFFSET ?AppUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; AppUnhandledExceptionFilter
  0004a	89 5c 24 3c	 mov	 DWORD PTR _hThreadWMI$[esp+520], ebx
  0004e	89 5c 24 54	 mov	 DWORD PTR _hThreadMSG$[esp+520], ebx
  00052	c7 44 24 40 e0
	93 04 00	 mov	 DWORD PTR _dwTimer$[esp+520], 300000 ; 000493e0H
  0005a	89 5c 24 68	 mov	 DWORD PTR _ui64Wait$[esp+520], ebx
  0005e	88 5c 24 38	 mov	 BYTE PTR _bRunWMI$[esp+520], bl
  00062	88 5c 24 3a	 mov	 BYTE PTR _bRunOnce$[esp+520], bl
  00066	88 5c 24 39	 mov	 BYTE PTR _bWMIThreadRunning$[esp+520], bl
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4

; 3022 : 
; 3023 :     //get log file prefix
; 3024 : 	if (GetModuleBaseName(GetCurrentProcess(),NULL,gszLogFilePrefix,sizeof(gszLogFilePrefix)) > 0)

  00070	68 00 04 00 00	 push	 1024			; 00000400H
  00075	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  0007a	53		 push	 ebx
  0007b	89 44 24 7c	 mov	 DWORD PTR _pPreviousExceptionFilter$[esp+528], eax
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentProcess@0
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 _GetModuleBaseNameA@16
  0008b	85 c0		 test	 eax, eax
  0008d	76 0d		 jbe	 SHORT $LN38@WinMain

; 3025 : 	{
; 3026 : 		//remove log file extension
; 3027 : 		PathRemoveExtension(gszLogFilePrefix);

  0008f	68 00 00 00 00	 push	 OFFSET ?gszLogFilePrefix@@3PADA ; gszLogFilePrefix
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PathRemoveExtensionA@4

; 3028 : 	}
; 3029 : 	else

  0009a	eb 24		 jmp	 SHORT $LN37@WinMain
$LN38@WinMain:

; 3030 : 	{
; 3031 : 		// Copy default name
; 3032 : 		strcpy(gszLogFilePrefix,"SysStatus");

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_09KECABMHK@SysStatus?$AA@
  000a1	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_09KECABMHK@SysStatus?$AA@+4
  000a7	66 8b 15 08 00
	00 00		 mov	 dx, WORD PTR ??_C@_09KECABMHK@SysStatus?$AA@+8
  000ae	a3 00 00 00 00	 mov	 DWORD PTR ?gszLogFilePrefix@@3PADA, eax
  000b3	89 0d 04 00 00
	00		 mov	 DWORD PTR ?gszLogFilePrefix@@3PADA+4, ecx
  000b9	66 89 15 08 00
	00 00		 mov	 WORD PTR ?gszLogFilePrefix@@3PADA+8, dx
$LN37@WinMain:

; 3033 : 	}
; 3034 : 
; 3035 :     gTickStart = SysTick;

  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 3036 :     Log(LOG_DEBUG,__LINE__,">> WinMain");

  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PGBNDJPK@?$DO?$DO?5WinMain?$AA@
  000cb	68 dc 0b 00 00	 push	 3036			; 00000bdcH
  000d0	6a 10		 push	 16			; 00000010H
  000d2	a3 00 00 00 00	 mov	 DWORD PTR ?gTickStart@@3_KA, eax
  000d7	89 1d 04 00 00
	00		 mov	 DWORD PTR ?gTickStart@@3_KA+4, ebx
  000dd	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 3037 : 
; 3038 :     PendingThreads.clear();

  000e2	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  000e7	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f0	89 44 24 40	 mov	 DWORD PTR $T238610[esp+516], eax
  000f4	3b c8		 cmp	 ecx, eax
  000f6	76 10		 jbe	 SHORT $LN54@WinMain
  000f8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  000fd	a1 10 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  00102	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
$LN54@WinMain:
  00108	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  0010e	89 4c 24 44	 mov	 DWORD PTR $T238683[esp+516], ecx
  00112	3b c8		 cmp	 ecx, eax
  00114	76 05		 jbe	 SHORT $LN73@WinMain
  00116	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN73@WinMain:
  0011b	8b 44 24 40	 mov	 eax, DWORD PTR $T238610[esp+516]
  0011f	8b 4c 24 44	 mov	 ecx, DWORD PTR $T238683[esp+516]
  00123	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00129	50		 push	 eax
  0012a	57		 push	 edi
  0012b	51		 push	 ecx
  0012c	52		 push	 edx
  0012d	8d 7c 24 64	 lea	 edi, DWORD PTR $T238747[esp+532]
  00131	e8 00 00 00 00	 call	 ?erase@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@0@Z ; std::vector<void *,std::allocator<void *> >::erase

; 3039 : 
; 3040 :     //start new log
; 3041 :     CheckLogFileSize(0);

  00136	33 c9		 xor	 ecx, ecx
  00138	e8 00 00 00 00	 call	 ?CheckLogFileSize@@YAXK@Z ; CheckLogFileSize

; 3042 : 
; 3043 :     Log(LOG_HEADER,__LINE__,"SysStatus, CmdLine %s",lpCmdLine);

  0013d	56		 push	 esi
  0013e	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FONLKPFK@SysStatus?0?5CmdLine?5?$CFs?$AA@
  00143	68 e3 0b 00 00	 push	 3043			; 00000be3H
  00148	6a 02		 push	 2
  0014a	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 3044 : 
; 3045 :     ghInstance = hInstance;

  0014f	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00152	83 c4 10	 add	 esp, 16			; 00000010H
  00155	a3 00 00 00 00	 mov	 DWORD PTR ?ghInstance@@3PAUHINSTANCE__@@A, eax ; ghInstance

; 3046 : 
; 3047 :     //check whether or not it to run once
; 3048 :     if(lpCmdLine)

  0015a	85 f6		 test	 esi, esi
  0015c	74 6a		 je	 SHORT $LN27@WinMain

; 3049 :     {
; 3050 :         //convert command line to be checked
; 3051 :         _strlwr(lpCmdLine);

  0015e	56		 push	 esi
  0015f	e8 00 00 00 00	 call	 __strlwr
  00164	83 c4 04	 add	 esp, 4

; 3052 : 
; 3053 :         //check whether the app should run only once
; 3054 :         if(strstr(lpCmdLine,"runonce")!=NULL)

  00167	68 00 00 00 00	 push	 OFFSET ??_C@_07GKIGKNOK@runonce?$AA@
  0016c	56		 push	 esi
  0016d	e8 00 00 00 00	 call	 _strstr
  00172	85 c0		 test	 eax, eax

; 3055 :         {
; 3056 :             bRunOnce = true;
; 3057 :         }
; 3058 :         else
; 3059 :         {
; 3060 :             bRunOnce = false;
; 3061 :         }
; 3062 : 
; 3063 :         //check whether the app shoud get information details about the system thru WMI
; 3064 :         if(strstr(lpCmdLine,"sysinfo")!=NULL)

  00174	68 00 00 00 00	 push	 OFFSET ??_C@_07KNKAAJIE@sysinfo?$AA@
  00179	56		 push	 esi
  0017a	0f 95 44 24 46	 setne	 BYTE PTR _bRunOnce$[esp+532]
  0017f	e8 00 00 00 00	 call	 _strstr
  00184	85 c0		 test	 eax, eax

; 3065 :         {
; 3066 :             bRunWMI = true;
; 3067 :         }
; 3068 :         else
; 3069 :         {
; 3070 :             bRunWMI = false;
; 3071 :         }
; 3072 : 
; 3073 :         //check the wait time between exeutions
; 3074 :         char *timer = strstr(lpCmdLine,"timer");

  00186	68 00 00 00 00	 push	 OFFSET ??_C@_05NAPFDJNG@timer?$AA@
  0018b	56		 push	 esi
  0018c	0f 95 44 24 4c	 setne	 BYTE PTR _bRunWMI$[esp+540]
  00191	e8 00 00 00 00	 call	 _strstr
  00196	83 c4 18	 add	 esp, 24			; 00000018H

; 3075 :         if(timer)

  00199	85 c0		 test	 eax, eax
  0019b	74 23		 je	 SHORT $LN31@WinMain

; 3076 :         {
; 3077 :             DWORD minTimer = 1;
; 3078 : 
; 3079 :             timer += 6;

  0019d	83 c0 06	 add	 eax, 6

; 3080 :             dwTimer = (DWORD)atoi(timer);

  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 _atoi

; 3081 : 
; 3082 :             //timer from 2 (no WMI) or 5 (with WMI) to 360 minutes for checking the system status
; 3083 :             if(dwTimer<minTimer || dwTimer>360)

  001a6	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  001a9	83 c4 04	 add	 esp, 4
  001ac	81 f9 67 01 00
	00		 cmp	 ecx, 359		; 00000167H
  001b2	77 0c		 ja	 SHORT $LN31@WinMain

; 3084 :             {
; 3085 :                 dwTimer = MINUTE;       //one minute of default
; 3086 :             }
; 3087 :             else
; 3088 :             {
; 3089 :                 dwTimer *= MINUTE;      //number of minutes specified in milliseconds

  001b4	69 c0 60 ea 00
	00		 imul	 eax, 60000		; 0000ea60H
  001ba	89 44 24 3c	 mov	 DWORD PTR _dwTimer$[esp+516], eax
  001be	eb 08		 jmp	 SHORT $LN27@WinMain
$LN31@WinMain:

; 3090 :             }
; 3091 :         }
; 3092 :         else
; 3093 :         {
; 3094 :             dwTimer = MINUTE;           //one minute of default

  001c0	c7 44 24 3c 60
	ea 00 00	 mov	 DWORD PTR _dwTimer$[esp+516], 60000 ; 0000ea60H
$LN27@WinMain:

; 3095 :         }
; 3096 :     }
; 3097 : 
; 3098 :     //Start window thread
; 3099 :     StartThread("ThrdMsg",ThreadMessage,NULL,0,&hThreadMSG);

  001c8	6a 00		 push	 0
  001ca	6a 00		 push	 0
  001cc	83 ec 1c	 sub	 esp, 28			; 0000001cH
  001cf	8b cc		 mov	 ecx, esp
  001d1	89 64 24 68	 mov	 DWORD PTR $T238543[esp+552], esp
  001d5	6a 07		 push	 7
  001d7	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  001de	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_07MMMFAJOG@ThrdMsg?$AA@
  001e6	8d 74 24 7c	 lea	 esi, DWORD PTR _hThreadMSG$[esp+560]
  001ea	bf 00 00 00 00	 mov	 edi, OFFSET ?ThreadMessage@@YGIPAX@Z ; ThreadMessage
  001ef	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  001f2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  001f7	c7 84 24 24 02
	00 00 00 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+560], 0
  00202	c7 84 24 24 02
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+560], -1
  0020d	8b d6		 mov	 edx, esi
  0020f	8b cf		 mov	 ecx, edi
  00211	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00216	83 c4 24	 add	 esp, 36			; 00000024H

; 3100 : 
; 3101 :     if(bRunWMI)

  00219	80 7c 24 34 00	 cmp	 BYTE PTR _bRunWMI$[esp+516], 0
  0021e	74 5a		 je	 SHORT $LN26@WinMain

; 3102 :     {
; 3103 :         //Start WMI main thread
; 3104 :         bWMIThreadRunning = StartThread("ThrWMI",ThreadWMI,NULL,0,&hThreadWMI);

  00220	6a 00		 push	 0
  00222	6a 00		 push	 0
  00224	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00227	8b cc		 mov	 ecx, esp
  00229	89 64 24 68	 mov	 DWORD PTR $T238544[esp+552], esp
  0022d	6a 06		 push	 6
  0022f	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00236	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  0023d	68 00 00 00 00	 push	 OFFSET ??_C@_06NNJPAOHJ@ThrWMI?$AA@
  00242	8d 74 24 64	 lea	 esi, DWORD PTR _hThreadWMI$[esp+560]
  00246	bf 00 00 00 00	 mov	 edi, OFFSET ?ThreadWMI@@YGIPAX@Z ; ThreadWMI
  0024b	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0
  0024f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00254	c7 84 24 24 02
	00 00 01 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+560], 1
  0025f	c7 84 24 24 02
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+560], -1
  0026a	8b d6		 mov	 edx, esi
  0026c	8b cf		 mov	 ecx, edi
  0026e	e8 00 00 00 00	 call	 ?StartThread@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@P6GIPAX@Z1KPAPAX@Z ; StartThread
  00273	83 c4 24	 add	 esp, 36			; 00000024H
  00276	88 44 24 35	 mov	 BYTE PTR _bWMIThreadRunning$[esp+516], al
$LN26@WinMain:

; 3105 :     }
; 3106 : 
; 3107 :     //Start IPs monitor
; 3108 :     MonitorIPs monIps;

  0027a	8d 54 24 7c	 lea	 edx, DWORD PTR _monIps$[esp+516]
  0027e	52		 push	 edx
  0027f	e8 00 00 00 00	 call	 ??0MonitorIPs@@QAE@XZ	; MonitorIPs::MonitorIPs
  00284	c7 84 24 00 02
	00 00 02 00 00
	00		 mov	 DWORD PTR __$EHRec$[esp+524], 2

; 3109 :     bool bMonIps = monIps.Initialize();

  0028f	8d 74 24 7c	 lea	 esi, DWORD PTR _monIps$[esp+516]
  00293	e8 00 00 00 00	 call	 ?Initialize@MonitorIPs@@QAE_NXZ ; MonitorIPs::Initialize
  00298	88 44 24 37	 mov	 BYTE PTR _bMonIps$[esp+516], al

; 3110 : 
; 3111 :     if((bRunOnce==false) || (bRunOnce==true && bWMIThreadRunning==true))

  0029c	8a 44 24 36	 mov	 al, BYTE PTR _bRunOnce$[esp+516]
  002a0	84 c0		 test	 al, al
  002a2	74 0a		 je	 SHORT $LN24@WinMain
  002a4	3c 01		 cmp	 al, 1
  002a6	75 1d		 jne	 SHORT $LN213@WinMain
  002a8	38 44 24 35	 cmp	 BYTE PTR _bWMIThreadRunning$[esp+516], al
  002ac	75 17		 jne	 SHORT $LN213@WinMain
$LN24@WinMain:

; 3112 :     {
; 3113 :         //get unchangable system information
; 3114 :         GetSystemDetails();

  002ae	e8 00 00 00 00	 call	 ?GetSystemDetails@@YAXXZ ; GetSystemDetails

; 3115 : 
; 3116 :         //get runtime changable system information
; 3117 :         GetSystemStatusChanges();

  002b3	e8 00 00 00 00	 call	 ?GetSystemStatusChanges@@YAXXZ ; GetSystemStatusChanges

; 3118 : 
; 3119 :         //get IPs if possible
; 3120 :         GetSystemIPAddresses(&monIps,bMonIps);

  002b8	8a 4c 24 37	 mov	 cl, BYTE PTR _bMonIps$[esp+516]
  002bc	8d 54 24 7c	 lea	 edx, DWORD PTR _monIps$[esp+516]
  002c0	e8 00 00 00 00	 call	 ?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z ; GetSystemIPAddresses
$LN213@WinMain:

; 3121 :     }
; 3122 : 
; 3123 :     float timeElapsed;
; 3124 :     unsigned long seconds;
; 3125 :     unsigned __int64 tickEnd;
; 3126 :     char wndText[_MAX_PATH];
; 3127 : 
; 3128 :     //run while:
; 3129 :     // 1. close or end session has been requested AND 
; 3130 :     //    running mode is continuous
; 3131 :     // OR
; 3132 :     // 2. close or end session has been requested AND 
; 3133 :     //    running mode is simple AND
; 3134 :     //    WMI thread is still running
; 3135 :     while(_thGetInt(&gbTerminate)==FALSE && 
; 3136 :           ((bRunOnce==false) || (bRunOnce==true && bWMIThreadRunning==true))
; 3137 :          )

  002c5	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbTerminate@@3HA ; gbTerminate
  002ca	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  002cf	85 c0		 test	 eax, eax
  002d1	0f 85 7e 02 00
	00		 jne	 $LN222@WinMain
$LL23@WinMain:
  002d7	8a 4c 24 36	 mov	 cl, BYTE PTR _bRunOnce$[esp+516]
  002db	84 c9		 test	 cl, cl
  002dd	74 13		 je	 SHORT $LN21@WinMain
  002df	80 f9 01	 cmp	 cl, 1
  002e2	0f 85 71 02 00
	00		 jne	 $LN22@WinMain
  002e8	38 4c 24 35	 cmp	 BYTE PTR _bWMIThreadRunning$[esp+516], cl
  002ec	0f 85 67 02 00
	00		 jne	 $LN22@WinMain
$LN21@WinMain:

; 3138 :     {
; 3139 :         if(bRunWMI)

  002f2	80 7c 24 34 00	 cmp	 BYTE PTR _bRunWMI$[esp+516], 0
  002f7	74 17		 je	 SHORT $LN19@WinMain

; 3140 :         {
; 3141 :             if(WaitForSingleObject(hThreadWMI,(MILLISECOND*100))==WAIT_TIMEOUT)

  002f9	8b 44 24 38	 mov	 eax, DWORD PTR _hThreadWMI$[esp+516]
  002fd	6a 64		 push	 100			; 00000064H
  002ff	50		 push	 eax
  00300	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00306	3d 02 01 00 00	 cmp	 eax, 258		; 00000102H
  0030b	0f 94 44 24 35	 sete	 BYTE PTR _bWMIThreadRunning$[esp+516]
$LN19@WinMain:

; 3142 :             {
; 3143 :                 bWMIThreadRunning = true;
; 3144 :             }
; 3145 :             else
; 3146 :             {
; 3147 :                 bWMIThreadRunning = false;
; 3148 :             }
; 3149 :         }
; 3150 : 
; 3151 :         if(ui64Wait>SysTick && _thGetInt(&gbForceChecking)==FALSE)

  00310	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetTickCount@0
  00316	ff d6		 call	 esi
  00318	33 c9		 xor	 ecx, ecx
  0031a	3b d9		 cmp	 ebx, ecx
  0031c	72 26		 jb	 SHORT $LN17@WinMain
  0031e	77 06		 ja	 SHORT $LN217@WinMain
  00320	39 44 24 64	 cmp	 DWORD PTR _ui64Wait$[esp+516], eax
  00324	76 1e		 jbe	 SHORT $LN17@WinMain
$LN217@WinMain:
  00326	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  0032b	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  00330	85 c0		 test	 eax, eax
  00332	75 10		 jne	 SHORT $LN17@WinMain

; 3152 :         {
; 3153 :             //Wait a second and then continue
; 3154 :             Sleep(SECOND);

  00334	68 e8 03 00 00	 push	 1000			; 000003e8H
  00339	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4

; 3155 :             continue;

  0033f	e9 ff 01 00 00	 jmp	 $LN215@WinMain
$LN17@WinMain:

; 3156 :         }
; 3157 : 
; 3158 :         if(_thGetInt(&gbForceChecking)==TRUE)

  00344	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  00349	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  0034e	83 f8 01	 cmp	 eax, 1
  00351	75 14		 jne	 SHORT $LN16@WinMain

; 3159 :         {
; 3160 :             //get runtime changable system information
; 3161 :             GetSystemStatusChanges();

  00353	e8 00 00 00 00	 call	 ?GetSystemStatusChanges@@YAXXZ ; GetSystemStatusChanges

; 3162 : 
; 3163 :             //stop force checking
; 3164 :             _thSetInt(&gbForceChecking,FALSE);

  00358	6a 00		 push	 0
  0035a	bf 00 00 00 00	 mov	 edi, OFFSET ?gbForceChecking@@3HA ; gbForceChecking
  0035f	e8 00 00 00 00	 call	 ?_thSetInt@@YAXPAHH@Z	; _thSetInt
  00364	83 c4 04	 add	 esp, 4
$LN16@WinMain:

; 3165 :         }
; 3166 : 
; 3167 :         //get system information
; 3168 :         GetSystemStatus();

  00367	e8 00 00 00 00	 call	 ?GetSystemStatus@@YAXXZ	; GetSystemStatus

; 3169 : 
; 3170 :         //get WMI status information if WMI system info thread has been completed
; 3171 :         if(!bWMIThreadRunning && bRunWMI)

  0036c	80 7c 24 35 00	 cmp	 BYTE PTR _bWMIThreadRunning$[esp+516], 0
  00371	75 0c		 jne	 SHORT $LN15@WinMain
  00373	80 7c 24 34 00	 cmp	 BYTE PTR _bRunWMI$[esp+516], 0
  00378	74 05		 je	 SHORT $LN15@WinMain

; 3172 :         {
; 3173 :             //get WMI status information
; 3174 :             GetWMIStatus();

  0037a	e8 00 00 00 00	 call	 ?GetWMIStatus@@YAXXZ	; GetWMIStatus
$LN15@WinMain:

; 3175 :         }
; 3176 : 
; 3177 :         //Is network alive?
; 3178 :         bNet = IsNetworkAlive(&dwNetType);

  0037f	8d 4c 24 60	 lea	 ecx, DWORD PTR _dwNetType$[esp+516]
  00383	51		 push	 ecx
  00384	e8 00 00 00 00	 call	 _IsNetworkAlive@4
  00389	8b f8		 mov	 edi, eax

; 3179 :         dwRet = GetLastError();

  0038b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 3180 :         
; 3181 :         //Was function executed successfully?
; 3182 :         if(ERROR_SUCCESS==dwRet)

  00391	85 c0		 test	 eax, eax
  00393	75 2a		 jne	 SHORT $LN14@WinMain

; 3183 :         {
; 3184 :             Log(LOG_HEADER,__LINE__,"Net Alive? %s, Type %u",(bNet?"Yes":"No"),dwNetType);

  00395	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03CCLAEDDF@Yes?$AA@
  0039a	85 ff		 test	 edi, edi
  0039c	75 05		 jne	 SHORT $LN42@WinMain
  0039e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_02JINPPBEP@No?$AA@
$LN42@WinMain:
  003a3	8b 54 24 60	 mov	 edx, DWORD PTR _dwNetType$[esp+516]
  003a7	52		 push	 edx
  003a8	50		 push	 eax
  003a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ICNNMNOE@Net?5Alive?$DP?5?$CFs?0?5Type?5?$CFu?$AA@
  003ae	68 70 0c 00 00	 push	 3184			; 00000c70H
  003b3	6a 02		 push	 2
  003b5	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003ba	83 c4 14	 add	 esp, 20			; 00000014H

; 3185 :         }
; 3186 :         else

  003bd	eb 15		 jmp	 SHORT $LN13@WinMain
$LN14@WinMain:

; 3187 :         {
; 3188 :             Log(LOG_HEADER,__LINE__,"Net Chkg Err %u",dwRet);

  003bf	50		 push	 eax
  003c0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HGBCLIME@Net?5Chkg?5Err?5?$CFu?$AA@
  003c5	68 74 0c 00 00	 push	 3188			; 00000c74H
  003ca	6a 02		 push	 2
  003cc	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log
  003d1	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@WinMain:

; 3189 :         }
; 3190 : 
; 3191 :         //Get IPs if possible and changed
; 3192 :         if(monIps.IsChanged())

  003d4	8b 44 24 7c	 mov	 eax, DWORD PTR _monIps$[esp+516]
  003d8	68 60 ea 00 00	 push	 60000			; 0000ea60H
  003dd	50		 push	 eax
  003de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  003e4	8b 4c 24 7c	 mov	 ecx, DWORD PTR _monIps$[esp+516]
  003e8	8a 9c 24 b0 00
	00 00		 mov	 bl, BYTE PTR _monIps$[esp+568]
  003ef	51		 push	 ecx
  003f0	c6 84 24 b4 00
	00 00 00	 mov	 BYTE PTR _monIps$[esp+572], 0
  003f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseMutex@4
  003fe	84 db		 test	 bl, bl
  00400	74 0d		 je	 SHORT $LN12@WinMain

; 3193 :         {
; 3194 :             GetSystemIPAddresses(&monIps,bMonIps);

  00402	8a 4c 24 37	 mov	 cl, BYTE PTR _bMonIps$[esp+516]
  00406	8d 54 24 7c	 lea	 edx, DWORD PTR _monIps$[esp+516]
  0040a	e8 00 00 00 00	 call	 ?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z ; GetSystemIPAddresses
$LN12@WinMain:

; 3195 :         }
; 3196 : 
; 3197 :         {
; 3198 :             CalcElapsedTime(gTickStart,tickEnd,timeElapsed,seconds);

  0040f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gTickStart@@3_KA
  00415	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?gTickStart@@3_KA+4
  0041b	ff d6		 call	 esi
  0041d	d9 7c 24 40	 fnstcw	 WORD PTR tv875[esp+516]
  00421	33 c9		 xor	 ecx, ecx
  00423	2b c7		 sub	 eax, edi
  00425	1b cb		 sbb	 ecx, ebx
  00427	89 44 24 74	 mov	 DWORD PTR tv887[esp+516], eax
  0042b	8b c1		 mov	 eax, ecx
  0042d	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  00432	89 44 24 58	 mov	 DWORD PTR tv884[esp+520], eax
  00436	81 e1 ff ff ff
	7f		 and	 ecx, 2147483647		; 7fffffffH
  0043c	89 4c 24 78	 mov	 DWORD PTR tv887[esp+520], ecx
  00440	df 6c 24 74	 fild	 QWORD PTR tv887[esp+516]
  00444	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR tv884[esp+516], 0
  0044c	df 6c 24 54	 fild	 QWORD PTR tv884[esp+516]
  00450	0f b7 44 24 40	 movzx	 eax, WORD PTR tv875[esp+516]
  00455	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H

; 3199 :             Log(LOG_DEBUG,__LINE__,"-- %02d:%02d:%02d, %f s",seconds/3600,(seconds % 3600)/60,seconds % 60,timeElapsed);

  0045a	83 ec 08	 sub	 esp, 8
  0045d	d9 e0		 fchs
  0045f	de c1		 faddp	 ST(1), ST(0)
  00461	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@408f400000000000
  00467	d9 5c 24 4c	 fstp	 DWORD PTR _timeElapsed$[esp+524]
  0046b	d9 44 24 4c	 fld	 DWORD PTR _timeElapsed$[esp+524]
  0046f	dd 05 00 00 00
	00		 fld	 QWORD PTR __real@3fe0000000000000
  00475	89 44 24 4c	 mov	 DWORD PTR tv872[esp+524], eax
  00479	d8 c1		 fadd	 ST(0), ST(1)
  0047b	d9 6c 24 4c	 fldcw	 WORD PTR tv872[esp+524]
  0047f	b8 c5 b3 a2 91	 mov	 eax, -1851608123	; 91a2b3c5H
  00484	df 7c 24 4c	 fistp	 QWORD PTR tv870[esp+524]
  00488	8b 4c 24 4c	 mov	 ecx, DWORD PTR tv870[esp+524]
  0048c	8b f9		 mov	 edi, ecx
  0048e	f7 e1		 mul	 ecx
  00490	d9 6c 24 48	 fldcw	 WORD PTR tv875[esp+524]
  00494	dd 1c 24	 fstp	 QWORD PTR [esp]
  00497	8b f2		 mov	 esi, edx
  00499	c1 ee 0b	 shr	 esi, 11			; 0000000bH
  0049c	8b d6		 mov	 edx, esi
  0049e	69 d2 10 0e 00
	00		 imul	 edx, 3600		; 00000e10H
  004a4	2b fa		 sub	 edi, edx
  004a6	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  004ab	f7 e7		 mul	 edi
  004ad	8b fa		 mov	 edi, edx
  004af	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  004b4	f7 e1		 mul	 ecx
  004b6	c1 ea 05	 shr	 edx, 5
  004b9	8b c2		 mov	 eax, edx
  004bb	c1 e0 04	 shl	 eax, 4
  004be	2b c2		 sub	 eax, edx
  004c0	03 c0		 add	 eax, eax
  004c2	03 c0		 add	 eax, eax
  004c4	2b c8		 sub	 ecx, eax
  004c6	51		 push	 ecx
  004c7	c1 ef 05	 shr	 edi, 5
  004ca	57		 push	 edi
  004cb	56		 push	 esi
  004cc	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@PLMFNPPL@?9?9?5?$CF02d?3?$CF02d?3?$CF02d?0?5?$CFf?5s?$AA@
  004d1	68 7f 0c 00 00	 push	 3199			; 00000c7fH
  004d6	6a 10		 push	 16			; 00000010H
  004d8	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 3200 : 
; 3201 :             //Update the window name with the time app is running
; 3202 :             memset(wndText,0x00,sizeof(wndText));

  004dd	68 04 01 00 00	 push	 260			; 00000104H
  004e2	8d 8c 24 d8 00
	00 00		 lea	 ecx, DWORD PTR _wndText$[esp+552]
  004e9	6a 00		 push	 0
  004eb	51		 push	 ecx
  004ec	e8 00 00 00 00	 call	 _memset
  004f1	83 c4 2c	 add	 esp, 44			; 0000002cH

; 3203 :             _snprintf(wndText,sizeof(wndText)-1,"SysStatus - Running for %02d:%02d",seconds/3600,(seconds % 3600)/60);

  004f4	57		 push	 edi
  004f5	56		 push	 esi
  004f6	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PCCAGIIF@SysStatus?5?9?5Running?5for?5?$CF02d?3?$CF02@
  004fb	8d 94 24 c0 00
	00 00		 lea	 edx, DWORD PTR _wndText$[esp+528]
  00502	68 03 01 00 00	 push	 259			; 00000103H
  00507	52		 push	 edx
  00508	e8 00 00 00 00	 call	 __snprintf

; 3204 :             SetWindowText(ghWnd,(LPCTSTR)wndText);

  0050d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  00513	83 c4 14	 add	 esp, 20			; 00000014H
  00516	8d 84 24 b4 00
	00 00		 lea	 eax, DWORD PTR _wndText$[esp+516]
  0051d	50		 push	 eax
  0051e	51		 push	 ecx
  0051f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 3205 :         }
; 3206 : 
; 3207 :         //check de log file size
; 3208 :         CheckLogFileSize(MBYTES*5);

  00525	b9 00 00 50 00	 mov	 ecx, 5242880		; 00500000H
  0052a	e8 00 00 00 00	 call	 ?CheckLogFileSize@@YAXK@Z ; CheckLogFileSize

; 3209 : 
; 3210 :         //set timer for next checking
; 3211 :         ui64Wait = SysTick + dwTimer;

  0052f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00535	33 db		 xor	 ebx, ebx
  00537	33 d2		 xor	 edx, edx
  00539	03 44 24 3c	 add	 eax, DWORD PTR _dwTimer$[esp+516]
  0053d	89 44 24 64	 mov	 DWORD PTR _ui64Wait$[esp+516], eax
  00541	13 da		 adc	 ebx, edx
$LN215@WinMain:
  00543	b9 00 00 00 00	 mov	 ecx, OFFSET ?gbTerminate@@3HA ; gbTerminate
  00548	e8 00 00 00 00	 call	 ?_thGetInt@@YAHPAH@Z	; _thGetInt
  0054d	85 c0		 test	 eax, eax
  0054f	0f 84 82 fd ff
	ff		 je	 $LL23@WinMain
$LN222@WinMain:

; 3121 :     }
; 3122 : 
; 3123 :     float timeElapsed;
; 3124 :     unsigned long seconds;
; 3125 :     unsigned __int64 tickEnd;
; 3126 :     char wndText[_MAX_PATH];
; 3127 : 
; 3128 :     //run while:
; 3129 :     // 1. close or end session has been requested AND 
; 3130 :     //    running mode is continuous
; 3131 :     // OR
; 3132 :     // 2. close or end session has been requested AND 
; 3133 :     //    running mode is simple AND
; 3134 :     //    WMI thread is still running
; 3135 :     while(_thGetInt(&gbTerminate)==FALSE && 
; 3136 :           ((bRunOnce==false) || (bRunOnce==true && bWMIThreadRunning==true))
; 3137 :          )

  00555	8a 4c 24 36	 mov	 cl, BYTE PTR _bRunOnce$[esp+516]
$LN22@WinMain:

; 3212 :     }   //END: while(_thGetInt(&gbTerminate)==FALSE && bRunOnce==false)
; 3213 : 
; 3214 :     //wait for WMI Ascii thread completion
; 3215 :     if(hThreadWMI)

  00559	8b 44 24 38	 mov	 eax, DWORD PTR _hThreadWMI$[esp+516]
  0055d	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__CloseHandle@4
  00563	85 c0		 test	 eax, eax
  00565	74 32		 je	 SHORT $LN11@WinMain

; 3216 :     {
; 3217 :         if(bRunOnce)

  00567	84 c9		 test	 cl, cl
  00569	74 0b		 je	 SHORT $LN10@WinMain

; 3218 :         {
; 3219 :             //wait until it is completed
; 3220 :             WaitForSingleObject(hThreadWMI,INFINITE);

  0056b	6a ff		 push	 -1
  0056d	50		 push	 eax
  0056e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8

; 3221 :         }
; 3222 :         else

  00574	eb 1c		 jmp	 SHORT $LN8@WinMain
$LN10@WinMain:

; 3223 :         {
; 3224 :             //quickly wait while the thread has not completed
; 3225 :             //and, when timeout is completed, force terminate
; 3226 :             //the WMI thread if the thread is still runing
; 3227 :             if(WaitForSingleObject(hThreadWMI,(MINUTE*10))==WAIT_TIMEOUT)

  00576	68 c0 27 09 00	 push	 600000			; 000927c0H
  0057b	50		 push	 eax
  0057c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00582	3d 02 01 00 00	 cmp	 eax, 258		; 00000102H
  00587	75 09		 jne	 SHORT $LN8@WinMain

; 3228 :             {
; 3229 :                 EndPendingThread(hThreadWMI);

  00589	8b 74 24 38	 mov	 esi, DWORD PTR _hThreadWMI$[esp+516]
  0058d	e8 00 00 00 00	 call	 ?EndPendingThread@@YAXPAX@Z ; EndPendingThread
$LN8@WinMain:

; 3230 :             }
; 3231 :         }
; 3232 :         CloseHandle(hThreadWMI);

  00592	8b 44 24 38	 mov	 eax, DWORD PTR _hThreadWMI$[esp+516]
  00596	50		 push	 eax
  00597	ff d3		 call	 ebx
$LN11@WinMain:

; 3233 :     }
; 3234 : 
; 3235 :     //get unchangable system information
; 3236 :     GetSystemDetails();

  00599	e8 00 00 00 00	 call	 ?GetSystemDetails@@YAXXZ ; GetSystemDetails

; 3237 : 
; 3238 :     //get runtime changable system information
; 3239 :     GetSystemStatusChanges();

  0059e	e8 00 00 00 00	 call	 ?GetSystemStatusChanges@@YAXXZ ; GetSystemStatusChanges

; 3240 : 
; 3241 :     //get IPs if possible
; 3242 :     GetSystemIPAddresses(&monIps,bMonIps);

  005a3	8a 4c 24 37	 mov	 cl, BYTE PTR _bMonIps$[esp+516]
  005a7	8d 54 24 7c	 lea	 edx, DWORD PTR _monIps$[esp+516]
  005ab	e8 00 00 00 00	 call	 ?GetSystemIPAddresses@@YAXPAVMonitorIPs@@_N@Z ; GetSystemIPAddresses

; 3243 : 
; 3244 :     //get system information
; 3245 :     GetSystemStatus();

  005b0	e8 00 00 00 00	 call	 ?GetSystemStatus@@YAXXZ	; GetSystemStatus

; 3246 : 
; 3247 :     if(bRunWMI)

  005b5	80 7c 24 34 00	 cmp	 BYTE PTR _bRunWMI$[esp+516], 0
  005ba	74 05		 je	 SHORT $LN7@WinMain

; 3248 :     {
; 3249 :         //get WMI status information
; 3250 :         GetWMIStatus();

  005bc	e8 00 00 00 00	 call	 ?GetWMIStatus@@YAXXZ	; GetWMIStatus
$LN7@WinMain:

; 3251 :     }
; 3252 : 
; 3253 :     //Close window
; 3254 :     if(ghWnd)

  005c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  005c6	85 c0		 test	 eax, eax
  005c8	74 3c		 je	 SHORT $LN6@WinMain

; 3255 :     {
; 3256 :         PostMessage(ghWnd,TERMINATE_DLL_MSG,0,0);

  005ca	6a 00		 push	 0
  005cc	6a 00		 push	 0
  005ce	68 e8 07 00 00	 push	 2024			; 000007e8H
  005d3	50		 push	 eax
  005d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 3257 : 	    Log(LOG_DEBUG,__LINE__,"WinMain, Wait ThrdMsg %X",WaitForSingleObject(hThreadMSG,MINUTE));

  005da	8b 4c 24 50	 mov	 ecx, DWORD PTR _hThreadMSG$[esp+516]
  005de	68 60 ea 00 00	 push	 60000			; 0000ea60H
  005e3	51		 push	 ecx
  005e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  005ea	50		 push	 eax
  005eb	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LIJJDDJF@WinMain?0?5Wait?5ThrdMsg?5?$CFX?$AA@
  005f0	68 b9 0c 00 00	 push	 3257			; 00000cb9H
  005f5	6a 10		 push	 16			; 00000010H
  005f7	e8 00 00 00 00	 call	 ?Log@@YAXHHPBDZZ	; Log

; 3258 : 	    CloseHandle(hThreadMSG);

  005fc	8b 54 24 60	 mov	 edx, DWORD PTR _hThreadMSG$[esp+532]
  00600	83 c4 10	 add	 esp, 16			; 00000010H
  00603	52		 push	 edx
  00604	ff d3		 call	 ebx
$LN6@WinMain:

; 3259 :     }
; 3260 : 
; 3261 :     //force terminate all pending threads
; 3262 :     if(PendingThreads.size()>0)

  00606	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  0060c	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00611	8b d1		 mov	 edx, ecx
  00613	2b d0		 sub	 edx, eax
  00615	c1 fa 02	 sar	 edx, 2
  00618	85 d2		 test	 edx, edx
  0061a	0f 86 86 00 00
	00		 jbe	 $LN172@WinMain

; 3263 :     {
; 3264 :         for(unsigned int u=0;u<PendingThreads.size();u++)

  00620	33 ff		 xor	 edi, edi
  00622	85 d2		 test	 edx, edx
  00624	76 47		 jbe	 SHORT $LN2@WinMain
$LN4@WinMain:

; 3265 :         {
; 3266 :             if(WaitForSingleObject(PendingThreads.at(u),(MILLISECOND*2))==WAIT_TIMEOUT)

  00626	57		 push	 edi
  00627	e8 00 00 00 00	 call	 ?at@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEAAPAXI@Z ; std::vector<void *,std::allocator<void *> >::at
  0062c	8b 00		 mov	 eax, DWORD PTR [eax]
  0062e	6a 02		 push	 2
  00630	50		 push	 eax
  00631	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00637	3d 02 01 00 00	 cmp	 eax, 258		; 00000102H
  0063c	75 0d		 jne	 SHORT $LN1@WinMain

; 3267 :             {
; 3268 :                 EndPendingThread(PendingThreads.at(u)); 

  0063e	57		 push	 edi
  0063f	e8 00 00 00 00	 call	 ?at@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEAAPAXI@Z ; std::vector<void *,std::allocator<void *> >::at
  00644	8b 30		 mov	 esi, DWORD PTR [eax]
  00646	e8 00 00 00 00	 call	 ?EndPendingThread@@YAXPAX@Z ; EndPendingThread
$LN1@WinMain:

; 3269 :             }
; 3270 :             CloseHandle(PendingThreads.at(u));

  0064b	57		 push	 edi
  0064c	e8 00 00 00 00	 call	 ?at@?$vector@PAXV?$allocator@PAX@std@@@std@@QAEAAPAXI@Z ; std::vector<void *,std::allocator<void *> >::at
  00651	8b 08		 mov	 ecx, DWORD PTR [eax]
  00653	51		 push	 ecx
  00654	ff d3		 call	 ebx
  00656	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  0065c	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
  00661	8b d1		 mov	 edx, ecx
  00663	2b d0		 sub	 edx, eax
  00665	47		 inc	 edi
  00666	c1 fa 02	 sar	 edx, 2
  00669	3b fa		 cmp	 edi, edx
  0066b	72 b9		 jb	 SHORT $LN4@WinMain
$LN2@WinMain:

; 3271 :         }
; 3272 :         PendingThreads.clear();

  0066d	8b d9		 mov	 ebx, ecx
  0066f	3b c1		 cmp	 eax, ecx
  00671	76 10		 jbe	 SHORT $LN180@WinMain
  00673	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
  00678	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+16
  0067e	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A+12
$LN180@WinMain:
  00683	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00689	8b f8		 mov	 edi, eax
  0068b	3b c1		 cmp	 eax, ecx
  0068d	76 05		 jbe	 SHORT $LN199@WinMain
  0068f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN199@WinMain:
  00694	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A
  00699	53		 push	 ebx
  0069a	56		 push	 esi
  0069b	57		 push	 edi
  0069c	50		 push	 eax
  0069d	8d 7c 24 74	 lea	 edi, DWORD PTR $T239216[esp+532]
  006a1	e8 00 00 00 00	 call	 ?erase@?$vector@PAXV?$allocator@PAX@std@@@std@@QAE?AV?$_Vector_iterator@PAXV?$allocator@PAX@std@@@2@V?$_Vector_const_iterator@PAXV?$allocator@PAX@std@@@2@0@Z ; std::vector<void *,std::allocator<void *> >::erase
$LN172@WinMain:

; 3273 :     }
; 3274 : 
; 3275 :     SetUnhandledExceptionFilter(pPreviousExceptionFilter);

  006a6	8b 4c 24 70	 mov	 ecx, DWORD PTR _pPreviousExceptionFilter$[esp+516]
  006aa	51		 push	 ecx
  006ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetUnhandledExceptionFilter@4

; 3276 : 
; 3277 :     LogElapsedTime(__LINE__,gTickStart,"SysStatus");

  006b1	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?gTickStart@@3_KA+4
  006b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gTickStart@@3_KA
  006bc	52		 push	 edx
  006bd	50		 push	 eax
  006be	bb 00 00 00 00	 mov	 ebx, OFFSET ??_C@_09KECABMHK@SysStatus?$AA@
  006c3	bf cd 0c 00 00	 mov	 edi, 3277		; 00000ccdH
  006c8	e8 00 00 00 00	 call	 ?LogElapsedTime@@YAXK_KPAD@Z ; LogElapsedTime
  006cd	83 c4 08	 add	 esp, 8

; 3278 :     return 0;

  006d0	c7 84 24 00 02
	00 00 ff ff ff
	ff		 mov	 DWORD PTR __$EHRec$[esp+524], -1
  006db	8d 4c 24 7c	 lea	 ecx, DWORD PTR _monIps$[esp+516]
  006df	51		 push	 ecx
  006e0	e8 00 00 00 00	 call	 ??1MonitorIPs@@QAE@XZ	; MonitorIPs::~MonitorIPs
  006e5	33 c0		 xor	 eax, eax

; 3279 : }

  006e7	8b 8c 24 f8 01
	00 00		 mov	 ecx, DWORD PTR __$EHRec$[esp+516]
  006ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  006f5	59		 pop	 ecx
  006f6	5f		 pop	 edi
  006f7	5e		 pop	 esi
  006f8	5b		 pop	 ebx
  006f9	8b 8c 24 b0 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+500]
  00700	33 cc		 xor	 ecx, esp
  00702	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00707	8b e5		 mov	 esp, ebp
  00709	5d		 pop	 ebp
  0070a	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_WinMain@16$0:
  00000	8b 8d 40 fe ff
	ff		 mov	 ecx, DWORD PTR $T238543[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_WinMain@16$1:
  0000b	8b 8d 40 fe ff
	ff		 mov	 ecx, DWORD PTR $T238544[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_WinMain@16$2:
  00016	8d 85 78 fe ff
	ff		 lea	 eax, DWORD PTR _monIps$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??1MonitorIPs@@QAE@XZ	; MonitorIPs::~MonitorIPs
  00022	c3		 ret	 0
__ehhandler$_WinMain@16:
  00023	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00027	8d 82 0c fe ff
	ff		 lea	 eax, DWORD PTR [edx-500]
  0002d	8b 8a 08 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-504]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003d	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$_WinMain@16
  0004c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
_WinMain@16 ENDP
; Function compile flags: /Ogtpy
;	COMDAT ??__EPendingThreads@@YAXXZ
text$yc	SEGMENT
??__EPendingThreads@@YAXXZ PROC				; `dynamic initializer for 'PendingThreads'', COMDAT

; 15   : vector<HANDLE> PendingThreads;

  00000	e8 00 00 00 00	 call	 ??0?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >
  00005	68 00 00 00 00	 push	 OFFSET ??__FPendingThreads@@YAXXZ ; `dynamic atexit destructor for 'PendingThreads''
  0000a	e8 00 00 00 00	 call	 _atexit
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??__EPendingThreads@@YAXXZ ENDP				; `dynamic initializer for 'PendingThreads''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__FPendingThreads@@YAXXZ
text$yd	SEGMENT
??__FPendingThreads@@YAXXZ PROC				; `dynamic atexit destructor for 'PendingThreads'', COMDAT
  00000	e9 00 00 00 00	 jmp	 ??1?$vector@PAXV?$allocator@PAX@std@@@std@@QAE@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
??__FPendingThreads@@YAXXZ ENDP				; `dynamic atexit destructor for 'PendingThreads''
PUBLIC	?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A ; PendingThreads
?PendingThreads@@3V?$vector@PAXV?$allocator@PAX@std@@@std@@A DB 018H DUP (?) ; PendingThreads
_PendingThreads$initializer$ DD FLAT:??__EPendingThreads@@YAXXZ
END
